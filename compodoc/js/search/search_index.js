var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractQueueService.html",[0,0.613,1,3.061]],["body/injectables/AbstractQueueService.html",[0,0.651,1,3.248,2,1.101,3,0.052,4,0.046,5,0.046,6,2.822,7,0.135,8,0.952,9,3.734,10,4.899,11,0.742,12,2.175,13,3.248,14,3.642,15,4.899,16,4.61,17,4.61,18,3.299,19,3.642,20,3.642,21,3.248,22,0.835,23,4.818,24,0.438,25,4.818,26,1.074,27,0.008,28,0.772,29,0.349,30,0.938,31,3.642,32,3.873,33,3.184,34,3.983,35,1.183,36,2.576,37,3.642,38,2.221,39,3.184,40,3.252,41,3.184,42,3.184,43,3.184,44,1.957,45,1.098,46,4.023,47,3.184,48,2.153,49,2.103,50,4.822,51,3.642,52,3.184,53,3.642,54,3.184,55,3.642,56,3.184,57,0.087,58,0.357,59,4.928,60,2.045,61,0.052,62,2.822,63,0.123,64,3.184,65,2.233,66,3.184,67,3.184,68,4.818,69,4.818,70,3.184,71,2.822,72,1.646,73,5.281,74,6.482,75,2.822,76,6.482,77,4.818,78,5.746,79,4.818,80,3.184,81,4.818,82,3.184,83,3.184,84,1.463,85,4.271,86,2.822,87,2.822,88,2.822,89,2.822,90,2.822,91,2.822,92,2.822,93,2.822,94,2.822,95,2.822,96,4.718,97,2.822,98,3.184,99,2.822,100,3.911,101,2.822,102,2.822,103,2.822,104,1.414,105,4.271,106,2.822,107,4.271,108,3.075,109,4.818,110,1.03,111,3.184,112,2.146,113,2.822,114,3.184,115,3.184,116,3.184,117,3.184,118,2.822,119,3.184,120,0.006,121,2.822,122,3.184,123,1.665,124,3.911,125,5.153,126,2.822,127,2.822,128,3.184,129,0.004]],["title/guards/AdminGuard.html",[130,1.215,131,1.722]],["body/guards/AdminGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,2.04,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,2.312,138,4.752,139,3.608,140,3.545,141,3.519,142,3.692,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021]],["title/guards/AnonymizeGuard.html",[130,1.215,152,2.251]],["body/guards/AnonymizeGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,2.587,152,2.666,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,178,3.692]],["title/controllers/AppController.html",[179,1.19,180,3.432]],["body/controllers/AppController.html",[3,0.092,4,0.082,5,0.082,7,0.242,11,1.113,12,2.087,22,1.49,24,0.381,27,0.008,28,0.577,35,1.066,57,0.161,58,0.638,61,0.092,63,0.219,84,1.431,104,1.342,120,0.006,123,2.496,129,0.006,179,1.893,180,5.459,181,1.761,182,5.04,183,8.352,184,7.404,185,1.342,186,5.685,187,5.685,188,8.352,189,5.685,190,5.685,191,4.438,192,3.106,193,4.615,194,2.876,195,5.685,196,5.685,197,5.685,198,2.381,199,3.696,200,4.615,201,2.445,202,7.223,203,4.438,204,1.057,205,4.438,206,4.615,207,4.639,208,4.615,209,4.044,210,5.04,211,3.112,212,3.494,213,5.685,214,5.685,215,5.685,216,3.833,217,5.685,218,1.965,219,5.685,220,5.685,221,5.685]],["title/modules/AppModule.html",[222,1.535,223,3.432]],["body/modules/AppModule.html",[3,0.061,4,0.055,5,0.055,11,0.583,24,0.199,26,0.534,27,0.008,28,0.384,29,0.244,30,0.467,35,0.558,48,1.401,57,0.167,58,0.424,61,0.061,63,0.146,84,1.774,120,0.005,123,1.307,129,0.005,136,1.591,146,1.544,180,4.862,181,1.992,222,2.174,223,7.123,224,2.485,225,1.767,226,1.876,227,1.876,228,1.876,229,3.189,230,1.819,231,3.353,232,3.353,233,3.353,234,5.546,235,5.546,236,5.546,237,5.546,238,5.546,239,5.546,240,5.546,241,5.546,242,5.546,243,5.257,244,5.546,245,5.546,246,5.257,247,5.257,248,2.714,249,1.876,250,1.876,251,3.783,252,3.189,253,3.783,254,5.474,255,7.05,256,3.783,257,3.783,258,1.767,259,5.474,260,3.783,261,2.147,262,1.671,263,4.852,264,3.728,265,2,266,3.07,267,3.783,268,5.474,269,2.69,270,4.137,271,3.783,272,3.783,273,3.07,274,3.783,275,3.783,276,3.783,277,2.859,278,3.783,279,2.147,280,2,281,3.783,282,3.783,283,2.69,284,2.69,285,3.783,286,3.353,287,3.353,288,3.783,289,3.783,290,3.783,291,3.783,292,3.783,293,3.783,294,3.783,295,3.893,296,3.893,297,3.353,298,3.893,299,3.07,300,3.783,301,3.783,302,3.783,303,3.783,304,3.783,305,3.783,306,3.783,307,3.783,308,3.783,309,2.859,310,3.07,311,3.783,312,3.783,313,6.631,314,2.55,315,3.783,316,2.69,317,2.69,318,3.783,319,3.783,320,3.353,321,3.783,322,1.936,323,3.783,324,2.859,325,3.783,326,3.07,327,3.07,328,3.783,329,3.783,330,3.353,331,3.353,332,3.783,333,3.07,334,3.07,335,3.783]],["title/controllers/AuthController.html",[179,1.19,336,3.432]],["body/controllers/AuthController.html",[3,0.051,4,0.045,5,0.045,7,0.133,11,0.734,12,2.05,22,0.822,24,0.364,26,0.977,27,0.008,28,0.702,29,0.355,30,0.853,35,1.02,36,1.384,40,2.225,57,0.151,58,0.352,61,0.051,63,0.121,65,2.364,72,1.545,104,0.885,108,2.104,110,1.54,120,0.004,129,0.004,134,2.353,136,2.01,147,2.321,179,1.909,181,0.971,185,1.285,191,2.927,198,1.314,199,3.726,200,2.545,204,0.583,218,2.223,322,4.086,336,3.6,337,2.78,338,4.763,339,4.222,340,4.763,341,5.759,342,6.912,343,4.763,344,4.763,345,6.432,346,3.136,347,5.894,348,6.131,349,4.131,350,3.136,351,5.221,352,5.701,353,4.763,354,3.136,355,3.136,356,3.136,357,3.986,358,5.759,359,3.401,360,3.136,361,3.136,362,3.136,363,4.336,364,3.136,365,5.228,366,3.401,367,3.136,368,3.136,369,3.136,370,3.429,371,3.136,372,3.136,373,3.136,374,3.136,375,3.136,376,5.72,377,3.866,378,3.136,379,3.136,380,3.136,381,1.465,382,3.136,383,3.136,384,2.37,385,1.927,386,2.114,387,5.614,388,3.136,389,4.53,390,1.348,391,2.37,392,3.136,393,2.37,394,3.136,395,3.136,396,3.699,397,2.545,398,2.947,399,2.014,400,3.6,401,3.136,402,3.136,403,4.763,404,3.882,405,2.78,406,3.136,407,3.136,408,3.136,409,2.133,410,4.457,411,5.759,412,2.607,413,4.763,414,3.136,415,3.136,416,3.136,417,3.136,418,3.136,419,2.78,420,3.136,421,3.136,422,3.136,423,3.866,424,3.136,425,3.866,426,2.476,427,1.991,428,2.545,429,6.432,430,4.763,431,4.763,432,2.703,433,3.136,434,2.703,435,3.136,436,2.809,437,3.136,438,2.78,439,3.136,440,3.136,441,3.136,442,4.763,443,3.136,444,1.85,445,2.78,446,3.136,447,3.136,448,3.136,449,4.222,450,3.136,451,3.136,452,3.136,453,3.136,454,3.136,455,3.136,456,4.675,457,4.222,458,3.136,459,3.136,460,2.78,461,3.136,462,3.136,463,2.78,464,3.136,465,3.136,466,2.78,467,3.136,468,3.136,469,2.545]],["title/modules/AuthModule.html",[222,1.535,234,3.229]],["body/modules/AuthModule.html",[3,0.076,4,0.067,5,0.067,27,0.008,57,0.168,58,0.523,61,0.076,63,0.18,120,0.005,129,0.005,136,1.356,181,1.965,222,2.435,224,2.119,225,2.18,226,2.314,227,2.314,228,2.314,229,3.573,230,3.466,234,6.684,246,5.623,248,3.145,249,2.314,250,2.314,252,3.145,261,2.648,262,2.061,264,3.811,265,2.468,269,3.319,279,3.6,280,3.354,286,4.137,309,3.527,310,3.788,330,4.137,331,4.137,336,5.447,396,5.815,397,3.788,398,4.268,399,2.997,404,5.623,405,4.137,470,4.137,471,4.666,472,4.137,473,4.137,474,5.623,475,5.932,476,5.932,477,4.565,478,4.666,479,6.343,480,4.666,481,3.319,482,6.343,483,3.527,484,4.666,485,3.527,486,4.666,487,4.666,488,4.794,489,4.666,490,4.074,491,3.527,492,3.319,493,4.666,494,2.997,495,4.666,496,2.868,497,4.666,498,4.666,499,4.666,500,4.666,501,4.666,502,4.137]],["title/injectables/AuthService.html",[0,0.613,396,2.916]],["body/injectables/AuthService.html",[0,0.819,2,1.509,3,0.071,4,0.063,5,0.063,7,0.186,11,0.933,12,2.121,22,1.588,24,0.416,26,1.115,27,0.008,28,0.802,29,0.351,30,0.974,35,1.109,36,2.376,38,2.11,40,3.689,45,1.253,57,0.142,58,0.49,61,0.071,63,0.168,65,2.289,72,1.498,84,1.099,104,1.468,108,2.676,120,0.005,129,0.005,134,1.144,136,2.639,162,1.544,191,2.683,218,2.598,324,4.58,342,5.372,366,2.83,385,2.683,396,3.892,398,4.182,399,2.804,409,2.244,426,2.606,427,2.406,449,5.372,460,3.87,466,3.87,469,5.649,481,3.105,485,3.3,503,3.87,504,3.892,505,5.372,506,6.059,507,6.059,508,6.959,509,4.366,510,6.804,511,4.366,512,6.059,513,4.366,514,6.059,515,4.366,516,6.059,517,6.169,518,4.366,519,4.366,520,4.366,521,3.544,522,4.919,523,4.919,524,2.804,525,4.366,526,6.959,527,3.544,528,3.544,529,3.87,530,1.783,531,3.87,532,4.366,533,4.366,534,5.372,535,6.059,536,6.059,537,4.366,538,3.105,539,4.366,540,4.366,541,6.059,542,4.366,543,4.366]],["title/guards/AutoQueryGuard.html",[130,1.215,160,2.251]],["body/guards/AutoQueryGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,2.666,160,2.666,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,544,3.692]],["title/guards/AutoRoutingGuard.html",[130,1.215,173,2.251]],["body/guards/AutoRoutingGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.946,173,2.666,174,2.021,175,1.83,176,1.724,177,2.021,545,3.692]],["title/entities/Autorouting.html",[172,1.643,546,2.121]],["body/entities/Autorouting.html",[3,0.068,4,0.06,5,0.06,7,0.177,8,1.16,24,0.409,27,0.008,28,0.943,29,0.401,30,0.724,38,2.235,45,1.064,49,2.81,57,0.145,61,0.12,63,0.31,84,1.477,120,0.005,123,2.685,129,0.005,144,1.818,172,2.124,185,1.443,204,0.775,546,2.742,547,2.68,548,2.968,549,5.242,550,4.831,551,5.517,552,5.513,553,4.172,554,4.172,555,4.174,556,1.379,557,3.154,558,4.172,559,4.172,560,3.699,561,4.172,562,3.387,563,4.172,564,4.172,565,4.172,566,5.54,567,3.957,568,1.843,569,2.692,570,3.462,571,2.368,572,2.576,573,2.564,574,5.571,575,1.349,576,5.236,577,3.957,578,5.242,579,4.579,580,4.969,581,2.68,582,2.564,583,2.68,584,3.154,585,4.363,586,2.562,587,4.437,588,3.154,589,3.154,590,4.175,591,3.154,592,3.154,593,3.154,594,4.437,595,3.154,596,4.989,597,4.437,598,3.154,599,3.154,600,3.154,601,3.154,602,4.175,603,5.134,604,3.462,605,4.437,606,2.968,607,3.154,608,2.968]],["title/injectables/AutoroutingHandler.html",[0,0.613,609,3.229]],["body/injectables/AutoroutingHandler.html",[0,0.558,2,0.901,3,0.042,4,0.038,5,0.038,7,0.111,8,0.815,11,0.636,12,1.869,22,1.082,24,0.435,26,1.115,27,0.008,28,0.801,29,0.363,30,0.973,32,1.378,34,4.149,35,1.164,38,2.53,45,1.227,48,1.528,49,2.732,57,0.139,58,0.292,61,0.042,63,0.1,65,1.591,72,1.467,84,0.656,104,1.533,110,1.884,120,0.003,123,1.426,129,0.003,134,0.683,144,2.486,172,2.799,185,0.767,283,1.854,284,1.854,409,3.284,463,2.31,527,5.152,551,3.741,555,1.602,576,1.757,577,1.757,579,1.757,580,1.757,581,1.674,585,5.875,590,3.643,596,4.077,602,2.935,606,2.935,609,2.935,610,2.31,611,4.126,612,4.126,613,4.126,614,5.122,615,5.122,616,5.825,617,4.126,618,4.126,619,4.126,620,4.126,621,4.126,622,4.126,623,5.825,624,5.122,625,4.126,626,4.126,627,2.606,628,3.741,629,4.346,630,2.962,631,2.606,632,3.658,633,4.126,634,2.606,635,4.126,636,5.346,637,4.126,638,2.606,639,4.126,640,2.606,641,4.126,642,2.606,643,4.126,644,2.606,645,4.126,646,2.606,647,4.126,648,2.606,649,2.606,650,2.606,651,2.606,652,2.606,653,2.606,654,2.606,655,2.606,656,3.744,657,4.54,658,3.871,659,2.606,660,3.349,661,2.606,662,4.126,663,4.126,664,5.825,665,4.126,666,6.347,667,4.126,668,5.825,669,4.126,670,4.126,671,4.126,672,2.606,673,2.606,674,2.606,675,2.115,676,2.606,677,2.115,678,1.854,679,1.217,680,1.217,681,3.658,682,2.31,683,1.674,684,1.97,685,1.757,686,1.334,687,2.606,688,2.606,689,2.31,690,7.334,691,5.122,692,4.126,693,2.606,694,4.126,695,2.606,696,4.126,697,4.126,698,2.606,699,4.126,700,4.126,701,1.854,702,4.126,703,5.122,704,3.658,705,2.606,706,2.606,707,3.744,708,2.31,709,2.606,710,4.126,711,2.606,712,5.122,713,2.606,714,2.115,715,2.606,716,2.606,717,2.606,718,2.606,719,3.658,720,4.126,721,2.606,722,3.658,723,2.606,724,1.97,725,2.606,726,2.115,727,2.606,728,1.757,729,1.97,730,1.97,731,2.115,732,2.31,733,2.31,734,2.115,735,2.606,736,1.292,737,2.606,738,2.606,739,2.31,740,2.606,741,2.606,742,4.126,743,2.606,744,2.606,745,2.606,746,2.606,747,2.606,748,2.606,749,2.606,750,2.31,751,2.606,752,2.606]],["title/controllers/AutoroutingsController.html",[179,1.19,753,3.432]],["body/controllers/AutoroutingsController.html",[3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,12,2.108,24,0.39,26,0.984,27,0.008,28,0.81,29,0.386,30,0.86,35,1.093,36,2.463,38,2.633,57,0.139,58,0.414,61,0.06,63,0.142,65,2.112,84,2.009,104,1.179,120,0.004,123,3.077,129,0.004,134,2.403,162,2.243,172,3.198,173,1.83,179,0.968,181,1.965,185,1.377,192,3.644,194,3.079,198,1.546,201,1.587,203,4.283,204,0.686,218,2.561,339,4.767,349,3.454,357,4.477,359,4.481,370,2.666,381,2.512,389,4.7,390,1.587,410,4.638,412,4.055,628,3.454,632,3.273,677,2.997,678,2.626,689,3.273,753,4.065,754,3.273,755,2.095,756,4.767,757,4.365,758,6.344,759,5.378,760,5.378,761,5.378,762,6.97,763,3.692,764,5.845,765,4.369,766,2.944,767,3.692,768,3.692,769,3.692,770,3.692,771,3.692,772,6.344,773,6.344,774,3.692,775,3.692,776,3.692,777,4.767,778,3.692,779,3.692,780,3.692,781,4.767,782,3.692,783,3.692,784,2.269,785,3.692,786,3.692,787,1.83,788,3.692,789,5.378,790,1.631,791,2.997,792,3.692,793,3.692,794,3.692,795,1.546,796,7.408,797,3.692,798,3.273,799,3.692,800,3.273,801,3.692,802,3.692,803,3.692,804,3.692,805,3.692,806,3.692,807,3.692,808,3.692,809,3.692]],["title/modules/AutoroutingsModule.html",[222,1.535,235,3.229]],["body/modules/AutoroutingsModule.html",[3,0.095,4,0.085,5,0.085,27,0.008,57,0.164,58,0.657,61,0.095,63,0.226,120,0.006,129,0.006,172,2.119,181,2.279,222,2.72,224,2.659,225,2.736,226,2.904,227,2.904,228,2.904,229,3.99,230,2.817,235,6.658,248,3.649,249,2.904,250,2.904,252,2.904,261,3.324,262,2.587,609,6.315,628,5.703,629,5.456,630,3.719,677,4.754,678,4.165,679,2.736,680,2.736,682,5.192,683,3.762,753,6.083,810,5.192,811,5.192,812,5.856,813,5.856,814,5.856,815,5.856]],["title/injectables/AutoroutingsService.html",[0,0.613,628,2.916]],["body/injectables/AutoroutingsService.html",[0,0.779,2,1.406,3,0.066,4,0.059,5,0.059,7,0.173,11,0.888,12,2.213,22,1.511,24,0.45,26,1.186,27,0.008,28,0.852,29,0.374,30,1.035,34,3.543,35,1.239,36,2.641,38,2.74,57,0.144,58,0.456,61,0.066,63,0.157,65,2.365,72,1.094,84,1.451,104,1.245,110,1.315,120,0.005,123,2.84,129,0.005,134,1.066,172,3.318,262,1.797,283,2.893,284,2.893,324,4.358,409,2.136,504,3.704,549,2.893,550,5.183,555,4.478,568,1.797,581,2.613,628,3.704,678,2.893,750,5.111,766,3.156,777,5.111,781,5.111,816,3.606,817,4.913,818,6.698,819,5.766,820,3.156,821,3.704,822,4.068,823,4.478,824,5.938,825,6.46,826,4.068,827,5.766,828,5.766,829,4.068,830,5.766,831,4.068,832,5.766,833,4.068,834,4.068,835,4.068,836,4.068,837,5.766,838,4.068,839,5.111,840,4.068,841,4.68,842,4.068,843,2.613,844,4.068,845,5.766,846,4.068,847,4.068,848,6.698,849,4.068,850,4.068,851,5.766,852,5.111]],["title/guards/CdBurnerGuard.html",[130,1.215,170,2.323]],["body/guards/CdBurnerGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,2.666,170,2.752,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,853,3.692]],["title/classes/ChangePasswordDto.html",[63,0.175,347,3.432]],["body/classes/ChangePasswordDto.html",[3,0.089,4,0.079,5,0.079,7,0.233,8,1.396,24,0.435,27,0.008,29,0.367,38,2.142,40,3.648,45,1.261,57,0.127,61,0.089,63,0.272,120,0.006,129,0.006,185,1.532,204,1.021,218,2.7,322,3.615,347,5.34,456,6.34,457,6.924,556,2.336,569,2.532,572,3.127,575,1.776,586,2.142,854,1.47,855,7.562,856,4.458,857,5.492,858,5.492,859,5.492,860,7.065,861,7.065,862,7.065,863,7.065,864,6.263,865,7.065,866,8.997,867,7.065,868,8.246,869,7.065,870,7.065,871,7.065,872,7.065,873,5.492,874,5.492,875,5.492,876,5.492,877,5.492,878,6.448,879,5.34,880,4.869,881,5.492,882,7.065,883,5.492,884,5.492]],["title/guards/CheckLabelInRole.html",[130,1.215,885,3.432]],["body/guards/CheckLabelInRole.html",[0,0.986,3,0.094,4,0.083,5,0.083,7,0.245,11,1.124,12,1.894,22,1.514,24,0.384,26,1.03,27,0.008,28,0.74,29,0.325,30,0.9,35,0.852,36,2.12,57,0.131,58,0.648,61,0.094,63,0.222,65,1.577,72,1.593,104,1.073,120,0.006,129,0.006,130,1.952,132,2.419,134,1.514,139,3.43,140,2.978,141,3.345,143,2.3,146,2.358,147,1.679,148,2.483,530,2.978,795,2.419,885,5.514,886,5.687,887,3.706,888,4.688,889,5.188,890,5.921,891,7.295,892,5.921,893,4.688,894,4.386,895,5.775,896,5.775,897,3.71,898,4.108,899,5.775,900,3.893,901,3.893,902,5.12,903,5.775,904,3.893,905,5.775]],["title/guards/CheckUserIdParamsGuard.html",[130,1.215,295,3.229]],["body/guards/CheckUserIdParamsGuard.html",[0,1.006,3,0.097,4,0.086,5,0.086,7,0.253,11,1.147,22,2.127,24,0.392,26,0.842,27,0.008,28,0.605,29,0.265,30,0.736,35,0.88,40,3.969,46,2.708,49,2.936,57,0.107,58,0.669,61,0.097,63,0.23,72,1.539,104,1.108,120,0.006,123,3.023,129,0.006,130,1.992,132,2.498,134,1.563,136,2.359,139,3.47,140,3.039,141,3.384,143,2.375,144,2.306,146,2.435,147,1.734,148,2.565,295,5.294,787,3.691,886,5.772,889,5.294,890,6.042,906,5.287,907,6.042,908,4.781,909,5.964,910,5.964,911,4.508,912,5.287]],["title/guards/CheckUserIdQueryGuard.html",[130,1.215,913,3.432]],["body/guards/CheckUserIdQueryGuard.html",[0,1.006,3,0.097,4,0.086,5,0.086,7,0.253,11,1.147,22,2.127,24,0.392,26,0.842,27,0.008,28,0.605,29,0.265,30,0.736,35,0.88,40,3.969,46,2.708,49,2.936,57,0.107,58,0.669,61,0.097,63,0.23,72,1.539,104,1.108,120,0.006,123,3.023,129,0.006,130,1.992,132,2.498,134,1.563,136,2.359,139,3.47,140,3.039,141,3.384,143,2.375,144,2.306,146,2.435,147,1.734,148,2.565,156,2.693,886,5.772,889,5.294,890,6.042,907,6.042,908,4.781,912,5.287,913,5.626,914,5.287,915,5.964,916,5.964,917,5.964]],["title/guards/CheckUserRoleGuard.html",[130,1.215,298,3.229]],["body/guards/CheckUserRoleGuard.html",[0,1.007,3,0.097,4,0.086,5,0.086,7,0.254,11,1.148,22,2.129,24,0.393,26,0.844,27,0.008,28,0.824,29,0.266,30,0.737,35,0.882,46,2.714,49,2.939,57,0.108,58,0.67,61,0.097,63,0.23,72,1.541,104,1.111,120,0.006,129,0.006,130,1.994,132,2.503,134,1.567,136,2.544,139,3.472,140,3.043,141,3.386,143,2.38,144,2.309,146,2.44,147,1.737,148,2.57,298,5.301,530,3.472,787,3.696,886,5.777,888,4.851,889,5.301,900,5.025,901,4.029,907,6.05,908,4.787,918,5.976,919,5.976,920,5.976]],["title/classes/CreateAutoroutingDto.html",[63,0.175,764,3.432]],["body/classes/CreateAutoroutingDto.html",[3,0.112,4,0.1,5,0.1,27,0.008,57,0.146,61,0.112,63,0.266,72,1.544,120,0.007,123,2.814,129,0.007,172,2.501,204,1.284,678,4.916,764,6.152,854,1.849,921,6.127,922,6.127,923,3.595,924,8.14,925,6.911]],["title/classes/CreateOptionDto.html",[63,0.175,926,3.229]],["body/classes/CreateOptionDto.html",[3,0.056,4,0.05,5,0.05,7,0.147,8,1.012,24,0.47,27,0.008,29,0.397,38,2.53,45,1.295,48,3.421,57,0.092,61,0.056,63,0.197,84,1.536,110,3.025,120,0.004,129,0.004,144,2.339,185,1.658,194,3.678,204,0.642,556,2.949,569,2.663,570,3.982,572,3.283,575,1.118,586,2.705,854,0.925,879,5.708,926,3.644,927,7.952,928,2.612,929,4.955,930,4.955,931,4.955,932,4.955,933,5.412,934,5.412,935,5.412,936,5.412,937,5.412,938,5.412,939,5.412,940,5.412,941,5.412,942,5.412,943,5.412,944,5.412,945,5.412,946,3.455,947,3.455,948,3.455,949,3.455,950,5.123,951,3.455,952,3.455,953,4.541,954,3.455,955,5.412,956,3.455,957,3.455,958,3.455,959,3.455,960,5.412,961,3.455,962,3.455,963,3.455,964,3.601,965,3.455,966,3.455,967,2.805,968,3.455,969,5.412,970,3.455,971,3.455,972,6.695,973,5.123,974,3.455,975,3.455,976,3.455,977,4.955,978,3.455,979,3.455,980,2.805,981,3.021,982,2.458]],["title/classes/CreateRoleDto.html",[63,0.175,983,3.229]],["body/classes/CreateRoleDto.html",[3,0.068,4,0.061,5,0.061,7,0.179,8,1.168,24,0.469,27,0.008,28,0.693,29,0.396,45,0.854,57,0.14,61,0.12,63,0.228,84,2.396,120,0.005,129,0.005,137,3.352,144,2.889,151,3.285,156,2.471,159,3.386,162,2.415,166,3.386,169,3.386,172,2.471,175,3.386,185,1.654,194,3.732,204,0.783,556,2.942,569,2.662,570,5.249,572,2.242,575,1.363,586,2.698,854,1.128,967,7.158,983,4.205,984,7.951,985,3.421,986,4.215,987,4.215,988,4.215,989,4.215,990,4.215,991,4.215,992,4.215,993,4.215,994,4.215,995,2.841,996,3.736,997,4.215,998,4.215]],["title/classes/CreateUserDto.html",[63,0.175,999,3.432]],["body/classes/CreateUserDto.html",[3,0.086,4,0.077,5,0.077,7,0.227,8,1.369,24,0.445,27,0.008,29,0.376,45,1.316,57,0.125,61,0.086,63,0.267,84,2.052,120,0.006,129,0.006,137,2.98,185,1.571,194,3.561,204,0.991,322,4.325,366,3.597,432,4.37,434,4.37,436,4.542,556,2.794,569,2.571,572,3.205,575,1.724,586,2.562,854,1.427,864,6.144,880,4.727,995,5.191,999,5.239,1000,7.679,1001,4.03,1002,5.626,1003,4.727,1004,4.727,1005,5.239,1006,4.727,1007,5.239,1008,4.727,1009,5.332,1010,6.931,1011,6.931,1012,6.931,1013,6.931,1014,6.931,1015,5.332,1016,4.727,1017,5.626,1018,5.332,1019,5.332]],["title/guards/DeleteGuard.html",[130,1.215,163,2.184]],["body/guards/DeleteGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.902,163,2.587,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,1020,3.692]],["title/classes/Destination.html",[63,0.175,596,2.916]],["body/classes/Destination.html",[3,0.071,4,0.064,5,0.064,7,0.187,8,1.204,24,0.321,27,0.008,28,0.949,29,0.392,38,2.12,45,1.09,49,2.867,57,0.147,61,0.122,63,0.316,84,1.535,120,0.005,123,2.108,129,0.005,144,1.365,172,1.594,185,1.133,204,0.819,546,2.848,548,3.133,549,4.337,550,3.133,551,5.089,552,3.576,555,3.747,556,1.456,557,3.33,562,3.576,566,5.586,567,4.111,568,1.946,569,2.713,570,3.596,571,2.5,572,2.652,573,2.707,574,5.704,575,1.425,576,5.341,577,4.714,578,5.368,579,4.714,580,5.087,581,2.83,582,2.707,583,2.83,584,3.33,585,4.492,586,2.597,587,4.609,588,3.33,589,3.33,590,4.337,591,3.33,592,3.33,593,3.33,594,4.609,595,3.33,596,5.501,597,4.609,598,3.33,599,3.33,600,3.33,601,3.33,602,4.337,603,5.285,604,3.596,605,4.609,606,3.133,607,3.33,608,3.133,854,1.179,1021,4.406,1022,4.406,1023,4.406]],["title/guards/DicomWebGuard.html",[130,1.215,1024,3.229]],["body/guards/DicomWebGuard.html",[0,0.605,3,0.047,4,0.042,5,0.042,7,0.123,8,0.571,9,1.857,11,0.689,12,1.297,22,1.173,24,0.4,26,0.871,27,0.008,28,0.677,29,0.244,30,0.76,35,1.197,36,1.301,45,1.275,57,0.111,58,0.324,61,0.047,63,0.111,65,1.683,72,1.539,84,1.378,104,1.584,108,1.976,110,1.77,120,0.004,123,0.999,129,0.004,132,1.211,134,0.758,135,2.29,139,2.516,140,1.827,141,2.454,143,1.151,146,1.18,147,1.301,148,1.243,156,1.619,216,1.948,258,2.09,409,3.354,426,1.243,427,1.547,530,2.235,586,1.869,630,2.953,656,4.481,679,1.35,680,2.09,707,4.158,714,3.632,736,2.219,757,3.632,887,2.582,892,3.632,894,3.646,897,1.857,900,3.016,901,1.948,908,2.874,964,3.229,981,3.229,1024,3.182,1025,6.913,1026,2.562,1027,3.966,1028,4.474,1029,3.632,1030,3.966,1031,5.463,1032,4.474,1033,3.382,1034,4.474,1035,6.163,1036,6.666,1037,6.666,1038,4.474,1039,4.658,1040,4.474,1041,2.346,1042,2.89,1043,2.89,1044,2.89,1045,2.89,1046,2.89,1047,4.474,1048,2.89,1049,4.474,1050,3.966,1051,4.474,1052,2.89,1053,2.89,1054,4.474,1055,5.474,1056,6.163,1057,2.89,1058,4.474,1059,3.016,1060,2.185,1061,2.89,1062,1.976,1063,4.474,1064,4.474,1065,6.734,1066,4.853,1067,2.89,1068,2.89,1069,4.155,1070,2.89,1071,2.89,1072,2.89,1073,2.89,1074,5.474,1075,1.948,1076,4.474,1077,4.474,1078,4.474,1079,5.474,1080,2.89,1081,2.89,1082,5.474,1083,2.89,1084,3.787,1085,2.89,1086,2.89,1087,2.562,1088,4.474,1089,2.89,1090,2.89,1091,2.89,1092,2.89,1093,2.89,1094,5.411,1095,2.89,1096,2.89,1097,2.89,1098,2.89,1099,2.89,1100,2.562,1101,2.89,1102,2.562,1103,2.89,1104,2.89,1105,2.89,1106,2.89,1107,2.89,1108,2.89,1109,2.89,1110,5.411,1111,3.632,1112,2.89,1113,2.346,1114,2.562,1115,1.948,1116,2.89,1117,2.346,1118,2.89,1119,2.89,1120,2.89,1121,2.89,1122,2.89,1123,2.185,1124,2.89,1125,2.346,1126,2.89,1127,2.89,1128,2.89,1129,2.562,1130,2.89,1131,2.89,1132,2.89,1133,2.89,1134,5.474,1135,7.352,1136,6.666,1137,4.474,1138,2.89,1139,2.89,1140,2.89,1141,2.89,1142,4.474,1143,4.474,1144,4.474,1145,2.89,1146,4.474,1147,6.163,1148,2.89,1149,2.89,1150,2.89]],["title/guards/ExportGuard.html",[130,1.215,154,2.184]],["body/guards/ExportGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.142,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,2.587,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,1151,3.692]],["title/classes/GetOptionDto.html",[63,0.175,1152,3.432]],["body/classes/GetOptionDto.html",[3,0.088,4,0.078,5,0.078,7,0.23,8,1.381,24,0.458,27,0.008,29,0.387,45,1.336,57,0.139,61,0.088,63,0.269,120,0.006,129,0.006,185,1.615,204,1.004,556,2.874,569,2.626,572,3.528,575,1.747,586,2.636,766,2.956,854,1.445,923,3.087,926,3.841,928,4.082,1152,5.283,1153,7.843,1154,6.195,1155,6.869,1156,6.869,1157,6.869,1158,6.869,1159,6.869,1160,6.869,1161,5.401,1162,5.401,1163,5.401,1164,5.401,1165,5.401,1166,5.401,1167,4.384,1168,4.082]],["title/classes/GetRoleDto.html",[63,0.175,1169,3.432]],["body/classes/GetRoleDto.html",[3,0.105,4,0.094,5,0.094,7,0.276,8,1.55,24,0.342,27,0.008,29,0.289,30,0.967,46,2.949,48,2.905,57,0.152,61,0.105,63,0.25,108,2.869,110,2.537,120,0.006,129,0.006,185,1.207,194,2.586,204,1.207,569,2.329,766,3.555,854,1.738,887,3.53,923,3.465,983,4.62,985,5.273,996,5.758,1167,5.273,1169,5.929,1170,6.954,1171,7.844,1172,5.994,1173,5.273,1174,5.758,1175,4.379]],["title/classes/GetUserDto.html",[63,0.175,1176,3.432]],["body/classes/GetUserDto.html",[3,0.086,4,0.077,5,0.077,7,0.227,8,1.369,24,0.457,27,0.008,29,0.386,30,0.855,38,2.101,45,1.291,57,0.139,61,0.086,63,0.267,84,2.052,120,0.006,123,2.662,129,0.006,137,2.98,185,1.61,194,3.561,204,0.991,366,3.597,432,4.37,434,4.37,436,4.542,530,3.537,556,2.695,569,2.618,572,3.092,575,1.724,586,2.472,854,1.427,879,5.239,995,5.191,1001,4.03,1002,5.626,1003,4.727,1005,5.239,1007,5.239,1017,5.626,1176,5.239,1177,7.819,1178,5.332,1179,5.332,1180,5.332,1181,5.332,1182,5.332,1183,5.332,1184,5.332,1185,5.332,1186,5.332,1187,4.03,1188,5.332]],["title/classes/HttpClient.html",[63,0.175,1189,3.686]],["body/classes/HttpClient.html",[3,0.044,4,0.04,5,0.04,7,0.116,8,0.848,9,5.416,11,0.661,12,1.817,24,0.456,26,1.054,27,0.008,28,0.758,29,0.375,30,0.92,32,4.63,34,3.252,35,1.101,36,1.741,45,1.373,46,2.403,48,2.67,49,2.609,57,0.077,61,0.044,63,0.106,65,1.173,72,1.367,104,1.387,108,2.338,120,0.004,129,0.004,147,1.538,191,1.684,216,5.828,258,3.368,320,6.114,322,3.529,334,7.216,359,1.449,370,4.342,426,2.575,427,2.07,496,1.684,854,0.733,1189,3.485,1190,2.43,1191,5.292,1192,5.292,1193,4.296,1194,5.292,1195,5.292,1196,5.292,1197,5.292,1198,5.292,1199,4.293,1200,4.293,1201,4.293,1202,4.293,1203,4.293,1204,5.292,1205,2.741,1206,2.741,1207,2.741,1208,2.741,1209,2.741,1210,2.741,1211,2.741,1212,2.741,1213,2.741,1214,2.741,1215,2.741,1216,2.741,1217,2.741,1218,2.741,1219,4.293,1220,2.741,1221,4.293,1222,4.293,1223,2.741,1224,4.293,1225,4.293,1226,2.741,1227,4.293,1228,2.741,1229,4.293,1230,2.741,1231,2.741,1232,5.292,1233,5.989,1234,2.741,1235,5.309,1236,3.065,1237,1.556,1238,6.494,1239,2.741,1240,3.121,1241,2.741,1242,4.293,1243,2.43,1244,4.293,1245,4.293,1246,2.741,1247,2.741,1248,4.293,1249,2.741,1250,4.293,1251,3.399,1252,6.503,1253,5.292,1254,5.989,1255,2.741,1256,5.292,1257,3.806,1258,2.741,1259,4.293,1260,2.741,1261,2.741,1262,2.741,1263,4.293,1264,3.245,1265,2.741,1266,2.741,1267,2.741,1268,2.741,1269,2.741,1270,2.741,1271,2.741,1272,2.741,1273,2.741,1274,2.741,1275,2.741,1276,2.741,1277,2.741,1278,2.741]],["title/guards/ImportGuard.html",[130,1.215,145,2.251]],["body/guards/ImportGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.114,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,2.666,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,1279,3.692]],["title/injectables/InstanceGuard.html",[0,0.613,209,3.229]],["body/injectables/InstanceGuard.html",[0,0.978,2,1.973,3,0.093,4,0.082,5,0.082,7,0.243,11,1.115,12,1.884,24,0.301,26,0.806,27,0.008,28,0.579,29,0.254,30,0.704,35,0.842,36,2.105,57,0.143,58,0.64,61,0.093,63,0.22,65,1.559,72,1.586,104,1.346,108,2.521,110,1.846,120,0.006,129,0.006,134,1.496,135,3.705,139,2.956,140,2.956,141,3.33,143,2.273,147,1.659,148,2.454,205,4.887,209,5.15,530,3.247,658,5.473,736,3.59,887,3.331,892,5.877,900,4.881,901,3.848,908,4.651,911,4.314,923,3.198,964,4.69,1027,6.419,1031,6.419,1033,5.473,1050,6.419,1059,4.881,1060,4.314,1113,5.877,1115,3.848,1117,4.633,1123,4.314,1280,5.06,1281,5.877,1282,6.419,1283,5.707,1284,5.06,1285,5.707]],["title/classes/IsNumberOrString.html",[63,0.175,583,2.916]],["body/classes/IsNumberOrString.html",[3,0.098,4,0.087,5,0.087,7,0.257,11,1.157,12,1.433,24,0.396,26,1.061,27,0.008,28,0.829,29,0.334,30,0.926,35,1.108,38,2.476,45,1.233,49,2.189,57,0.109,61,0.098,63,0.289,104,1.396,110,1.957,120,0.006,129,0.006,144,1.874,146,3.067,573,4.616,575,1.957,583,4.824,854,1.619,1286,7.241,1287,5.364,1288,8.168,1289,7.511,1290,7.511,1291,9.075,1292,6.051,1293,8.541,1294,7.511,1295,6.051,1296,8.168,1297,7.511,1298,7.511]],["title/injectables/JwtAuthGuard.html",[0,0.613,488,3.432]],["body/injectables/JwtAuthGuard.html",[0,0.998,2,2.037,3,0.096,4,0.085,5,0.085,7,0.25,11,1.138,22,1.545,24,0.389,26,1.043,27,0.008,28,0.75,29,0.329,30,0.911,35,0.869,57,0.152,58,0.661,61,0.096,63,0.227,72,1.118,84,1.483,104,1.373,120,0.006,129,0.006,130,1.977,134,1.545,139,3.016,140,3.016,141,3.369,143,2.346,199,3.78,269,4.191,488,5.584,757,5.996,795,2.468,923,3.263,1299,5.223,1300,6.549,1301,7.387,1302,7.387,1303,5.892,1304,8.892,1305,5.892,1306,5.892,1307,4.782,1308,3.621,1309,4.782,1310,5.892,1311,3.785,1312,6.549,1313,5.892,1314,5.892,1315,5.892,1316,5.892]],["title/injectables/JwtOAuthGuard.html",[0,0.613,393,3.432]],["body/injectables/JwtOAuthGuard.html",[0,1.08,2,2.317,3,0.109,4,0.097,5,0.097,27,0.008,57,0.144,58,0.752,61,0.109,63,0.258,120,0.007,129,0.007,130,2.139,134,1.758,218,2.763,279,4.537,393,6.043,492,5.686,923,3.531,1307,5.442,1308,4.12,1317,5.944,1318,5.944,1319,7.087,1320,5.39,1321,7.087,1322,7.995,1323,7.995]],["title/injectables/JwtOauthStrategy.html",[0,0.613,474,3.061]],["body/injectables/JwtOauthStrategy.html",[0,0.761,2,1.36,3,0.064,4,0.057,5,0.057,7,0.167,11,0.868,12,2.13,22,1.476,24,0.417,26,1.116,27,0.008,28,0.826,29,0.352,30,0.975,32,4.179,35,1.121,36,2.499,45,1.298,57,0.146,58,0.441,61,0.064,63,0.152,65,2.273,72,1.579,104,1.412,120,0.005,129,0.005,144,1.219,216,2.653,218,2.732,279,2.234,280,2.081,366,2.631,384,2.975,409,2.436,423,5.339,425,3.195,426,3.087,427,2.482,428,5.339,432,2.234,434,2.234,474,3.797,477,4.454,481,2.799,483,2.975,494,2.528,496,3.461,510,6.415,528,3.195,573,3.461,923,2.488,1062,2.905,1115,3.797,1236,2.014,1238,3.195,1264,4.257,1308,2.419,1311,2.528,1320,2.653,1324,6.606,1325,3.195,1326,4.257,1327,5.632,1328,5.632,1329,5.632,1330,5.632,1331,3.936,1332,7.214,1333,3.936,1334,4.993,1335,3.936,1336,6.365,1337,4.993,1338,3.936,1339,3.936,1340,4.993,1341,3.936,1342,4.993,1343,3.936,1344,4.993,1345,3.936,1346,2.975,1347,2.799,1348,2.975,1349,4.257,1350,5.831,1351,2.799,1352,2.653,1353,2.975,1354,3.489,1355,3.489,1356,3.489,1357,3.489,1358,4.993,1359,3.489,1360,3.489,1361,3.489,1362,3.489,1363,3.489,1364,2.799,1365,3.489,1366,3.489,1367,3.489,1368,3.489,1369,3.489,1370,3.489,1371,3.489,1372,3.489,1373,3.489,1374,3.489,1375,3.489,1376,3.489,1377,3.489,1378,3.489,1379,3.489,1380,3.489]],["title/injectables/JwtStrategy.html",[0,0.613,475,3.229]],["body/injectables/JwtStrategy.html",[0,1.011,2,2.079,3,0.098,4,0.087,5,0.087,7,0.256,11,1.153,12,1.929,22,1.576,24,0.394,26,1.057,27,0.008,28,0.759,29,0.333,30,0.923,35,0.887,40,2.809,57,0.153,58,0.674,61,0.098,63,0.232,104,1.118,110,1.945,120,0.006,129,0.006,191,3.695,264,4.726,265,3.18,366,2.809,475,5.322,492,4.277,527,4.881,530,2.455,573,4.598,795,2.519,923,3.305,1062,2.656,1308,3.695,1311,3.863,1320,4.054,1326,5.655,1346,4.545,1347,4.277,1381,5.331,1382,4.277,1383,6.013,1384,7.482,1385,6.013,1386,6.013,1387,6.013,1388,6.013,1389,6.013,1390,6.013,1391,6.013,1392,6.013,1393,6.013,1394,6.013]],["title/entities/Label.html",[546,2.121,887,1.902]],["body/entities/Label.html",[3,0.108,4,0.096,5,0.096,7,0.284,8,1.575,24,0.352,27,0.008,28,0.94,29,0.297,45,1.151,57,0.143,61,0.108,63,0.257,120,0.007,129,0.007,185,1.24,204,1.24,546,3.724,547,4.287,556,2.206,568,2.948,569,2.367,586,2.024,887,3.34,1395,5.916,1396,6.674,1397,6.674,1398,6.472]],["title/classes/LabelDto.html",[63,0.175,1399,3.229]],["body/classes/LabelDto.html",[3,0.109,4,0.098,5,0.098,7,0.287,8,1.586,24,0.356,27,0.008,28,0.9,29,0.3,45,1.159,57,0.144,61,0.109,63,0.309,120,0.007,129,0.007,185,1.255,204,1.255,556,2.232,562,5.48,569,2.383,572,3.045,575,2.183,586,2.047,854,1.806,1399,5.71,1400,5.985,1401,6.751]],["title/controllers/LabelsController.html",[179,1.19,1402,3.432]],["body/controllers/LabelsController.html",[3,0.077,4,0.068,5,0.068,7,0.201,11,0.985,12,2.09,24,0.382,26,0.903,27,0.008,28,0.736,29,0.346,30,0.788,35,1.069,36,2.432,45,1.121,57,0.146,58,0.529,61,0.077,63,0.182,65,1.979,72,0.895,104,1.347,120,0.005,129,0.005,131,1.79,134,2.378,162,1.669,179,1.237,181,1.462,185,1.347,192,3.598,198,1.977,201,2.029,204,0.877,218,2.505,349,4.105,357,4.252,359,4.425,370,2.34,381,2.986,386,3.181,389,4.684,390,2.029,410,4.58,412,3.967,426,2.029,427,1.631,444,2.783,755,2.678,765,4.275,766,4.252,784,2.9,787,2.34,790,2.084,795,1.977,817,5.237,820,4.252,887,2.677,898,4.546,904,3.181,1062,2.084,1172,5.155,1399,5.952,1402,4.831,1403,4.183,1404,4.719,1405,6.392,1406,4.719,1407,4.719,1408,3.567,1409,4.719,1410,4.183,1411,4.719,1412,4.719,1413,4.454,1414,4.183,1415,4.183,1416,4.719,1417,4.719,1418,4.113,1419,4.719,1420,4.719,1421,4.719,1422,4.719,1423,4.719,1424,4.719,1425,4.719,1426,4.719,1427,4.719,1428,4.183,1429,3.567,1430,4.719]],["title/modules/LabelsModule.html",[222,1.535,236,3.229]],["body/modules/LabelsModule.html",[3,0.103,4,0.092,5,0.092,27,0.008,57,0.16,58,0.716,61,0.103,63,0.246,120,0.006,129,0.006,181,2.404,222,2.827,224,2.898,225,2.981,226,3.164,227,3.164,228,3.164,229,4.147,230,3.07,236,6.449,248,3.848,249,3.164,250,3.164,252,3.164,261,3.622,262,2.819,887,2.673,1402,6.321,1413,5.572,1414,5.657,1431,5.657,1432,5.657,1433,6.382,1434,6.382,1435,5.657,1436,6.382]],["title/injectables/LabelsService.html",[0,0.613,1413,2.79]],["body/injectables/LabelsService.html",[0,0.903,2,1.744,3,0.082,4,0.073,5,0.073,7,0.214,11,1.03,12,2.203,22,1.752,24,0.45,26,1.173,27,0.008,28,0.883,29,0.369,30,1.024,35,1.225,36,2.625,45,1.291,57,0.144,58,0.566,61,0.082,63,0.194,65,2.18,72,0.957,104,1.393,108,2.229,120,0.006,129,0.006,262,2.229,409,1.869,568,2.229,766,3.659,817,5.38,820,3.659,823,4.904,843,3.241,887,3.478,898,5.905,1410,5.926,1413,4.108,1435,4.473,1437,4.473,1438,5.926,1439,6.685,1440,5.046,1441,5.046,1442,5.926,1443,6.685,1444,5.046,1445,5.046,1446,6.685,1447,5.046,1448,6.685,1449,5.046,1450,5.046,1451,4.473,1452,5.046,1453,5.046,1454,6.685,1455,5.046,1456,5.046,1457,5.046]],["title/injectables/LocalAuthGuard.html",[0,0.613,391,3.432]],["body/injectables/LocalAuthGuard.html",[0,1.085,2,2.334,3,0.109,4,0.098,5,0.098,27,0.008,57,0.144,58,0.757,61,0.109,63,0.26,120,0.007,129,0.007,130,2.148,134,1.77,322,4.108,324,6.068,391,6.068,923,3.546,1307,5.48,1308,4.149,1319,7.116,1320,5.412,1321,7.116,1458,5.985,1459,8.028,1460,8.028]],["title/injectables/LocalStrategy.html",[0,0.613,476,3.229]],["body/injectables/LocalStrategy.html",[0,0.996,2,2.028,3,0.095,4,0.085,5,0.085,7,0.249,11,1.135,12,1.908,22,1.538,24,0.388,26,1.041,27,0.008,28,0.748,29,0.328,30,0.909,35,0.866,36,2.142,45,1.282,57,0.152,58,0.658,61,0.095,63,0.226,65,1.603,72,1.113,104,1.091,120,0.006,129,0.006,136,2.341,322,4.454,366,3.442,384,5.57,396,5.706,397,4.763,426,2.523,427,2.028,476,5.241,573,4.528,795,2.458,923,3.255,1308,3.606,1311,3.769,1320,3.956,1326,5.57,1346,4.436,1347,4.174,1461,5.202,1462,5.868,1463,5.868,1464,7.369,1465,5.868,1466,5.202,1467,5.868,1468,5.868,1469,5.868]],["title/classes/LoginDto.html",[63,0.175,400,3.432]],["body/classes/LoginDto.html",[3,0.105,4,0.094,5,0.094,7,0.275,8,1.547,24,0.413,27,0.008,29,0.349,45,1.263,57,0.141,61,0.105,63,0.302,120,0.006,129,0.006,185,1.456,204,1.204,322,4.308,366,3.933,400,5.921,556,2.59,569,2.499,575,2.096,586,2.375,854,1.734,878,6.364,1470,5.745,1471,6.481,1472,6.481,1473,6.481,1474,6.481,1475,6.481,1476,6.481]],["title/classes/LostPassworDto.html",[63,0.175,365,3.432]],["body/classes/LostPassworDto.html",[3,0.109,4,0.097,5,0.097,7,0.286,8,1.581,24,0.354,27,0.008,29,0.299,45,1.156,57,0.144,61,0.109,63,0.308,120,0.007,129,0.007,185,1.249,204,1.249,365,6.051,366,3.994,556,2.222,569,2.376,575,2.173,586,2.038,854,1.798,856,5.455,878,6.051,1477,7.097,1478,6.72,1479,6.72,1480,6.72]],["title/modules/MailModule.html",[222,1.535,237,3.229]],["body/modules/MailModule.html",[3,0.098,4,0.087,5,0.087,12,1.424,27,0.008,57,0.158,58,0.674,61,0.098,63,0.232,84,1.513,110,1.945,120,0.006,129,0.006,136,1.748,222,2.529,224,2.73,230,2.892,237,5.322,252,3.71,263,6.633,264,4.307,265,3.18,309,4.545,310,4.881,314,4.054,333,4.881,427,2.079,496,3.695,517,5.331,1243,5.331,1300,6.633,1481,6.013,1482,5.331,1483,7.482,1484,6.073,1485,4.881,1486,7.482,1487,6.013,1488,6.013,1489,6.013,1490,6.013,1491,6.013,1492,6.013,1493,6.013,1494,6.013,1495,6.013,1496,6.013,1497,6.013,1498,6.013,1499,6.013,1500,6.013,1501,6.013,1502,6.013,1503,4.881,1504,5.331]],["title/injectables/MailService.html",[0,0.613,404,3.061]],["body/injectables/MailService.html",[0,0.986,2,1.996,3,0.094,4,0.083,5,0.083,7,0.245,11,1.124,12,1.894,22,1.912,24,0.384,26,1.03,27,0.008,28,0.74,29,0.325,30,0.9,35,0.852,36,2.12,38,2.424,40,3.735,45,1.277,57,0.144,58,0.648,61,0.094,63,0.222,65,1.577,72,1.095,120,0.006,129,0.006,218,2.764,264,4.75,265,3.054,322,3.733,326,4.688,327,4.688,366,3.735,404,4.918,409,2.702,1484,4.688,1485,4.688,1505,5.12,1506,7.996,1507,5.775,1508,8.847,1509,5.775,1510,5.775,1511,5.775,1512,7.295,1513,5.775,1514,5.775,1515,5.775,1516,5.775,1517,5.775,1518,5.775,1519,5.775,1520,5.775,1521,5.775]],["title/injectables/MaskProcessingService.html",[0,0.613,1522,3.432]],["body/injectables/MaskProcessingService.html",[0,0.762,2,1.362,3,0.064,4,0.057,5,0.057,7,0.168,8,1.114,11,0.868,12,2.082,22,1.033,24,0.459,26,1.015,27,0.008,28,0.729,29,0.387,30,0.886,35,1.201,36,2.42,45,1.329,48,2.088,49,1.426,57,0.118,58,0.442,61,0.064,63,0.152,65,2.349,72,1.579,84,1.419,104,1.513,108,2.49,120,0.005,129,0.005,247,4.843,258,3.356,273,3.199,409,3.139,426,1.695,427,2.275,685,4.843,686,2.017,704,5.835,732,3.494,733,3.494,795,1.651,1062,1.741,1522,4.261,1523,7.794,1524,3.494,1525,6.738,1526,7.601,1527,8.141,1528,7.184,1529,6.582,1530,7.184,1531,7.184,1532,5.638,1533,5.638,1534,7.184,1535,3.941,1536,5.638,1537,5.638,1538,3.941,1539,3.941,1540,7.184,1541,3.941,1542,3.941,1543,3.941,1544,5.638,1545,3.941,1546,5.638,1547,3.941,1548,3.941,1549,3.941,1550,3.941,1551,8.326,1552,7.184,1553,7.601,1554,3.941,1555,3.941,1556,3.941,1557,5.638,1558,3.941,1559,5.638,1560,3.941,1561,3.941,1562,5.638,1563,3.941,1564,5.638,1565,3.941,1566,3.941,1567,3.941,1568,3.494,1569,3.941,1570,3.494,1571,3.941,1572,4.998,1573,5.638,1574,3.494,1575,3.941,1576,3.941,1577,3.941,1578,3.941,1579,5.638,1580,3.941,1581,3.941]],["title/guards/ModifyGuard.html",[130,1.215,167,2.251]],["body/guards/ModifyGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,2.666,167,2.666,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,1582,3.692]],["title/injectables/NotFoundInterceptor.html",[0,0.613,270,3.432]],["body/injectables/NotFoundInterceptor.html",[0,1.025,2,2.127,3,0.1,4,0.089,5,0.089,7,0.262,11,1.169,24,0.324,26,0.869,27,0.008,28,0.625,29,0.274,30,0.759,35,0.908,57,0.148,58,0.69,61,0.1,63,0.237,104,1.143,120,0.006,129,0.006,141,3.421,143,2.45,146,2.512,270,5.736,426,3.263,427,2.127,568,2.718,1264,5.736,1351,4.376,1583,6.728,1584,5.454,1585,7.589,1586,7.589,1587,5.548,1588,8.592,1589,6.153,1590,7.295,1591,4.376,1592,7.589,1593,5.454,1594,7.589,1595,6.153,1596,6.153,1597,6.153,1598,6.153]],["title/entities/OauthConfig.html",[490,2.916,546,2.121]],["body/entities/OauthConfig.html",[3,0.093,4,0.083,5,0.083,7,0.245,8,1.439,24,0.442,27,0.008,28,0.852,29,0.374,45,1.312,57,0.131,61,0.093,63,0.222,120,0.006,123,2.518,129,0.006,185,1.56,204,1.071,280,4.578,490,4.68,546,3.403,547,3.702,556,2.775,566,5.158,568,2.546,569,2.57,586,2.545,1364,5.682,1398,5.914,1599,5.836,1600,5.11,1601,6.485,1602,6.485,1603,6.459,1604,5.764,1605,5.764,1606,6.459,1607,5.764,1608,5.764,1609,5.764,1610,5.764,1611,5.764,1612,5.764,1613,6.459,1614,5.11,1615,5.11]],["title/controllers/OauthConfigController.html",[179,1.19,1616,3.432]],["body/controllers/OauthConfigController.html",[3,0.069,4,0.061,5,0.061,7,0.18,11,0.914,12,2.042,24,0.361,26,0.838,27,0.008,28,0.844,29,0.348,30,0.732,35,1.011,36,1.725,45,0.989,57,0.146,58,0.475,61,0.069,63,0.163,65,1.871,72,1.126,84,1.494,104,1.273,120,0.005,129,0.005,131,1.608,134,2.369,162,1.499,179,1.111,181,1.313,185,1.273,191,3.648,192,2.552,193,3.441,194,2.364,198,1.776,199,3.038,200,3.441,201,1.823,203,3.648,204,0.788,218,2.052,279,5.095,280,3.925,348,6.073,349,3.813,357,4.062,359,3.925,370,2.102,377,4.818,381,2.773,386,2.858,387,4.818,389,4.643,390,1.823,410,4.55,412,3.249,426,2.552,427,2.052,444,4.04,477,3.749,494,2.723,496,5.64,755,2.406,787,2.102,790,1.872,795,1.776,1062,1.872,1075,4.002,1418,3.369,1429,5.61,1591,3.015,1599,5.003,1616,4.487,1617,3.758,1618,5.262,1619,5.262,1620,6.579,1621,3.758,1622,6.131,1623,4.239,1624,4.002,1625,4.239,1626,4.239,1627,4.239,1628,4.239,1629,3.758,1630,4.239,1631,5.936,1632,4.239,1633,4.239,1634,4.239,1635,5.936,1636,3.813,1637,4.239,1638,4.239,1639,3.758,1640,4.239,1641,4.239,1642,4.239,1643,4.239,1644,4.239,1645,4.239,1646,4.239,1647,4.239,1648,4.239,1649,4.239,1650,4.239,1651,4.239,1652,4.239,1653,4.239,1654,4.239]],["title/classes/OauthConfigDto.html",[63,0.175,1622,3.229]],["body/classes/OauthConfigDto.html",[3,0.099,4,0.088,5,0.088,7,0.258,8,1.488,24,0.451,27,0.008,28,0.831,29,0.381,45,1.325,57,0.135,61,0.099,63,0.29,120,0.006,129,0.006,185,1.59,204,1.129,280,4.65,569,2.61,572,3.335,575,1.965,854,1.626,1364,5.82,1599,5.928,1601,6.642,1602,6.642,1622,5.356,1655,5.386,1656,8.554,1657,6.076,1658,6.076,1659,6.076,1660,6.076]],["title/modules/OauthConfigModule.html",[222,1.535,238,3.229]],["body/modules/OauthConfigModule.html",[3,0.102,4,0.091,5,0.091,27,0.008,57,0.16,58,0.708,61,0.102,63,0.243,120,0.006,129,0.006,181,2.388,222,2.813,224,2.866,225,2.949,226,3.13,227,3.13,228,3.13,229,4.127,230,3.036,238,6.432,248,3.823,249,3.13,250,3.13,252,3.13,261,3.583,262,2.788,279,4.724,280,3.338,477,4.95,490,4.055,491,4.772,494,4.055,1599,4.256,1616,6.291,1661,6.313,1662,6.313,1663,6.313,1664,6.313,1665,6.313]],["title/injectables/OauthConfigService.html",[0,0.613,477,2.485]],["body/injectables/OauthConfigService.html",[0,0.823,2,1.52,3,0.071,4,0.064,5,0.064,7,0.187,11,0.938,12,2.192,22,1.597,24,0.443,26,1.119,27,0.008,28,0.893,29,0.352,30,0.977,35,1.209,36,2.381,45,1.255,57,0.142,58,0.493,61,0.071,63,0.169,65,2.237,72,1.43,104,1.298,120,0.005,129,0.005,199,4.737,262,1.943,279,3.457,280,4.527,409,1.629,477,3.334,490,2.826,491,3.325,496,4.866,568,1.943,823,4.635,843,2.826,1251,2.497,1364,5.364,1587,2.965,1599,5.771,1601,3.571,1602,3.571,1603,3.899,1606,3.899,1613,5.4,1614,3.899,1615,3.899,1618,5.4,1619,5.4,1620,6.686,1621,5.4,1622,5.632,1629,5.4,1639,3.899,1666,3.899,1667,6.987,1668,6.091,1669,5.364,1670,4.399,1671,4.399,1672,6.091,1673,4.399,1674,4.399,1675,4.399,1676,4.399,1677,6.091,1678,4.399,1679,4.399,1680,4.399,1681,4.399,1682,6.091,1683,4.399,1684,4.399,1685,4.399,1686,4.399,1687,3.325,1688,3.325,1689,4.399,1690,4.399]],["title/entities/Option.html",[546,2.121,1251,2.577]],["body/entities/Option.html",[3,0.049,4,0.044,5,0.044,7,0.128,8,0.913,24,0.463,27,0.008,28,0.936,29,0.391,38,2.522,45,1.268,48,3.442,57,0.101,61,0.049,63,0.178,110,3.02,120,0.004,123,2.179,129,0.004,144,2.221,185,1.633,194,3.624,204,0.56,546,2.16,547,1.937,556,2.904,566,5.399,567,3.117,568,1.332,569,2.623,582,1.853,586,2.664,929,4.564,930,4.564,931,4.564,932,4.564,933,4.984,934,4.984,935,4.984,936,4.984,937,4.984,938,4.984,939,4.984,940,4.984,941,4.984,942,4.984,943,4.984,944,4.984,945,4.984,955,6.025,960,6.025,964,4.009,969,6.025,972,7.145,977,5.116,980,2.448,981,2.727,982,2.145,1110,2.448,1251,2.624,1691,2.674,1692,3.016,1693,4.623,1694,3.016,1695,3.016,1696,4.623,1697,3.016,1698,4.623,1699,4.623,1700,3.016,1701,4.623,1702,3.016,1703,6.303,1704,4.623,1705,3.016,1706,3.016,1707,4.623,1708,3.016,1709,4.623,1710,3.016,1711,5.622,1712,4.623,1713,3.016,1714,3.016,1715,4.623,1716,3.016,1717,4.623,1718,3.016,1719,3.016,1720,4.623,1721,3.016,1722,4.623,1723,3.016,1724,3.016,1725,4.623,1726,3.016,1727,4.623,1728,4.623,1729,3.016,1730,4.623,1731,3.016,1732,4.623,1733,3.016,1734,3.016,1735,3.016,1736,3.016,1737,4.623,1738,3.016,1739,4.098]],["title/controllers/OptionsController.html",[179,1.19,1740,3.432]],["body/controllers/OptionsController.html",[3,0.08,4,0.071,5,0.071,7,0.209,11,1.012,12,2.006,22,1.289,24,0.346,26,0.695,27,0.008,28,0.499,29,0.366,30,0.607,35,0.97,36,2.296,57,0.156,58,0.552,61,0.08,63,0.189,65,1.795,72,1.246,104,1.221,120,0.005,123,1.7,129,0.005,131,1.865,134,2.303,179,1.289,181,1.523,185,1.221,192,3.397,198,2.06,201,2.115,204,0.914,218,2.271,264,3.914,265,2.601,357,4.324,359,4.177,370,2.439,389,4.506,390,2.115,409,2.434,410,4.324,412,3.597,755,2.791,765,3.876,790,2.172,821,5.074,1062,2.903,1152,6.222,1155,4.36,1156,4.36,1157,4.36,1158,4.36,1159,4.36,1160,4.36,1168,4.967,1193,6.412,1408,3.717,1418,3.73,1503,7.223,1740,4.967,1741,4.36,1742,4.918,1743,4.918,1744,4.918,1745,5.855,1746,4.918,1747,4.918,1748,4.918,1749,6.572,1750,4.038,1751,4.36,1752,3.992,1753,3.992,1754,4.918,1755,4.918,1756,4.36,1757,4.918,1758,4.918,1759,4.918,1760,4.918,1761,4.918,1762,4.36,1763,4.36,1764,4.918,1765,4.918]],["title/modules/OptionsModule.html",[222,1.535,239,3.229]],["body/modules/OptionsModule.html",[3,0.102,4,0.091,5,0.091,27,0.008,57,0.163,58,0.706,61,0.102,63,0.243,120,0.006,129,0.006,181,2.385,222,2.81,224,2.86,225,2.942,226,3.123,227,3.123,228,3.123,229,4.123,230,3.03,239,6.429,248,3.817,249,3.123,250,3.123,252,3.123,261,3.575,262,2.782,264,4.071,265,3.331,1251,3.575,1740,6.285,1750,5.554,1751,5.584,1766,5.584,1767,5.584,1768,6.299,1769,6.299,1770,5.584,1771,5.584]],["title/injectables/OptionsService.html",[0,0.613,1750,2.79]],["body/injectables/OptionsService.html",[0,0.952,2,1.891,3,0.089,4,0.079,5,0.079,7,0.233,11,1.086,12,2.151,22,1.848,24,0.434,26,0.995,27,0.008,28,0.715,29,0.314,30,0.869,35,1.15,36,2.393,57,0.153,58,0.614,61,0.089,63,0.211,65,2.129,72,1.038,104,1.017,120,0.006,123,1.891,129,0.006,199,3.99,262,2.417,409,2.027,568,2.417,821,4.527,823,5.06,843,3.515,929,4.442,930,4.442,931,4.442,932,4.442,980,4.442,981,4.157,982,3.892,1110,4.442,1168,4.136,1193,6.683,1251,4.673,1587,3.689,1669,5.856,1687,4.136,1688,4.136,1745,5.856,1750,4.331,1752,4.442,1770,4.851,1772,4.851,1773,5.472,1774,5.472,1775,7.048,1776,5.472,1777,5.472,1778,7.048,1779,5.472,1780,4.851,1781,5.472,1782,5.472,1783,5.472,1784,5.472]],["title/interfaces/OrGuardOptions.html",[1352,3.061,1785,3.432]],["body/interfaces/OrGuardOptions.html",[3,0.074,4,0.066,5,0.066,7,0.195,8,1.239,27,0.008,29,0.318,30,0.881,35,0.678,36,1.824,57,0.138,58,0.515,61,0.074,63,0.177,72,1.356,84,1.156,104,1.678,110,2.029,120,0.005,129,0.005,130,2.433,132,3.477,139,3.136,140,1.875,141,2.846,143,2.498,144,2.491,146,1.875,199,2.35,211,2.514,269,3.267,309,3.472,409,2.978,660,6.235,787,3.111,1062,2.029,1125,3.728,1351,3.267,1352,3.096,1504,4.071,1590,7.359,1593,4.071,1785,6.078,1786,3.728,1787,3.728,1788,8.041,1789,6.275,1790,4.593,1791,6.275,1792,6.275,1793,6.275,1794,6.275,1795,6.275,1796,4.593,1797,4.593,1798,4.593,1799,5.562,1800,4.071,1801,4.071,1802,4.071,1803,4.071,1804,4.071,1805,4.593,1806,4.593,1807,4.593,1808,4.593,1809,4.593,1810,4.593,1811,4.593,1812,4.593,1813,4.593,1814,4.593,1815,4.593,1816,4.593,1817,4.593,1818,4.593,1819,4.593,1820,4.593,1821,4.593,1822,6.275,1823,4.593,1824,4.593,1825,4.593,1826,4.593,1827,4.593,1828,4.593,1829,4.593,1830,4.593,1831,4.593,1832,4.593,1833,4.593,1834,4.593,1835,4.593,1836,4.593,1837,4.593]],["title/controllers/OrthancAdminController.html",[179,1.19,1838,3.432]],["body/controllers/OrthancAdminController.html",[3,0.045,4,0.04,5,0.04,7,0.117,11,0.663,18,2.442,24,0.44,26,1.179,27,0.008,28,0.856,29,0.372,30,1.03,35,1.232,57,0.124,58,0.308,59,2.644,61,0.045,63,0.106,84,0.692,110,1.392,120,0.004,123,2.073,129,0.004,131,1.042,134,1.128,147,2.713,162,0.972,179,1.128,181,0.851,185,1.551,192,3.895,193,2.231,194,1.713,198,1.151,201,1.182,203,2.644,204,0.511,218,2.886,258,3.9,381,1.284,390,1.182,630,2.221,656,2.538,679,1.284,680,1.284,736,4.139,790,1.214,795,1.151,1236,4.889,1237,1.56,1240,5.506,1418,4.738,1838,3.252,1839,5.184,1840,2.437,1841,5.302,1842,5.302,1843,5.302,1844,5.302,1845,5.302,1846,5.302,1847,5.302,1848,5.302,1849,5.302,1850,5.302,1851,5.302,1852,5.302,1853,5.302,1854,2.749,1855,5.736,1856,2.749,1857,2.749,1858,2.749,1859,2.749,1860,2.749,1861,2.749,1862,2.749,1863,2.749,1864,2.749,1865,2.749,1866,2.749,1867,2.749,1868,2.749,1869,2.749,1870,2.749,1871,2.749,1872,2.749,1873,2.749,1874,4.303,1875,4.303,1876,2.749,1877,2.749,1878,2.749,1879,2.749,1880,4.303,1881,2.749,1882,2.749,1883,2.749,1884,2.749,1885,2.749,1886,2.749,1887,2.749,1888,2.749,1889,2.749,1890,2.749,1891,2.749,1892,2.749,1893,2.749,1894,2.749,1895,2.749,1896,2.749,1897,2.749,1898,2.749,1899,2.749,1900,2.078,1901,1.56,1902,1.689,1903,1.689,1904,2.749,1905,5.13,1906,2.749,1907,2.749,1908,2.749,1909,2.749,1910,2.749,1911,2.749,1912,2.749,1913,2.749,1914,2.749,1915,2.749,1916,2.749,1917,2.749,1918,2.749,1919,2.749]],["title/controllers/OrthancController.html",[179,1.19,1920,3.432]],["body/controllers/OrthancController.html",[3,0.063,4,0.056,5,0.056,7,0.166,11,0.863,12,1.551,24,0.415,26,1.113,27,0.008,28,0.8,29,0.351,30,0.972,35,1.163,45,0.945,46,3.771,57,0.158,58,0.438,61,0.063,63,0.15,65,1.066,72,0.741,104,0.726,120,0.005,129,0.005,131,1.481,147,2.639,154,2.694,157,2.616,160,2.777,176,1.824,179,1.468,181,1.209,185,1.465,191,2.399,192,3.774,198,1.635,201,1.679,204,0.726,205,3.441,206,3.169,207,3.597,208,3.169,209,3.983,210,3.461,211,2.137,212,2.399,218,2.725,258,3.538,296,2.777,299,3.169,390,1.679,630,2.743,679,1.824,680,1.824,736,3.755,787,1.936,790,1.724,795,1.635,885,2.951,887,1.635,898,4.657,964,2.303,1024,3.983,1030,3.461,1236,4.793,1237,2.216,1240,5.327,1855,5.551,1901,2.216,1902,2.399,1903,2.399,1905,4.654,1920,4.233,1921,3.461,1922,6.548,1923,6.548,1924,6.548,1925,6.548,1926,6.548,1927,5.6,1928,3.904,1929,3.904,1930,3.904,1931,3.904,1932,3.904,1933,3.904,1934,3.904,1935,3.904,1936,3.904,1937,3.904,1938,3.904,1939,3.904,1940,3.904,1941,3.904,1942,3.904,1943,3.904,1944,3.904,1945,3.904,1946,3.904,1947,3.461,1948,3.461,1949,3.904,1950,3.904,1951,3.904,1952,5.6,1953,3.904,1954,3.904,1955,7.153,1956,3.904,1957,3.904,1958,3.904,1959,3.904,1960,2.508]],["title/controllers/OrthancDeleteController.html",[179,1.19,1961,3.432]],["body/controllers/OrthancDeleteController.html",[3,0.083,4,0.074,5,0.074,7,0.216,11,1.036,24,0.397,26,1.063,27,0.008,28,0.764,29,0.335,30,0.929,35,1.111,57,0.154,58,0.571,61,0.083,63,0.196,120,0.006,129,0.006,147,2.65,162,1.8,163,2.448,179,1.762,181,1.576,185,1.399,192,3.678,198,2.132,201,2.189,204,0.946,218,2.602,258,3.517,390,2.189,630,3.153,679,2.378,680,2.378,736,3.733,790,2.248,795,2.132,1236,4.799,1237,2.889,1240,5.335,1839,4.921,1855,5.558,1901,2.889,1902,3.128,1903,3.128,1905,4.626,1961,5.082,1962,4.512,1963,7.528,1964,7.528,1965,7.528,1966,5.09,1967,5.09,1968,5.09,1969,5.09,1970,5.09,1971,5.09,1972,5.09,1973,5.09,1974,5.09,1975,5.09,1976,6.674,1977,5.09,1978,5.09]],["title/classes/OrthancEventPayloadDto.html",[63,0.175,636,3.432]],["body/classes/OrthancEventPayloadDto.html",[3,0.083,4,0.074,5,0.074,7,0.219,8,1.337,24,0.452,27,0.008,29,0.382,38,2.053,45,1.281,57,0.136,61,0.083,63,0.261,84,2.159,120,0.006,123,2.616,129,0.006,185,1.594,194,3.66,204,0.956,333,6.142,538,5.382,555,4.65,556,2.836,569,2.596,571,2.919,572,3.169,575,1.664,581,3.304,586,2.601,608,3.658,636,5.117,675,7.098,854,1.376,879,5.117,981,3.993,995,5.421,1979,7.752,1980,4.56,1981,7.567,1982,7.567,1983,7.567,1984,6.001,1985,5.144,1986,5.144,1987,6.77,1988,5.144,1989,5.144,1990,5.144,1991,5.144,1992,5.144,1993,5.144]],["title/controllers/OrthancExportController.html",[179,1.19,1994,3.432]],["body/controllers/OrthancExportController.html",[3,0.063,4,0.056,5,0.056,7,0.165,11,0.861,24,0.427,26,1.146,27,0.008,28,0.823,29,0.361,30,1.001,35,1.197,57,0.142,58,0.437,61,0.063,63,0.15,120,0.005,129,0.005,147,2.697,154,1.873,179,1.465,181,1.206,185,1.508,192,3.834,198,1.631,201,1.674,204,0.724,218,2.804,258,3.789,381,1.819,390,1.674,630,2.739,679,1.819,680,1.819,736,4.022,790,1.72,795,1.631,1236,4.863,1237,2.21,1240,5.456,1839,5.1,1855,5.685,1901,2.21,1902,2.393,1903,2.393,1905,4.985,1994,4.225,1995,3.452,1996,6.538,1997,6.538,1998,6.538,1999,6.538,2000,6.538,2001,6.538,2002,6.538,2003,3.894,2004,5.796,2005,3.894,2006,3.894,2007,3.894,2008,3.894,2009,3.894,2010,3.894,2011,6.538,2012,3.894,2013,3.894,2014,3.894,2015,3.894,2016,3.894,2017,3.894,2018,3.894,2019,3.894,2020,3.894,2021,3.894,2022,3.894,2023,3.894,2024,3.894,2025,3.894,2026,3.894,2027,8.112,2028,5.796,2029,3.894,2030,3.894,2031,3.894,2032,3.894,2033,3.894]],["title/controllers/OrthancImportController.html",[179,1.19,2034,3.432]],["body/controllers/OrthancImportController.html",[3,0.089,4,0.079,5,0.079,7,0.233,11,1.086,24,0.371,26,0.995,27,0.008,28,0.715,29,0.314,30,0.869,35,1.04,57,0.157,58,0.614,61,0.089,63,0.211,120,0.006,129,0.006,145,2.713,147,2.613,179,1.848,181,1.695,185,1.31,192,3.54,198,2.292,201,2.353,204,1.017,218,2.436,258,3.292,381,2.556,390,2.353,630,3.266,679,2.556,680,2.556,736,3.495,790,2.417,795,2.292,1029,4.442,1236,4.746,1237,3.106,1240,5.234,1839,4.791,1855,5.453,1901,3.106,1902,3.363,1903,3.363,1905,4.331,2004,4.851,2028,4.851,2034,5.327,2035,4.851,2036,7.797,2037,7.797,2038,5.472,2039,5.472,2040,5.472,2041,5.472,2042,5.472,2043,5.472,2044,5.472,2045,7.048]],["title/controllers/OrthancModifyController.html",[179,1.19,2046,3.432]],["body/controllers/OrthancModifyController.html",[3,0.083,4,0.074,5,0.074,7,0.216,11,1.036,24,0.397,26,1.063,27,0.008,28,0.764,29,0.335,30,0.929,35,1.111,57,0.154,58,0.571,61,0.083,63,0.196,120,0.006,129,0.006,147,2.65,167,2.524,179,1.762,181,1.576,185,1.399,192,3.678,198,2.132,201,2.189,204,0.946,218,2.602,258,3.517,381,2.378,390,2.189,630,3.153,679,2.378,680,2.378,736,3.733,790,2.248,795,2.132,1236,4.799,1237,2.889,1240,5.335,1839,4.921,1855,5.558,1901,2.889,1902,3.128,1903,3.128,1905,4.626,2046,5.082,2047,4.512,2048,7.528,2049,7.528,2050,7.528,2051,5.09,2052,5.09,2053,5.09,2054,5.09,2055,5.09,2056,5.09,2057,5.09,2058,5.09,2059,5.09,2060,5.09,2061,7.528,2062,5.09,2063,5.09]],["title/modules/OrthancModule.html",[222,1.535,240,3.229]],["body/modules/OrthancModule.html",[3,0.087,4,0.077,5,0.077,27,0.008,57,0.168,58,0.6,61,0.087,63,0.206,120,0.006,129,0.006,181,2.152,205,4.269,206,4.344,207,5.57,208,4.344,222,2.607,224,2.43,225,2.5,226,2.653,227,2.653,228,2.653,229,3.825,230,2.574,240,6.49,243,5.846,248,3.445,249,2.653,250,2.653,252,3.445,287,4.744,630,3.632,679,2.5,680,2.5,1024,4.941,1281,7.166,1838,5.831,1920,5.831,1947,4.744,1948,4.744,1961,5.831,1994,5.831,2034,5.831,2046,5.831,2064,4.744,2065,4.744,2066,5.351,2067,5.351,2068,5.831,2069,5.831,2070,5.351,2071,5.351,2072,5.351,2073,5.351,2074,5.351,2075,5.351,2076,4.744,2077,4.045,2078,5.351]],["title/injectables/OrthancMonitoringTask.html",[0,0.613,2079,3.229]],["body/injectables/OrthancMonitoringTask.html",[0,0.97,2,1.946,3,0.091,4,0.081,5,0.081,7,0.239,8,1.418,11,1.106,12,1.872,22,1.882,24,0.416,26,0.795,27,0.008,28,0.572,29,0.319,30,0.694,35,0.831,38,2.176,48,2.085,49,2.037,57,0.15,58,0.631,61,0.091,63,0.217,65,1.96,72,1.068,108,3.49,120,0.006,129,0.006,185,1.046,277,4.256,283,4.005,284,4.005,409,3.184,630,3.681,679,2.63,680,2.63,824,7.005,825,7.377,1041,4.57,2079,5.105,2080,7.377,2081,4.991,2082,7.902,2083,8.322,2084,7.178,2085,7.178,2086,5.63,2087,4.991,2088,4.991,2089,7.902,2090,5.63,2091,5.63,2092,5.63,2093,5.63,2094,5.63,2095,5.63,2096,5.63,2097,5.63,2098,5.63]],["title/controllers/OrthancQueryController.html",[179,1.19,2068,3.432]],["body/controllers/OrthancQueryController.html",[3,0.069,4,0.062,5,0.062,7,0.182,11,0.921,12,1.632,24,0.393,26,1.053,27,0.008,28,0.757,29,0.332,30,0.919,35,1.1,45,0.994,57,0.153,58,0.48,61,0.069,63,0.165,65,1.633,72,1.414,104,1.111,120,0.005,123,2.577,129,0.005,147,2.571,156,1.55,157,2,179,1.567,181,1.326,185,1.385,191,2.632,192,3.493,198,1.794,201,1.841,204,0.796,218,2.381,258,3.218,370,2.964,381,2,390,1.841,630,2.885,679,2,680,2,686,2.191,708,5.3,736,3.415,787,2.123,790,1.892,795,1.794,1102,6.106,1236,4.703,1237,2.431,1240,5.162,1839,4.819,1855,5.378,1901,2.431,1902,2.632,1903,2.632,1905,4.233,2068,4.519,2099,3.476,2100,6.888,2101,6.888,2102,6.888,2103,4.283,2104,4.283,2105,4.283,2106,4.283,2107,4.283,2108,3.796,2109,4.283,2110,6.888,2111,5.026,2112,4.283,2113,4.283,2114,4.283,2115,4.283,2116,4.283,2117,4.283,2118,4.03,2119,4.03,2120,4.283,2121,3.046,2122,4.283,2123,2.632,2124,4.283,2125,6.609,2126,4.283,2127,4.283,2128,4.283,2129,3.796,2130,5.979,2131,3.046,2132,4.283,2133,5.979,2134,4.283,2135,4.283,2136,4.283,2137,4.283,2138,4.283,2139,4.283,2140,4.283,2141,3.796,2142,4.283,2143,5.979,2144,4.283,2145,4.283,2146,4.283,2147,4.283,2148,4.283,2149,4.283,2150,4.283,2151,4.283]],["title/controllers/OrthancReadAllController.html",[179,1.19,2069,3.432]],["body/controllers/OrthancReadAllController.html",[3,0.076,4,0.068,5,0.068,7,0.2,11,0.982,24,0.409,26,1.096,27,0.008,28,0.787,29,0.345,30,0.957,35,1.145,57,0.15,58,0.528,61,0.076,63,0.181,120,0.005,129,0.005,147,2.652,162,1.663,176,2.197,179,1.672,181,1.457,185,1.442,192,3.74,198,1.97,201,2.023,204,0.874,218,2.681,258,3.624,381,2.197,390,2.023,630,3.031,679,2.197,680,2.197,736,3.846,790,2.078,795,1.97,1236,4.824,1237,2.67,1240,5.382,1839,4.983,1855,5.607,1900,3.556,1901,2.67,1902,2.891,1903,2.891,1905,4.767,2069,4.82,2077,6.129,2152,4.17,2153,7.236,2154,6.378,2155,7.236,2156,7.236,2157,4.704,2158,4.704,2159,4.704,2160,4.704,2161,4.704,2162,4.704,2163,4.704,2164,4.704,2165,4.704,2166,4.704,2167,4.704,2168,4.704,2169,4.704,2170,6.877,2171,4.704,2172,4.704,2173,4.704,2174,4.704]],["title/controllers/ProcessingController.html",[179,1.19,2175,3.432]],["body/controllers/ProcessingController.html",[3,0.052,4,0.047,5,0.047,7,0.137,10,2.875,11,0.751,12,2.061,13,3.955,18,3.33,21,3.286,22,0.848,24,0.369,26,0.923,27,0.008,28,0.748,29,0.365,30,0.806,32,2.578,35,1.128,36,2.386,38,1.779,40,3.274,44,1.987,45,1.104,50,4.841,57,0.142,58,0.363,59,4.307,60,2.077,61,0.052,63,0.125,65,2.012,72,1.397,73,3.955,75,2.866,84,0.814,96,2.624,100,2.624,104,1.214,110,1.046,112,3.286,120,0.006,123,1.685,124,2.624,125,2.866,126,2.866,127,2.866,129,0.004,131,1.226,134,2.404,136,1.899,147,2.566,156,1.17,162,1.724,165,2.345,176,1.51,179,0.848,181,1.001,185,1.303,192,3.529,194,2.791,198,1.354,201,1.39,203,2.995,204,0.601,211,1.77,212,1.987,218,2.423,296,2.3,349,3.131,357,4.308,359,4.34,363,4.404,370,2.417,381,2.277,385,1.987,389,4.723,390,1.39,409,1.198,410,4.677,412,3.836,426,2.096,427,1.685,504,2.077,629,3.606,683,2.077,724,4.435,755,1.835,765,4.134,784,1.987,787,1.603,790,1.428,820,2.668,913,3.684,1062,1.428,1418,2.767,1624,3.955,1960,2.077,2170,2.866,2175,3.684,2176,2.866,2177,4.762,2178,4.938,2179,4.435,2180,3.233,2181,5.306,2182,3.467,2183,3.684,2184,3.233,2185,3.233,2186,2.444,2187,2.444,2188,3.233,2189,5.569,2190,2.444,2191,3.233,2192,3.233,2193,2.444,2194,2.444,2195,2.444,2196,3.233,2197,2.866,2198,2.444,2199,3.233,2200,3.233,2201,2.3,2202,3.684,2203,2.866,2204,3.233,2205,3.233,2206,3.233,2207,2.444,2208,3.233,2209,4.435,2210,2.444,2211,4.435,2212,3.233,2213,3.233,2214,2.444,2215,2.444,2216,2.444,2217,3.233,2218,3.233,2219,3.684,2220,3.233,2221,3.233,2222,3.233,2223,2.444,2224,2.444,2225,2.444,2226,3.233,2227,2.444,2228,3.233,2229,3.233]],["title/classes/ProcessingFile.html",[63,0.175,2230,3.432]],["body/classes/ProcessingFile.html",[3,0.096,4,0.086,5,0.086,7,0.252,8,1.467,11,1.144,22,1.557,24,0.46,26,0.839,27,0.008,28,0.603,29,0.413,30,0.733,35,1.096,45,1.364,61,0.096,63,0.229,104,1.38,120,0.006,123,3.019,129,0.006,199,4.559,409,3.3,854,1.589,2230,5.612,2231,5.266,2232,8.485,2233,8.485,2234,7.425,2235,7.425,2236,5.94,2237,5.94,2238,5.94,2239,7.425,2240,7.425]],["title/classes/ProcessingJobDto.html",[63,0.175,2181,3.061]],["body/classes/ProcessingJobDto.html",[3,0.094,4,0.084,5,0.084,7,0.247,8,1.448,24,0.386,27,0.008,29,0.326,45,1.058,48,2.156,57,0.144,61,0.119,63,0.309,84,2.185,110,2.596,120,0.006,129,0.006,144,1.803,185,1.362,194,3.53,204,1.082,569,2.671,570,4.324,571,3.304,572,3.044,575,1.883,684,6.367,685,4.942,686,2.979,726,6.514,728,5.41,729,4.4,730,4.4,731,4.725,734,4.725,854,1.558,1173,5.951,2181,4.942,2241,6.066,2242,4.725,2243,5.215,2244,5.821,2245,5.821,2246,6.066,2247,5.821,2248,5.821,2249,4.161,2250,5.161,2251,5.161]],["title/modules/ProcessingModule.html",[222,1.535,241,3.229]],["body/modules/ProcessingModule.html",[3,0.106,4,0.094,5,0.094,27,0.008,57,0.152,58,0.73,61,0.106,63,0.251,120,0.006,129,0.006,181,2.433,222,2.851,224,2.956,225,3.041,226,3.228,227,3.228,228,3.228,229,4.183,230,3.131,241,6.479,248,3.895,249,3.228,250,3.228,252,3.228,629,5.598,683,4.182,2175,6.376,2177,5.284,2252,6.51,2253,6.51,2254,6.51,2255,6.51]],["title/injectables/ProcessingQueueService.html",[0,0.613,629,2.79]],["body/injectables/ProcessingQueueService.html",[0,0.738,2,1.304,3,0.061,4,0.055,5,0.055,7,0.16,8,1.079,10,3.788,11,0.842,12,2.151,13,4.33,16,5.008,17,5.008,18,3.645,21,3.683,22,0.989,24,0.434,26,1.055,27,0.008,28,0.759,29,0.347,30,0.922,34,3.357,35,1.15,36,2.535,38,2.543,40,3.917,45,1.125,46,3.537,48,1.397,49,1.365,50,2.225,57,0.134,58,0.423,59,4.592,60,2.423,61,0.061,63,0.145,65,2.128,72,1.615,73,5.038,78,4.843,84,0.95,85,4.843,86,3.345,87,3.345,88,3.345,89,3.345,90,3.345,91,3.345,92,3.345,93,3.345,94,3.345,95,3.345,96,4.435,97,3.345,99,3.345,100,3.062,101,3.345,102,3.345,103,3.345,104,1.448,105,4.843,106,3.345,112,4.747,113,3.345,118,3.345,120,0.005,121,3.345,124,5.213,129,0.005,264,4.12,265,1.995,314,2.543,316,2.683,317,2.683,409,2.379,427,1.304,524,2.423,629,3.357,724,6.339,795,1.58,1062,1.666,1382,2.683,1762,3.345,1763,3.345,2177,3.062,2181,5.548,2197,4.843,2203,3.345,2241,6.339,2256,3.345,2257,6.423,2258,5.464,2259,5.464,2260,3.773,2261,3.773,2262,3.773,2263,3.773,2264,3.773,2265,3.773,2266,5.464,2267,3.773,2268,3.773,2269,3.683,2270,3.773,2271,3.773,2272,2.852,2273,2.852,2274,3.773,2275,3.773,2276,3.773,2277,3.773,2278,3.773,2279,5.464,2280,3.773]],["title/classes/QueryAnswer.html",[63,0.175,2281,3.229]],["body/classes/QueryAnswer.html",[3,0.053,4,0.047,5,0.047,7,0.139,8,0.969,22,1.286,24,0.476,26,0.461,27,0.008,28,0.331,29,0.372,30,0.402,38,2.241,45,1.371,48,3.094,49,2.976,57,0.059,61,0.053,62,2.892,63,0.126,108,4.086,120,0.004,129,0.004,258,3.842,656,4.655,686,1.669,854,0.873,1039,4.459,1065,4.35,2123,4.713,2281,3.49,2282,6.849,2283,2.892,2284,6.103,2285,6.554,2286,6.554,2287,6.554,2288,4.583,2289,4.583,2290,6.103,2291,4.788,2292,4.788,2293,4.788,2294,4.788,2295,4.788,2296,4.788,2297,4.788,2298,4.788,2299,4.788,2300,4.583,2301,4.583,2302,3.262,2303,4.907,2304,3.262,2305,3.262,2306,3.262,2307,3.262,2308,3.262,2309,3.262,2310,3.262,2311,3.262,2312,3.262,2313,3.262,2314,3.262,2315,3.262,2316,3.262,2317,3.262,2318,3.262,2319,3.262,2320,3.262,2321,3.262,2322,3.262,2323,4.907,2324,4.907,2325,4.907,2326,4.907,2327,4.907,2328,4.907,2329,4.907,2330,4.907,2331,4.907]],["title/guards/QueryGuard.html",[130,1.215,157,2.121]],["body/guards/QueryGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.946,157,2.512,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,1.83,176,1.724,177,2.021,2332,3.692]],["title/classes/QueryParsedAnswerDto.html",[63,0.175,2111,3.061]],["body/classes/QueryParsedAnswerDto.html",[3,0.083,4,0.074,5,0.074,7,0.218,8,1.336,24,0.356,27,0.008,29,0.301,45,1.334,46,2.331,57,0.136,61,0.123,63,0.309,120,0.006,129,0.006,156,2.736,185,1.257,204,0.954,556,1.697,569,2.778,571,2.914,572,3.521,575,1.661,586,2.815,656,4.459,686,2.627,854,1.374,1084,3.155,2111,4.558,2118,5.097,2119,5.097,2121,5.378,2123,4.938,2131,3.652,2243,4.81,2249,3.838,2288,2.914,2289,2.914,2300,2.914,2301,2.914,2333,5.715,2334,3.881,2335,5.135,2336,5.135,2337,5.135,2338,5.135,2339,3.461,2340,4.938,2341,3.298,2342,3.298,2343,3.298,2344,3.155,2345,3.298,2346,3.155,2347,3.298,2348,3.155,2349,3.298,2350,3.298,2351,3.298,2352,3.298,2353,3.461,2354,3.461,2355,3.298,2356,3.028,2357,4.168]],["title/injectables/QueryQueueTask.html",[0,0.613,2358,3.229]],["body/injectables/QueryQueueTask.html",[0,0.95,2,1.884,3,0.088,4,0.079,5,0.079,7,0.232,11,1.083,12,1.843,22,1.843,24,0.371,26,0.77,27,0.008,28,0.553,29,0.243,30,0.672,35,0.804,57,0.16,58,0.611,61,0.088,63,0.21,65,2.246,72,1.614,120,0.006,129,0.006,185,1.013,262,2.408,277,4.12,409,2.604,427,2.43,568,2.408,823,5.053,843,3.502,1251,3.99,1503,4.425,1780,4.833,2087,4.833,2088,4.833,2358,5.001,2359,6.899,2360,4.833,2361,8.222,2362,5.451,2363,7.783,2364,5.053,2365,5.451,2366,7.031,2367,7.031,2368,5.451,2369,4.833,2370,4.12,2371,4.425,2372,5.707,2373,5.451,2374,4.425,2375,5.451,2376,5.451,2377,6.233,2378,5.451,2379,6.233,2380,5.451,2381,7.783,2382,5.451,2383,5.451,2384,5.451,2385,5.451,2386,7.783,2387,5.451,2388,5.451,2389,5.451]],["title/classes/QuerySeriesAnswer.html",[63,0.175,2390,3.686]],["body/classes/QuerySeriesAnswer.html",[3,0.043,4,0.039,5,0.039,7,0.113,8,0.83,22,1.101,24,0.482,26,0.377,27,0.008,28,0.271,29,0.38,30,0.329,38,2.566,45,1.362,48,3.247,49,3.154,57,0.076,61,0.043,63,0.103,108,4.18,120,0.003,129,0.003,258,3.184,656,2.477,686,1.364,854,0.713,923,1.855,1039,3.175,1084,3.625,1311,1.712,2123,2.581,2131,1.896,2281,6.298,2282,6.268,2284,5.152,2285,5.209,2286,5.533,2287,5.533,2288,3.869,2289,3.869,2290,5.152,2291,3.41,2292,3.41,2293,3.41,2294,3.41,2295,3.41,2296,3.41,2297,3.41,2298,3.41,2299,3.41,2300,3.869,2301,3.869,2340,4.674,2344,4.674,2346,4.674,2348,3.943,2356,3.785,2390,3.41,2391,6.731,2392,2.363,2393,7.606,2394,5.198,2395,5.198,2396,5.198,2397,5.198,2398,5.198,2399,4.608,2400,2.363,2401,5.898,2402,4.2,2403,2.666,2404,2.666,2405,2.666,2406,2.666,2407,2.666,2408,2.666,2409,2.666,2410,2.666,2411,2.666,2412,2.666,2413,2.666,2414,6.2,2415,2.363,2416,2.363,2417,2.363,2418,2.363,2419,2.363,2420,2.363,2421,2.363,2422,2.363,2423,2.363,2424,2.363,2425,2.363,2426,2.363,2427,2.363,2428,2.363,2429,2.363,2430,2.363,2431,2.363,2432,2.363,2433,2.363,2434,2.363,2435,2.363,2436,2.666,2437,3.724,2438,4.2,2439,4.2,2440,4.2,2441,4.2,2442,4.2]],["title/classes/QuerySeriesDto.html",[63,0.175,2118,3.061]],["body/classes/QuerySeriesDto.html",[3,0.077,4,0.068,5,0.068,7,0.201,8,1.264,24,0.441,27,0.008,29,0.373,45,1.351,57,0.131,61,0.118,63,0.299,120,0.005,129,0.005,156,1.71,185,1.556,204,0.878,556,2.768,569,2.751,571,2.683,572,3.482,575,1.529,586,2.784,656,2.788,686,2.419,854,1.265,1084,4.457,2111,3.187,2118,4.89,2119,4.313,2121,6.089,2123,4.457,2131,3.362,2243,3.362,2249,3.632,2288,2.683,2289,2.683,2300,2.683,2301,2.683,2333,6.471,2334,3.573,2339,3.187,2340,5.145,2341,3.036,2342,4.659,2343,3.036,2344,4.457,2345,3.036,2346,4.457,2347,3.036,2348,4.457,2349,3.036,2350,3.036,2351,3.036,2352,3.036,2353,3.187,2354,3.187,2355,3.036,2356,2.788,2357,3.837,2443,3.573,2444,4.727,2445,4.19,2446,4.727,2447,4.19,2448,4.727,2449,4.19,2450,4.727,2451,4.19,2452,4.727,2453,4.19,2454,4.727]],["title/classes/QueryStudyAnswer.html",[63,0.175,2455,3.686]],["body/classes/QueryStudyAnswer.html",[3,0.048,4,0.042,5,0.042,7,0.125,8,0.896,22,1.188,24,0.482,26,0.415,27,0.008,28,0.298,29,0.381,30,0.363,38,2.615,45,1.356,48,3.24,49,3.144,57,0.082,61,0.048,63,0.113,108,4.179,120,0.004,129,0.004,258,2.905,656,2.674,686,1.504,854,0.787,923,2.002,1039,3.427,1311,1.888,2123,2.786,2141,2.606,2281,6.384,2282,6.05,2284,5.366,2285,5.453,2286,5.762,2287,5.762,2288,4.029,2289,4.029,2290,5.366,2291,3.68,2292,3.68,2293,3.68,2294,3.68,2295,3.68,2296,3.68,2297,3.68,2298,3.68,2299,3.68,2300,4.029,2301,4.029,2356,4.623,2391,6.497,2399,4.905,2400,2.606,2414,6.296,2415,2.606,2416,2.606,2417,2.606,2418,2.606,2419,2.606,2420,2.606,2421,2.606,2422,2.606,2423,2.606,2424,2.606,2425,2.606,2426,2.606,2427,2.606,2428,2.606,2429,2.606,2430,2.606,2431,2.606,2432,2.606,2433,2.606,2434,2.606,2435,2.606,2437,4.019,2455,3.68,2456,2.606,2457,7.838,2458,7.838,2459,7.838,2460,5.533,2461,5.533,2462,5.533,2463,4.533,2464,2.94,2465,2.94,2466,2.94,2467,2.94,2468,2.94,2469,2.94,2470,2.94,2471,4.533,2472,4.533,2473,4.533]],["title/classes/QueryStudyDto.html",[63,0.175,2119,3.061]],["body/classes/QueryStudyDto.html",[3,0.075,4,0.067,5,0.067,7,0.197,8,1.246,24,0.449,27,0.008,29,0.379,45,1.352,57,0.129,61,0.116,63,0.297,120,0.005,129,0.005,156,1.675,185,1.582,204,0.86,556,2.815,569,2.743,571,2.627,572,3.472,575,1.497,586,2.776,656,2.73,686,2.369,854,1.239,1084,2.845,2111,3.121,2118,4.253,2119,4.838,2121,6.164,2123,4.41,2131,3.293,2243,3.293,2249,3.58,2288,4.073,2289,4.073,2300,4.073,2301,4.073,2333,6.55,2334,3.499,2339,3.121,2340,5.113,2341,2.974,2342,2.974,2343,2.974,2344,2.845,2345,2.974,2346,2.845,2347,2.974,2348,2.845,2349,2.974,2350,2.974,2351,2.974,2352,2.974,2353,3.121,2354,4.838,2355,2.974,2356,4.233,2357,3.758,2443,3.499,2474,4.104,2475,4.629,2476,4.629,2477,4.104,2478,4.629,2479,4.104,2480,4.629,2481,4.104,2482,4.629,2483,4.104,2484,4.629,2485,4.104,2486,4.629]],["title/modules/QueueModule.html",[222,1.535,242,3.229]],["body/modules/QueueModule.html",[3,0.096,4,0.085,5,0.085,27,0.008,57,0.162,58,0.661,61,0.096,63,0.227,120,0.006,129,0.006,181,2.288,222,2.728,224,2.675,225,2.752,226,2.921,227,2.921,228,2.921,229,4.001,230,2.834,242,6.593,248,3.663,249,2.921,250,2.921,252,2.921,2076,5.223,2364,5.464,2370,4.453,2487,5.223,2488,5.223,2489,5.994,2490,5.994,2491,5.892,2492,6.1,2493,6.1,2494,6.1,2495,7.387,2496,5.892,2497,7.387,2498,5.892,2499,7.387,2500,5.223,2501,5.223]],["title/controllers/QueuesAnonController.html",[179,1.19,2492,3.432]],["body/controllers/QueuesAnonController.html",[3,0.051,4,0.045,5,0.045,7,0.133,10,3.795,11,0.734,12,2.05,18,3.271,24,0.365,26,0.909,27,0.008,28,0.739,29,0.363,30,0.794,32,2.521,35,1.021,36,2.368,38,1.747,40,3.643,44,1.929,45,1.093,50,5.271,57,0.136,58,0.352,59,3.541,61,0.051,63,0.121,65,1.99,72,1.436,73,4.338,84,0.79,104,1.196,108,1.387,110,1.015,112,3.214,120,0.005,129,0.004,131,1.191,134,2.397,136,2.011,147,2.57,151,2.293,152,2.857,156,1.136,162,1.686,165,2.772,179,0.823,181,0.972,185,1.286,192,3.502,194,2.755,198,1.315,201,1.35,203,2.929,204,0.583,211,1.718,212,1.929,218,2.392,357,4.458,359,4.307,363,4.338,370,2.364,381,2.227,385,1.929,389,4.696,390,1.35,410,4.648,412,3.787,426,2.767,427,2.224,444,3.399,504,3.062,524,2.016,755,1.782,765,4.081,784,1.929,787,1.557,790,1.387,795,1.315,820,2.609,1062,1.387,1418,1.782,1624,3.885,1960,3.062,2178,4.864,2179,4.356,2182,3.391,2183,3.603,2186,2.373,2187,2.373,2189,5.506,2190,2.373,2193,2.373,2194,2.373,2195,2.373,2198,2.373,2201,2.233,2202,3.603,2207,2.373,2209,4.864,2210,2.373,2211,4.356,2214,2.373,2215,2.373,2216,2.373,2219,3.603,2223,3.603,2224,3.603,2225,3.603,2227,2.373,2269,3.214,2489,3.885,2492,3.603,2500,2.783,2502,5.181,2503,2.783,2504,3.139,2505,5.763,2506,4.767,2507,3.139,2508,5.181,2509,3.139,2510,3.139,2511,3.139,2512,2.548,2513,3.139,2514,3.139,2515,3.139,2516,3.139,2517,3.139,2518,3.139,2519,3.139,2520,3.139,2521,3.139,2522,3.139,2523,3.139,2524,3.869,2525,3.139,2526,3.139,2527,4.767,2528,3.139,2529,2.548,2530,2.548,2531,3.139,2532,3.139,2533,3.139,2534,3.139,2535,3.139]],["title/classes/QueuesAnonDto.html",[63,0.175,2536,3.432]],["body/classes/QueuesAnonDto.html",[3,0.087,4,0.077,5,0.077,7,0.227,8,1.371,24,0.457,27,0.008,29,0.386,45,1.334,57,0.125,61,0.087,63,0.297,84,1.344,120,0.006,129,0.006,185,1.611,204,0.993,556,2.865,569,2.655,572,3.347,575,1.728,586,2.675,604,3.15,854,1.429,1094,6.256,1636,4.457,2249,3.938,2502,6.276,2508,3.799,2530,4.336,2536,6.167,2537,4.336,2538,6.832,2539,6.832,2540,6.832,2541,6.832,2542,7.233,2543,5.342,2544,5.342,2545,5.342,2546,5.342,2547,5.342,2548,5.342,2549,5.342,2550,5.342,2551,5.342,2552,5.342,2553,5.342,2554,5.342,2555,4.735,2556,4.735,2557,4.735,2558,4.735,2559,4.735]],["title/injectables/QueuesAnonService.html",[0,0.613,2489,3.061]],["body/injectables/QueuesAnonService.html",[0,0.832,1,6.103,2,1.544,3,0.072,4,0.065,5,0.065,7,0.19,8,1.216,9,3.954,10,4.477,11,0.948,12,2.196,13,4.15,14,4.653,15,5.324,16,5.01,17,5.01,18,3.494,19,4.653,20,4.653,21,4.15,22,1.171,24,0.47,26,1.191,27,0.008,28,0.856,29,0.382,30,1.04,31,3.376,32,4.014,34,3.783,35,1.287,36,2.535,37,3.376,38,2.302,40,2.875,44,2.745,45,1.096,46,3.829,48,2.609,49,2.548,50,3.63,51,3.376,53,3.376,55,3.376,57,0.137,58,0.501,60,2.869,61,0.072,63,0.172,72,0.847,120,0.005,129,0.005,264,4.211,265,2.362,314,3.011,316,3.177,317,3.177,427,1.544,683,2.869,923,2.719,1382,4.378,2272,3.376,2273,3.376,2414,6.277,2489,4.15,2502,4.378,2560,3.959,2561,4.466,2562,3.625,2563,3.625,2564,3.625,2565,3.625,2566,3.625,2567,3.625,2568,3.625,2569,3.625,2570,3.625,2571,3.625,2572,4.466,2573,4.466,2574,3.625,2575,3.625,2576,3.625,2577,3.625,2578,4.466]],["title/classes/QueuesAnonsDto.html",[63,0.175,2508,3.229]],["body/classes/QueuesAnonsDto.html",[3,0.097,4,0.087,5,0.087,7,0.255,8,1.474,24,0.316,27,0.008,29,0.267,45,1.289,57,0.134,61,0.097,63,0.313,84,1.878,120,0.006,129,0.006,185,1.113,204,1.113,556,1.98,569,2.717,572,3.434,575,1.937,586,2.745,604,3.532,854,1.602,1094,4.861,1636,4.794,2249,4.236,2502,5.308,2508,5.308,2530,6.599,2536,6.432,2537,4.861,2538,5.309,2539,5.309,2540,5.309,2541,5.309,2542,6.616,2555,5.309,2556,5.309,2557,5.309,2558,5.309,2559,5.309,2579,5.989,2580,5.989]],["title/controllers/QueuesDeleteController.html",[179,1.19,2493,3.432]],["body/controllers/QueuesDeleteController.html",[3,0.051,4,0.045,5,0.045,7,0.133,10,3.791,11,0.733,12,2.05,18,3.266,24,0.364,26,0.908,27,0.008,28,0.739,29,0.362,30,0.793,32,2.517,35,1.02,36,2.366,38,1.745,40,3.641,44,1.925,45,1.092,50,5.27,57,0.136,58,0.351,59,3.537,61,0.051,63,0.121,65,1.988,72,1.435,73,4.333,84,0.788,104,1.195,108,1.384,110,1.013,112,3.208,120,0.005,129,0.004,131,1.188,134,2.396,136,2.009,147,2.569,156,1.133,162,1.683,163,2.768,165,2.768,179,0.821,181,0.97,185,1.285,192,3.501,194,2.753,198,1.312,201,1.347,203,2.925,204,0.582,211,1.715,212,1.925,218,2.389,357,4.456,359,4.305,363,4.333,370,2.36,381,2.223,385,1.925,389,4.694,390,1.347,410,4.646,412,3.784,426,2.764,427,2.222,444,3.394,504,3.057,524,2.012,755,1.778,765,4.077,784,1.925,787,1.553,790,1.384,795,1.312,820,2.605,1062,1.384,1111,3.863,1418,1.778,1624,3.88,1960,3.057,1976,4.219,2178,4.859,2179,4.35,2182,3.385,2183,3.597,2186,2.368,2187,2.368,2189,5.502,2190,2.368,2193,2.368,2194,2.368,2195,2.368,2198,2.368,2201,2.228,2202,3.597,2207,2.368,2209,4.859,2210,2.368,2211,4.35,2214,2.368,2215,2.368,2216,2.368,2219,4.35,2223,3.597,2224,3.597,2225,3.597,2227,2.368,2269,3.208,2490,3.88,2493,3.597,2501,2.777,2512,2.543,2524,3.863,2529,2.543,2581,5.502,2582,2.777,2583,3.133,2584,5.755,2585,4.759,2586,3.133,2587,5.502,2588,3.133,2589,3.133,2590,3.133,2591,3.133,2592,3.133,2593,3.133,2594,3.133,2595,3.133,2596,3.133,2597,3.133,2598,3.133,2599,3.133,2600,3.133,2601,3.133,2602,3.133,2603,3.133,2604,3.133,2605,2.777,2606,3.133,2607,3.133,2608,3.133,2609,3.133,2610,3.133]],["title/classes/QueuesDeleteDto.html",[63,0.175,2587,3.432]],["body/classes/QueuesDeleteDto.html",[3,0.109,4,0.097,5,0.097,7,0.285,8,1.579,24,0.353,27,0.008,29,0.298,45,1.154,57,0.144,61,0.109,63,0.308,120,0.007,129,0.007,185,1.246,204,1.246,556,2.216,569,2.373,575,2.168,586,2.033,854,1.794,1636,5.135,2581,6.043,2587,6.043,2605,7.573,2611,5.944,2612,6.705,2613,6.705,2614,6.705,2615,6.705]],["title/injectables/QueuesDeleteService.html",[0,0.613,2490,3.061]],["body/injectables/QueuesDeleteService.html",[0,0.832,1,6.103,2,1.544,3,0.072,4,0.065,5,0.065,7,0.19,8,1.216,9,3.954,10,4.477,11,0.948,12,2.196,13,4.15,14,4.653,15,5.324,16,5.01,17,5.01,18,3.494,19,4.653,20,4.653,21,4.15,22,1.171,24,0.47,26,1.191,27,0.008,28,0.856,29,0.382,30,1.04,31,3.376,32,4.014,34,3.783,35,1.287,36,2.535,37,3.376,38,2.302,40,2.875,44,2.745,45,1.096,46,3.829,48,2.609,49,2.548,50,3.63,51,3.376,53,3.376,55,3.376,57,0.137,58,0.501,60,2.869,61,0.072,63,0.172,72,0.847,120,0.005,129,0.005,264,4.211,265,2.362,314,3.011,316,3.177,317,3.177,427,1.544,683,2.869,923,2.719,1382,4.378,2272,3.376,2273,3.376,2414,6.277,2490,4.15,2562,3.625,2563,3.625,2564,3.625,2565,3.625,2566,3.625,2567,3.625,2568,3.625,2569,3.625,2570,3.625,2571,3.625,2574,3.625,2575,3.625,2576,3.625,2577,3.625,2581,4.653,2616,3.959,2617,4.466,2618,4.466,2619,4.466,2620,4.466]],["title/controllers/QueuesQueryController.html",[179,1.19,2494,3.432]],["body/controllers/QueuesQueryController.html",[3,0.049,4,0.044,5,0.044,7,0.129,10,3.724,11,0.714,12,2.036,18,3.197,24,0.359,26,0.892,27,0.008,28,0.729,29,0.359,30,0.779,32,2.451,35,1.004,36,2.345,38,1.708,40,3.692,44,1.859,45,1.079,50,5.292,57,0.134,58,0.339,59,3.462,61,0.049,63,0.116,65,1.961,72,1.462,73,4.256,84,0.761,104,1.173,108,2.047,110,0.978,112,3.124,120,0.005,129,0.004,131,1.147,134,2.387,136,1.978,147,2.555,156,1.095,157,2.631,162,1.639,165,2.71,179,0.793,181,0.937,185,1.265,192,3.469,194,2.71,198,1.267,201,1.301,203,2.848,204,0.562,211,1.656,212,1.859,218,2.353,357,4.415,359,4.266,363,4.256,370,2.298,381,2.165,385,1.859,389,4.662,390,1.301,410,4.612,412,3.725,426,2.927,427,2.353,444,3.322,504,2.977,524,1.943,707,3.322,755,1.717,765,4.014,784,1.859,787,1.5,790,1.336,795,1.267,820,2.537,964,2.733,981,2.733,1062,1.336,1069,2.039,1075,2.039,1418,1.717,1624,3.797,1960,2.977,2099,2.456,2108,2.682,2125,4.108,2178,4.772,2179,4.258,2182,3.296,2183,3.503,2186,2.287,2187,2.287,2189,5.427,2190,2.287,2193,2.287,2194,2.287,2195,2.287,2198,2.287,2201,2.152,2202,3.503,2207,2.287,2209,4.772,2210,2.287,2211,4.258,2214,2.287,2215,2.287,2216,2.287,2219,4.258,2223,3.503,2224,3.503,2225,3.503,2227,2.287,2269,3.124,2364,3.462,2370,2.287,2494,3.503,2512,2.456,2524,3.762,2529,2.456,2621,4.84,2622,3.025,2623,5.633,2624,4.634,2625,3.025,2626,4.84,2627,3.025,2628,3.025,2629,3.025,2630,3.025,2631,3.025,2632,3.025,2633,3.025,2634,3.124,2635,3.124,2636,3.025,2637,3.025,2638,3.025,2639,3.025,2640,3.025,2641,3.025,2642,3.025,2643,3.025,2644,3.025,2645,3.025,2646,3.025,2647,3.025,2648,3.025,2649,3.025,2650,3.025,2651,3.025,2652,3.025,2653,4.634,2654,3.025,2655,3.025,2656,3.025]],["title/classes/QueuesQueryDto.html",[63,0.175,2626,3.061]],["body/classes/QueuesQueryDto.html",[3,0.074,4,0.066,5,0.066,7,0.195,8,1.238,24,0.33,27,0.008,29,0.279,45,1.327,46,2.846,48,2.321,49,2.268,57,0.113,61,0.116,63,0.296,84,1.932,110,2.027,120,0.005,129,0.005,185,1.165,194,3.056,204,0.852,556,2.072,569,2.761,572,3.501,575,1.483,586,2.81,604,3.697,701,6.15,707,4.212,854,1.227,1069,4.814,1084,3.852,1636,4.587,2249,4.053,2288,3.557,2289,3.557,2300,3.557,2301,3.557,2339,4.225,2340,5.314,2341,4.026,2342,4.026,2343,4.026,2344,3.852,2345,4.026,2346,3.852,2347,4.026,2348,3.852,2349,4.026,2350,4.026,2351,4.026,2352,4.026,2353,4.225,2354,4.225,2355,4.026,2356,3.697,2621,4.814,2626,4.225,2634,4.814,2635,4.814,2657,3.466,2658,6.268,2659,4.586,2660,4.586]],["title/classes/QueuesQuerySeriesDto.html",[63,0.175,2635,3.061]],["body/classes/QueuesQuerySeriesDto.html",[3,0.069,4,0.062,5,0.062,7,0.182,8,1.18,24,0.439,27,0.008,29,0.371,45,1.349,57,0.107,61,0.112,63,0.287,84,1.503,110,1.932,120,0.005,129,0.005,185,1.549,194,2.378,204,0.795,556,2.755,569,2.739,572,3.469,575,1.383,586,2.786,604,3.523,701,6.223,707,2.522,854,1.144,1069,2.883,1084,4.578,1636,4.421,2249,3.906,2288,3.39,2289,3.39,2300,3.39,2301,3.39,2339,4.026,2340,5.376,2341,3.836,2342,4.786,2343,3.836,2344,4.578,2345,3.836,2346,4.578,2347,3.836,2348,4.578,2349,3.836,2350,3.836,2351,3.836,2352,3.836,2353,4.026,2354,4.026,2355,3.836,2356,3.523,2443,3.232,2445,3.791,2447,3.791,2449,3.791,2451,3.791,2453,3.791,2621,5.732,2626,2.883,2634,4.026,2635,4.64,2657,3.232,2661,3.791,2662,4.276,2663,4.276,2664,4.276,2665,4.276,2666,4.276,2667,4.276,2668,4.276]],["title/injectables/QueuesQueryService.html",[0,0.613,2364,2.79]],["body/injectables/QueuesQueryService.html",[0,0.785,1,6.022,2,1.422,3,0.067,4,0.059,5,0.059,7,0.175,8,1.148,9,3.733,10,4.32,11,0.895,12,2.229,13,3.918,14,4.393,15,5.094,16,4.794,17,4.794,18,3.299,19,4.393,20,4.393,21,3.918,22,1.078,24,0.474,26,1.164,27,0.008,28,0.837,29,0.375,30,1.017,31,3.109,32,3.873,34,3.572,35,1.307,36,2.631,37,3.109,38,2.221,40,2.715,44,2.528,45,1.057,46,3.743,48,2.496,49,2.439,50,3.428,51,3.109,53,3.109,55,3.109,57,0.132,58,0.461,60,2.642,61,0.067,63,0.158,65,1.841,72,0.78,104,0.764,120,0.005,129,0.005,264,4.086,265,2.175,314,2.773,316,2.926,317,2.926,427,1.422,683,2.642,923,2.567,1382,4.134,2272,3.109,2273,3.109,2364,3.572,2414,6.173,2562,3.339,2563,3.339,2564,3.339,2565,3.339,2566,3.339,2567,3.339,2568,3.339,2569,3.339,2570,3.339,2571,3.339,2574,3.339,2575,3.339,2576,3.339,2577,3.339,2621,5.208,2669,3.646,2670,7.324,2671,7.324,2672,7.324,2673,4.113,2674,4.113,2675,4.113,2676,4.113,2677,4.113,2678,4.113,2679,4.113,2680,4.113,2681,4.113,2682,4.113,2683,4.113]],["title/classes/QueuesQueryStudyDto.html",[63,0.175,2634,3.061]],["body/classes/QueuesQueryStudyDto.html",[3,0.068,4,0.061,5,0.061,7,0.179,8,1.166,24,0.446,27,0.008,29,0.377,45,1.35,57,0.106,61,0.111,63,0.285,84,1.485,110,1.908,120,0.005,129,0.005,185,1.573,194,2.349,204,0.781,556,2.798,569,2.733,572,3.461,575,1.359,586,2.78,604,3.48,701,6.201,707,2.479,854,1.124,1069,2.833,1084,3.626,1636,4.38,2249,3.87,2288,4.196,2289,4.196,2300,4.196,2301,4.196,2339,3.977,2340,5.357,2341,3.79,2342,3.79,2343,3.79,2344,3.626,2345,3.79,2346,3.626,2347,3.79,2348,3.626,2349,3.79,2350,3.79,2351,3.79,2352,3.79,2353,3.977,2354,4.984,2355,3.79,2356,4.361,2443,3.176,2474,3.725,2477,3.725,2479,3.725,2481,3.725,2483,3.725,2485,3.725,2621,5.8,2626,2.833,2634,4.596,2635,3.977,2657,3.176,2661,3.725,2684,4.202,2685,4.202,2686,4.202,2687,4.202,2688,4.202,2689,4.202,2690,4.202,2691,4.202]],["title/guards/ReadAllGuard.html",[130,1.215,176,2.121]],["body/guards/ReadAllGuard.html",[0,1.173,3,0.06,4,0.053,5,0.053,7,0.157,11,0.828,24,0.195,26,0.521,27,0.008,28,0.375,29,0.164,30,0.455,35,0.545,57,0.097,58,0.414,61,0.141,63,0.331,72,1.744,104,1.596,120,0.004,129,0.004,130,2.323,131,1.4,132,1.546,133,1.952,134,0.968,135,4.443,136,2.742,137,1.587,138,4.752,139,3.608,140,3.545,141,3.519,143,1.47,144,2.689,145,1.83,146,3.506,147,2.496,148,3.692,149,4.7,150,2.021,151,1.776,152,1.83,153,2.021,154,1.776,155,2.021,156,1.336,157,1.724,158,2.021,159,1.83,160,1.83,161,2.021,162,1.305,163,1.776,164,2.021,165,1.776,166,1.83,167,1.83,168,2.021,169,1.83,170,1.889,171,2.021,172,1.336,173,1.83,174,2.021,175,2.666,176,2.512,177,2.021,2692,3.692]],["title/classes/RegisterDto.html",[63,0.175,376,3.432]],["body/classes/RegisterDto.html",[3,0.101,4,0.09,5,0.09,7,0.264,8,1.509,24,0.436,27,0.008,29,0.368,45,1.301,57,0.137,61,0.101,63,0.294,120,0.006,129,0.006,185,1.537,204,1.156,366,3.862,376,5.774,432,4.894,434,4.894,556,2.733,569,2.56,575,2.011,586,2.507,854,1.664,878,6.25,1017,6.2,2693,5.513,2694,6.219,2695,6.219,2696,6.219,2697,6.219,2698,6.219,2699,6.219,2700,6.219]],["title/entities/Role.html",[530,1.854,546,2.121]],["body/entities/Role.html",[3,0.061,4,0.055,5,0.055,7,0.161,8,1.08,24,0.464,27,0.008,28,0.952,29,0.392,30,0.674,45,0.79,46,1.715,48,3.26,57,0.148,61,0.126,63,0.145,84,2.172,110,2.999,120,0.005,129,0.005,137,3.352,144,2.856,151,3.596,156,2.705,159,3.187,162,2.644,166,3.707,169,3.187,172,2.326,175,3.187,185,1.636,194,2.178,204,0.702,530,2.233,546,2.554,547,2.427,556,2.91,566,5.36,568,1.669,569,2.634,586,2.669,887,3.265,904,2.547,1172,4.572,1175,2.547,1398,4.439,2701,3.349,2702,8.628,2703,3.778,2704,3.778,2705,5.469,2706,3.778,2707,5.469,2708,3.778,2709,5.469,2710,3.778,2711,3.778,2712,3.778,2713,3.778,2714,3.778,2715,3.778,2716,5.469,2717,3.778,2718,3.778,2719,3.778,2720,3.778,2721,3.778,2722,5.469,2723,3.778,2724,5.469,2725,5.469]],["title/controllers/RolesController.html",[179,1.19,2726,3.432]],["body/controllers/RolesController.html",[3,0.044,4,0.039,5,0.039,7,0.115,11,0.653,12,2.11,22,0.707,24,0.391,26,1.048,27,0.008,28,0.881,29,0.365,30,0.915,35,1.095,36,2.466,45,1.268,46,1.224,57,0.148,58,0.302,61,0.044,63,0.104,65,2.317,72,0.804,104,1.199,110,1.37,120,0.003,129,0.003,131,1.022,134,2.406,136,0.783,156,0.975,162,2.281,179,0.707,181,0.835,185,1.379,192,3.647,198,1.129,201,1.159,204,0.501,211,1.475,212,1.656,218,2.565,296,1.917,298,4.221,299,2.188,349,2.722,351,3.439,357,4.55,359,4.486,370,2.596,381,1.979,385,1.656,386,1.817,387,4.249,389,4.718,390,1.159,398,2.168,399,1.731,409,1.939,410,4.682,412,4.061,426,2.774,427,2.23,436,4.039,444,1.59,445,3.756,530,3.394,586,0.817,755,1.53,765,4.377,766,2.319,784,1.656,787,1.336,790,1.191,791,2.188,817,2.856,820,2.319,821,4.144,887,3.391,894,2.101,904,1.817,983,5.912,1062,2.312,1075,2.856,1169,3.203,1172,3.014,1174,3.756,1399,5.096,1408,2.037,1413,2.604,1415,2.389,1418,3.661,1429,2.037,1591,1.917,1753,2.188,1900,2.037,1960,3.363,2182,3.014,2201,1.917,2726,3.203,2727,2.389,2728,5.235,2729,5.235,2730,4.237,2731,3.756,2732,3.756,2733,5.235,2734,2.695,2735,7.164,2736,2.695,2737,2.695,2738,2.695,2739,2.695,2740,2.695,2741,2.695,2742,2.695,2743,2.695,2744,2.695,2745,2.695,2746,2.695,2747,5.177,2748,2.695,2749,2.695,2750,2.695,2751,2.695,2752,2.695,2753,2.389,2754,2.695,2755,2.695,2756,2.695,2757,2.695,2758,2.695,2759,2.389,2760,2.695,2761,2.695,2762,2.389,2763,2.389,2764,2.188,2765,2.695,2766,2.695,2767,2.695,2768,2.695,2769,2.389,2770,2.695,2771,2.389,2772,2.695,2773,2.695,2774,2.695,2775,2.695,2776,2.695,2777,2.695,2778,4.237,2779,2.695,2780,2.695,2781,2.695,2782,2.695,2783,2.695,2784,2.695,2785,2.695,2786,2.695,2787,2.695,2788,2.695,2789,2.695,2790,2.695,2791,2.389,2792,2.695,2793,2.695,2794,2.695,2795,2.695,2796,2.695,2797,2.695,2798,2.695,2799,2.695,2800,4.237,2801,4.237,2802,2.695,2803,2.695,2804,2.695,2805,2.695,2806,2.695,2807,2.695,2808,2.695,2809,2.695,2810,2.695,2811,2.695,2812,2.695]],["title/modules/RolesModule.html",[222,1.535,243,3.061]],["body/modules/RolesModule.html",[3,0.093,4,0.083,5,0.083,27,0.008,57,0.165,58,0.646,61,0.093,63,0.222,120,0.006,129,0.006,136,2.118,181,2.257,222,2.7,224,2.617,225,2.692,226,2.858,227,2.858,228,2.858,229,3.961,230,3.843,243,6.265,248,3.612,249,2.858,250,2.858,252,2.858,261,3.271,262,2.546,398,4.525,399,3.702,485,4.357,530,2.353,887,3.052,894,4.632,1175,3.886,1413,5.434,2726,6.038,2762,5.11,2763,5.11,2764,4.679,2813,5.11,2814,5.11,2815,5.11,2816,5.764,2817,5.764,2818,5.764]],["title/injectables/RolesService.html",[0,0.613,894,2.251]],["body/injectables/RolesService.html",[0,0.666,2,1.135,3,0.053,4,0.047,5,0.047,7,0.14,11,0.76,12,2.21,22,1.293,24,0.447,26,1.143,27,0.008,28,0.924,29,0.36,30,0.998,35,1.235,36,2.614,45,1.33,57,0.138,58,0.368,61,0.096,63,0.126,65,2.364,72,1.458,84,2.273,104,1.311,108,1.451,110,1.062,120,0.004,129,0.004,136,1.722,137,2.831,151,2.372,156,1.785,159,2.446,162,1.744,166,2.446,169,2.446,172,1.785,175,2.446,199,3.031,262,1.451,386,2.214,409,1.827,426,1.412,427,1.135,436,4.371,444,1.937,530,3.59,568,1.451,766,2.7,817,4.439,820,2.7,821,3.168,823,4.724,843,2.11,887,2.066,894,2.446,898,5.753,904,3.325,1172,5.271,1175,2.214,1428,2.911,1429,2.482,1438,4.372,1442,5.25,1451,2.911,1587,2.214,1669,4.683,1687,2.482,1688,2.482,2732,4.372,2753,4.372,2759,4.372,2764,2.666,2819,2.911,2820,4.932,2821,6.584,2822,4.932,2823,4.932,2824,3.284,2825,3.284,2826,4.932,2827,4.932,2828,3.284,2829,4.932,2830,3.284,2831,3.284,2832,3.284,2833,4.932,2834,3.284,2835,3.284,2836,4.932,2837,3.284,2838,4.932,2839,3.284,2840,4.932,2841,3.284,2842,3.284,2843,3.284,2844,3.284,2845,4.932,2846,4.932,2847,5.837,2848,3.284,2849,3.284,2850,5.923,2851,3.284,2852,3.284,2853,5.923,2854,3.284,2855,3.284,2856,3.284,2857,4.932,2858,3.284,2859,4.932,2860,3.284]],["title/classes/Router.html",[63,0.175,551,2.916]],["body/classes/Router.html",[3,0.069,4,0.062,5,0.062,7,0.182,8,1.181,24,0.363,27,0.008,28,0.94,29,0.4,38,2.088,45,0.994,49,2.838,57,0.146,61,0.121,63,0.313,84,1.505,120,0.005,123,2.067,129,0.005,144,1.326,172,1.55,185,1.28,204,0.796,546,2.793,548,3.046,549,4.252,550,3.046,551,5.218,555,3.674,556,2.277,557,5.206,566,5.562,567,4.03,568,1.892,569,2.702,570,3.526,571,2.431,572,2.612,573,2.632,574,5.635,575,1.385,576,5.287,577,4.03,578,5.302,579,5.476,580,5.026,581,2.751,582,2.632,583,2.751,584,3.237,585,4.789,586,2.579,587,4.519,588,3.237,589,3.237,590,4.252,591,3.237,592,3.237,593,3.237,594,4.519,595,3.237,596,5.218,597,4.519,598,3.237,599,3.237,600,3.237,601,3.237,602,5.578,603,5.206,604,3.526,605,5.928,606,3.046,607,3.237,608,3.046,854,1.146,2861,5.979,2862,5.979,2863,4.283,2864,4.283,2865,4.283,2866,4.283]],["title/classes/Rule.html",[63,0.175,585,2.916]],["body/classes/Rule.html",[3,0.069,4,0.061,5,0.061,7,0.18,8,1.173,24,0.391,27,0.008,28,0.939,29,0.396,38,2.25,45,1.072,49,3.008,57,0.146,61,0.12,63,0.312,84,1.494,120,0.005,123,2.052,129,0.005,144,1.313,172,1.534,185,1.379,204,0.788,546,2.773,548,3.015,549,4.222,550,3.015,551,5.019,552,3.441,555,3.648,556,2.265,557,5.178,566,5.554,567,4.002,568,1.872,569,2.698,570,3.501,571,2.406,572,2.598,573,2.605,574,5.61,575,1.371,576,5.719,577,4.002,578,5.913,579,4.618,580,5.604,581,2.723,582,2.605,583,2.723,584,3.204,585,4.767,586,2.572,587,4.487,588,3.204,589,3.204,590,4.222,591,3.204,592,3.204,593,3.204,594,4.487,595,3.204,596,5.019,597,4.487,598,3.204,599,3.204,600,3.204,601,3.204,602,4.222,603,5.178,604,3.501,605,4.487,606,3.015,607,3.204,608,3.015,854,1.134,2867,4.239,2868,4.239,2869,4.239,2870,4.239,2871,4.239,2872,4.239,2873,4.239,2874,4.239]],["title/modules/SeederModule.html",[222,1.535,244,3.229]],["body/modules/SeederModule.html",[3,0.087,4,0.078,5,0.078,27,0.008,57,0.167,58,0.603,61,0.087,63,0.207,120,0.006,129,0.006,136,2.027,172,2.523,181,1.667,222,2.614,224,2.443,225,2.514,226,2.668,227,2.668,228,2.668,229,3.835,230,2.588,244,6.643,248,3.457,249,2.668,250,2.668,252,2.668,261,3.054,262,2.377,279,3.957,280,3.687,398,4.444,399,3.456,477,4.753,485,4.067,490,4.478,491,4.067,494,3.456,530,2.847,887,2.92,894,4.306,897,3.456,1175,3.627,1187,4.067,1251,3.957,1750,5.337,2371,4.368,2875,4.77,2876,4.77,2877,6.177,2878,5.381,2879,5.381,2880,4.77,2881,5.381,2882,5.381]],["title/injectables/SeederService.html",[0,0.613,2877,3.229]],["body/injectables/SeederService.html",[0,0.992,2,2.016,3,0.095,4,0.084,5,0.084,7,0.248,11,1.131,12,1.903,22,1.924,24,0.387,26,0.824,27,0.008,28,0.592,29,0.26,30,0.719,35,0.861,57,0.156,58,0.654,61,0.095,63,0.225,65,2.302,120,0.006,129,0.006,199,4.446,279,3.311,280,3.085,398,4.607,399,3.747,409,3.122,477,4.928,494,3.747,893,4.735,894,4.398,897,3.747,1062,3.724,1669,5.996,1750,5.181,1756,7.121,2877,5.221,2880,5.171,2883,5.171,2884,5.833,2885,5.833,2886,5.833,2887,5.833,2888,5.833,2889,5.833]],["title/injectables/SeriesGuard.html",[0,0.613,207,2.916]],["body/injectables/SeriesGuard.html",[0,0.981,2,1.981,3,0.093,4,0.083,5,0.083,7,0.244,11,1.118,12,1.887,24,0.302,26,0.809,27,0.008,28,0.582,29,0.255,30,0.707,35,0.845,36,2.11,57,0.143,58,0.643,61,0.093,63,0.221,65,1.565,72,1.589,104,1.349,108,2.531,110,1.853,120,0.006,129,0.006,130,1.942,134,1.502,136,2.11,139,2.964,140,2.964,141,3.335,143,2.282,147,1.666,148,2.464,205,4.896,207,4.662,530,3.253,658,5.486,707,4.281,736,3.599,887,3.337,889,5.163,900,4.893,901,3.863,908,4.662,911,4.331,923,3.206,964,4.699,1029,5.892,1033,5.486,1059,4.893,1060,4.331,1113,5.892,1114,5.079,1115,3.863,1117,4.651,1123,4.331,1282,6.435,1284,5.079,2890,5.079,2891,5.73]],["title/guards/StudyGuard.html",[130,1.215,205,2.79]],["body/guards/StudyGuard.html",[0,0.972,3,0.092,4,0.082,5,0.082,7,0.24,9,4.622,11,1.108,12,1.875,22,1.886,24,0.379,26,1.016,27,0.008,28,0.73,29,0.32,30,0.888,35,0.834,36,2.092,57,0.15,58,0.634,61,0.092,63,0.218,72,1.502,104,1.05,120,0.006,129,0.006,130,1.925,132,2.368,134,1.482,136,2.092,139,3.403,140,2.938,141,3.318,143,2.251,146,2.308,147,1.643,148,2.43,205,4.422,530,3.232,630,3.745,658,5.439,679,2.64,680,2.64,736,2.802,887,3.316,893,4.588,894,4.362,897,3.631,900,4.851,901,3.81,908,4.622,911,4.272,964,3.334,1033,5.439,1059,4.851,1060,4.272,1123,4.272,2892,5.01,2893,7.196,2894,5.652,2895,5.652]],["title/classes/TagAnon.html",[63,0.175,2896,3.686]],["body/classes/TagAnon.html",[3,0.094,4,0.084,5,0.084,7,0.247,8,1.446,22,1.919,24,0.444,26,0.821,27,0.008,28,0.59,29,0.375,30,0.717,38,2.631,45,1.335,46,4.023,48,2.152,57,0.105,61,0.094,63,0.224,120,0.006,129,0.006,686,2.973,854,1.554,2896,5.944,2897,7.693,2898,5.15,2899,8.995,2900,8.86,2901,8.995,2902,5.81,2903,7.854,2904,7.322,2905,5.81,2906,5.81,2907,5.81,2908,5.81,2909,5.81]],["title/modules/TasksModule.html",[222,1.535,245,3.229]],["body/modules/TasksModule.html",[3,0.093,4,0.083,5,0.083,27,0.008,57,0.161,58,0.641,61,0.093,63,0.22,120,0.006,129,0.006,156,2.069,222,2.69,224,2.596,225,2.671,226,2.835,227,2.835,228,2.835,229,3.947,230,3.829,245,6.692,248,3.594,249,2.835,250,2.835,252,2.835,261,3.246,262,2.526,630,3.696,679,2.671,680,2.671,1251,3.246,1281,4.642,1771,5.069,2079,6.637,2358,6.637,2364,5.423,2369,5.069,2370,4.322,2371,4.642,2910,5.069,2911,5.069,2912,5.069,2913,5.719,2914,5.719,2915,5.719]],["title/classes/TmtvJobDto.html",[63,0.175,2246,3.432]],["body/classes/TmtvJobDto.html",[3,0.09,4,0.08,5,0.08,7,0.236,8,1.406,24,0.436,27,0.008,29,0.369,45,1.196,48,2.636,57,0.141,61,0.115,63,0.302,84,2.084,110,2.678,120,0.006,129,0.006,144,2.204,185,1.539,194,3.487,204,1.032,569,2.643,570,4.197,571,3.153,572,2.978,575,1.797,684,5.935,685,5.294,686,2.843,726,4.509,728,3.745,729,5.935,730,5.935,731,6.374,734,6.374,854,1.486,953,4.925,995,4.798,1173,6.721,2181,3.745,2241,6.471,2242,4.509,2243,3.951,2246,5.935,2249,4.039,2250,4.925,2251,4.925,2916,5.555,2917,5.555,2918,5.555,2919,5.555,2920,5.555]],["title/classes/TmtvService.html",[63,0.175,2921,3.686]],["body/classes/TmtvService.html",[3,0.056,4,0.05,5,0.05,7,0.148,8,1.017,11,0.793,12,2.127,22,1.35,24,0.468,26,0.957,27,0.008,28,0.688,29,0.372,30,0.836,35,1.212,36,1.969,45,1.263,48,1.907,49,1.863,57,0.141,61,0.056,63,0.134,65,2.344,72,1.526,84,1.543,104,1.139,107,4.565,110,2.191,120,0.004,129,0.004,144,1.899,247,5.282,258,3.165,273,2.825,409,3.357,427,1.78,630,3.172,679,1.626,680,1.626,685,2.346,686,1.781,707,3.037,719,6.006,722,6.006,729,4.634,730,4.634,736,2.553,854,0.931,1041,2.825,1062,2.275,1111,5.5,1522,4.634,1525,4.565,1568,4.565,1570,3.085,1572,6.411,1574,3.085,2230,5.466,2921,4.18,2922,3.085,2923,6.13,2924,6.775,2925,6.775,2926,6.775,2927,5.15,2928,6.775,2929,6.775,2930,6.775,2931,5.15,2932,5.15,2933,5.15,2934,3.48,2935,3.48,2936,3.48,2937,3.48,2938,3.48,2939,3.48,2940,3.48,2941,3.48,2942,5.15,2943,3.48,2944,5.15,2945,3.48,2946,3.48,2947,3.48,2948,5.15,2949,3.48,2950,5.15,2951,3.48,2952,3.48,2953,3.48,2954,3.48,2955,3.48,2956,3.48,2957,3.48,2958,6.13,2959,3.48,2960,5.15,2961,3.48,2962,5.15,2963,3.48,2964,5.15,2965,7.572,2966,3.48,2967,5.15,2968,3.48,2969,3.48,2970,3.48,2971,5.15,2972,3.48,2973,3.48,2974,5.15,2975,3.48,2976,3.48,2977,3.48,2978,6.13,2979,3.48,2980,3.48,2981,3.48,2982,3.48,2983,3.48,2984,5.15,2985,3.48,2986,3.48,2987,3.48,2988,5.15,2989,3.48,2990,3.48,2991,3.48,2992,3.48,2993,3.48,2994,3.48,2995,3.48,2996,3.48,2997,3.48,2998,3.48,2999,3.48,3000,3.48,3001,3.48]],["title/classes/UpdateOptionDto.html",[63,0.175,1745,3.229]],["body/classes/UpdateOptionDto.html",[3,0.114,4,0.102,5,0.102,27,0.008,57,0.148,61,0.114,63,0.271,120,0.007,129,0.007,204,1.306,766,3.847,854,1.88,923,3.631,926,4.999,928,5.312,1154,7.287,1167,5.705,1168,5.312,1745,5.847,3002,6.23]],["title/classes/UpdateUserDto.html",[63,0.175,3003,3.432]],["body/classes/UpdateUserDto.html",[3,0.093,4,0.083,5,0.083,7,0.244,8,1.437,24,0.442,27,0.008,29,0.373,45,1.311,57,0.131,61,0.093,63,0.28,84,2.111,120,0.006,129,0.006,137,3.129,185,1.559,194,3.616,204,1.069,366,3.728,432,4.53,434,4.53,436,4.708,556,2.773,569,2.568,572,3.281,575,1.86,586,2.543,854,1.539,995,5.655,1001,4.348,1004,5.099,1005,5.5,1006,5.099,1007,5.5,1008,5.099,1016,5.099,3003,5.5,3004,7.67,3005,7.277]],["title/entities/User.html",[136,1.32,546,2.121]],["body/entities/User.html",[3,0.074,4,0.066,5,0.066,7,0.194,8,1.233,24,0.462,27,0.008,28,0.889,29,0.39,30,1.065,38,1.892,45,1.302,57,0.138,61,0.074,63,0.24,84,2.23,110,2.018,120,0.005,123,2.772,129,0.005,136,1.814,137,1.959,185,1.628,204,0.847,218,2.46,322,3.917,366,3.746,432,4.551,434,4.551,436,4.198,530,3.576,538,4.439,546,2.915,547,2.927,556,2.531,560,4.04,566,5.306,567,4.207,568,2.013,569,2.6,582,2.8,586,2.321,1002,3.699,1005,3.444,1007,3.444,1187,3.444,1739,5.533,3006,4.04,3007,7.118,3008,4.557,3009,4.557,3010,4.557,3011,4.557,3012,4.557,3013,4.557,3014,4.557,3015,4.557,3016,4.557,3017,4.557,3018,4.557,3019,4.557,3020,7.656,3021,4.557,3022,4.557,3023,7.118,3024,8.019,3025,4.557,3026,6.241,3027,4.557,3028,4.557,3029,6.241,3030,6.241,3031,4.557]],["title/interfaces/UserInfoResponse.html",[1352,3.061,1353,3.432]],["body/interfaces/UserInfoResponse.html",[0,0.815,3,0.07,4,0.063,5,0.063,7,0.184,8,1.192,12,1.867,22,1.138,27,0.008,28,0.761,29,0.372,32,3.191,36,2.291,45,1.347,57,0.151,58,0.487,61,0.07,63,0.167,65,2.331,72,1.619,104,1.465,120,0.005,129,0.005,144,2.149,216,2.926,218,2.592,279,2.463,280,2.295,366,3.681,384,3.28,409,2.569,423,5.631,425,3.523,426,3.224,427,2.592,428,5.631,432,2.463,434,2.463,474,2.926,477,3.797,481,3.087,483,3.28,494,2.788,496,3.708,510,5.631,528,6.086,923,1.917,1062,3.064,1115,4.068,1236,2.221,1238,3.523,1264,4.561,1308,2.667,1311,2.788,1320,2.926,1324,3.523,1325,3.523,1326,3.28,1332,6.15,1334,3.847,1336,5.349,1337,3.847,1340,3.847,1342,3.847,1344,3.847,1346,3.28,1347,3.087,1348,3.28,1349,4.561,1350,6.15,1351,3.087,1352,2.926,1353,4.561,1354,6.647,1355,6.647,1356,6.647,1357,6.647,1358,5.349,1359,3.847,1360,3.847,1361,3.847,1362,3.847,1363,3.847,1364,3.087,1365,3.847,1366,3.847,1367,3.847,1368,3.847,1369,3.847,1370,3.847,1371,3.847,1372,3.847,1373,3.847,1374,3.847,1375,3.847,1376,3.847,1377,3.847,1378,3.847,1379,3.847,1380,3.847,1786,3.523]],["title/controllers/UsersController.html",[179,1.19,3032,3.432]],["body/controllers/UsersController.html",[3,0.05,4,0.045,5,0.045,7,0.132,11,0.73,12,2.047,22,0.816,24,0.363,26,0.905,27,0.008,28,0.65,29,0.346,30,0.79,35,1.017,36,2.362,38,2.416,57,0.151,58,0.349,61,0.05,63,0.12,65,2.288,72,1.432,104,1.281,120,0.004,123,2.896,129,0.004,131,1.18,134,2.394,136,2.49,147,1.377,162,2.437,179,0.816,181,0.964,185,1.281,192,3.495,198,1.304,201,1.338,204,0.578,211,1.704,212,1.913,218,2.383,295,4.557,296,2.214,297,2.759,322,1.593,349,3.042,351,5.2,352,5.68,357,4.258,359,4.298,366,2.212,370,2.348,377,3.844,381,2.212,385,1.913,386,2.098,389,4.688,390,1.338,398,2.423,409,1.754,410,4.64,412,3.773,426,2.964,427,2.51,432,2.688,434,2.688,436,2.793,438,2.759,444,2.793,469,3.844,505,5.082,524,1.999,529,5.082,530,2.616,531,5.082,755,1.767,765,4.066,766,2.592,784,1.913,787,1.543,790,1.375,791,2.526,800,2.759,821,4.428,841,2.526,894,2.348,897,1.999,999,4.843,1062,2.092,1075,3.865,1176,4.333,1408,2.353,1418,2.688,1591,2.214,1624,2.098,1752,2.526,1753,2.526,1900,2.353,1960,3.682,2129,2.759,2769,2.759,2771,2.759,2791,4.198,3003,4.843,3032,3.58,3033,2.759,3034,4.736,3035,6.407,3036,4.736,3037,3.112,3038,5.733,3039,4.736,3040,3.112,3041,3.112,3042,7.261,3043,3.112,3044,3.112,3045,3.112,3046,3.112,3047,3.112,3048,3.112,3049,3.112,3050,3.112,3051,3.112,3052,3.112,3053,2.759,3054,2.526,3055,5.733,3056,2.353,3057,3.112,3058,3.112,3059,3.112,3060,3.112,3061,3.112,3062,5.733,3063,5.733,3064,4.736,3065,3.112,3066,3.112,3067,4.736,3068,3.112,3069,4.198,3070,3.112,3071,3.112,3072,3.112,3073,7.261,3074,4.736,3075,3.112,3076,4.736,3077,3.112,3078,3.112,3079,3.112,3080,3.112,3081,3.112,3082,3.112,3083,3.112,3084,3.112,3085,3.112,3086,3.112]],["title/modules/UsersModule.html",[222,1.535,246,3.061]],["body/modules/UsersModule.html",[3,0.098,4,0.087,5,0.087,27,0.008,57,0.165,58,0.679,61,0.098,63,0.233,120,0.006,129,0.006,136,1.759,181,2.326,222,2.761,224,2.747,225,2.826,226,3,227,3,228,3,229,4.05,230,2.91,246,6.182,248,3.724,249,3,250,3,252,3,261,3.434,262,2.673,398,4.58,502,5.364,530,3.067,887,3.146,894,4.438,897,3.887,1175,4.079,1187,4.574,3032,6.174,3053,5.364,3054,4.911,3087,6.051,3088,6.051,3089,6.051,3090,6.051]],["title/injectables/UsersService.html",[0,0.613,398,2.323]],["body/injectables/UsersService.html",[0,0.676,2,1.156,3,0.054,4,0.048,5,0.048,7,0.142,11,0.77,12,2.201,22,1.311,24,0.443,26,1.148,27,0.008,28,0.825,29,0.362,30,1.003,35,1.221,36,2.595,38,2.655,45,1.174,46,3.017,48,1.852,49,1.809,57,0.128,58,0.375,61,0.054,63,0.129,65,2.372,72,1.594,84,1.878,104,1.437,110,1.082,120,0.004,123,2.81,129,0.004,136,2.66,137,2.857,144,2.311,199,3.064,262,1.477,322,3.064,366,3.613,398,2.558,409,1.239,426,1.438,427,1.156,432,2.838,434,2.838,436,4.195,456,4.86,524,2.148,530,2.445,568,1.477,766,2.737,817,4.479,820,2.737,821,3.212,823,4.083,839,4.432,841,4.058,843,2.148,852,2.965,981,1.973,1075,2.255,1587,2.255,1591,2.379,1669,4.726,1687,2.528,1688,2.528,2731,4.432,2847,5.308,3054,2.715,3056,2.528,3069,2.965,3091,2.965,3092,5.988,3093,5,3094,5,3095,5,3096,3.344,3097,3.344,3098,5,3099,5,3100,3.344,3101,3.344,3102,5,3103,7.952,3104,3.344,3105,3.344,3106,3.344,3107,5,3108,3.344,3109,5,3110,3.344,3111,3.344,3112,3.344,3113,3.344,3114,5,3115,3.344,3116,3.344,3117,3.344,3118,3.344,3119,3.344,3120,3.344,3121,5.988,3122,3.344,3123,5,3124,3.344,3125,5,3126,3.344,3127,5,3128,3.344,3129,3.344,3130,5,3131,3.344,3132,5,3133,3.344,3134,5,3135,3.344,3136,3.344,3137,3.344]],["title/classes/WithLabels.html",[63,0.175,2747,3.432]],["body/classes/WithLabels.html",[3,0.1,4,0.089,5,0.089,7,0.263,8,1.503,24,0.326,27,0.008,29,0.275,48,2.289,49,3.113,57,0.148,61,0.1,63,0.317,84,2.075,104,1.148,110,2.461,120,0.006,129,0.006,144,2.357,185,1.148,204,1.148,569,2.259,570,4.488,575,1.998,582,3.797,586,1.873,798,6.745,854,1.653,967,5.016,2747,6.678,3138,6.745,3139,5.478,3140,6.179,3141,6.179,3142,7.609,3143,6.179,3144,7.609]],["title/coverage.html",[3145,5.053]],["body/coverage.html",[0,1.196,1,1.503,5,0.032,6,1.977,27,0.008,29,0.099,63,0.35,120,0.003,123,1.258,129,0.003,130,2.203,131,0.846,133,3.988,136,1.547,145,1.106,152,1.106,154,1.072,157,1.041,160,1.106,163,1.072,167,1.106,170,1.141,172,0.807,173,1.106,176,1.041,179,2.214,180,1.685,182,1.977,199,1.141,205,1.37,207,1.432,209,1.586,211,1.22,247,1.503,266,1.81,270,1.685,280,2.815,295,1.586,298,1.586,336,1.685,337,1.977,347,1.685,365,1.685,376,1.685,391,1.685,393,1.685,396,1.432,398,1.141,400,1.685,404,1.503,427,0.771,474,1.503,475,1.586,476,1.586,477,1.22,488,1.685,490,1.432,503,1.977,521,1.81,522,1.81,523,1.81,530,1.486,546,2.939,548,3.786,551,1.432,583,1.432,585,1.432,596,1.432,609,1.586,610,1.977,628,1.432,629,1.37,630,0.934,636,1.685,675,1.81,728,1.503,753,1.685,754,1.977,764,1.685,816,1.977,855,1.977,856,2.954,885,1.685,886,3.786,887,1.932,888,2.954,894,1.106,906,1.977,913,1.685,914,1.977,921,1.977,922,1.977,926,1.586,927,1.977,928,3.486,977,1.81,981,5.662,982,1.586,983,1.586,984,1.977,985,2.954,999,1.685,1000,1.977,1001,3.486,1024,1.586,1025,1.977,1026,1.977,1059,1.503,1152,1.685,1153,1.977,1169,1.685,1170,1.977,1176,1.685,1177,1.977,1189,1.81,1190,1.977,1251,1.265,1280,1.977,1286,1.977,1287,1.977,1299,1.977,1309,1.81,1317,1.977,1318,1.977,1324,2.954,1325,2.954,1352,2.454,1353,1.685,1381,1.977,1395,1.977,1399,1.586,1400,1.977,1402,1.685,1403,1.977,1413,1.37,1437,1.977,1458,1.977,1461,1.977,1470,1.977,1477,1.977,1505,1.977,1522,1.685,1523,1.977,1524,1.977,1583,1.977,1584,1.977,1599,3.588,1600,1.977,1616,1.685,1617,1.977,1622,1.586,1655,1.977,1666,1.977,1691,1.977,1740,1.685,1741,1.977,1745,1.586,1750,1.37,1772,1.977,1785,1.685,1787,2.954,1804,7.045,1838,1.685,1839,4.079,1840,1.977,1901,1.265,1920,1.685,1921,1.977,1961,1.685,1962,1.977,1979,1.977,1980,1.977,1994,1.685,1995,1.977,2034,1.685,2035,1.977,2046,1.685,2047,1.977,2068,1.685,2069,1.685,2077,1.685,2079,1.586,2080,1.977,2081,1.977,2099,2.954,2111,1.503,2118,1.503,2119,1.503,2121,3.28,2152,1.977,2175,1.685,2176,1.977,2181,1.503,2230,1.685,2231,1.977,2241,3.486,2242,2.954,2246,1.685,2256,1.977,2269,1.503,2281,1.586,2282,3.486,2283,1.977,2333,3.486,2334,3.486,2358,1.586,2359,1.977,2360,1.977,2364,1.37,2372,1.81,2374,1.81,2390,1.81,2391,2.954,2392,1.977,2455,1.81,2456,1.977,2489,1.503,2490,1.503,2492,1.685,2493,1.685,2494,1.685,2502,3.786,2503,1.977,2508,1.586,2536,1.685,2537,2.954,2560,1.977,2581,3.486,2582,1.977,2587,1.685,2611,1.977,2616,1.977,2621,3.954,2626,1.503,2634,1.503,2635,1.503,2657,3.486,2669,1.977,2693,1.977,2701,1.977,2726,1.685,2727,1.977,2747,1.685,2819,1.977,2877,1.586,2883,1.977,2890,1.977,2892,1.977,2896,1.81,2897,1.977,2898,1.977,2921,1.81,2922,1.977,3002,1.977,3003,1.685,3004,1.977,3006,1.977,3032,1.685,3033,1.977,3056,1.685,3091,1.977,3138,1.977,3139,1.977,3145,1.81,3146,2.23,3147,2.23,3148,2.23,3149,7.947,3150,6.638,3151,2.23,3152,4.612,3153,3.64,3154,7.162,3155,6.923,3156,6.638,3157,6.923,3158,5.865,3159,8.939,3160,2.23,3161,2.23,3162,1.977,3163,7.541,3164,1.977,3165,1.977,3166,6.292,3167,2.23,3168,7.828,3169,7.828,3170,4.612,3171,4.612,3172,1.977,3173,4.088,3174,1.977,3175,1.977,3176,1.977,3177,2.23,3178,3.64,3179,2.23,3180,2.23,3181,2.23,3182,1.977,3183,5.865,3184,4.612,3185,6.638,3186,3.226,3187,1.977,3188,2.23,3189,3.226,3190,1.977,3191,1.977,3192,1.977,3193,1.977,3194,4.088,3195,1.977,3196,1.977,3197,1.977,3198,3.64,3199,1.977,3200,1.977,3201,1.977,3202,1.977,3203,2.23,3204,1.977,3205,1.977,3206,1.977,3207,2.23,3208,2.23,3209,2.23,3210,5.199,3211,2.23,3212,2.23,3213,2.23,3214,2.23]],["title/dependencies.html",[225,2.555,3215,3.349]],["body/dependencies.html",[27,0.008,58,0.64,60,3.666,63,0.279,120,0.006,129,0.006,204,1.061,225,2.666,262,2.521,265,3.018,269,4.059,277,4.314,283,4.059,284,4.059,313,5.06,419,5.06,481,4.059,483,4.314,492,4.059,568,2.521,575,1.846,582,3.507,681,5.06,1100,5.06,1235,5.06,1237,3.239,1308,3.507,1347,6.139,1348,4.314,1349,4.314,1351,4.059,1466,5.06,1484,4.633,1485,4.633,3216,5.707,3217,5.707,3218,5.707,3219,5.707,3220,7.953,3221,5.707,3222,5.707,3223,5.707,3224,5.707,3225,5.707,3226,5.707,3227,5.707,3228,5.707,3229,5.707,3230,5.707,3231,5.707,3232,5.707,3233,5.707,3234,5.707,3235,5.707,3236,5.707,3237,5.707,3238,5.707,3239,5.707,3240,5.707,3241,5.707,3242,5.707,3243,5.707,3244,5.707,3245,5.707,3246,5.707,3247,5.707,3248,5.707,3249,5.707,3250,5.707,3251,5.707,3252,5.707,3253,5.707,3254,5.707,3255,5.707,3256,5.707,3257,5.707,3258,5.707,3259,5.707,3260,5.707,3261,5.707,3262,5.707,3263,5.707]],["title/miscellaneous/enumerations.html",[3264,2.547,3265,4.848]],["body/miscellaneous/enumerations.html",[7,0.166,27,0.008,38,1.701,45,0.81,49,3.516,120,0.005,129,0.005,538,3.991,555,3.448,576,3.782,577,3.782,578,3.991,579,3.782,580,3.782,657,4.974,684,4.241,685,3.782,701,3.991,707,3.868,728,3.782,739,4.974,820,3.071,964,2.309,1066,4.974,1069,3.782,1984,3.47,2123,3.448,2284,2.959,2288,2.222,2289,2.222,2290,2.959,2300,2.222,2301,2.222,2340,3.448,2341,2.515,2342,2.515,2343,2.515,2344,2.406,2345,2.515,2346,2.406,2347,2.515,2348,2.406,2349,2.515,2350,2.515,2351,2.515,2352,2.515,2355,2.515,2356,2.309,2903,4.974,3264,2.639,3265,3.47,3266,8.125,3267,7.162,3268,3.915,3269,3.915,3270,3.915,3271,3.915,3272,3.915,3273,3.915,3274,3.915,3275,3.915,3276,3.915,3277,3.915,3278,3.915,3279,3.915,3280,3.915,3281,3.915,3282,5.611,3283,5.611,3284,5.611,3285,5.611,3286,5.611,3287,3.915,3288,3.915,3289,3.915,3290,3.915,3291,3.915,3292,3.915,3293,3.915,3294,3.915,3295,3.915,3296,3.47,3297,3.915,3298,3.915,3299,3.915,3300,3.915,3301,3.915,3302,3.915,3303,3.915,3304,3.915,3305,3.915,3306,3.915,3307,3.915,3308,3.915,3309,5.611,3310,3.915,3311,3.915,3312,3.915,3313,3.915,3314,3.915,3315,3.915,3316,3.915,3317,3.915,3318,3.915,3319,3.915,3320,3.915,3321,3.915,3322,3.915,3323,3.915,3324,3.915,3325,3.915,3326,3.915,3327,3.915,3328,3.915,3329,3.915,3330,3.915,3331,3.915,3332,3.915,3333,3.915,3334,3.915,3335,3.915,3336,3.915,3337,3.915,3338,3.915,3339,3.915,3340,3.915,3341,3.915,3342,3.915,3343,3.915,3344,3.915,3345,3.915,3346,3.915,3347,3.915,3348,3.915,3349,3.915,3350,3.915,3351,3.915,3352,3.915,3353,3.915,3354,3.915,3355,3.915,3356,3.915,3357,3.915,3358,5.611,3359,3.915,3360,5.611,3361,5.611,3362,5.611,3363,5.611,3364,3.915,3365,3.915,3366,5.611,3367,5.611]],["title/miscellaneous/functions.html",[3264,2.547,3368,4.848]],["body/miscellaneous/functions.html",[7,0.19,26,1.279,27,0.008,28,0.919,29,0.403,30,1.124,35,0.661,38,2.727,45,0.891,59,5.481,120,0.005,129,0.005,130,1.65,132,2.955,134,1.174,144,1.388,147,1.793,211,3.376,247,5.797,264,4.867,266,5.007,363,3.02,630,3.931,660,6.17,728,4.158,1125,3.636,1236,3.156,1257,5.468,1587,4.158,1785,5.745,1787,3.636,1799,3.971,1800,3.971,1801,3.971,1802,3.971,1803,3.971,2372,5.007,2374,5.007,2377,5.468,2379,5.468,3173,3.971,3174,5.468,3175,6.254,3176,5.468,3186,3.971,3187,5.468,3189,3.971,3190,5.468,3191,5.468,3192,3.971,3193,5.468,3194,3.971,3195,5.468,3196,5.468,3197,5.468,3204,3.971,3205,5.468,3206,3.971,3264,3.02,3368,3.971,3369,7.055,3370,6.168,3371,4.48,3372,4.48,3373,4.48,3374,7.055,3375,4.48,3376,6.168,3377,4.48,3378,7.601,3379,5.007,3380,4.48,3381,4.48,3382,4.48,3383,4.48,3384,4.48,3385,6.168,3386,6.168,3387,6.168,3388,4.48,3389,4.48,3390,6.168,3391,4.48,3392,4.48,3393,4.48,3394,4.48,3395,4.48,3396,4.48,3397,4.48,3398,4.48]],["title/index.html",[7,0.161,3399,3.778,3400,3.778]],["body/index.html",[4,0.087,27,0.008,120,0.006,129,0.006,134,1.58,184,6.641,586,2.472,823,3.703,1482,5.342,2077,4.555,3145,4.891,3379,4.891,3401,6.026,3402,6.026,3403,7.492,3404,6.026,3405,6.026,3406,6.026,3407,6.026,3408,6.026,3409,6.026,3410,8.153,3411,6.026,3412,6.026,3413,6.026,3414,9.067,3415,6.026,3416,6.026,3417,8.942,3418,6.026,3419,6.026,3420,7.492,3421,6.026,3422,6.026,3423,6.026,3424,6.026,3425,7.492,3426,6.026,3427,6.026,3428,6.026,3429,7.492,3430,7.492,3431,6.026,3432,6.026,3433,6.026,3434,6.026,3435,6.026,3436,5.342,3437,6.026,3438,6.026,3439,6.026,3440,6.026,3441,6.026,3442,6.026,3443,6.026,3444,6.026,3445,5.342,3446,6.026,3447,6.026,3448,6.026,3449,6.026,3450,6.026,3451,6.026,3452,5.342]],["title/modules.html",[224,2.827]],["body/modules.html",[27,0.006,120,0.006,129,0.006,223,4.803,224,2.885,234,4.519,235,4.519,236,4.519,237,4.519,238,4.519,239,4.519,240,4.519,241,4.519,242,4.519,243,4.283,244,4.519,245,4.519,246,4.283,3436,8.415,3453,9.492,3454,9.492,3455,9.52,3456,6.354,3457,6.354]],["title/overview.html",[3458,5.519]],["body/overview.html",[2,1.372,27,0.008,120,0.005,129,0.005,132,1.662,181,1.229,207,4.244,222,1.341,223,7.127,224,1.802,225,1.853,226,1.967,227,1.967,228,1.967,229,1.967,230,1.909,231,3.517,232,3.517,233,3.517,234,6.551,235,6.199,236,5.421,237,4.699,238,5.421,239,5.421,240,6.038,241,5.421,242,6.038,243,5.875,244,6.315,245,6.315,246,5.623,247,4.454,248,2.809,249,1.967,250,1.967,396,5.24,398,4.055,404,4.454,470,3.517,472,3.517,473,3.517,474,4.454,475,4.699,476,4.699,477,4.171,547,2.549,609,4.699,628,4.244,629,4.428,630,3.192,714,3.221,810,3.517,811,3.517,854,1.062,894,4.209,982,2.822,1413,4.428,1431,3.517,1432,3.517,1750,4.428,1766,3.517,1767,3.517,1786,3.221,2064,3.517,2065,3.517,2079,5.802,2358,5.802,2364,4.428,2487,3.517,2488,3.517,2489,4.454,2490,4.454,2813,3.517,2814,3.517,2815,3.517,2875,3.517,2876,3.517,2877,4.699,2910,3.517,2911,3.517,2912,3.517,3458,3.517,3459,3.968,3460,3.968,3461,3.968,3462,3.968,3463,3.968]],["title/properties.html",[8,1.08,3215,3.349]],["body/properties.html",[8,1.433,27,0.008,120,0.007,129,0.007,134,1.902,1129,6.431,3445,6.431,3452,6.431,3464,7.255,3465,7.255,3466,7.255,3467,7.255]],["title/miscellaneous/variables.html",[3264,2.547,3468,4.848]],["body/miscellaneous/variables.html",[7,0.174,12,1.898,27,0.008,29,0.258,45,1.189,48,3.249,49,3.174,65,2.369,71,3.636,72,1.725,84,1.032,104,1.531,120,0.005,129,0.005,134,1.075,147,1.686,199,2.968,216,2.765,218,2.326,322,2.968,326,3.33,327,4.708,334,4.708,370,2.876,427,2.005,492,2.917,496,3.564,504,2.635,521,4.708,522,4.708,523,4.708,530,2.747,534,7.103,538,2.917,630,3.233,724,4.384,756,5.142,887,2.819,894,2.876,902,3.636,904,2.765,981,2.419,1059,3.91,1087,3.636,1115,2.765,1236,3.443,1309,4.708,1312,3.636,1348,3.1,1349,3.1,1901,3.292,2269,3.91,3056,4.384,3162,3.636,3164,5.142,3165,3.636,3172,3.636,3182,3.636,3199,3.636,3200,5.142,3201,3.636,3202,5.142,3210,3.636,3264,2.765,3296,5.142,3379,4.708,3468,3.636,3469,4.102,3470,4.102,3471,7.718,3472,4.102,3473,4.102,3474,4.102,3475,4.102,3476,4.102,3477,4.102,3478,4.102,3479,4.102,3480,4.102,3481,4.102,3482,4.102,3483,4.102,3484,4.102,3485,4.102,3486,4.102,3487,4.102,3488,4.102,3489,4.102,3490,5.8,3491,4.102,3492,4.102,3493,4.102,3494,5.8,3495,4.102,3496,4.102,3497,4.102,3498,4.102,3499,4.102,3500,4.102,3501,4.102,3502,4.102,3503,4.102,3504,4.102,3505,5.8,3506,4.102,3507,5.8,3508,4.102,3509,5.8,3510,4.102,3511,4.102,3512,4.102,3513,4.102,3514,4.102,3515,4.102,3516,4.102,3517,4.102,3518,4.102,3519,4.102,3520,4.102,3521,4.102,3522,4.102,3523,4.102,3524,4.102,3525,4.102]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":981,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/QueuesQueryController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":3464,"title":{},"body":{"properties.html":{}}}],["0.11.2",{"_index":3240,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3237,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3236,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3246,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3159,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3183,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3198,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3178,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3188,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3177,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3203,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3155,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3181,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3149,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":3180,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":3179,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":3212,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3156,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3154,"title":{},"body":{"coverage.html":{}}}],["0/50",{"_index":3209,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3185,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3157,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3158,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3184,"title":{},"body":{"coverage.html":{}}}],["0})@column({name",{"_index":1698,"title":{},"body":{"entities/Option.html":{}}}],["0})@isnumber",{"_index":950,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1",{"_index":1110,"title":{},"body":{"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["1.0.0",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3247,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":3216,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":3232,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3171,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":3161,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3160,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3169,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3166,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3153,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":977,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"coverage.html":{}}}],["10.0.0",{"_index":3231,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":3227,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3219,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3223,"title":{},"body":{"dependencies.html":{}}}],["10.3.7",{"_index":3220,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":3170,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@isnumber",{"_index":978,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1103.1210",{"_index":1130,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["12",{"_index":1013,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":3459,"title":{},"body":{"overview.html":{}}}],["16",{"_index":3152,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3463,"title":{},"body":{"overview.html":{}}}],["1})@primarygeneratedcolumn({name",{"_index":1734,"title":{},"body":{"entities/Option.html":{}}}],["2",{"_index":714,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"overview.html":{}}}],["2.0.2",{"_index":3226,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3222,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":3243,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3234,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":3167,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":3151,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3460,"title":{},"body":{"overview.html":{}}}],["200",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["22",{"_index":980,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["22})@column({name",{"_index":1692,"title":{},"body":{"entities/Option.html":{}}}],["22})@isnumber",{"_index":946,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["24",{"_index":71,"title":{},"body":{"injectables/AbstractQueueService.html":{},"miscellaneous/variables.html":{}}}],["29",{"_index":3461,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1143,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["3.0.1",{"_index":3217,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3221,"title":{},"body":{"dependencies.html":{}}}],["3.3.5",{"_index":3253,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["302)@apiexcludeendpoint",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":3150,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":69,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["39",{"_index":3462,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1146,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["4.0.0",{"_index":3229,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3248,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3242,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":2189,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["404",{"_index":1631,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["409",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/UsersController.html":{}}}],["41",{"_index":1578,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["5.0.1",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":3235,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":3168,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":982,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["6.9.7",{"_index":3245,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":2273,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["6h",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{}}}],["6})@column({name",{"_index":1695,"title":{},"body":{"entities/Option.html":{}}}],["6})@isnumber",{"_index":948,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["7.3.1",{"_index":3230,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["8.11.4",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1012,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__getguards",{"_index":1809,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["abstract",{"_index":62,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QueryAnswer.html":{}}}],["abstractqueueservice",{"_index":1,"title":{"injectables/AbstractQueueService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["abstractqueueservice:101",{"_index":2565,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:105",{"_index":2568,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:12",{"_index":2562,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:23",{"_index":2570,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:38",{"_index":2567,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:6",{"_index":2571,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:75",{"_index":2563,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:82",{"_index":2569,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:90",{"_index":2566,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:97",{"_index":2564,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["accept",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/variables.html":{}}}],["accession_nb",{"_index":2353,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_nb'})@isstring",{"_index":2474,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_number",{"_index":3297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessionnb",{"_index":2354,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accessionnumber",{"_index":2284,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["acquisition_device_processing_description",{"_index":3334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisition_number",{"_index":3342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitiondeviceprocessingdescription",{"_index":3335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitionnumber",{"_index":3343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1800,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["activated",{"_index":549,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["activated'})@isboolean",{"_index":553,"title":{},"body":{"entities/Autorouting.html":{}}}],["activation",{"_index":1801,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":89,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["adapter",{"_index":1502,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2182,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["addanonjob",{"_index":2505,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addanonjob(queuesanonsdto",{"_index":2507,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addbearerauth",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddeletejob",{"_index":2584,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["adddeletejob(queuesdeletedto",{"_index":2586,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["added",{"_index":1649,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["added'})@apiresponse({status",{"_index":1623,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addjob",{"_index":13,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(data",{"_index":31,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(request",{"_index":2180,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["addjob(userid",{"_index":2260,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["addlabeltorole",{"_index":2729,"title":{},"body":{"controllers/RolesController.html":{}}}],["addlabeltorole(rolename",{"_index":2734,"title":{},"body":{"controllers/RolesController.html":{}}}],["addoauthconfig",{"_index":1618,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addoauthconfig(@body",{"_index":1650,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addoauthconfig(oauthconfigdto",{"_index":1621,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addqueryjob",{"_index":2623,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["addqueryjob(queuesquerydto",{"_index":2625,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["address",{"_index":1221,"title":{},"body":{"classes/HttpClient.html":{}}}],["addrolelabel",{"_index":2820,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrolelabel(rolename",{"_index":2827,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin",{"_index":137,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/GetUserDto.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["admin'})@column({name",{"_index":3022,"title":{},"body":{"entities/User.html":{}}}],["admin'})@primarycolumn({name",{"_index":2719,"title":{},"body":{"entities/Role.html":{}}}],["admin.controller",{"_index":2070,"title":{},"body":{"modules/OrthancModule.html":{}}}],["admin.controller.ts",{"_index":1840,"title":{},"body":{"controllers/OrthancAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:102",{"_index":1877,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:109",{"_index":1863,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:119",{"_index":1857,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:129",{"_index":1869,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:139",{"_index":1866,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:149",{"_index":1884,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:159",{"_index":1872,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:26",{"_index":1890,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:36",{"_index":1893,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:46",{"_index":1896,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:56",{"_index":1881,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:66",{"_index":1899,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:76",{"_index":1887,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:86",{"_index":1860,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin@gaelo.com",{"_index":3135,"title":{},"body":{"injectables/UsersService.html":{}}}],["adminguard",{"_index":131,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["aet",{"_index":701,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["aet'})@isstring",{"_index":2661,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["age",{"_index":68,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["agplv3",{"_index":3465,"title":{},"body":{"properties.html":{}}}],["all.controller",{"_index":2078,"title":{},"body":{"modules/OrthancModule.html":{}}}],["all.controller.ts",{"_index":2152,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["all.controller.ts:26",{"_index":2168,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:36",{"_index":2159,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:46",{"_index":2162,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:53",{"_index":2165,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["alllabels",{"_index":1419,"title":{},"body":{"controllers/LabelsController.html":{}}}],["alllabels.map((label",{"_index":1421,"title":{},"body":{"controllers/LabelsController.html":{}}}],["allmodalities",{"_index":710,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('ct",{"_index":716,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('pt",{"_index":715,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.length",{"_index":713,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allowemptyvalue",{"_index":1875,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["allroles",{"_index":2846,"title":{},"body":{"injectables/RolesService.html":{}}}],["allusers",{"_index":3059,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers.map((user",{"_index":3061,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":3437,"title":{},"body":{"index.html":{}}}],["anon.ts",{"_index":2898,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["anon.ts:4",{"_index":2906,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:5",{"_index":2905,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:6",{"_index":2904,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon/queue",{"_index":2495,"title":{},"body":{"modules/QueueModule.html":{}}}],["anonqueue",{"_index":2572,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anons.controller",{"_index":2496,"title":{},"body":{"modules/QueueModule.html":{}}}],["anons.controller.ts",{"_index":2503,"title":{},"body":{"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["anons.controller.ts:103",{"_index":2510,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:130",{"_index":2517,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:39",{"_index":2511,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:50",{"_index":2514,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:77",{"_index":2513,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto",{"_index":2518,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto.ts",{"_index":2537,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["anons.dto.ts:11",{"_index":2554,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:15",{"_index":2544,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:19",{"_index":2546,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:23",{"_index":2548,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:27",{"_index":2550,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:36",{"_index":2580,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["anons.dto.ts:7",{"_index":2552,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.service",{"_index":2500,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{}}}],["anons.service.ts",{"_index":2560,"title":{},"body":{"injectables/QueuesAnonService.html":{},"coverage.html":{}}}],["anons.service.ts:8",{"_index":2561,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anonymize",{"_index":151,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["anonymizeguard",{"_index":152,"title":{"guards/AnonymizeGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["anonymizes",{"_index":2530,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["anonymizes.foreach((anonymize",{"_index":2532,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["another",{"_index":1128,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["answer",{"_index":1952,"title":{},"body":{"controllers/OrthancController.html":{}}}],["answer.dto",{"_index":2122,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["answer.dto.ts",{"_index":2334,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["answer.dto.ts:12",{"_index":2444,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:16",{"_index":2446,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:20",{"_index":2448,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:24",{"_index":2452,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:28",{"_index":2450,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:34",{"_index":2480,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:38",{"_index":2478,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:42",{"_index":2482,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:46",{"_index":2476,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:50",{"_index":2484,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:54",{"_index":2475,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:58",{"_index":2486,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:64",{"_index":2336,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:68",{"_index":2338,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:8",{"_index":2454,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer/query",{"_index":2391,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts",{"_index":2283,"title":{},"body":{"classes/QueryAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts:10",{"_index":2322,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:11",{"_index":2321,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:12",{"_index":2310,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:14",{"_index":2303,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:4",{"_index":2305,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:40",{"_index":2312,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:44",{"_index":2313,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:48",{"_index":2314,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:5",{"_index":2306,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:52",{"_index":2315,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:56",{"_index":2317,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:6",{"_index":2307,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:60",{"_index":2316,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:64",{"_index":2311,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:68",{"_index":2320,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:7",{"_index":2309,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:72",{"_index":2319,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:76",{"_index":2318,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:8",{"_index":2308,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:9",{"_index":2304,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answerid",{"_index":2285,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answernumber",{"_index":2286,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answser",{"_index":1454,"title":{},"body":{"injectables/LabelsService.html":{}}}],["anyway",{"_index":1104,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["api",{"_index":756,"title":{},"body":{"controllers/AutoroutingsController.html":{},"miscellaneous/variables.html":{}}}],["api;proto",{"_index":1249,"title":{},"body":{"classes/HttpClient.html":{}}}],["apibearerauth",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["apiexcludeendpoint",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioauth2(['openid",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiparam",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiproperty",{"_index":569,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{}}}],["apiproperty()@column({name",{"_index":552,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Rule.html":{}}}],["apiproperty()@column({nullable",{"_index":3026,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@isinstance(role",{"_index":1183,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":1180,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":876,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@isobject",{"_index":2337,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["apiproperty()@isstring",{"_index":1656,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":874,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":3018,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@primarygeneratedcolumn({name",{"_index":560,"title":{},"body":{"entities/Autorouting.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":556,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["apiproperty({required",{"_index":1173,"title":{},"body":{"classes/GetRoleDto.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["apiquery",{"_index":2202,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiresponse",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["apis",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('autorouting",{"_index":793,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["apitags('labels",{"_index":1416,"title":{},"body":{"controllers/LabelsController.html":{}}}],["apitags('oauth",{"_index":1640,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["apitags('options",{"_index":1754,"title":{},"body":{"controllers/OptionsController.html":{}}}],["apitags('orthanc",{"_index":1903,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["apitags('processing",{"_index":2205,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["apitags('queues/anon",{"_index":2519,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["apitags('queues/delete",{"_index":2597,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["apitags('queues/query",{"_index":2637,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["apitags('roles",{"_index":2767,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":3057,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":3379,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["app.get(seederservice",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_interceptor",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":180,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":3409,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":223,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":2029,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["archive')@useguards(exportguard",{"_index":2005,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["args",{"_index":1293,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["array",{"_index":660,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["array.from(new",{"_index":114,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["arraybuffer",{"_index":1255,"title":{},"body":{"classes/HttpClient.html":{}}}],["asked",{"_index":1097,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["associated",{"_index":1095,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["async",{"_index":12,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1243,"title":{},"body":{"classes/HttpClient.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":336,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1307,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('bearer",{"_index":1323,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["authguard('jwt",{"_index":1302,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1460,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":234,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3445,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1376,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["authorizationurl",{"_index":1364,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["authservice",{"_index":396,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":969,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["auto'})@column({default",{"_index":1724,"title":{},"body":{"entities/Option.html":{}}}],["auto'})@isstring",{"_index":970,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["auto_query",{"_index":2705,"title":{},"body":{"entities/Role.html":{}}}],["auto_query_hour_start",{"_index":1693,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_hour_stop",{"_index":1696,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_start",{"_index":1699,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_stop",{"_index":1701,"title":{},"body":{"entities/Option.html":{}}}],["auto_routing",{"_index":2707,"title":{},"body":{"entities/Role.html":{}}}],["autoloadentities",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["autoquery",{"_index":159,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["autoqueryguard",{"_index":160,"title":{"guards/AutoQueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoqueryhourstart",{"_index":929,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryhourstop",{"_index":930,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestart",{"_index":931,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestop",{"_index":932,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autorouter_started",{"_index":1704,"title":{},"body":{"entities/Option.html":{}}}],["autorouterstarted",{"_index":933,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["autorouting",{"_index":172,"title":{"entities/Autorouting.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["autorouting'})@apiresponse({status",{"_index":767,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.activated",{"_index":750,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{}}}],["autorouting.dto",{"_index":792,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.dto.ts",{"_index":922,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["autorouting.entity",{"_index":678,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{}}}],["autorouting.enum",{"_index":581,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autorouting.eventtype",{"_index":748,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting.handler",{"_index":814,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autorouting.router.destinations",{"_index":744,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting/autorouting.entity",{"_index":2881,"title":{},"body":{"modules/SeederModule.html":{}}}],["autorouting/autoroutings.module",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["autoroutingconfigs",{"_index":614,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype",{"_index":555,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["autoroutingeventtype.new_instance",{"_index":606,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autoroutingeventtype.new_patient",{"_index":667,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_series",{"_index":663,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_study",{"_index":665,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_patient",{"_index":671,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_series",{"_index":669,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_study",{"_index":670,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingguard",{"_index":173,"title":{"guards/AutoRoutingGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoroutinghandler",{"_index":609,"title":{"injectables/AutoroutingHandler.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoroutingmatches",{"_index":746,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingmatches.foreach((autorouting",{"_index":751,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutings.controller",{"_index":813,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autoroutings.service",{"_index":677,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{}}}],["autoroutingscontroller",{"_index":753,"title":{"controllers/AutoroutingsController.html":{}},"body":{"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{}}}],["autoroutingservice",{"_index":632,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["autoroutingsmodule",{"_index":235,"title":{"modules/AutoroutingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoroutingsModule.html":{},"modules.html":{},"overview.html":{}}}],["autoroutingsrepository",{"_index":827,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["autoroutingsservice",{"_index":628,"title":{"injectables/AutoroutingsService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":3457,"title":{},"body":{"modules.html":{}}}],["await",{"_index":65,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1235,"title":{},"body":{"classes/HttpClient.html":{},"dependencies.html":{}}}],["axios.request(option).catch((error",{"_index":1253,"title":{},"body":{"classes/HttpClient.html":{}}}],["back",{"_index":1606,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["backers",{"_index":3438,"title":{},"body":{"index.html":{}}}],["bad",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception(\"missing",{"_index":2781,"title":{},"body":{"controllers/RolesController.html":{}}}],["badrequestexception('confirmation",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":2651,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["badrequestexception('role",{"_index":3084,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception('token",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('uuid",{"_index":2216,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["baseurl",{"_index":1241,"title":{},"body":{"classes/HttpClient.html":{}}}],["bcryptjs",{"_index":3233,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs.compare(password",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.gensalt",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.hash(password",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1349,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belonging",{"_index":1033,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["belongs",{"_index":891,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["between",{"_index":2375,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["between.ts",{"_index":3205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["binary",{"_index":1278,"title":{},"body":{"classes/HttpClient.html":{}}}],["body",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["body_part_examined",{"_index":3312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bodypartexamined",{"_index":3313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bool",{"_index":1056,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"guards/ModifyGuard.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingJobDto.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["break",{"_index":703,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["browse",{"_index":3455,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3453,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1239,"title":{},"body":{"classes/HttpClient.html":{}}}],["buffer.from(response.data",{"_index":1277,"title":{},"body":{"classes/HttpClient.html":{}}}],["bugfixed",{"_index":1138,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["build",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builddocs",{"_index":3164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":3404,"title":{},"body":{"index.html":{}}}],["buildswagger",{"_index":3174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswagger(app",{"_index":3377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullmq",{"_index":60,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["burner_date_format",{"_index":1707,"title":{},"body":{"entities/Option.html":{}}}],["burner_delete_study_after_sent",{"_index":1709,"title":{},"body":{"entities/Option.html":{}}}],["burner_label_path",{"_index":1712,"title":{},"body":{"entities/Option.html":{}}}],["burner_manifacturer",{"_index":1715,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitored_path",{"_index":1717,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitoring_level",{"_index":1720,"title":{},"body":{"entities/Option.html":{}}}],["burner_started",{"_index":1722,"title":{},"body":{"entities/Option.html":{}}}],["burner_support_type",{"_index":1725,"title":{},"body":{"entities/Option.html":{}}}],["burner_transcoding",{"_index":1728,"title":{},"body":{"entities/Option.html":{}}}],["burner_transfer_syntax",{"_index":1730,"title":{},"body":{"entities/Option.html":{}}}],["burner_viewer_path",{"_index":1732,"title":{},"body":{"entities/Option.html":{}}}],["burnerdateformat",{"_index":934,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerdeletestudyaftersent",{"_index":935,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerlabelpath",{"_index":936,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermanifacturer",{"_index":937,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoredpath",{"_index":938,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoringlevel",{"_index":939,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerstarted",{"_index":940,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnersupporttype",{"_index":941,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertranscoding",{"_index":942,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertransfersyntax",{"_index":943,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerviewerpath",{"_index":944,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["by=localhost;for=localhost;host",{"_index":1247,"title":{},"body":{"classes/HttpClient.html":{}}}],["called",{"_index":1031,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["callhandler",{"_index":1588,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["calling",{"_index":908,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate(context",{"_index":140,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivatereturns",{"_index":1813,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["cardiac_number_of_images",{"_index":3316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardiacnumberofimages",{"_index":3317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":704,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["catch",{"_index":1115,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/SeriesGuard.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["catch((e",{"_index":738,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["catch(function",{"_index":1263,"title":{},"body":{"classes/HttpClient.html":{}}}],["catcherror",{"_index":1593,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["catcherror((err",{"_index":1829,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["catcherror((error",{"_index":1596,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["cd_burner",{"_index":2709,"title":{},"body":{"entities/Role.html":{}}}],["cdburner",{"_index":169,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["cdburnerguard",{"_index":170,"title":{"guards/CdBurnerGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["change",{"_index":1517,"title":{},"body":{"injectables/MailService.html":{}}}],["changed",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["changed'})@apiresponse({status",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(changepassworddto",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":347,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto})@public()@post('change",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordurl",{"_index":1512,"title":{},"body":{"injectables/MailService.html":{}}}],["changes",{"_index":2091,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.changes.foreach((element",{"_index":2095,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.last",{"_index":2094,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changetype",{"_index":1981,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["character",{"_index":872,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["check",{"_index":1096,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["checkifuseridhasjobs",{"_index":14,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkifuseridhasjobs(userid",{"_index":37,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checking",{"_index":889,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/SeriesGuard.html":{}}}],["checklabelinrole",{"_index":885,"title":{"guards/CheckLabelInRole.html":{}},"body":{"guards/CheckLabelInRole.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["checklabelrolestudy",{"_index":1059,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkuseridparamsguard",{"_index":295,"title":{"guards/CheckUserIdParamsGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/CheckUserIdParamsGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["checkuseridqueryguard",{"_index":913,"title":{"guards/CheckUserIdQueryGuard.html":{}},"body":{"guards/CheckUserIdQueryGuard.html":{},"controllers/ProcessingController.html":{},"coverage.html":{}}}],["checkuserroleguard",{"_index":298,"title":{"guards/CheckUserRoleGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/CheckUserRoleGuard.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["cheking",{"_index":135,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["children",{"_index":92,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["class",{"_index":63,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":854,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"overview.html":{}}}],["client",{"_index":680,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["client.ts",{"_index":3208,"title":{},"body":{"coverage.html":{}}}],["clientid",{"_index":1601,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["closequeueconnection",{"_index":15,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["cluster_appmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule",{"_index":810,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule_providers",{"_index":811,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule",{"_index":1431,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule_providers",{"_index":1432,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_oauthconfigmodule",{"_index":1661,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_oauthconfigmodule_providers",{"_index":1662,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_optionsmodule",{"_index":1766,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_optionsmodule_providers",{"_index":1767,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_orthancmodule",{"_index":2064,"title":{},"body":{"modules/OrthancModule.html":{},"overview.html":{}}}],["cluster_orthancmodule_imports",{"_index":2066,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_providers",{"_index":2065,"title":{},"body":{"modules/OrthancModule.html":{},"overview.html":{}}}],["cluster_processingmodule",{"_index":2252,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_processingmodule_providers",{"_index":2253,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_queuemodule",{"_index":2487,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_providers",{"_index":2488,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2813,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":2815,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2814,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":2875,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":2876,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2910,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2912,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2911,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":3087,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":3088,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":566,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["column({default",{"_index":1711,"title":{},"body":{"entities/Option.html":{}}}],["column({nullable",{"_index":3015,"title":{},"body":{"entities/User.html":{}}}],["comparepasswords",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(pass",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(token",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":86,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["condition",{"_index":576,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["condition'})@isenum(condition",{"_index":2867,"title":{},"body":{"classes/Rule.html":{}}}],["condition.equals",{"_index":594,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["config",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"modules/MailModule.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["config.dto",{"_index":1639,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["config.dto.ts",{"_index":1655,"title":{},"body":{"classes/OauthConfigDto.html":{},"coverage.html":{}}}],["config.dto.ts:11",{"_index":1660,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:15",{"_index":1657,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:19",{"_index":1658,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:7",{"_index":1659,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.entity",{"_index":491,"title":{},"body":{"modules/AuthModule.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{}}}],["config.entity.ts",{"_index":1600,"title":{},"body":{"entities/OauthConfig.html":{},"coverage.html":{}}}],["config.entity.ts:12",{"_index":1612,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:18",{"_index":1605,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:22",{"_index":1608,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:8",{"_index":1610,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.get('jwt_secret",{"_index":498,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('mail_encryption",{"_index":1492,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":1490,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":1495,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":1494,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.controller",{"_index":1664,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.controller.ts",{"_index":1617,"title":{},"body":{"controllers/OauthConfigController.html":{},"coverage.html":{}}}],["configs.controller.ts:38",{"_index":1638,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:49",{"_index":1634,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:63",{"_index":1628,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.module",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.module.ts",{"_index":1663,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.service",{"_index":494,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["configs.service.ts",{"_index":1666,"title":{},"body":{"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["configs.service.ts:15",{"_index":1678,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:22",{"_index":1676,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:31",{"_index":1679,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:35",{"_index":1674,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:39",{"_index":1673,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:46",{"_index":1680,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:9",{"_index":1671,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs/oauth",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["configservice",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"miscellaneous/functions.html":{}}}],["configservice.get",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('redis_address",{"_index":2574,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('redis_port",{"_index":2576,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('typeorm_database",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_host",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_password",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_port",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_username",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1362,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["configure",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationpassword",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{}}}],["confirmationtoken",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflict",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflict'})@apibody({type",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflict'})@useguards(adminguard)@post",{"_index":3040,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["conflictexception('a",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('email",{"_index":3076,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception('label",{"_index":1428,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/RolesService.html":{}}}],["conflictexception('oauth",{"_index":1653,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["conflictexception('role",{"_index":2785,"title":{},"body":{"controllers/RolesController.html":{}}}],["connect/auth",{"_index":1614,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["connect/auth'})@column",{"_index":1604,"title":{},"body":{"entities/OauthConfig.html":{}}}],["connection",{"_index":2272,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["console.error(\"can't",{"_index":699,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('invalid",{"_index":717,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('tmtvjob",{"_index":706,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error(error",{"_index":1265,"title":{},"body":{"classes/HttpClient.html":{}}}],["console.log('documentation",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('seeding",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":1310,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constants/enums",{"_index":686,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancQueryController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(moduleref",{"_index":1806,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["constructor(answerid",{"_index":2400,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["constructor(authservice",{"_index":1462,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(autoroutingservice",{"_index":627,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["constructor(autoroutingsrepository",{"_index":822,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["constructor(configservice",{"_index":1382,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["constructor(id",{"_index":2234,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["constructor(jwtservice",{"_index":1331,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["constructor(labelsrepository",{"_index":1440,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor(level",{"_index":2302,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["constructor(mailerservice",{"_index":1507,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(oauthconfigsrepository",{"_index":1670,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["constructor(optionrepository",{"_index":2362,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["constructor(optionsrepository",{"_index":1773,"title":{},"body":{"injectables/OptionsService.html":{}}}],["constructor(orthancclient",{"_index":1041,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/TmtvService.html":{}}}],["constructor(private",{"_index":795,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckLabelInRole.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["constructor(processingservice",{"_index":1535,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["constructor(queue",{"_index":23,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["constructor(reflector",{"_index":1303,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(rolesrepository",{"_index":2824,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(rolesservice",{"_index":893,"title":{},"body":{"guards/CheckLabelInRole.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{}}}],["constructor(tag",{"_index":2902,"title":{},"body":{"classes/TagAnon.html":{}}}],["constructor(usersrepository",{"_index":3096,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":865,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["context",{"_index":143,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["context.getclass",{"_index":1315,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1314,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":148,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["contrast_bolus_agent",{"_index":3336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contrastbolusagent",{"_index":3337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":179,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/autorouting",{"_index":794,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["controller('/labels",{"_index":1417,"title":{},"body":{"controllers/LabelsController.html":{}}}],["controller('/options",{"_index":1755,"title":{},"body":{"controllers/OptionsController.html":{}}}],["controller('/processing",{"_index":2206,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["controller('/queues/anon",{"_index":2520,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["controller('/queues/delete",{"_index":2598,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["controller('/queues/query",{"_index":2638,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["controller('/roles",{"_index":2768,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('/users",{"_index":3058,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('oauth",{"_index":1641,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["controllers",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":3145,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":766,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateOptionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1426,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(autorouting",{"_index":828,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["create(label",{"_index":1443,"title":{},"body":{"injectables/LabelsService.html":{}}}],["create(labeldto",{"_index":1404,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(role",{"_index":2829,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(user",{"_index":3099,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarchive",{"_index":1996,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createarchive(request",{"_index":2003,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createautorouting",{"_index":758,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautorouting(createautoroutingdto",{"_index":763,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautoroutingdto",{"_index":764,"title":{"classes/CreateAutoroutingDto.html":{}},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["createconfirmationtoken",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["createconfirmationtoken(user",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdfiles",{"_index":2923,"title":{},"body":{"classes/TmtvService.html":{}}}],["createdicom",{"_index":2036,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createdicom(request",{"_index":2038,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createecho",{"_index":1841,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createecho(request",{"_index":1854,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createinstances",{"_index":2037,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createinstances(request",{"_index":2041,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createjobs",{"_index":1842,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createjobs(request",{"_index":1858,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createmedia",{"_index":1997,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmedia(request",{"_index":2007,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended",{"_index":1998,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended(request",{"_index":2010,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport",{"_index":1999,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport(request",{"_index":2014,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesmodify",{"_index":2048,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesmodify(request",{"_index":2051,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesquery",{"_index":2100,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createmodalitiesquery(request",{"_index":2103,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createoptiondto",{"_index":926,"title":{"classes/CreateOptionDto.html":{}},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["createpeersstore",{"_index":2000,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createpeersstore(request",{"_index":2017,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createrole",{"_index":2730,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(@body",{"_index":2779,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(createroledto",{"_index":2739,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":983,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":2780,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto})@post",{"_index":2741,"title":{},"body":{"controllers/RolesController.html":{}}}],["createseries",{"_index":2924,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ctorthancseriesid",{"_index":2972,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ptorthancseriesid",{"_index":2976,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesmodify",{"_index":2049,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createseriesmodify(request",{"_index":2054,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify",{"_index":2050,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify(request",{"_index":2057,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createtasksuserexport",{"_index":2001,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createtasksuserexport(request",{"_index":2020,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createuser",{"_index":3034,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":3082,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdto",{"_index":3037,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":999,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createwritestream",{"_index":2956,"title":{},"body":{"classes/TmtvService.html":{}}}],["credentials",{"_index":1269,"title":{},"body":{"classes/HttpClient.html":{}}}],["cron",{"_index":2087,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":2085,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["cron(cronexpression.every_minute",{"_index":2367,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["cronexpression",{"_index":2088,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":3238,"title":{},"body":{"dependencies.html":{}}}],["ct",{"_index":721,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ctorthancseriesid",{"_index":730,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ctresponse",{"_index":2969,"title":{},"body":{"classes/TmtvService.html":{}}}],["ctseriesid",{"_index":719,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["currenthour",{"_index":2377,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["currentminute",{"_index":2379,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":34,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["data.uuid",{"_index":111,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['jobid",{"_index":81,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['userid",{"_index":79,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['uuid",{"_index":77,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["database",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"injectables/LocalAuthGuard.html":{}}}],["date",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrthancEventPayloadDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date().gethours",{"_index":2378,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date().getminutes",{"_index":2380,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date(date.now",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":1368,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["decorators",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"entities/Option.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1289,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaultmessage(args",{"_index":1290,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaults",{"_index":1496,"title":{},"body":{"modules/MailModule.html":{}}}],["defer",{"_index":1792,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["deferguard",{"_index":1821,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["delayed",{"_index":88,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["delete",{"_index":162,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["delete('/:id",{"_index":800,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:labelname",{"_index":1422,"title":{},"body":{"controllers/LabelsController.html":{}}}],["delete('/:name",{"_index":2787,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/:rolename/label/:label",{"_index":2809,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/modalities",{"_index":1914,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/patients",{"_index":1975,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/peers",{"_index":1917,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/series",{"_index":1978,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies",{"_index":1977,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies/*/labels",{"_index":2171,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["delete(':name",{"_index":1644,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["delete(':uuid",{"_index":2227,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["delete(@param('id",{"_index":3079,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('name",{"_index":2788,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete(id",{"_index":3043,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(name",{"_index":2743,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete.controller",{"_index":2072,"title":{},"body":{"modules/OrthancModule.html":{}}}],["delete.controller.ts",{"_index":1962,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"coverage.html":{}}}],["delete.controller.ts:23",{"_index":1968,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:33",{"_index":1974,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:43",{"_index":1971,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete/queue",{"_index":2497,"title":{},"body":{"modules/QueueModule.html":{}}}],["deleteallressources",{"_index":2925,"title":{},"body":{"classes/TmtvService.html":{}}}],["deleteautorouting",{"_index":759,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(@param('id",{"_index":801,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(id",{"_index":771,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleted",{"_index":1643,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleted'})@apiresponse({status",{"_index":1630,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteguard",{"_index":163,"title":{"guards/DeleteGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancDeleteController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesDeleteController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["deletelabels",{"_index":2153,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletelabels(request",{"_index":2157,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletemodality",{"_index":1843,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletemodality(request",{"_index":1861,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deleteoauthconfig",{"_index":1619,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deleteoauthconfig(@param('name",{"_index":1645,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteoauthconfig(name",{"_index":1629,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deletepatients",{"_index":1963,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepatients(request",{"_index":1966,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepeer",{"_index":1844,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletepeer(request",{"_index":1864,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletequeue",{"_index":2618,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deletes.controller",{"_index":2498,"title":{},"body":{"modules/QueueModule.html":{}}}],["deletes.controller.ts",{"_index":2582,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["deletes.controller.ts:104",{"_index":2589,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:131",{"_index":2595,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:38",{"_index":2590,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:49",{"_index":2592,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:76",{"_index":2591,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto",{"_index":2596,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto.ts",{"_index":2611,"title":{},"body":{"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["deletes.dto.ts:6",{"_index":2613,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["deletes.service",{"_index":2501,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{}}}],["deletes.service.ts",{"_index":2616,"title":{},"body":{"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["deletes.service.ts:8",{"_index":2617,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deleteseries",{"_index":1964,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleteseries(request",{"_index":1969,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies",{"_index":1965,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies(request",{"_index":1972,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":134,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"controllers/LabelsController.html":{},"injectables/LocalAuthGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":596,"title":{"classes/Destination.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["destinations",{"_index":605,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype",{"_index":577,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["destinationtype.aet",{"_index":597,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype.peer",{"_index":735,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["destinationtype.tmtvjob",{"_index":705,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["development",{"_index":3416,"title":{},"body":{"index.html":{}}}],["dicom",{"_index":1029,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancImportController.html":{},"injectables/SeriesGuard.html":{}}}],["dicom')@useguards(importguard",{"_index":2039,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom_tag",{"_index":588,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicom_tag'})@isenum(dicomtag",{"_index":2869,"title":{},"body":{"classes/Rule.html":{}}}],["dicoms",{"_index":2967,"title":{},"body":{"classes/TmtvService.html":{}}}],["dicomstudy",{"_index":2893,"title":{},"body":{"guards/StudyGuard.html":{}}}],["dicomtag",{"_index":578,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["dicomtag.patient_name",{"_index":587,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicomwebguard",{"_index":1024,"title":{"guards/DicomWebGuard.html":{}},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["different",{"_index":3283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["digit",{"_index":870,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["dir",{"_index":1499,"title":{},"body":{"modules/MailModule.html":{}}}],["disable",{"_index":777,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["disable(id",{"_index":830,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["disableautorouting",{"_index":760,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(@param('id",{"_index":808,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(id",{"_index":776,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["discuss",{"_index":1131,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["docs/oauth2",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["document",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":3146,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":1007,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["doe'})@column({name",{"_index":3013,"title":{},"body":{"entities/User.html":{}}}],["don't",{"_index":2224,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["doreverseproxy",{"_index":1901,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doreverseproxy(request",{"_index":1905,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["dto/change",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":791,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/get",{"_index":1753,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/lost",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/orthanc",{"_index":674,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["dto/query",{"_index":2120,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["dto/register.dto",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":1752,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/UsersController.html":{}}}],["dto/with",{"_index":2765,"title":{},"body":{"controllers/RolesController.html":{}}}],["e",{"_index":702,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["e2e",{"_index":3426,"title":{},"body":{"index.html":{}}}],["each",{"_index":604,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["editmodality",{"_index":1845,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editmodality(request",{"_index":1867,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer",{"_index":1846,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer(request",{"_index":1870,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["efficient",{"_index":3405,"title":{},"body":{"index.html":{}}}],["element",{"_index":2098,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["element.changetype",{"_index":2097,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["email",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email@gaelo.com",{"_index":1475,"title":{},"body":{"classes/LoginDto.html":{}}}],["email@gaelo.com'})@isnotempty",{"_index":1471,"title":{},"body":{"classes/LoginDto.html":{}}}],["email_verified",{"_index":1354,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["emitter",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["enable",{"_index":781,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["enable(id",{"_index":832,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["enableautorouting",{"_index":761,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(@param('id",{"_index":805,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(id",{"_index":780,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["end",{"_index":1615,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["end'})@column",{"_index":1607,"title":{},"body":{"entities/OauthConfig.html":{}}}],["endhour",{"_index":3386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endminute",{"_index":3387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endstudyuidposition",{"_index":1082,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["entities",{"_index":547,"title":{},"body":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":546,"title":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitynotfounderror",{"_index":1594,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["enum",{"_index":2243,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["enumerations",{"_index":3265,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["epson",{"_index":960,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["epson'})@column({default",{"_index":1714,"title":{},"body":{"entities/Option.html":{}}}],["epson'})@isstring",{"_index":961,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["equals",{"_index":3282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1831,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["error",{"_index":1264,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{}}}],["error('invalid",{"_index":1567,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["error('no",{"_index":1073,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["error(error",{"_index":1254,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response",{"_index":1266,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response.status",{"_index":1267,"title":{},"body":{"classes/HttpClient.html":{}}}],["event",{"_index":675,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["event_type",{"_index":607,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["event_type'})@isenum(autoroutingeventtype",{"_index":558,"title":{},"body":{"entities/Autorouting.html":{}}}],["eventemitter",{"_index":824,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemitter2",{"_index":825,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemittermodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["eventtype",{"_index":550,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["example",{"_index":586,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["example.com",{"_index":1145,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["exclude",{"_index":1739,"title":{},"body":{"entities/Option.html":{},"entities/User.html":{}}}],["execute",{"_index":613,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["executioncontext",{"_index":141,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["exist",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{}}}],["existinguser",{"_index":3073,"title":{},"body":{"controllers/UsersController.html":{}}}],["existinguser.id",{"_index":3075,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists",{"_index":1429,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["exists'})@apibearerauth('access",{"_index":1625,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["exit(0",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":61,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["export.controller",{"_index":2073,"title":{},"body":{"modules/OrthancModule.html":{}}}],["export.controller.ts",{"_index":1995,"title":{},"body":{"controllers/OrthancExportController.html":{},"coverage.html":{}}}],["export.controller.ts:24",{"_index":2016,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:34",{"_index":2006,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:44",{"_index":2009,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:54",{"_index":2013,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:64",{"_index":2025,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:74",{"_index":2019,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:84",{"_index":2022,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exportguard",{"_index":154,"title":{"guards/ExportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["exports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1237,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"dependencies.html":{}}}],["extanding",{"_index":1319,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["extended",{"_index":2030,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extended')@useguards(exportguard",{"_index":2012,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extends",{"_index":923,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/SeriesGuard.html":{},"classes/UpdateOptionDto.html":{},"interfaces/UserInfoResponse.html":{}}}],["extractjwt",{"_index":1386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":87,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["false",{"_index":110,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["false})@column({default",{"_index":1703,"title":{},"body":{"entities/Option.html":{}}}],["false})@isarray()@isobject({each",{"_index":2658,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["false})@isboolean",{"_index":953,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/TmtvJobDto.html":{}}}],["false})@isobject",{"_index":2247,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["false})@useguards(undefined)@get",{"_index":2195,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["family_name",{"_index":1357,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["file.getid",{"_index":3001,"title":{},"body":{"classes/TmtvService.html":{}}}],["filter((job",{"_index":121,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["filteredjob",{"_index":105,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["find",{"_index":2154,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(@request",{"_index":2173,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(request",{"_index":2160,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["findall",{"_index":817,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":2772,"title":{},"body":{"controllers/RolesController.html":{}}}],["findall(withlabels",{"_index":2746,"title":{},"body":{"controllers/RolesController.html":{}}}],["findallwithlabels",{"_index":2821,"title":{},"body":{"injectables/RolesService.html":{}}}],["findone",{"_index":2731,"title":{},"body":{"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('name",{"_index":2777,"title":{},"body":{"controllers/RolesController.html":{}}}],["findone(id",{"_index":3102,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(name",{"_index":2749,"title":{},"body":{"controllers/RolesController.html":{}}}],["findonebyauthorizationurl",{"_index":1667,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyauthorizationurl(authorizationurl",{"_index":1675,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyemail",{"_index":3092,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":3105,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyeventtype",{"_index":818,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyeventtype(eventtype",{"_index":835,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyname",{"_index":1668,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyname(name",{"_index":1677,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyorfail",{"_index":1438,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["findonebyorfail(labelname",{"_index":1446,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findonebyorfail(name",{"_index":2833,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneorfail",{"_index":819,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findoneorfail(id",{"_index":837,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["finds",{"_index":1124,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["finduser",{"_index":3125,"title":{},"body":{"injectables/UsersService.html":{}}}],["finishcallback",{"_index":1233,"title":{},"body":{"classes/HttpClient.html":{}}}],["first",{"_index":1125,"title":{},"body":{"guards/DicomWebGuard.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["firstname",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname'})@isnotempty",{"_index":2696,"title":{},"body":{"classes/RegisterDto.html":{}}}],["firstvaluefrom",{"_index":1350,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["flow",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["flush",{"_index":16,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["flushed",{"_index":2207,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushed'})@apiresponse({status",{"_index":2186,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushqueue",{"_index":2178,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["follow",{"_index":1519,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":2209,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiparam({name",{"_index":2190,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiquery({name",{"_index":2194,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@useguards(adminguard)@delete(':uuid",{"_index":2199,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["forbiddenexception",{"_index":2201,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["forbiddenexception(\"you",{"_index":2223,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbiddenexception('role",{"_index":2790,"title":{},"body":{"controllers/RolesController.html":{}}}],["forbiddenexception('user",{"_index":2529,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["force",{"_index":118,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["foreach((job",{"_index":122,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["forwarded",{"_index":1246,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedaddress",{"_index":1191,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedprotocol",{"_index":1192,"title":{},"body":{"classes/HttpClient.html":{}}}],["found",{"_index":1075,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibearerauth('access",{"_index":1632,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["found.interceptor",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["found.interceptor.ts",{"_index":1584,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["found.interceptor.ts:13",{"_index":1589,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["fragmented",{"_index":2944,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmask",{"_index":1572,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setmaskid(fragmentedmaskid",{"_index":1574,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setpetid(this.petid",{"_index":1575,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["fragmentedmask.setpetid(this.ptseriesid",{"_index":2991,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmaskid",{"_index":1570,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentmask",{"_index":1528,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["framework",{"_index":3403,"title":{},"body":{"index.html":{}}}],["from(canactivatereturns).pipe",{"_index":1816,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["from(guardval",{"_index":1825,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["function",{"_index":1804,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{}}}],["functions",{"_index":3368,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaelo",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["generaterandomuuid",{"_index":2269,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatetoken",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":3065,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:name",{"_index":2776,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/:rolename/labels",{"_index":2806,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/dicom",{"_index":1958,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/instances",{"_index":1957,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/jobs/:id",{"_index":1912,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/labels/:labelname/studies",{"_index":1949,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/modalities",{"_index":1959,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/patients",{"_index":2174,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["get('/peers",{"_index":2031,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["get('/peers/*/system",{"_index":1918,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/plugins",{"_index":1910,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/queries/*/answers",{"_index":2126,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["get('/series",{"_index":1956,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/studies",{"_index":1954,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/system",{"_index":1904,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/tools/log",{"_index":1908,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get(':uuid",{"_index":2214,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["get('oauth2",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["get('test/:id",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["getalluuids",{"_index":17,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getarchivedicomasbuffer([this.ctorthancseriesid",{"_index":2968,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivedicomasbuffer([this.ptorthancseriesid",{"_index":2961,"title":{},"body":{"classes/TmtvService.html":{}}}],["getautorouting",{"_index":762,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["getcreatedfiles",{"_index":2926,"title":{},"body":{"classes/TmtvService.html":{}}}],["getdicomweb",{"_index":1922,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getdicomweb(request",{"_index":1928,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getid",{"_index":2232,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getinstances",{"_index":1923,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getinstances(request",{"_index":1932,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs",{"_index":18,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobs(@request",{"_index":1913,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(request",{"_index":1873,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(userid",{"_index":2264,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getjobs(uuid",{"_index":44,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid",{"_index":19,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid(uuid",{"_index":51,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getloglevel",{"_index":1847,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getloglevel(request",{"_index":1878,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getmaskas",{"_index":1529,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskas(type",{"_index":1539,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskid",{"_index":1530,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmodalities",{"_index":1924,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getmodalities(request",{"_index":1935,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getoauthconfig",{"_index":1620,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["getoptiondto",{"_index":1152,"title":{"classes/GetOptionDto.html":{}},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"coverage.html":{}}}],["getoptiondto})@apiresponse({status",{"_index":1742,"title":{},"body":{"controllers/OptionsController.html":{}}}],["getoptions",{"_index":1193,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{}}}],["getparentstudy('instances",{"_index":1285,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["getparentstudy('series",{"_index":1114,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/SeriesGuard.html":{}}}],["getpatientid",{"_index":1035,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getpatients",{"_index":2155,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatients(request",{"_index":2163,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpeers",{"_index":2002,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeers(request",{"_index":2023,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeersystem",{"_index":1848,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getpeersystem(request",{"_index":1882,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins",{"_index":1849,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins(request",{"_index":1885,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getqueryanswers",{"_index":2101,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryanswers(request",{"_index":2106,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer",{"_index":2102,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer(id",{"_index":2109,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getresponseasbuffer",{"_index":1197,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasbuffer(url",{"_index":1215,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream",{"_index":1198,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream(url",{"_index":1217,"title":{},"body":{"classes/HttpClient.html":{}}}],["getroledto",{"_index":1169,"title":{"classes/GetRoleDto.html":{}},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["getrolelabels",{"_index":2732,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolelabels(@param('rolename",{"_index":2807,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolelabels(rolename",{"_index":2753,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["gets",{"_index":1874,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getseries",{"_index":1925,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries(request",{"_index":1938,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesinstanceuid",{"_index":1036,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getstatofmask",{"_index":1531,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getstudies",{"_index":1926,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudies(request",{"_index":1941,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel",{"_index":1927,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(@param('labelname",{"_index":1951,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(labelname",{"_index":1944,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudyinstanceuid",{"_index":1037,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getsystem",{"_index":1850,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getsystem(request",{"_index":1888,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getting",{"_index":3399,"title":{"index.html":{}},"body":{}}],["gettokenexpiration",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettype",{"_index":2233,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getuid",{"_index":1038,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuid($requesteduri",{"_index":1047,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuserdto",{"_index":1176,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserdto})@apiresponse({status",{"_index":3048,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfourl",{"_index":1327,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getuserinfourl(wellknown",{"_index":1334,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["getusers",{"_index":3035,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid",{"_index":3036,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(@param('id",{"_index":3066,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(id",{"_index":3047,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuuid",{"_index":2179,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuid(userid",{"_index":2193,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuidofuser",{"_index":20,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidofuser(userid",{"_index":53,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidsofuser",{"_index":2258,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getuuidsofuser(userid",{"_index":2266,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getwellknown",{"_index":1328,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getwellknown(iss",{"_index":1337,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["given_name",{"_index":1356,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["global",{"_index":1300,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{}}}],["granted",{"_index":1802,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["graph",{"_index":3456,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":3286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":3433,"title":{},"body":{"index.html":{}}}],["guard",{"_index":130,"title":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["guard.canactivate(context",{"_index":1823,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guarding",{"_index":1027,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["guardisobservable",{"_index":1835,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guardispromise",{"_index":1833,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards",{"_index":132,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["guards.map((guard",{"_index":1811,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards/check",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/dicom",{"_index":1947,"title":{},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{}}}],["guards/instance.guard",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{}}}],["guards/jwt",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":489,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/local.guard",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/or.guard",{"_index":212,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/roles.guard",{"_index":790,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/series.guard",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"modules/OrthancModule.html":{}}}],["guards/study.guard",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"modules/OrthancModule.html":{}}}],["guardval",{"_index":1822,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleautoroutingupdated",{"_index":616,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handlebars",{"_index":3241,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1486,"title":{},"body":{"modules/MailModule.html":{}}}],["handleerror",{"_index":1828,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleevent",{"_index":617,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handleevent(payload",{"_index":635,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handler",{"_index":611,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["hash",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["hashadmin",{"_index":3130,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":3123,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":3056,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('passwordadmin",{"_index":3131,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword('passworduser",{"_index":3133,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(newpassword",{"_index":3124,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(token",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword(userdto.password",{"_index":3085,"title":{},"body":{"controllers/UsersController.html":{}}}],["hashuser",{"_index":3132,"title":{},"body":{"injectables/UsersService.html":{}}}],["haystack",{"_index":1058,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.indexof(needle",{"_index":1148,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.slice(pos",{"_index":1150,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.substr(0",{"_index":1149,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["headers",{"_index":1238,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["here",{"_index":3442,"title":{},"body":{"index.html":{}}}],["host",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["hours",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1518,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1348,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://kevin.vanzonneveld.net",{"_index":1137,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["http://localhost:8080/realms/master/protocol/openid",{"_index":1603,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["http://phpjs.org/functions/strstr",{"_index":1132,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["httpclient",{"_index":1189,"title":{"classes/HttpClient.html":{}},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["httpcode",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":3449,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1332,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["httpstatus",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":123,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["id'})@apiresponse({status",{"_index":772,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["id'})@exclude",{"_index":1735,"title":{},"body":{"entities/Option.html":{}}}],["id_mask",{"_index":2983,"title":{},"body":{"classes/TmtvService.html":{}}}],["idct",{"_index":2981,"title":{},"body":{"classes/TmtvService.html":{}}}],["identifier",{"_index":3147,"title":{},"body":{"coverage.html":{}}}],["idpt",{"_index":2982,"title":{},"body":{"classes/TmtvService.html":{}}}],["ignore",{"_index":1688,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1101,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["image_comments",{"_index":3356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_index",{"_index":3344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_orientation_patient",{"_index":3326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_position_patient",{"_index":3354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagecomments",{"_index":3357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageindex",{"_index":3345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageorientationpatient",{"_index":3327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagepositionpatient",{"_index":3355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["images_in_acquisition",{"_index":3318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagesinacquisition",{"_index":3319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":146,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}}}],["import",{"_index":57,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["import.controller",{"_index":2074,"title":{},"body":{"modules/OrthancModule.html":{}}}],["import.controller.ts",{"_index":2035,"title":{},"body":{"controllers/OrthancImportController.html":{},"coverage.html":{}}}],["import.controller.ts:17",{"_index":2043,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["import.controller.ts:27",{"_index":2040,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["importguard",{"_index":145,"title":{"guards/ImportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancImportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["imports",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["improved",{"_index":1141,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":3378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["inherited",{"_index":2414,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["inject",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1789,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["injectrepository",{"_index":843,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(autorouting",{"_index":844,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["injectrepository(label",{"_index":1451,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["injectrepository(oauthconfig",{"_index":1681,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["injectrepository(option",{"_index":1780,"title":{},"body":{"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["injectrepository(role",{"_index":2844,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectrepository(user",{"_index":3116,"title":{},"body":{"injectables/UsersService.html":{}}}],["inline",{"_index":3239,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":3413,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3415,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1050,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["instance_creation_date",{"_index":3338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_creation_time",{"_index":3340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_number",{"_index":3346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationdate",{"_index":3339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationtime",{"_index":3341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceguard",{"_index":209,"title":{"injectables/InstanceGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["instancenumber",{"_index":3347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceof",{"_index":1597,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["instances",{"_index":3358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institution_name",{"_index":3299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institutionname",{"_index":3300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":1585,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["intercept(context",{"_index":1586,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptors/not",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/public",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["interface",{"_index":1352,"title":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":1786,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"overview.html":{}}}],["is_public_key",{"_index":1309,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":1636,"title":{},"body":{"controllers/OauthConfigController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["isbetween",{"_index":2381,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["isboolean",{"_index":570,"title":{},"body":{"entities/Autorouting.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Destination.html":{},"classes/ProcessingJobDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/WithLabels.html":{}}}],["isemail",{"_index":1017,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":571,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(autoroutingeventtype",{"_index":608,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(condition",{"_index":595,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(destinationtype",{"_index":598,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(dicomtag",{"_index":589,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(processingjobtype",{"_index":2251,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(processingmask",{"_index":2250,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(queryanswertype",{"_index":2357,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["isenum(rulecondition",{"_index":601,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(valuerepresentation",{"_index":592,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isequal",{"_index":618,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isequal(value",{"_index":639,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isexistinguser",{"_index":3093,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexistinguser(id",{"_index":3107,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["isgreaterthan",{"_index":619,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isgreaterthan(value",{"_index":641,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin",{"_index":620,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin(value",{"_index":643,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isinstance",{"_index":1186,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isinstance(role",{"_index":1188,"title":{},"body":{"classes/GetUserDto.html":{}}}],["islabelexist",{"_index":1439,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islabelexist(labelname",{"_index":1448,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islessthan",{"_index":621,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["islessthan(value",{"_index":645,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ismatch",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":878,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/RegisterDto.html":{}}}],["isnotin",{"_index":622,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnotin(value",{"_index":647,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnumber",{"_index":879,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["isnumberorstring",{"_index":583,"title":{"classes/IsNumberOrString.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["isobject",{"_index":2249,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["isolate",{"_index":1049,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["isoptional",{"_index":3144,"title":{},"body":{"classes/WithLabels.html":{}}}],["isoptional()@apiproperty({example",{"_index":3140,"title":{},"body":{"classes/WithLabels.html":{}}}],["ispaused",{"_index":2670,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["ispublic",{"_index":1312,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isroleexist",{"_index":2822,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleexist(name",{"_index":2836,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleused",{"_index":3094,"title":{},"body":{"injectables/UsersService.html":{}}}],["isroleused(rolename",{"_index":3109,"title":{},"body":{"injectables/UsersService.html":{}}}],["iss",{"_index":1339,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["issecondarycapture",{"_index":3190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["issecondarycapture(sopclassuid",{"_index":3381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issendable",{"_index":623,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["issendable(router",{"_index":649,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isstring",{"_index":572,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/LabelDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["issuer",{"_index":1374,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["istanbul",{"_index":1687,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["istimebetween",{"_index":2372,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istimebetween(starthour",{"_index":3384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["job",{"_index":59,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["job'})@apiresponse({status",{"_index":2198,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["job.data.jobid",{"_index":80,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.data.results",{"_index":127,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["job.data.state",{"_index":100,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.userid",{"_index":78,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.uuid",{"_index":76,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.dto",{"_index":2203,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.dto.ts",{"_index":2242,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":2917,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:16",{"_index":2919,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:20",{"_index":2920,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:26",{"_index":2245,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:30",{"_index":2248,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:8",{"_index":2916,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.id",{"_index":124,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.progress",{"_index":126,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobid",{"_index":724,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":73,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["jobs'})@useguards(anonymizeguard)@post",{"_index":2509,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["jobs'})@useguards(deleteguard)@post",{"_index":2588,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["jobs'})@useguards(queryguard)@post",{"_index":2627,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["jobs.filter((job",{"_index":106,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.find((job",{"_index":109,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["jobs.foreach((job",{"_index":75,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobs.map((job",{"_index":113,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.map(async",{"_index":103,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.push(job",{"_index":101,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobtype",{"_index":726,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["john",{"_index":1005,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["john'})@column({name",{"_index":3010,"title":{},"body":{"entities/User.html":{}}}],["john.doe@gaelo.fr",{"_index":3005,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john.doe@gmail.com",{"_index":1002,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/User.html":{}}}],["john.doe@gmail.com'})@column({unique",{"_index":3008,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":1482,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1500,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":3029,"title":{},"body":{"entities/User.html":{}}}],["jointable",{"_index":2725,"title":{},"body":{"entities/Role.html":{}}}],["json.stringify(document",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonb",{"_index":603,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["jsonb'})@validatenested()@type(undefined",{"_index":564,"title":{},"body":{"entities/Autorouting.html":{}}}],["jsonb'})@validatenested({each",{"_index":2861,"title":{},"body":{"classes/Router.html":{}}}],["jwt",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.strategy",{"_index":487,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":488,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoauthguard",{"_index":393,"title":{"injectables/JwtOAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["jwtoauthstrategy",{"_index":474,"title":{"injectables/JwtOauthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["jwtstrategy",{"_index":475,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3446,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kevin",{"_index":1134,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["key",{"_index":2783,"title":{},"body":{"controllers/RolesController.html":{}}}],["keycloak",{"_index":1613,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["keycloak'})@column",{"_index":1611,"title":{},"body":{"entities/OauthConfig.html":{}}}],["keycloak'})@primarycolumn({name",{"_index":1609,"title":{},"body":{"entities/OauthConfig.html":{}}}],["known/openid",{"_index":1361,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["label",{"_index":887,"title":{"entities/Label.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label'})@apiresponse({status",{"_index":1405,"title":{},"body":{"controllers/LabelsController.html":{}}}],["label.entity",{"_index":1435,"title":{},"body":{"modules/LabelsModule.html":{},"injectables/LabelsService.html":{}}}],["label.name",{"_index":904,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["label.name)@jointable({name",{"_index":2715,"title":{},"body":{"entities/Role.html":{}}}],["labeldto",{"_index":1399,"title":{"classes/LabelDto.html":{}},"body":{"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["labeldto.name",{"_index":2805,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelname",{"_index":898,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"injectables/RolesService.html":{}}}],["labels",{"_index":1172,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["labels.controller",{"_index":1434,"title":{},"body":{"modules/LabelsModule.html":{}}}],["labels.dto",{"_index":1415,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/RolesController.html":{}}}],["labels.dto.ts",{"_index":3139,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["labels.dto.ts:15",{"_index":3143,"title":{},"body":{"classes/WithLabels.html":{}}}],["labels.service",{"_index":1414,"title":{},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{}}}],["labels/label.entity",{"_index":1175,"title":{},"body":{"classes/GetRoleDto.html":{},"entities/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{}}}],["labels/labels.dto",{"_index":2766,"title":{},"body":{"controllers/RolesController.html":{}}}],["labels/labels.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["labels/labels.service",{"_index":2762,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["labelscontroller",{"_index":1402,"title":{"controllers/LabelsController.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"coverage.html":{}}}],["labelservice",{"_index":2770,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelsmodule",{"_index":236,"title":{"modules/LabelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LabelsModule.html":{},"modules.html":{},"overview.html":{}}}],["labelsofrole",{"_index":902,"title":{},"body":{"guards/CheckLabelInRole.html":{},"miscellaneous/variables.html":{}}}],["labelsofrole.filter((value",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofrole.includes(labelname",{"_index":905,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["labelsofstudy",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofstudy.includes(value",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsrepository",{"_index":1442,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labelsservice",{"_index":1413,"title":{"injectables/LabelsService.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":1795,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["lastchanges",{"_index":2082,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["lastname",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname'})@isnotempty",{"_index":2698,"title":{},"body":{"classes/RegisterDto.html":{}}}],["legend",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less_than",{"_index":3285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":868,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["level",{"_index":656,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{}}}],["level')@useguards(adminguard",{"_index":1880,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["level_series",{"_index":3364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_study",{"_index":3365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelmapping",{"_index":615,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype",{"_index":657,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["leveltype.instances",{"_index":662,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.patients",{"_index":668,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.series",{"_index":664,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.studies",{"_index":666,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["license",{"_index":3452,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3430,"title":{},"body":{"index.html":{}}}],["link",{"_index":1520,"title":{},"body":{"injectables/MailService.html":{}}}],["listlabels('studies",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1466,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":391,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["localstrategy",{"_index":476,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":400,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@public()@httpcode(httpstatus.ok)@useguards(localauthguard)@post('login",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["looal",{"_index":1459,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["lostpassword",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(@body",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(body",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpasswordto",{"_index":365,"title":{"classes/LostPassworDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["lostpasswordto})@public()@post('lost",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":869,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mail/mail.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mail@example.com",{"_index":2700,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mail@example.com'})@isemail",{"_index":2694,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mailermodule",{"_index":1483,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1488,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1508,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":237,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":404,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":3175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manufacturer",{"_index":3309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":2724,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":3030,"title":{},"body":{"entities/User.html":{}}}],["map((job",{"_index":2280,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["marsman",{"_index":1140,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["mask",{"_index":1568,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["mask.setmaskid(maskid",{"_index":2985,"title":{},"body":{"classes/TmtvService.html":{}}}],["mask.setpetid(this.ptseriesid",{"_index":2986,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskid",{"_index":1525,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["maskprocessingservice",{"_index":1522,"title":{"injectables/MaskProcessingService.html":{}},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["maskprocessingservice(this.processingclient",{"_index":2984,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskprocessingservice(this.processingservice",{"_index":1573,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["masks",{"_index":2988,"title":{},"body":{"classes/TmtvService.html":{}}}],["match",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":880,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*?[a",{"_index":1019,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":884,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["matching",{"_index":129,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":2011,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["media')@useguards(exportguard",{"_index":2008,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["mergemap",{"_index":1796,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mergemap((obs",{"_index":1817,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["message",{"_index":864,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1100,"title":{},"body":{"guards/DicomWebGuard.html":{},"dependencies.html":{}}}],["method",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":881,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(12",{"_index":883,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["miscellaneous",{"_index":3264,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3429,"title":{},"body":{"index.html":{}}}],["mixin",{"_index":1790,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mixin(ormixinguard",{"_index":1837,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modalities",{"_index":718,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["modalitiesinstudy",{"_index":2457,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["modality",{"_index":2340,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["modality'})@isstring",{"_index":2443,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["mode",{"_index":3420,"title":{},"body":{"index.html":{}}}],["modify",{"_index":166,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["modify.controller",{"_index":2075,"title":{},"body":{"modules/OrthancModule.html":{}}}],["modify.controller.ts",{"_index":2047,"title":{},"body":{"controllers/OrthancModifyController.html":{},"coverage.html":{}}}],["modify.controller.ts:17",{"_index":2053,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:27",{"_index":2059,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:37",{"_index":2056,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modifyguard",{"_index":167,"title":{"guards/ModifyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancModifyController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["modref",{"_index":1807,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["module",{"_index":222,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":1791,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modules",{"_index":224,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1485,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1487,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":681,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"dependencies.html":{}}}],["moment(value.tostring()).isafter(moment(rule.value.tostring",{"_index":698,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["moment(value.tostring()).issame(moment(rule.value.tostring",{"_index":695,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["monitoring.task",{"_index":2915,"title":{},"body":{"modules/TasksModule.html":{}}}],["monitoring.task.ts",{"_index":2081,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["monitoring.task.ts:17",{"_index":2086,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["monitoring.task.ts:9",{"_index":2084,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["more",{"_index":3441,"title":{},"body":{"index.html":{}}}],["mypassw0rd",{"_index":1476,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd'})@isnotempty",{"_index":1473,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd1234",{"_index":1018,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mypassw0rd1234!'})@isstring()@matches(/^(?=.*?[a",{"_index":1009,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":3447,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":562,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/LabelDto.html":{}}}],["name'})@primarycolumn({name",{"_index":1396,"title":{},"body":{"entities/Label.html":{}}}],["needle",{"_index":1055,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["nest",{"_index":3410,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestfactory.createapplicationcontext(appmodule",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":3451,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1592,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nestjs",{"_index":1484,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":3218,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":58,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/OrGuardOptions.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":3224,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1308,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3228,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_accession_number",{"_index":2556,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_accession_number'})@isstring",{"_index":2543,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_instance",{"_index":3269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient",{"_index":3274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient_id",{"_index":2557,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_id'})@isstring",{"_index":2545,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_patient_name",{"_index":2558,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_name'})@isstring",{"_index":2547,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_series",{"_index":3270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study",{"_index":3272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study_description",{"_index":2559,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_study_description'})@isstring",{"_index":2549,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["newaccessionnumber",{"_index":2538,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newinstance",{"_index":1984,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"injectables/UsersService.html":{}}}],["newpatient",{"_index":3275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpatientid",{"_index":2539,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newpatientname",{"_index":2540,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newseries",{"_index":3271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudy",{"_index":3273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudydescription",{"_index":2541,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newuser",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.email",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.id",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":1587,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":1595,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nextfunction",{"_index":3390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nifti",{"_index":3363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3402,"title":{},"body":{"index.html":{}}}],["node:fs",{"_index":2957,"title":{},"body":{"classes/TmtvService.html":{}}}],["node:stream/web",{"_index":2955,"title":{},"body":{"classes/TmtvService.html":{}}}],["nodemailer",{"_index":3244,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1301,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["none",{"_index":972,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["none'})@column({default",{"_index":1727,"title":{},"body":{"entities/Option.html":{}}}],["none'})@isstring",{"_index":973,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["not_in",{"_index":3284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1591,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('label",{"_index":2803,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('oauth",{"_index":1647,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["notfoundexception('role",{"_index":2796,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('user",{"_index":3069,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(error.message",{"_index":1598,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["notfoundinterceptor",{"_index":270,"title":{"injectables/NotFoundInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["npm",{"_index":3414,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/LabelsService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{}}}],["nullable",{"_index":3024,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":38,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"injectables/MailService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number'})@useguards(autoroutingguard)@delete('/:id",{"_index":774,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/disable",{"_index":778,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/enable",{"_index":782,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number(rule.value",{"_index":692,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number(value",{"_index":697,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number.ts",{"_index":1287,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["number.ts:13",{"_index":1292,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number.ts:9",{"_index":1295,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number_of_frames",{"_index":3348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_slices",{"_index":3322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_temporal_positions",{"_index":3320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_time_slices",{"_index":3324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofframes",{"_index":3349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofseriesrelatedinstances",{"_index":2393,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["numberofslices",{"_index":3323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofstudyrelatedinstances",{"_index":2458,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberofstudyrelatedseries",{"_index":2459,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberoftemporalpositions",{"_index":3321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberoftimeslices",{"_index":3325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["oauth.guard",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth.guard.ts",{"_index":1318,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["oauth.strategy",{"_index":493,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth.strategy.ts",{"_index":1325,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["oauth.strategy.ts:22",{"_index":1333,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:31",{"_index":1338,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:42",{"_index":1343,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:49",{"_index":1335,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:53",{"_index":1345,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:80",{"_index":1341,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth2",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["oauth2')@public()@useguards(jwtoauthguard)@httpcode(httpstatus.ok)@post('oauth2",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(@request",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(req",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2redirect",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["oauthconfig",{"_index":490,"title":{"entities/OauthConfig.html":{}},"body":{"modules/AuthModule.html":{},"entities/OauthConfig.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["oauthconfigcontroller",{"_index":1616,"title":{"controllers/OauthConfigController.html":{}},"body":{"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"coverage.html":{}}}],["oauthconfigdto",{"_index":1622,"title":{"classes/OauthConfigDto.html":{}},"body":{"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["oauthconfigdto.name",{"_index":1652,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigdto})@useguards(adminguard)@post",{"_index":1627,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigmodule",{"_index":238,"title":{"modules/OauthConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OauthConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["oauthconfigservice",{"_index":477,"title":{"injectables/OauthConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["oauthconfigsrepository",{"_index":1672,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["object",{"_index":32,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"interfaces/UserInfoResponse.html":{}}}],["object.fromentries(url.searchparams.entries",{"_index":1089,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object.keys(this.query).length",{"_index":1063,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object})@apiresponse({status",{"_index":2183,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["obs.pipe(this.handleerror",{"_index":1818,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["observable",{"_index":1590,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["observable).pipe",{"_index":1836,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["occurrence",{"_index":1126,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["of(false",{"_index":1832,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["of(guardval",{"_index":1827,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["omittype",{"_index":925,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["omittype(autorouting",{"_index":924,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["one",{"_index":866,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["onevent",{"_index":673,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('autorouting.updated",{"_index":633,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('orthanc",{"_index":637,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onno",{"_index":1139,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["open",{"_index":3431,"title":{},"body":{"index.html":{}}}],["openapi.json",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operatorfunction",{"_index":1793,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["operators_name",{"_index":3330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operatorsname",{"_index":3331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":1251,"title":{"entities/Option.html":{}},"body":{"classes/HttpClient.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["option.dto",{"_index":1168,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{}}}],["option.dto.ts",{"_index":928,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["option.dto.ts:11",{"_index":951,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:12",{"_index":1163,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:15",{"_index":949,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:16",{"_index":1164,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:19",{"_index":952,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:20",{"_index":1162,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:23",{"_index":979,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:24",{"_index":1165,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:27",{"_index":968,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:28",{"_index":1166,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:31",{"_index":959,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:35",{"_index":966,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:39",{"_index":962,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:43",{"_index":963,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:47",{"_index":958,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:51",{"_index":971,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:55",{"_index":976,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:59",{"_index":975,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:63",{"_index":957,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:67",{"_index":974,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:7",{"_index":947,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:71",{"_index":954,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:8",{"_index":1161,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.entity",{"_index":1770,"title":{},"body":{"modules/OptionsModule.html":{},"injectables/OptionsService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionrepository",{"_index":2366,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options",{"_index":1503,"title":{},"body":{"modules/MailModule.html":{},"controllers/OptionsController.html":{},"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstart",{"_index":2382,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstop",{"_index":2384,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestart",{"_index":2383,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestop",{"_index":2385,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.controller",{"_index":1769,"title":{},"body":{"modules/OptionsModule.html":{}}}],["options.service",{"_index":1751,"title":{},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{}}}],["options/option.entity",{"_index":2371,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{}}}],["options/options.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["options/options.service",{"_index":2880,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["optionscontroller",{"_index":1740,"title":{"controllers/OptionsController.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"coverage.html":{}}}],["optionservice",{"_index":1756,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/SeederService.html":{}}}],["optionsmodule",{"_index":239,"title":{"modules/OptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["optionsrepository",{"_index":1775,"title":{},"body":{"injectables/OptionsService.html":{}}}],["optionsservice",{"_index":1750,"title":{"injectables/OptionsService.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["orguard",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguard(guards",{"_index":3391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orguardoptions",{"_index":1785,"title":{"interfaces/OrGuardOptions.html":{}},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguardoptions?.throwonfirsterror",{"_index":1830,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orientation",{"_index":1540,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["originaet",{"_index":2287,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["original",{"_index":1133,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["ormixinguard",{"_index":1805,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orthanc",{"_index":1281,"title":{},"body":{"injectables/InstanceGuard.html":{},"modules/OrthancModule.html":{},"modules/TasksModule.html":{}}}],["orthanc.controller",{"_index":2071,"title":{},"body":{"modules/OrthancModule.html":{}}}],["orthanc/orthanc.module",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc_monitoring_rate",{"_index":1737,"title":{},"body":{"entities/Option.html":{}}}],["orthanc_study_id",{"_index":2555,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthanc_study_id'})@isstring",{"_index":2551,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["orthancaddress",{"_index":1155,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancadmincontroller",{"_index":1838,"title":{"controllers/OrthancAdminController.html":{}},"body":{"controllers/OrthancAdminController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanccalledapi",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthancclient",{"_index":630,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["orthancclient.streamanswertores(orthanccalledapi",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthanccontroller",{"_index":1920,"title":{"controllers/OrthancController.html":{}},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancdeletecontroller",{"_index":1961,"title":{"controllers/OrthancDeleteController.html":{}},"body":{"controllers/OrthancDeleteController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanceventpayloaddto",{"_index":636,"title":{"classes/OrthancEventPayloadDto.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["orthancexportcontroller",{"_index":1994,"title":{"controllers/OrthancExportController.html":{}},"body":{"controllers/OrthancExportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancid",{"_index":658,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["orthancimportcontroller",{"_index":2034,"title":{"controllers/OrthancImportController.html":{}},"body":{"controllers/OrthancImportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodifycontroller",{"_index":2046,"title":{"controllers/OrthancModifyController.html":{}},"body":{"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodule",{"_index":240,"title":{"modules/OrthancModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules.html":{},"overview.html":{}}}],["orthancmonitoringcron",{"_index":2083,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["orthancmonitoringrate",{"_index":945,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["orthancmonitoringtask",{"_index":2079,"title":{"injectables/OrthancMonitoringTask.html":{}},"body":{"injectables/OrthancMonitoringTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["orthancpassword",{"_index":1156,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancport",{"_index":1157,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancquerycontroller",{"_index":2068,"title":{"controllers/OrthancQueryController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["orthancreadallcontroller",{"_index":2069,"title":{"controllers/OrthancReadAllController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["orthancseriesid",{"_index":1111,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesDeleteController.html":{},"classes/TmtvService.html":{}}}],["orthancseriesids",{"_index":2605,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{}}}],["orthancseriesids.foreach((orthancseriesid",{"_index":2607,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["orthancstudyid",{"_index":1094,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthancusername",{"_index":1158,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["other_patient_ids",{"_index":3290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otherpatientids",{"_index":3291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":3458,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":3215,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":787,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserRoleGuard.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":2129,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/UsersController.html":{}}}],["param('label",{"_index":2810,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('name",{"_index":2794,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('rolename",{"_index":2800,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('uuid",{"_index":2215,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1088,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["params.guard",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["params.guard.ts",{"_index":906,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"coverage.html":{}}}],["params.guard.ts:6",{"_index":909,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["params.guard.ts:9",{"_index":910,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["parent",{"_index":1282,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudies",{"_index":1119,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies.length",{"_index":1121,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies[0].id",{"_index":1122,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudy",{"_index":1113,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy.id",{"_index":1117,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy?.id",{"_index":1116,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parsed",{"_index":2121,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["parsing",{"_index":1028,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["partialtype",{"_index":1167,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createoptiondto",{"_index":1154,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createroledto",{"_index":1171,"title":{},"body":{"classes/GetRoleDto.html":{}}}],["pass",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1347,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1346,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["passportstrategy(strategy",{"_index":1326,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["password",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpClient.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@exclude",{"_index":3016,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":856,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["password.dto.ts:19",{"_index":873,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:24",{"_index":858,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:29",{"_index":875,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:34",{"_index":877,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1479,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["password1234!change",{"_index":882,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty",{"_index":857,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty()@minlength(12)@matches(/^(?=.*[a",{"_index":859,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password?token=${token}&userid=${userid",{"_index":1514,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":1468,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1749,"title":{},"body":{"controllers/OptionsController.html":{}}}],["path",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["pathname",{"_index":1034,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient",{"_index":1074,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient_birthdate",{"_index":2351,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_birthdate'})@isstring",{"_index":2481,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_id",{"_index":2350,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_id'})@isstring",{"_index":2477,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_name",{"_index":2349,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_name'})@isstring",{"_index":2479,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_sex",{"_index":3288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientbirthdate",{"_index":3287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientid",{"_index":2288,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patientname",{"_index":2289,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patients",{"_index":1066,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/enumerations.html":{}}}],["patientsex",{"_index":3289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pause",{"_index":2671,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["paused",{"_index":94,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["payload",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/JwtStrategy.html":{}}}],["payload.changetype",{"_index":749,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto",{"_index":676,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto.ts",{"_index":1980,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:12",{"_index":1988,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:16",{"_index":1989,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:20",{"_index":1990,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":1991,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:28",{"_index":1993,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":1986,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.email",{"_index":1393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":742,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.role",{"_index":1394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peer",{"_index":739,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["performed_procedure_step_description",{"_index":3332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performedprocedurestepdescription",{"_index":3333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["petid",{"_index":1526,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["petseriesorthancid",{"_index":1527,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["pg",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["pixilib",{"_index":3466,"title":{},"body":{"properties.html":{}}}],["please",{"_index":3440,"title":{},"body":{"index.html":{}}}],["port",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["pos",{"_index":1147,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["post",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post('/:id/disable",{"_index":807,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:id/enable",{"_index":804,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:rolename/label",{"_index":2799,"title":{},"body":{"controllers/RolesController.html":{}}}],["post('/instances",{"_index":2044,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["post('/jobs",{"_index":1911,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/echo",{"_index":1915,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/modify",{"_index":2060,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/modalities/*/query",{"_index":2124,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/modalities/*/store",{"_index":2026,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/modalities/:id/parsed",{"_index":2128,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/peers/*/store",{"_index":2032,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/queries/:id/answers/:index/retrieve",{"_index":2127,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/queries/:id/answers/:index/retrieve')@useguards(queryguard",{"_index":2116,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/series/*/modify",{"_index":2063,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/studies/*/modify",{"_index":2062,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/tasks/:user/export",{"_index":2033,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/tools/create",{"_index":2028,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["post('/tools/find",{"_index":2172,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["post('/tools/reset",{"_index":1906,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/tools/shutdown",{"_index":1907,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('change",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('lost",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('oauth2",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["preferred_username",{"_index":1355,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["prefix",{"_index":755,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":2782,"title":{},"body":{"controllers/RolesController.html":{}}}],["primarycolumn",{"_index":1398,"title":{},"body":{"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":567,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["prioritized",{"_index":93,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["private",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LabelsService.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["processevent",{"_index":624,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processevent(autorouting",{"_index":651,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processing",{"_index":2177,"title":{},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{}}}],["processing.controller",{"_index":2255,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["processing.file",{"_index":2952,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service",{"_index":2953,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service.ts",{"_index":1524,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:13",{"_index":1545,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1542,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1547,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1541,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:58",{"_index":1543,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:65",{"_index":1538,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:7",{"_index":1549,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:77",{"_index":1548,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:8",{"_index":1550,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:9",{"_index":1536,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing/processing",{"_index":682,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{}}}],["processing/processing.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["processingclient",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["processingcontroller",{"_index":2175,"title":{"controllers/ProcessingController.html":{}},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"coverage.html":{}}}],["processingfile",{"_index":2230,"title":{"classes/ProcessingFile.html":{}},"body":{"classes/ProcessingFile.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["processingfile(ctresponse",{"_index":2970,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(fragmentedmaskid",{"_index":2990,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(maskid",{"_index":2987,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(ptresponse",{"_index":2966,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ctseriesid",{"_index":2975,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ptseriesid",{"_index":2979,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingjobdto",{"_index":2181,"title":{"classes/ProcessingJobDto.html":{}},"body":{"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["processingjobtype",{"_index":684,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"miscellaneous/enumerations.html":{}}}],["processingjobtype.tmtv",{"_index":727,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processingjobtype})@isenum(processingjobtype",{"_index":2244,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["processingmask",{"_index":685,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["processingmask.nifti",{"_index":1555,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processingmask.rtss",{"_index":732,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmask.seg",{"_index":733,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmodule",{"_index":241,"title":{"modules/ProcessingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProcessingModule.html":{},"modules.html":{},"overview.html":{}}}],["processingqueue",{"_index":2257,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["processingqueueservice",{"_index":629,"title":{"injectables/ProcessingQueueService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["processingservice",{"_index":1537,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processseries",{"_index":3195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processseries(orthancclient",{"_index":3393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processstudy",{"_index":3196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processstudy(orthancclient",{"_index":3394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":3422,"title":{},"body":{"index.html":{}}}],["profile",{"_index":2542,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["profile'})@isstring",{"_index":2553,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["progress",{"_index":125,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["progressive",{"_index":3401,"title":{},"body":{"index.html":{}}}],["project",{"_index":3432,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise).then",{"_index":1834,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["promise.all",{"_index":102,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"classes/WithLabels.html":{},"properties.html":{}}}],["protected",{"_index":9,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/StudyGuard.html":{}}}],["protocol",{"_index":1224,"title":{},"body":{"classes/HttpClient.html":{}}}],["protocol_name",{"_index":2341,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["protocol_name'})@isstring",{"_index":2445,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["protocolname",{"_index":2342,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["provide",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["provider",{"_index":1602,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["providers",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pt",{"_index":723,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ptorthancseriesid",{"_index":729,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ptresponse",{"_index":2963,"title":{},"body":{"classes/TmtvService.html":{}}}],["ptseriesid",{"_index":722,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["public",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingFile.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('oauth2",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["purposes",{"_index":1808,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["put",{"_index":1900,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["put('/:id",{"_index":3068,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:name",{"_index":2793,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('/modalities",{"_index":1916,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/peers",{"_index":1919,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/studies/*/labels",{"_index":2169,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["put('/tools/log",{"_index":1909,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["qido",{"_index":1099,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["query",{"_index":156,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"modules/TasksModule.html":{}}}],["query')@useguards(queryguard",{"_index":2113,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query('userid",{"_index":2210,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.answer",{"_index":2435,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["query.controller",{"_index":2076,"title":{},"body":{"modules/OrthancModule.html":{},"modules/QueueModule.html":{}}}],["query.controller.ts",{"_index":2099,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["query.controller.ts:106",{"_index":2628,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:146",{"_index":2633,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:32",{"_index":2105,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:42",{"_index":2108,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:51",{"_index":2117,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:53",{"_index":2630,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:61",{"_index":2114,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:80",{"_index":2629,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto",{"_index":2636,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto.ts",{"_index":2657,"title":{},"body":{"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["query.dto.ts:104",{"_index":2659,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.dto.ts:11",{"_index":2687,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:15",{"_index":2689,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:19",{"_index":2686,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:23",{"_index":2690,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:27",{"_index":2684,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:31",{"_index":2691,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:35",{"_index":2685,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:41",{"_index":2668,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:45",{"_index":2663,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:49",{"_index":2664,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:53",{"_index":2665,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:57",{"_index":2667,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:61",{"_index":2666,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:65",{"_index":2662,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:7",{"_index":2688,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:86",{"_index":2660,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.guard",{"_index":2204,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["query.guard.ts",{"_index":914,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{},"coverage.html":{}}}],["query.guard.ts:6",{"_index":915,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.guard.ts:9",{"_index":916,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.service",{"_index":2370,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"modules/TasksModule.html":{}}}],["query.service.ts",{"_index":2669,"title":{},"body":{"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["query.service.ts:20",{"_index":2675,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:24",{"_index":2676,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:28",{"_index":2674,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:8",{"_index":2673,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query/queue",{"_index":2499,"title":{},"body":{"modules/QueueModule.html":{}}}],["queryanswer",{"_index":2281,"title":{"classes/QueryAnswer.html":{}},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["queryanswer:10",{"_index":2434,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:11",{"_index":2433,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:12",{"_index":2422,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:14",{"_index":2418,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:4",{"_index":2416,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:40",{"_index":2424,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:44",{"_index":2425,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:48",{"_index":2426,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:5",{"_index":2417,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:52",{"_index":2427,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:56",{"_index":2429,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:6",{"_index":2419,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:60",{"_index":2428,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:64",{"_index":2423,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:68",{"_index":2432,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:7",{"_index":2421,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:72",{"_index":2431,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:76",{"_index":2430,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:8",{"_index":2420,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:9",{"_index":2415,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype",{"_index":2123,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["queryanswertype.level_series",{"_index":2131,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["queryanswertype.level_study",{"_index":2141,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype})@isenum(queryanswertype",{"_index":2335,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["queryguard",{"_index":157,"title":{"guards/QueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["queryparsedanswer",{"_index":2110,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.level",{"_index":2130,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.query",{"_index":2133,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswerdto",{"_index":2111,"title":{"classes/QueryParsedAnswerDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queryqueue",{"_index":2677,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueue.pause",{"_index":2679,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueuecron",{"_index":2361,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queryqueuetask",{"_index":2358,"title":{"injectables/QueryQueueTask.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queryseriesanswer",{"_index":2390,"title":{"classes/QuerySeriesAnswer.html":{}},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["queryseriesdto",{"_index":2118,"title":{"classes/QuerySeriesDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["querystudyanswer",{"_index":2455,"title":{"classes/QueryStudyAnswer.html":{}},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["querystudydto",{"_index":2119,"title":{"classes/QueryStudyDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queue",{"_index":10,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["queue('anon",{"_index":2573,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["queue('delete",{"_index":2619,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["queue('processing",{"_index":2271,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue('query",{"_index":2678,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queue.service",{"_index":683,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["queue.service.ts",{"_index":2256,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"coverage.html":{}}}],["queue.service.ts:10",{"_index":2259,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:22",{"_index":2262,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:26",{"_index":2268,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:30",{"_index":2261,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:47",{"_index":2265,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:88",{"_index":2263,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:95",{"_index":2267,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.task",{"_index":2914,"title":{},"body":{"modules/TasksModule.html":{}}}],["queue.task.ts",{"_index":2360,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["queue.task.ts:12",{"_index":2365,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queue.task.ts:20",{"_index":2368,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queuemodule",{"_index":242,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queuequeryservice",{"_index":2363,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queues/anon",{"_index":2504,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queues/delete",{"_index":2583,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queues/query",{"_index":2622,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queues/query/queue",{"_index":2369,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{}}}],["queues/queue.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["queuesanoncontroller",{"_index":2492,"title":{"controllers/QueuesAnonController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["queuesanondto",{"_index":2536,"title":{"classes/QueuesAnonDto.html":{}},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto",{"_index":2508,"title":{"classes/QueuesAnonsDto.html":{}},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto.anonymizes",{"_index":2531,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queuesanonservice",{"_index":2489,"title":{"injectables/QueuesAnonService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesdeletecontroller",{"_index":2493,"title":{"controllers/QueuesDeleteController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["queuesdeletedto",{"_index":2587,"title":{"classes/QueuesDeleteDto.html":{}},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["queuesdeletedto.orthancseriesids",{"_index":2606,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queuesdeleteservice",{"_index":2490,"title":{"injectables/QueuesDeleteService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerycontroller",{"_index":2494,"title":{"controllers/QueuesQueryController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["queuesquerydto",{"_index":2626,"title":{"classes/QueuesQueryDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesquerydto.series",{"_index":2648,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerydto.studies",{"_index":2646,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries",{"_index":2647,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.foreach((series",{"_index":2654,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.length",{"_index":2649,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseriesdto",{"_index":2635,"title":{"classes/QueuesQuerySeriesDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesqueryservice",{"_index":2364,"title":{"injectables/QueuesQueryService.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerystudy",{"_index":2645,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.foreach((study",{"_index":2652,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.length",{"_index":2650,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudydto",{"_index":2634,"title":{"classes/QueuesQueryStudyDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuestate",{"_index":2386,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["randomuuid",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":2077,"title":{},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"index.html":{}}}],["read_all",{"_index":2722,"title":{},"body":{"entities/Role.html":{}}}],["readablestream",{"_index":2954,"title":{},"body":{"classes/TmtvService.html":{}}}],["readall",{"_index":175,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["readallguard",{"_index":176,"title":{"guards/ReadAllGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["readonly",{"_index":1062,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":1061,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["redirect",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/docs/oauth2",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html')@redirect('/docs/oauth2",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["redis_address",{"_index":2575,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redis_port",{"_index":2577,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redisaddress",{"_index":1159,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["redisport",{"_index":1160,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["referring_physician_name",{"_index":3303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referringphysicianname",{"_index":3304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1304,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":376,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.firstname",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.lastname",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto})@public()@post('register",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["related",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{}}}],["relations",{"_index":2847,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":820,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('labelname",{"_index":1423,"title":{},"body":{"controllers/LabelsController.html":{}}}],["remove(id",{"_index":839,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["remove(labelname",{"_index":1410,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{}}}],["remove(name",{"_index":2838,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeanonjob",{"_index":2506,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(@param('uuid",{"_index":2534,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(uuid",{"_index":2515,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removechildren",{"_index":83,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removedeletejob",{"_index":2585,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(@param('uuid",{"_index":2609,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(uuid",{"_index":2593,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removejob",{"_index":21,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(@param('uuid",{"_index":2228,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["removejob(data",{"_index":55,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(uuid",{"_index":2197,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["removelabelfromrole",{"_index":2733,"title":{},"body":{"controllers/RolesController.html":{}}}],["removelabelfromrole(rolename",{"_index":2756,"title":{},"body":{"controllers/RolesController.html":{}}}],["removeoncomplete",{"_index":67,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removeonfail",{"_index":70,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removequeryjob",{"_index":2624,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(@param('uuid",{"_index":2655,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(uuid",{"_index":2631,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removerolelabel",{"_index":2823,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerolelabel(rolename",{"_index":2840,"title":{},"body":{"injectables/RolesService.html":{}}}],["repeat",{"_index":95,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["replace",{"_index":3367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["replacevalue",{"_index":2899,"title":{},"body":{"classes/TagAnon.html":{}}}],["reply",{"_index":1497,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":823,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["req['user",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":147,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibody({type",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":3039,"title":{},"body":{"controllers/UsersController.html":{}}}],["request(config",{"_index":1272,"title":{},"body":{"classes/HttpClient.html":{}}}],["request(option",{"_index":1258,"title":{},"body":{"classes/HttpClient.html":{}}}],["request.body",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers.accept",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.method",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.params.id",{"_index":911,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.params.labelname",{"_index":899,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["request.params.rolename",{"_index":920,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["request.query.userid",{"_index":917,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["request.url",{"_index":1087,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":149,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["request.user.role.name",{"_index":901,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.user.userid",{"_index":912,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["request['user",{"_index":2211,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["requestbuffer",{"_index":1194,"title":{},"body":{"classes/HttpClient.html":{}}}],["requested",{"_index":890,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["requested_procedure_description",{"_index":3298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestedproceduredescription",{"_index":2290,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["requesteduri",{"_index":1052,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["requesting_physician",{"_index":3301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestingphysician",{"_index":3302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmethod",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["requeststream",{"_index":1195,"title":{},"body":{"classes/HttpClient.html":{}}}],["requesttype",{"_index":1855,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["required",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"controllers/OauthConfigController.html":{},"entities/Option.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["res",{"_index":1257,"title":{},"body":{"classes/HttpClient.html":{},"miscellaneous/functions.html":{}}}],["res.setheader('content",{"_index":1260,"title":{},"body":{"classes/HttpClient.html":{}}}],["res.status(500).send('bad",{"_index":1268,"title":{},"body":{"classes/HttpClient.html":{}}}],["reset",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetorthanc",{"_index":1851,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resetorthanc(request",{"_index":1891,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resource",{"_index":2225,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["resourcetype",{"_index":1982,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["response",{"_index":1236,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.data",{"_index":1275,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.email",{"_index":1377,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.family_name",{"_index":1379,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.given_name",{"_index":1378,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.pipe(res",{"_index":1262,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.pipe(streamwriter).on('finish",{"_index":1273,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.headers['content",{"_index":1261,"title":{},"body":{"classes/HttpClient.html":{}}}],["responsetype",{"_index":1240,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["ressource",{"_index":1032,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["result",{"_index":107,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/TmtvService.html":{}}}],["results",{"_index":120,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":2222,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["results[id",{"_index":128,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["resume",{"_index":2672,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["retrieve",{"_index":1102,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancQueryController.html":{}}}],["retrieve(request",{"_index":2115,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["return",{"_index":104,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1635,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":530,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":2735,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.dto",{"_index":1174,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{}}}],["role.dto.ts",{"_index":985,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":993,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":987,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":992,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:23",{"_index":997,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":988,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:31",{"_index":991,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:35",{"_index":986,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:39",{"_index":994,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:43",{"_index":990,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:47",{"_index":989,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:51",{"_index":998,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":996,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{}}}],["role.entity",{"_index":2764,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["role.guard",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrthancController.html":{},"controllers/RolesController.html":{}}}],["role.guard.ts",{"_index":888,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:10",{"_index":896,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:6",{"_index":918,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.guard.ts:7",{"_index":895,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:9",{"_index":919,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.labels",{"_index":2857,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.filter((label",{"_index":2858,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.find((label",{"_index":2855,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.push(label",{"_index":2856,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.name",{"_index":3031,"title":{},"body":{"entities/User.html":{}}}],["role.name)@joincolumn({name",{"_index":3019,"title":{},"body":{"entities/User.html":{}}}],["role_label",{"_index":2716,"title":{},"body":{"entities/Role.html":{}}}],["role_name",{"_index":3020,"title":{},"body":{"entities/User.html":{}}}],["rolecount",{"_index":3117,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolecount[1",{"_index":3119,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolename",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":2728,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles.controller",{"_index":2817,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":2763,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/role.entity",{"_index":1187,"title":{},"body":{"classes/GetUserDto.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{}}}],["roles/roles.service",{"_index":897,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["rolescontroller",{"_index":2726,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":2769,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":243,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesrepository",{"_index":2826,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":894,"title":{"injectables/RolesService.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rolesservice.getrolelabels(role)).map",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role})@apiresponse({status",{"_index":2750,"title":{},"body":{"controllers/RolesController.html":{}}}],["router",{"_index":551,"title":{"classes/Router.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["routes",{"_index":757,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["rtss",{"_index":3361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rtssbuffer",{"_index":1559,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rtssdata",{"_index":2993,"title":{},"body":{"classes/TmtvService.html":{}}}],["rtssid",{"_index":1557,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rule",{"_index":585,"title":{"classes/Rule.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.value.tostring",{"_index":693,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.value.tostring().includes(value.tostring",{"_index":696,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.valuerepresentation",{"_index":690,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule_condition",{"_index":600,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rule_condition'})@isenum(rulecondition",{"_index":2864,"title":{},"body":{"classes/Router.html":{}}}],["rulecondition",{"_index":579,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["rulecondition.and",{"_index":599,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rules",{"_index":602,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["ruletoboolean",{"_index":625,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ruletoboolean(rule",{"_index":653,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["run",{"_index":3417,"title":{},"body":{"index.html":{}}}],["runinference",{"_index":2927,"title":{},"body":{"classes/TmtvService.html":{}}}],["runinference(fragmented",{"_index":2942,"title":{},"body":{"classes/TmtvService.html":{}}}],["rxjs",{"_index":1351,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1798,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["salttest",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":907,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["sas",{"_index":3467,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":3406,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2798,"title":{},"body":{"controllers/RolesController.html":{}}}],["scheme",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":497,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1491,"title":{},"body":{"modules/MailModule.html":{}}}],["seed",{"_index":1669,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}}}],["seeder",{"_index":3200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":2879,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["seedermodule",{"_index":244,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":2877,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedservice",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedservice.seed",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":3362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["segbuffer",{"_index":1564,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["segdata",{"_index":2996,"title":{},"body":{"classes/TmtvService.html":{}}}],["segid",{"_index":1562,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["send",{"_index":700,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["send(error.response.statusmessage",{"_index":1271,"title":{},"body":{"classes/HttpClient.html":{}}}],["sendchangepasswordemail",{"_index":1506,"title":{},"body":{"injectables/MailService.html":{}}}],["sendchangepasswordemail(email",{"_index":1510,"title":{},"body":{"injectables/MailService.html":{}}}],["senddicomtoprocessing",{"_index":2928,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskasrtsstoorthanc",{"_index":2929,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskassegtoorthanc",{"_index":2930,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmasktoorthancas",{"_index":731,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["sendtodestination",{"_index":626,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtodestination(destination",{"_index":655,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtopeer(destination.name",{"_index":737,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sent",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["sent'})@apiresponse({status",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["seq",{"_index":1983,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["sequence_name",{"_index":3314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sequencename",{"_index":3315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series",{"_index":707,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["series.answer.ts",{"_index":2392,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["series.answer.ts:10",{"_index":2402,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:49",{"_index":2412,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:5",{"_index":2413,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:53",{"_index":2410,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:57",{"_index":2407,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:6",{"_index":2405,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:61",{"_index":2409,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:65",{"_index":2411,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:69",{"_index":2408,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:7",{"_index":2403,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:8",{"_index":2404,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:9",{"_index":2406,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.length",{"_index":1109,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series.maindicomtags.modality",{"_index":712,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["series[0].id",{"_index":1112,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series_date",{"_index":3305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_description",{"_index":2343,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_description'})@isstring",{"_index":2447,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_id_1",{"_index":2614,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_id_2",{"_index":2615,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_instance_uid",{"_index":2347,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_instance_uid'})@isstring",{"_index":2449,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_number",{"_index":2345,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_number'})@isstring",{"_index":2451,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_time",{"_index":3307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_type",{"_index":3328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdate",{"_index":3306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdescription",{"_index":2344,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesdetails",{"_index":708,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancQueryController.html":{}}}],["seriesdetails.find",{"_index":720,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdetails.map",{"_index":711,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdto",{"_index":2132,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.modality",{"_index":2136,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.protocolname",{"_index":2137,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesdescription",{"_index":2138,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesinstanceuid",{"_index":2140,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesnumber",{"_index":2139,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.studyuid",{"_index":2135,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesguard",{"_index":207,"title":{"injectables/SeriesGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"injectables/SeriesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["seriesinstanceuid",{"_index":2348,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesnumber",{"_index":2346,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriestime",{"_index":3308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriestype",{"_index":3329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesuid",{"_index":2401,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["server",{"_index":3407,"title":{},"body":{"index.html":{}}}],["service",{"_index":612,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["set",{"_index":1521,"title":{},"body":{"injectables/MailService.html":{}}}],["set(uuids",{"_index":115,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["setaccessionnumber",{"_index":2291,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswerid",{"_index":2292,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswernumber",{"_index":2293,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setctorthancseriesid",{"_index":2931,"title":{},"body":{"classes/TmtvService.html":{}}}],["setctorthancseriesid(orthancseriesid",{"_index":2948,"title":{},"body":{"classes/TmtvService.html":{}}}],["setdescription('the",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setforwardedadress",{"_index":1199,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedadress(address",{"_index":1219,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol",{"_index":1200,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol(protocol",{"_index":1222,"title":{},"body":{"classes/HttpClient.html":{}}}],["setlevel",{"_index":1039,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setmaskid",{"_index":1532,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmaskid(maskid",{"_index":1544,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmetadata(is_public_key",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmodalitiesinstudy",{"_index":2460,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setmodality",{"_index":2394,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofseriesrelatedinstances",{"_index":2395,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofstudyrelatedinstances",{"_index":2461,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setnumberofstudyrelatedseries",{"_index":2462,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setoriginaet",{"_index":2294,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpassword",{"_index":1201,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpassword(password",{"_index":1225,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpatientid",{"_index":2295,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpatientname",{"_index":2296,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpetid",{"_index":1533,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setpetid(petid",{"_index":1546,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setptorthancseriesid",{"_index":2932,"title":{},"body":{"classes/TmtvService.html":{}}}],["setptorthancseriesid(orthancseriesid",{"_index":2950,"title":{},"body":{"classes/TmtvService.html":{}}}],["setrequestedproceduredescription",{"_index":2297,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setseriesdescription",{"_index":2396,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesinstanceuid",{"_index":2397,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesnumber",{"_index":2398,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setstudydate",{"_index":2298,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudydescription",{"_index":2299,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudyinstanceuid",{"_index":2399,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["settitle('gaelo",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupanonworker",{"_index":3191,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupanonworker(orthancclient",{"_index":3383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupdeleteworker",{"_index":3193,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupdeleteworker(orthancclient",{"_index":3396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupprocessingworker",{"_index":3187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupprocessingworker(orthancclient",{"_index":3397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupqueryworker",{"_index":3197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupqueryworker(orthancclient",{"_index":3395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupworkers",{"_index":3176,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupworkers(app",{"_index":3380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seturl",{"_index":1202,"title":{},"body":{"classes/HttpClient.html":{}}}],["seturl(url",{"_index":1227,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername",{"_index":1203,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername(username",{"_index":1229,"title":{},"body":{"classes/HttpClient.html":{}}}],["setversion('2.0",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdownorthanc",{"_index":1852,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["shutdownorthanc(request",{"_index":1894,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["side",{"_index":3408,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":499,"title":{},"body":{"modules/AuthModule.html":{}}}],["sop_instance_uid",{"_index":3352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sopclassuid",{"_index":3382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sopinstanceuid",{"_index":3353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["special",{"_index":871,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["specific",{"_index":1098,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["sponsors",{"_index":3435,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["sqlite3",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["src/.../anon.worker.ts",{"_index":3370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../autorouting.enum.ts",{"_index":3266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../build_docs.ts",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../check",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete.worker.ts",{"_index":3375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":3267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":3371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":3372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../or.guard.ts",{"_index":3373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwords.ts",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../processing.worker.ts",{"_index":3376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.worker.ts",{"_index":3374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:25",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:91",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:86",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/change",{"_index":855,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1470,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1474,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1472,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/lost",{"_index":1477,"title":{},"body":{"classes/LostPassworDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":2693,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":2697,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":2699,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":2695,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":1324,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1381,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":1385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":1383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1461,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:16",{"_index":1465,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":1463,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/autorouting/autorouting.entity.ts",{"_index":548,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.entity.ts:104",{"_index":559,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:109",{"_index":554,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:115",{"_index":565,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:25",{"_index":2870,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:30",{"_index":2874,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:35",{"_index":2872,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:40",{"_index":2868,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:47",{"_index":1022,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:52",{"_index":1023,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:59",{"_index":2865,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:74",{"_index":2866,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:87",{"_index":2863,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:94",{"_index":561,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:99",{"_index":563,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.enum.ts",{"_index":3268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/autorouting/autorouting.handler.ts",{"_index":610,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.handler.ts:118",{"_index":650,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:133",{"_index":659,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:196",{"_index":652,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:212",{"_index":638,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:24",{"_index":661,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:26",{"_index":672,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:34",{"_index":631,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:45",{"_index":634,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:49",{"_index":640,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:60",{"_index":644,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:67",{"_index":648,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:74",{"_index":642,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:83",{"_index":646,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:92",{"_index":654,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autoroutings.controller.ts",{"_index":754,"title":{},"body":{"controllers/AutoroutingsController.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.controller.ts:35",{"_index":770,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:50",{"_index":786,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:63",{"_index":775,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:77",{"_index":783,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:90",{"_index":779,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.module.ts",{"_index":812,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["src/autorouting/autoroutings.service.ts",{"_index":816,"title":{},"body":{"injectables/AutoroutingsService.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.service.ts:13",{"_index":826,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:20",{"_index":834,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:24",{"_index":836,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:32",{"_index":838,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:38",{"_index":829,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:43",{"_index":842,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:48",{"_index":840,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:53",{"_index":833,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:59",{"_index":831,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/dto/create",{"_index":921,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["src/autorouting/dto/orthanc",{"_index":1979,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["src/build_docs.ts",{"_index":3162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":3165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":3359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/guards/check",{"_index":886,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["src/guards/dicom",{"_index":1025,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts",{"_index":1280,"title":{},"body":{"injectables/InstanceGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts:9",{"_index":1283,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["src/guards/jwt",{"_index":1317,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts",{"_index":1299,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts:10",{"_index":1305,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/jwt.guard.ts:15",{"_index":1306,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/local.guard.ts",{"_index":1458,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard.ts",{"_index":1787,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/guards/roles.guard.ts",{"_index":133,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:111",{"_index":853,"title":{},"body":{"guards/CdBurnerGuard.html":{}}}],["src/guards/roles.guard.ts:124",{"_index":545,"title":{},"body":{"guards/AutoRoutingGuard.html":{}}}],["src/guards/roles.guard.ts:137",{"_index":2692,"title":{},"body":{"guards/ReadAllGuard.html":{}}}],["src/guards/roles.guard.ts:20",{"_index":178,"title":{},"body":{"guards/AnonymizeGuard.html":{}}}],["src/guards/roles.guard.ts:33",{"_index":1151,"title":{},"body":{"guards/ExportGuard.html":{}}}],["src/guards/roles.guard.ts:46",{"_index":2332,"title":{},"body":{"guards/QueryGuard.html":{}}}],["src/guards/roles.guard.ts:59",{"_index":544,"title":{},"body":{"guards/AutoQueryGuard.html":{}}}],["src/guards/roles.guard.ts:7",{"_index":1279,"title":{},"body":{"guards/ImportGuard.html":{}}}],["src/guards/roles.guard.ts:72",{"_index":1020,"title":{},"body":{"guards/DeleteGuard.html":{}}}],["src/guards/roles.guard.ts:85",{"_index":142,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/roles.guard.ts:98",{"_index":1582,"title":{},"body":{"guards/ModifyGuard.html":{}}}],["src/guards/series.guard.ts",{"_index":2890,"title":{},"body":{"injectables/SeriesGuard.html":{},"coverage.html":{}}}],["src/guards/series.guard.ts:10",{"_index":2891,"title":{},"body":{"injectables/SeriesGuard.html":{}}}],["src/guards/study.guard.ts",{"_index":2892,"title":{},"body":{"guards/StudyGuard.html":{},"coverage.html":{}}}],["src/guards/study.guard.ts:15",{"_index":2895,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:9",{"_index":2894,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/interceptors/not",{"_index":1583,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/public.ts",{"_index":3172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/labels/label.entity.ts",{"_index":1395,"title":{},"body":{"entities/Label.html":{},"coverage.html":{}}}],["src/labels/label.entity.ts:8",{"_index":1397,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/labels.controller.ts",{"_index":1403,"title":{},"body":{"controllers/LabelsController.html":{},"coverage.html":{}}}],["src/labels/labels.controller.ts:27",{"_index":1409,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:37",{"_index":1412,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:47",{"_index":1407,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.dto.ts",{"_index":1400,"title":{},"body":{"classes/LabelDto.html":{},"coverage.html":{}}}],["src/labels/labels.dto.ts:7",{"_index":1401,"title":{},"body":{"classes/LabelDto.html":{}}}],["src/labels/labels.module.ts",{"_index":1433,"title":{},"body":{"modules/LabelsModule.html":{}}}],["src/labels/labels.service.ts",{"_index":1437,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/labels/labels.service.ts:14",{"_index":1445,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:18",{"_index":1447,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:22",{"_index":1449,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:27",{"_index":1450,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:31",{"_index":1444,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:8",{"_index":1441,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/mail/mail.module.ts",{"_index":1481,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1505,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:12",{"_index":1511,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":1509,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/oauth",{"_index":1599,"title":{},"body":{"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["src/options/dto/create",{"_index":927,"title":{},"body":{"classes/CreateOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/get",{"_index":1153,"title":{},"body":{"classes/GetOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/update",{"_index":3002,"title":{},"body":{"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["src/options/option.entity.ts",{"_index":1691,"title":{},"body":{"entities/Option.html":{},"coverage.html":{}}}],["src/options/option.entity.ts:10",{"_index":1736,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:14",{"_index":1694,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:18",{"_index":1700,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:22",{"_index":1697,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:26",{"_index":1702,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:30",{"_index":1738,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:34",{"_index":1723,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:38",{"_index":1713,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:42",{"_index":1721,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:46",{"_index":1716,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:50",{"_index":1718,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:54",{"_index":1710,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:58",{"_index":1726,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:62",{"_index":1733,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:66",{"_index":1731,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:70",{"_index":1708,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:74",{"_index":1729,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:78",{"_index":1705,"title":{},"body":{"entities/Option.html":{}}}],["src/options/options.controller.ts",{"_index":1741,"title":{},"body":{"controllers/OptionsController.html":{},"coverage.html":{}}}],["src/options/options.controller.ts:28",{"_index":1743,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.controller.ts:52",{"_index":1748,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.module.ts",{"_index":1768,"title":{},"body":{"modules/OptionsModule.html":{}}}],["src/options/options.service.ts",{"_index":1772,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/options/options.service.ts:15",{"_index":1776,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:19",{"_index":1779,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:24",{"_index":1777,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:9",{"_index":1774,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/orthanc/dto/query",{"_index":2333,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["src/orthanc/orthanc",{"_index":1839,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts",{"_index":1921,"title":{},"body":{"controllers/OrthancController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts:36",{"_index":1946,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:55",{"_index":1943,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:65",{"_index":1940,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:75",{"_index":1934,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:85",{"_index":1931,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:95",{"_index":1937,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.module.ts",{"_index":2067,"title":{},"body":{"modules/OrthancModule.html":{}}}],["src/orthanc/query",{"_index":2282,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["src/orthanc/tag",{"_index":2897,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["src/orthanc/utils.ts",{"_index":3182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/processing/mask",{"_index":1523,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["src/processing/processing",{"_index":2241,"title":{},"body":{"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts",{"_index":2176,"title":{},"body":{"controllers/ProcessingController.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts:113",{"_index":2185,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:133",{"_index":2200,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:41",{"_index":2188,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:52",{"_index":2196,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:75",{"_index":2192,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.file.ts",{"_index":2231,"title":{},"body":{"classes/ProcessingFile.html":{},"coverage.html":{}}}],["src/processing/processing.file.ts:10",{"_index":2238,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:14",{"_index":2237,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:2",{"_index":2236,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:3",{"_index":2235,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.module.ts",{"_index":2254,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["src/processing/processing.worker.ts",{"_index":3186,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/processing/tmtv.service.ts",{"_index":2922,"title":{},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["src/processing/tmtv.service.ts:10",{"_index":2937,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:103",{"_index":2947,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:109",{"_index":2940,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:11",{"_index":2934,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:12",{"_index":2938,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:13",{"_index":2935,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:15",{"_index":2936,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:17",{"_index":2933,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:24",{"_index":2951,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:28",{"_index":2949,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:32",{"_index":2941,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:36",{"_index":2945,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:52",{"_index":2939,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:69",{"_index":2943,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:97",{"_index":2946,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/queues/anon/anon.worker.ts",{"_index":3189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/anon/queue",{"_index":2502,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["src/queues/delete/delete.worker.ts",{"_index":3192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/delete/queue",{"_index":2581,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["src/queues/query/query.worker.ts",{"_index":3194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/query/queue",{"_index":2621,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["src/queues/queue.module.ts",{"_index":2491,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queues/queue.service.ts",{"_index":6,"title":{},"body":{"injectables/AbstractQueueService.html":{},"coverage.html":{}}}],["src/queues/queue.service.ts:101",{"_index":42,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:105",{"_index":52,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:12",{"_index":33,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:23",{"_index":56,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:38",{"_index":47,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:6",{"_index":25,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:75",{"_index":39,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:82",{"_index":54,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:90",{"_index":43,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:97",{"_index":41,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/roles/dto/create",{"_index":984,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/get",{"_index":1170,"title":{},"body":{"classes/GetRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/with",{"_index":3138,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts",{"_index":2701,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts:13",{"_index":2713,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:17",{"_index":2704,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:21",{"_index":2712,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:25",{"_index":2721,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:29",{"_index":2706,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:33",{"_index":2711,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:37",{"_index":2703,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:41",{"_index":2718,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:45",{"_index":2710,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:49",{"_index":2708,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:53",{"_index":2723,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:58",{"_index":2717,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:9",{"_index":2720,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/roles.controller.ts",{"_index":2727,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:101",{"_index":2761,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:117",{"_index":2738,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:133",{"_index":2755,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:148",{"_index":2758,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:50",{"_index":2748,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:61",{"_index":2752,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:72",{"_index":2742,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:87",{"_index":2745,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":2816,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":2819,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:17",{"_index":2831,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:21",{"_index":2832,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:28",{"_index":2834,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:32",{"_index":2837,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:36",{"_index":2830,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":2839,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:44",{"_index":2843,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:48",{"_index":2828,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":2835,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":2841,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:82",{"_index":2842,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":2825,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/seeder/seed.ts",{"_index":3199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeder/seeder.module.ts",{"_index":2878,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/seeder/seeder.service.ts",{"_index":2883,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/seeder/seeder.service.ts:17",{"_index":2885,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/seeder/seeder.service.ts:9",{"_index":2884,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/tasks/orthanc",{"_index":2080,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["src/tasks/query",{"_index":2359,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":2913,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/dto/create",{"_index":1000,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":1177,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":3004,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":3006,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:17",{"_index":3012,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":3011,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":3014,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":3017,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:43",{"_index":3009,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:51",{"_index":3025,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":3021,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":3027,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":3028,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":3033,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:109",{"_index":3045,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:123",{"_index":3041,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":3046,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:66",{"_index":3050,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:83",{"_index":3052,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":3089,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":3091,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":3110,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":3101,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":3104,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":3108,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":3106,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:62",{"_index":3113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":3115,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":3100,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":3111,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":3112,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":3097,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/check",{"_index":3201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/http.client.ts",{"_index":1190,"title":{},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["src/utils/http.client.ts:11",{"_index":1207,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:123",{"_index":1234,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:143",{"_index":1218,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:152",{"_index":1216,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:39",{"_index":1220,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:43",{"_index":1223,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:47",{"_index":1228,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:5",{"_index":1213,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:51",{"_index":1230,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:55",{"_index":1226,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:59",{"_index":1209,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:6",{"_index":1214,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:7",{"_index":1208,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:71",{"_index":1210,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:8",{"_index":1205,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:83",{"_index":1211,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:9",{"_index":1206,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:95",{"_index":1212,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/is",{"_index":3204,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.middleware.ts",{"_index":3206,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/orthanc",{"_index":3207,"title":{},"body":{"coverage.html":{}}}],["src/utils/passwords.ts",{"_index":3210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/processing.client.ts",{"_index":3211,"title":{},"body":{"coverage.html":{}}}],["src/validators/string",{"_index":1286,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["stable_patient",{"_index":3280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_series",{"_index":3276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_study",{"_index":3278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablepatient",{"_index":3281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stableseries",{"_index":3277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablestudy",{"_index":3279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":3418,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3421,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3423,"title":{},"body":{"index.html":{}}}],["started",{"_index":3400,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3412,"title":{},"body":{"index.html":{}}}],["starthour",{"_index":3388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startminute",{"_index":3385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":96,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs",{"_index":97,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs.foreach((job",{"_index":99,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statements",{"_index":3148,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":85,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["station_name",{"_index":3310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationname",{"_index":3311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["status(error.response.status",{"_index":1270,"title":{},"body":{"classes/HttpClient.html":{}}}],["stay",{"_index":3443,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1320,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["stream",{"_index":1256,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamanswertores",{"_index":1196,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback",{"_index":1204,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback(url",{"_index":1231,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamwriter",{"_index":1232,"title":{},"body":{"classes/HttpClient.html":{}}}],["strict",{"_index":1504,"title":{},"body":{"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string|null",{"_index":2436,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["strstr",{"_index":1040,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(haystack",{"_index":1054,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘kevin",{"_index":1142,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘name@example.com",{"_index":1144,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studies",{"_index":1069,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studies/series",{"_index":1105,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["study",{"_index":964,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"controllers/QueuesQueryController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/enumerations.html":{}}}],["study'})@column({default",{"_index":1719,"title":{},"body":{"entities/Option.html":{}}}],["study'})@isstring",{"_index":965,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["study.answer.ts",{"_index":2456,"title":{},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["study.answer.ts:43",{"_index":2466,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:47",{"_index":2469,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:5",{"_index":2470,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:51",{"_index":2468,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:57",{"_index":2467,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:6",{"_index":2464,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:7",{"_index":2465,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:8",{"_index":2463,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.guard",{"_index":1284,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["study.ts",{"_index":3202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["study_date",{"_index":3292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_description",{"_index":2352,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_description'})@isstring",{"_index":2483,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_id",{"_index":3295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_instance_uid",{"_index":2355,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_instance_uid'})@isstring",{"_index":2485,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_time",{"_index":3293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_uid",{"_index":2339,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_uid'})@isstring",{"_index":2453,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["studydate",{"_index":2300,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydescription",{"_index":2301,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydetails",{"_index":2143,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto",{"_index":2142,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.accessionnb",{"_index":2150,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.modality",{"_index":2148,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientid",{"_index":2146,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientname",{"_index":2145,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydate",{"_index":2147,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydescription",{"_index":2149,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studyinstanceuid",{"_index":2151,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studyguard",{"_index":205,"title":{"guards/StudyGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{}}}],["studyid",{"_index":3296,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["studyinstanceuid",{"_index":2356,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studysubstring",{"_index":1079,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.indexof",{"_index":1083,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.replace",{"_index":1081,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.substr(0",{"_index":1085,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studytime",{"_index":3294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyuid",{"_index":1084,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["sub",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["subject",{"_index":1516,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1311,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"interfaces/UserInfoResponse.html":{}}}],["super(anonqueue",{"_index":2578,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["super(deletequeue",{"_index":2620,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["super(queryqueue",{"_index":2680,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["super.canactivate(context",{"_index":1316,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3436,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3454,"title":{},"body":{"modules.html":{}}}],["swaggermodule.createdocument(app",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1554,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["synchronize",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":3214,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3213,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2900,"title":{},"body":{"classes/TagAnon.html":{}}}],["taganon",{"_index":2896,"title":{"classes/TagAnon.html":{}},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["tagpolicies",{"_index":2903,"title":{},"body":{"classes/TagAnon.html":{},"miscellaneous/enumerations.html":{}}}],["tagpolicy",{"_index":2901,"title":{},"body":{"classes/TagAnon.html":{}}}],["takewhile",{"_index":1797,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["takewhile((val",{"_index":1819,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["tasks/tasks.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":245,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["template",{"_index":1498,"title":{},"body":{"modules/MailModule.html":{}}}],["templates",{"_index":1501,"title":{},"body":{"modules/MailModule.html":{}}}],["temporal_position_identifier",{"_index":3350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporalpositionidentifier",{"_index":3351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test:covsupport",{"_index":3428,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3427,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1803,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1799,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["tests",{"_index":3425,"title":{},"body":{"index.html":{}}}],["text",{"_index":1296,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["thanks",{"_index":3434,"title":{},"body":{"index.html":{}}}],["then((ctseriesid",{"_index":2973,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((ptseriesid",{"_index":2977,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((response",{"_index":1259,"title":{},"body":{"classes/HttpClient.html":{}}}],["then(async",{"_index":2962,"title":{},"body":{"classes/TmtvService.html":{}}}],["third",{"_index":1322,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["this.accessionnumber",{"_index":2328,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answerid",{"_index":2323,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answernumber",{"_index":2324,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.authservice.createconfirmationtoken(newuser",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createconfirmationtoken(user",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req['user",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1469,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verifyconfirmationtoken(token",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoroutingconfigs",{"_index":688,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingconfigs.filter",{"_index":747,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingservice.create(createautoroutingdto",{"_index":799,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.disable(id",{"_index":809,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.enable(id",{"_index":806,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findall",{"_index":689,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findoneorfail(id",{"_index":802,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.remove(id",{"_index":803,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingsrepository.delete(id",{"_index":850,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.find",{"_index":845,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.findoneorfail",{"_index":846,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.save(autorouting",{"_index":847,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.update(id",{"_index":849,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.configservice.get('app_url')}:${this.configservice.get('port_client')}/change",{"_index":1513,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('orthanc_address",{"_index":1758,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_password",{"_index":1761,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_port",{"_index":1759,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_username",{"_index":1760,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('redis_address",{"_index":1762,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.configservice.get('redis_port",{"_index":1763,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.createdfiles",{"_index":2960,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.foreach((file",{"_index":2999,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.push(new",{"_index":2965,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctorthancseriesid",{"_index":2959,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctseriesid",{"_index":2974,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.deferguard(guard",{"_index":1815,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.eventemitter.emit('autorouting.updated",{"_index":848,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.eventemitter.emit('orthanc",{"_index":2096,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.findone(id",{"_index":3126,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneorfail(id",{"_index":851,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.forwardedaddress",{"_index":1248,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.forwardedprotocol",{"_index":1250,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.fragmentedmask",{"_index":2992,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.rtss",{"_index":2994,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.seg",{"_index":2997,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.getjobs",{"_index":2279,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.getjobs(uuid",{"_index":119,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.getoptions(url",{"_index":1252,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.getpatientid",{"_index":1106,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getseriesinstanceuid",{"_index":1107,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getstudyinstanceuid",{"_index":1118,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuid(this.pathname",{"_index":1078,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuserinfourl(wellknown",{"_index":1371,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.getwellknown(decoded.iss",{"_index":1370,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.guardisobservable(guardval",{"_index":1826,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guardispromise(guardval",{"_index":1824,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards",{"_index":1810,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards.map",{"_index":1814,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.handleautoroutingupdated",{"_index":687,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.httpservice.get(iss",{"_index":1359,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.httpservice.get(url",{"_index":1375,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.id",{"_index":2239,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.issendable(autorouting.router",{"_index":743,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.jwtservice.decode(token",{"_index":1369,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.jwtservice.signasync(payload",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.labelservice.findonebyorfail(label",{"_index":2811,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelservice.islabelexist(labeldto.name",{"_index":2802,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelsrepository.delete(labelname",{"_index":1456,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.find",{"_index":1452,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneby",{"_index":1455,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findonebyorfail",{"_index":1453,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneorfail",{"_index":2854,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.labelsrepository.save(label",{"_index":1457,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsservice.create(labeldto",{"_index":1430,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findall",{"_index":1420,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findonebyorfail(labelname",{"_index":1424,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.islabelexist(labeldto.name",{"_index":1427,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.remove(labelname",{"_index":1425,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.lastchanges",{"_index":2089,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.lastchanges.tostring",{"_index":2093,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.level",{"_index":1065,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{}}}],["this.levelmapping[payload.changetype",{"_index":740,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.mailerservice.sendmail",{"_index":1515,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendchangepasswordemail",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendchangepasswordemail(user.email",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.maskid",{"_index":1551,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.modalitiesinstudy",{"_index":2471,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.modality",{"_index":2439,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.modref.get(guard",{"_index":1812,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.numberofseriesrelatedinstances",{"_index":2442,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofstudyrelatedinstances",{"_index":2473,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.numberofstudyrelatedseries",{"_index":2472,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.oauthconfigservice.addoauthconfig(oauthconfigdto",{"_index":1654,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.deleteoauthconfig(name",{"_index":1648,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyauthorizationurl(authorizationurl",{"_index":1366,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.oauthconfigservice.findonebyname",{"_index":1651,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyname(name",{"_index":1646,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.getoauthconfig",{"_index":1642,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.seed",{"_index":2889,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.oauthconfigsrepository.create",{"_index":1689,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.create(oauthconfigdto",{"_index":1685,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.delete",{"_index":1684,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.find",{"_index":1683,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.findone",{"_index":1682,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(config",{"_index":1686,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(option",{"_index":1690,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.optionrepository.find())[0",{"_index":2376,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.optionservice.getoptions",{"_index":1757,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionservice.seed",{"_index":2888,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.optionservice.update(options",{"_index":1765,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionsrepository.create",{"_index":1783,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.findonebyorfail",{"_index":1781,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.insert(option",{"_index":1784,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.update(1",{"_index":1782,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.originaet",{"_index":2325,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.orthancclient",{"_index":736,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{}}}],["this.orthancclient.findinorthanc",{"_index":1953,"title":{},"body":{"controllers/OrthancController.html":{}}}],["this.orthancclient.getchangessince",{"_index":2092,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getlastchanges()).last",{"_index":2090,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getorthancdetails(level",{"_index":741,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.getseriesdetailsofstudy(orthancid",{"_index":709,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.lookup(getseriesinstanceuid",{"_index":1108,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.lookup(getstudyinstanceuid",{"_index":1120,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.queryseriesinaet",{"_index":2134,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.querystudiesinaet",{"_index":2144,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.senddicomtoorthanc(rtssdata",{"_index":2995,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.orthancclient.senddicomtoorthanc(segdata",{"_index":2998,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.password",{"_index":1245,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.pathname",{"_index":1090,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/series",{"_index":1071,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/studies",{"_index":1070,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.patientid",{"_index":2327,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.patientname",{"_index":2326,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.petid",{"_index":1552,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.petseriesorthancid",{"_index":1553,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processevent(autorouting",{"_index":752,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingclient",{"_index":2971,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.createdicom(result",{"_index":2964,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.deleteressource(file.gettype",{"_index":3000,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.executeinference('pt_seg_attentionunet",{"_index":2980,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.fragmentmask",{"_index":2989,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingqueue",{"_index":2270,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.add(jobid",{"_index":2277,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.getjobs(state",{"_index":2278,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.obliterate",{"_index":2275,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.remove(uuid",{"_index":2276,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.resume",{"_index":2274,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueueservice.addjob",{"_index":2226,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.addjob(null",{"_index":725,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingqueueservice.flush",{"_index":2208,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getalluuids",{"_index":2212,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getjobs(undefined",{"_index":2221,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser",{"_index":2218,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser(userid",{"_index":2213,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.removejob(uuid",{"_index":2229,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingservice.creatertssfrommask",{"_index":1558,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.createsegfrommask",{"_index":1563,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('rtss",{"_index":1561,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('seg",{"_index":1566,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.fragmentmask",{"_index":1571,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getmaskdicomorientation",{"_index":1556,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getrtss(rtssid",{"_index":1560,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getseg(segid",{"_index":1565,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getstatsmaskseries",{"_index":1569,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.thresholdmask",{"_index":1577,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.ptorthancseriesid",{"_index":2958,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ptseriesid",{"_index":2978,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.query",{"_index":1092,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['0020000d",{"_index":1076,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['studyinstanceuid",{"_index":1077,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020",{"_index":1064,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020'].replace",{"_index":1072,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['0020000d",{"_index":1067,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['studyinstanceuid",{"_index":1068,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.queue",{"_index":64,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.add(data['uuid",{"_index":66,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.close",{"_index":116,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs",{"_index":74,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs(state",{"_index":98,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.ispaused",{"_index":2683,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.obliterate",{"_index":117,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.pause",{"_index":2681,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.remove(job.id",{"_index":82,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.resume",{"_index":2682,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queuequeryservice.ispaused",{"_index":2387,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.pause",{"_index":2389,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.resume",{"_index":2388,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuesanonservice.addjob",{"_index":2533,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.checkifuseridhasjobs(user.userid",{"_index":2528,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.flush",{"_index":2521,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getalluuids",{"_index":2522,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getjobsforuuid(uuid",{"_index":2526,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(user.userid",{"_index":2525,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(userid",{"_index":2523,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.removejob",{"_index":2535,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesdeleteservice.addjob",{"_index":2608,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.checkifuseridhasjobs(user.userid",{"_index":2604,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.flush",{"_index":2599,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getalluuids",{"_index":2600,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getjobsforuuid(uuid",{"_index":2603,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser",{"_index":2602,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser(userid",{"_index":2601,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.removejob",{"_index":2610,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesqueryservice.addjob",{"_index":2653,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.checkifuseridhasjobs(user.userid",{"_index":2644,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.flush",{"_index":2639,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getalluuids",{"_index":2640,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getjobsforuuid(uuid",{"_index":2643,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(user.userid",{"_index":2642,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(userid",{"_index":2641,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.removejob",{"_index":2656,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1313,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.replacevalue",{"_index":2909,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.requestbuffer(url",{"_index":1276,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.requestedproceduredescription",{"_index":2331,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.requeststream(url",{"_index":1274,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.roleservice.addrolelabel(rolename",{"_index":2804,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.create(createroledto",{"_index":2786,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findall",{"_index":2775,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findallwithlabels",{"_index":2774,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(name",{"_index":2778,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(rolename",{"_index":2801,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(userdto.rolename",{"_index":3072,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.getrolelabels(rolename)).map",{"_index":2808,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(createroledto.name",{"_index":2784,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(name",{"_index":2795,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(userdto.rolename",{"_index":3083,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.remove(name",{"_index":2792,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.removerolelabel(rolename",{"_index":2812,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.update(name",{"_index":2797,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesrepository.create",{"_index":2859,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.delete(name",{"_index":2851,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.find",{"_index":2845,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneby",{"_index":2849,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findonebyorfail",{"_index":2848,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneorfail",{"_index":2853,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.insert([admin",{"_index":2860,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.save(role",{"_index":2850,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.update(name",{"_index":2852,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice",{"_index":1123,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["this.rolesservice.getrolelabels(userrole)).map",{"_index":903,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["this.rolesservice.seed",{"_index":2886,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.sendtodestination(destination",{"_index":745,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.seriesdescription",{"_index":2440,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesinstanceuid",{"_index":2438,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesnumber",{"_index":2441,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.setlevel",{"_index":1093,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.strstr($requesteduri",{"_index":1080,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.studydate",{"_index":2330,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studydescription",{"_index":2329,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studyinstanceuid",{"_index":2437,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["this.tag",{"_index":2908,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.tagpolicy",{"_index":2907,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.type",{"_index":2240,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.update(id",{"_index":852,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["this.url",{"_index":1242,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.username",{"_index":1244,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.userservice.create(user)).id",{"_index":3086,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":3060,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findone(id",{"_index":3067,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyemail(userdto.email",{"_index":3074,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isexistinguser(id",{"_index":3080,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isroleused(role.name",{"_index":2789,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.userservice.remove(id",{"_index":3081,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.update(id",{"_index":3078,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":3134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":3129,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":3120,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findandcount",{"_index":3118,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":3121,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert([admin",{"_index":3137,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":3128,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":3122,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(userid",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(userdata.email",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.seed",{"_index":2887,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.usersservice.update(user.id",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserpassword(userid",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.validateissuer(wellknown",{"_index":1372,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.verifytoken(token",{"_index":1380,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["thresholdedmask",{"_index":1579,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setmaskid(thresholdedmaskid",{"_index":1580,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setpetid(this.petid",{"_index":1581,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmaskid",{"_index":1576,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdmaskto41",{"_index":1534,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["throw",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throwerror",{"_index":1794,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["throwonfirsterror",{"_index":1788,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["time",{"_index":2374,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tls",{"_index":1493,"title":{},"body":{"modules/MailModule.html":{}}}],["tmp",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["tmtv",{"_index":3360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tmtvjob",{"_index":728,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob(job",{"_index":3398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tmtvjobdto",{"_index":2246,"title":{"classes/TmtvJobDto.html":{}},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["tmtvservice",{"_index":2921,"title":{"classes/TmtvService.html":{}},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["toclassonly",{"_index":3142,"title":{},"body":{"classes/WithLabels.html":{}}}],["token",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MailService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["token')@apibody({type",{"_index":1626,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["token')@apiparam({name",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{}}}],["token')@apiresponse({status",{"_index":765,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["token')@delete('/modalities/*')@useguards(adminguard",{"_index":1862,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/patients/*')@useguards(deleteguard",{"_index":1967,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/peers/*')@useguards(adminguard",{"_index":1865,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/series/*')@useguards(deleteguard",{"_index":1970,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*')@useguards(deleteguard",{"_index":1973,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*/labels/*')@useguards(readallguard",{"_index":2158,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/dicom",{"_index":1929,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/instances/*')@useguards(undefined",{"_index":1933,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/labels/:labelname/studies')@useguards(checklabelinrole",{"_index":1945,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/modalities*')@useguards(undefined",{"_index":1936,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/patients/*')@useguards(readallguard",{"_index":2164,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/peers*')@useguards(exportguard",{"_index":2024,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@get('/peers/*/system')@useguards(adminguard",{"_index":1883,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/plugins')@useguards(adminguard",{"_index":1886,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/queries/*/answers*')@useguards(queryguard",{"_index":2107,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@get('/series/*')@useguards(undefined",{"_index":1939,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/studies/*')@useguards(undefined",{"_index":1942,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/system')@useguards(adminguard",{"_index":1889,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/tools/log",{"_index":1879,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/instances')@useguards(importguard",{"_index":2042,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["token')@post('/jobs/*')@useguards(adminguard",{"_index":1859,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/echo')@useguards(adminguard",{"_index":1856,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/modify')@useguards(modifyguard",{"_index":2052,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/modalities/*/query')@useguards(queryguard",{"_index":2104,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/modalities/*/store')@useguards(exportguard",{"_index":2015,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/modalities/:id/parsed",{"_index":2112,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/peers/*/store')@useguards(exportguard",{"_index":2018,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/series/*/modify')@useguards(modifyguard",{"_index":2055,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/studies/*/modify')@useguards(modifyguard",{"_index":2058,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/tasks/:user/export')@useguards(exportguard",{"_index":2021,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/tools/create",{"_index":2004,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["token')@post('/tools/find')@useguards(readallguard",{"_index":2161,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@post('/tools/reset')@useguards(adminguard",{"_index":1892,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/tools/shutdown')@useguards(adminguard",{"_index":1895,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/modalities/*')@useguards(adminguard",{"_index":1868,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/peers/*/')@useguards(adminguard",{"_index":1871,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/studies/*/labels/*')@useguards(readallguard",{"_index":2167,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@put('/tools/log",{"_index":1898,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["tokenexpiration",{"_index":3007,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":3444,"title":{},"body":{"index.html":{}}}],["transform",{"_index":798,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/WithLabels.html":{}}}],["transformer",{"_index":582,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["transport",{"_index":1489,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":2702,"title":{},"body":{"entities/Role.html":{}}}],["true})@get('/jobs/:id?')@useguards(adminguard",{"_index":1876,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["true})@get(':uuid",{"_index":2191,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["true})@isboolean",{"_index":967,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/WithLabels.html":{}}}],["true})@isemail",{"_index":1003,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["true})@isenum(autoroutingeventtype",{"_index":1985,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isenum(processingmask",{"_index":2918,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["true})@isnumber",{"_index":1992,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isstring",{"_index":995,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["true})@public()@get",{"_index":1637,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@transform",{"_index":3141,"title":{},"body":{"classes/WithLabels.html":{}}}],["true})@type(undefined",{"_index":2862,"title":{},"body":{"classes/Router.html":{}}}],["true})@useguards(adminguard)@delete(':name",{"_index":1633,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@useguards(undefined)@get(':uuid",{"_index":2512,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["true})@useguards(undefined)@get('test/:id",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["try",{"_index":1358,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["twitter",{"_index":3450,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'})@isenum(destinationtype",{"_index":1021,"title":{},"body":{"classes/Destination.html":{}}}],["typeof",{"_index":1298,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["typeorm",{"_index":568,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"entities/Label.html":{},"injectables/LabelsService.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm_type",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":2882,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([autorouting",{"_index":815,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["typeormmodule.forfeature([label",{"_index":1436,"title":{},"body":{"modules/LabelsModule.html":{}}}],["typeormmodule.forfeature([oauthconfig",{"_index":1665,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["typeormmodule.forfeature([option",{"_index":1771,"title":{},"body":{"modules/OptionsModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":2818,"title":{},"body":{"modules/RolesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":3225,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3411,"title":{},"body":{"index.html":{}}}],["uid",{"_index":1051,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["uk",{"_index":955,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["uk'})@column({default",{"_index":1706,"title":{},"body":{"entities/Option.html":{}}}],["uk'})@isstring",{"_index":956,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["unauthorized",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@apibody({schema",{"_index":2736,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@apibody({type",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apioauth2(['openid",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":773,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":1624,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@apibody({type",{"_index":2740,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete",{"_index":2187,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:labelname",{"_index":1411,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:name",{"_index":2744,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get",{"_index":1408,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@get('/:name",{"_index":2751,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@patch",{"_index":1747,"title":{},"body":{"controllers/OptionsController.html":{}}}],["unauthorized'})@useguards(adminguard)@post",{"_index":1406,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@put('/:name",{"_index":2760,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(anonymizeguard)@delete(':uuid",{"_index":2516,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@get",{"_index":785,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@usepipes(new",{"_index":768,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(deleteguard)@delete(':uuid",{"_index":2594,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["unauthorized'})@useguards(queryguard)@delete(':uuid",{"_index":2632,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(readallguard)@post",{"_index":2184,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:id",{"_index":3044,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:rolename/label/:label",{"_index":2757,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:id",{"_index":3049,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:rolename/labels",{"_index":2754,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@put('/:id",{"_index":3051,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('invalid",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('unknown",{"_index":1373,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["undefined",{"_index":46,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"controllers/OrthancController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/TagAnon.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({status",{"_index":784,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["undefined})@column({name",{"_index":557,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["undefined})@isarray",{"_index":2612,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["undefined})@isarray()@isobject({each",{"_index":2579,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["undefined})@manytomany(undefined",{"_index":2714,"title":{},"body":{"entities/Role.html":{}}}],["undefined})@useguards(undefined)@post('/:rolename/label",{"_index":2737,"title":{},"body":{"controllers/RolesController.html":{}}}],["unique",{"_index":3023,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":3424,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtStrategy.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{}}}],["update",{"_index":821,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":1764,"title":{},"body":{"controllers/OptionsController.html":{}}}],["update(id",{"_index":841,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(name",{"_index":2759,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(option",{"_index":1778,"title":{},"body":{"injectables/OptionsService.html":{}}}],["update(options",{"_index":1744,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updatelabels",{"_index":2156,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updatelabels(request",{"_index":2166,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updateloglevel",{"_index":1853,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateloglevel(request",{"_index":1897,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateoptiondto",{"_index":1745,"title":{"classes/UpdateOptionDto.html":{}},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["updateoptiondto})@apiresponse({status",{"_index":1746,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updateuserdto",{"_index":3003,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpassword",{"_index":3095,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassword(id",{"_index":3114,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercase",{"_index":867,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["url",{"_index":216,"title":{},"body":{"controllers/AppController.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["url('http://localhost:3000",{"_index":1086,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.pathname",{"_index":1091,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.replace('/api",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1103,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["useclass",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":2791,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefactory",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1418,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(anonymizeguard",{"_index":2527,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(autoroutingguard",{"_index":796,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["useguards(checklabelinrole",{"_index":1950,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(deleteguard",{"_index":1976,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/QueuesDeleteController.html":{}}}],["useguards(exportguard",{"_index":2027,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["useguards(importguard",{"_index":2045,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["useguards(jwtoauthguard",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(modifyguard",{"_index":2061,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["useguards(orguard([adminguard",{"_index":1960,"title":{},"body":{"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(orguard([instanceguard",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(orguard([readallguard",{"_index":1955,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(queryguard",{"_index":2125,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["useguards(readallguard",{"_index":2170,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{}}}],["usepipes",{"_index":788,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["usepipes(new",{"_index":797,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["user",{"_index":136,"title":{"entities/User.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":892,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["user'})@apiresponse({status",{"_index":3038,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":3055,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1001,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":1008,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1179,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:15",{"_index":1004,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1182,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:19",{"_index":1016,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1178,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:24",{"_index":1185,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:26",{"_index":1015,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":1184,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:7",{"_index":1006,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1181,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.email",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.entity",{"_index":3054,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":3062,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.id",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.lastname",{"_index":3063,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.password",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.role.admin",{"_index":165,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.anonymize",{"_index":153,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autoquery",{"_index":161,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autorouting",{"_index":174,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.cdburner",{"_index":171,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.delete",{"_index":164,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.export",{"_index":155,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.import",{"_index":150,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.modify",{"_index":168,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.query",{"_index":158,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.readall",{"_index":177,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.rolename",{"_index":3064,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.token",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tokenexpiration",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":2219,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["user1@mail.com",{"_index":1480,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user1@mail.com'})@isnotempty",{"_index":1478,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user@gaelo.com",{"_index":3136,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.email",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.firstname",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdata.lastname",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":3042,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.email",{"_index":3077,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.firstname",{"_index":3070,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.lastname",{"_index":3071,"title":{},"body":{"controllers/UsersController.html":{}}}],["userexists",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":40,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["userinforesponse",{"_index":1353,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{}}}],["usernamefield",{"_index":1467,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":900,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["users",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":3090,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":3053,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{}}}],["users/users.module",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["userscontroller",{"_index":3032,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":2771,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":246,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":3098,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":398,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithpasswordupdated",{"_index":3127,"title":{},"body":{"injectables/UsersService.html":{}}}],["utils",{"_index":1902,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["utils/check",{"_index":1060,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["utils/is",{"_index":2373,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["utils/logger.middleware",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/orthanc",{"_index":679,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["utils/passwords",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utils/processing.client",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["uuid",{"_index":50,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["uuidofuser",{"_index":2524,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuids",{"_index":112,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuidsofuser",{"_index":2217,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["uuidsofuser.includes(uuid",{"_index":2220,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["val",{"_index":1820,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["validate",{"_index":573,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(email",{"_index":1464,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(isnumberorstring",{"_index":593,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(payload",{"_index":1384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(text",{"_index":1294,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validate(token",{"_index":1340,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateissuer",{"_index":1329,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["validateissuer(wellknown",{"_index":1342,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validatenested",{"_index":574,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validateuser",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1321,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["validationarguments",{"_index":1291,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validationpipe",{"_index":789,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validationpipe())@post",{"_index":769,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validator",{"_index":575,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1297,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validatorconstraintinterface",{"_index":1288,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validators/string",{"_index":584,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value",{"_index":49,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/Destination.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value'})@validate(isnumberorstring",{"_index":2871,"title":{},"body":{"classes/Rule.html":{}}}],["value_representation",{"_index":591,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value_representation'})@isenum(valuerepresentation",{"_index":2873,"title":{},"body":{"classes/Rule.html":{}}}],["valuerepresentation",{"_index":580,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["valuerepresentation.date",{"_index":694,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.number",{"_index":691,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.string",{"_index":590,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["van",{"_index":1135,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["variable",{"_index":3163,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3468,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyconfirmationtoken",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyconfirmationtoken(token",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":1330,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["verifytoken(token",{"_index":1344,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["version",{"_index":1129,"title":{},"body":{"guards/DicomWebGuard.html":{},"properties.html":{}}}],["void",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"classes/TmtvService.html":{}}}],["wait",{"_index":90,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["waiting",{"_index":91,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["watch",{"_index":3419,"title":{},"body":{"index.html":{}}}],["weak",{"_index":1014,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["web",{"_index":1030,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancController.html":{}}}],["web.guard",{"_index":1948,"title":{},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{}}}],["web.guard.ts",{"_index":1026,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["web.guard.ts:12",{"_index":1042,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:124",{"_index":1057,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:19",{"_index":1053,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:37",{"_index":1044,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:44",{"_index":1046,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:53",{"_index":1045,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:61",{"_index":1048,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:77",{"_index":1043,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web/*')@useguards(undefined",{"_index":1930,"title":{},"body":{"controllers/OrthancController.html":{}}}],["website",{"_index":3448,"title":{},"body":{"index.html":{}}}],["well",{"_index":1360,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown",{"_index":1336,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown.data",{"_index":1363,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['authorization_endpoint",{"_index":1365,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['userinfo_endpoint",{"_index":1367,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wildcard",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["withfragmentedmask",{"_index":734,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["within",{"_index":1127,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["withlabels",{"_index":2747,"title":{"classes/WithLabels.html":{}},"body":{"controllers/RolesController.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["withlabels.withlabels",{"_index":2773,"title":{},"body":{"controllers/RolesController.html":{}}}],["withrole",{"_index":3103,"title":{},"body":{"injectables/UsersService.html":{}}}],["working",{"_index":221,"title":{},"body":{"controllers/AppController.html":{}}}],["writefilesync('../openapi.json",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":3392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":3439,"title":{},"body":{"index.html":{}}}],["yyyymmddthhmmss",{"_index":1987,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["z\\d\\w]{12",{"_index":863,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*?[0",{"_index":1011,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*?[a",{"_index":1010,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":860,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*\\d)(?=.*[\\w])[a",{"_index":861,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["za",{"_index":862,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["zonneveld",{"_index":1136,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["zoom",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractQueueService.html":{"url":"injectables/AbstractQueueService.html","title":"injectable - AbstractQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queues/queue.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/queues/queue.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Job, Queue } from 'bullmq';\n\n@Injectable()\nexport abstract class AbstractQueueService {\n  protected queue: Queue;\n\n  constructor(queue: Queue) {\n    this.queue = queue;\n  }\n\n  async addJob(data: object): Promise {\n    await this.queue.add(data['uuid'], data, {\n      removeOnComplete: {\n        age: 3600,\n      },\n      removeOnFail: {\n        age: 24 * 3600,\n      },\n    });\n  }\n\n  async removeJob(data: object | undefined = undefined): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n\n    jobs.forEach((job) => {\n      if (\n        data == undefined ||\n        ((job.data.uuid == data['uuid'] || data['uuid'] == undefined) &&\n          (job.data.userId == data['userId'] || data['userId'] == undefined) &&\n          (job.data.jobId == data['jobId'] || data['jobId'] == undefined))\n      ) {\n        this.queue.remove(job.id, { removeChildren: true });\n      }\n    });\n  }\n\n  async getJobs(\n    uuid: string | undefined = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.queue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return job.data.uuid == uuid || uuid == undefined;\n    });\n\n    return filteredJob;\n  }\n\n  async checkIfUserIdHasJobs(userId: number): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const result: Job | null = jobs.find((job) => job.data.userId == userId);\n\n    return result ? true : false;\n  }\n\n  async getUuidOfUser(userId: number): Promise {\n    const jobs: Job[] | null = await this.queue.getJobs();\n    const uuid: string | null = jobs.find((job) => job.data.userId == userId)\n      ?.data.uuid;\n\n    return uuid ? uuid : null;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const uuids = jobs.map((job) => job.data.uuid);\n\n    return Array.from(new Set(uuids));\n  }\n\n  async closeQueueConnection(): Promise {\n    await this.queue.close();\n  }\n\n  async flush(): Promise {\n    await this.queue.obliterate({ force: true });\n  }\n\n  async getJobsForUuid(uuid: string = undefined): Promise {\n    const jobs: Job[] | null = await this.getJobs(uuid);\n\n    const results = {};\n    jobs\n      .filter((job) => job.data.uuid == uuid || uuid == undefined)\n      .forEach((job) => {\n        const id = job.id;\n        const progress = {\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n          UserId: job.data.userId,\n        };\n        results[id] = progress;\n      });\n\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has admin permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AnonymizeGuard.html":{"url":"guards/AnonymizeGuard.html","title":"guard - AnonymizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AnonymizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has anonymize permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Redirect\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Redirect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('oauth2-redirect.html')@Redirect('/docs/oauth2-redirect.html', 302)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: true})@UseGuards(undefined)@Get('TEST/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Redirect, UseGuards } from '@nestjs/common';\nimport { Public } from './interceptors/public';\nimport { ApiBearerAuth, ApiExcludeEndpoint, ApiParam } from '@nestjs/swagger';\nimport { StudyGuard } from './guards/study.guard';\nimport { SeriesGuard } from './guards/series.guard';\nimport { InstanceGuard } from './guards/instance.guard';\nimport { OrGuard } from './guards/or.guard';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Public()\n  @Get('oauth2-redirect.html')\n  @Redirect('/docs/oauth2-redirect.html', 302)\n  @ApiExcludeEndpoint()\n  async oauth2Redirect() {\n    return { url: '/docs/oauth2-redirect.html' };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'id', required: true })\n  @UseGuards(OrGuard([InstanceGuard, SeriesGuard, StudyGuard]))\n  @Get('TEST/:id')\n  async test() {\n    return 'Working!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoroutingsModule\n                        \n                        \n                            LabelsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OauthConfigModule\n                        \n                        \n                            OptionsModule\n                        \n                        \n                            OrthancModule\n                        \n                        \n                            ProcessingModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SeederModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { logger } from './utils/logger.middleware';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { NotFoundInterceptor } from './interceptors/not-found.interceptor';\n\nimport ProcessingClient from './utils/processing.client';\n\n// MODULES\nimport { AuthModule } from './auth/auth.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { MailModule } from './mail/mail.module';\nimport { OauthConfigModule } from './oauth-configs/oauth-configs.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AutoroutingsModule } from './autorouting/autoroutings.module';\nimport { UsersModule } from './users/users.module';\nimport { RolesModule } from './roles/roles.module';\nimport { LabelsModule } from './labels/labels.module';\nimport { OptionsModule } from './options/options.module';\nimport { OrthancModule } from './orthanc/orthanc.module';\nimport { ProcessingModule } from './processing/processing.module';\nimport { QueueModule } from './queues/queue.module';\n\n// CONTROLLERS\nimport { AppController } from './app.controller';\n\nimport { SeederModule } from './seeder/seeder.module';\nimport { CheckUserIdParamsGuard } from './guards/check-user-id-params.guard';\nimport { CheckUserRoleGuard } from './guards/check-user-role.guard';\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot({\n      wildcard: true,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: ['.env.dev', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\n          'TYPEORM_TYPE',\n          'postgres',\n        ) as 'postgres', // Default to 'postgres'\n        host: configService.get('TYPEORM_HOST', 'localhost'),\n        port: +configService.get('TYPEORM_PORT', 5432),\n        username: configService.get('TYPEORM_USERNAME', 'postgres'),\n        password: configService.get('TYPEORM_PASSWORD', 'postgres'),\n        database: configService.get('TYPEORM_DATABASE', 'gaelo-flow'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    AuthModule,\n    UsersModule,\n    RolesModule,\n    LabelsModule,\n    OptionsModule,\n    TasksModule,\n    OauthConfigModule,\n    ProcessingModule,\n    AutoroutingsModule,\n    QueueModule,\n    OrthancModule,\n    MailModule,\n    SeederModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    CheckUserIdParamsGuard,\n    CheckUserRoleGuard,\n    ProcessingClient,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: NotFoundInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for all authentication related APIs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                lostPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Password changed'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: ChangePasswordDto})@Public()@Post('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({type: LoginDto})@Public()@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n                        login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        lostPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    lostPassword(body: LostPassworDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Email sent'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: LostPassworDto})@Public()@Post('lost-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LostPassworDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiOAuth2(['openid'], 'oauth2')@Public()@UseGuards(JwtOAuthGuard)@HttpCode(HttpStatus.OK)@Post('oauth2')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Register success'})@ApiResponse({status: 409, description: 'Conflict'})@ApiBody({type: RegisterDto})@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  BadRequestException,\n  ConflictException,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBody, ApiOAuth2, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LocalAuthGuard } from '../guards/local.guard';\nimport { JwtOAuthGuard } from '../guards/jwt-oauth.guard';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { Public } from '../interceptors/public';\nimport { LoginDto } from './dto/login.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { MailService } from '../mail/mail.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LostPassworDto } from './dto/lost-password.dto';\n\n/**\n * Controller for all authentication related APIs\n */\n@ApiTags('auth')\n@Controller('')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  /**\n   * login controller\n   */\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ type: LoginDto })\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req: Request) {\n    return await this.authService.login(req['user']);\n  }\n\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiOAuth2(['openid'], 'oauth2')\n  @Public()\n  @UseGuards(JwtOAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('oauth2')\n  async oauth2Login(@Request() req: Request) {\n    const userData = req['user'];\n\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    const userExists = await this.usersService.findOneByEmail(userData.email);\n    if (!userExists) {\n      await this.usersService.create({\n        Email: userData.email,\n        Firstname: userData.firstname,\n        Lastname: userData.lastname,\n        RoleName: 'User',\n        Password: null,\n      });\n    }\n\n    const user = await this.usersService.findOneByEmail(userData.email);\n    return await this.authService.login(user);\n  }\n\n  @ApiResponse({ status: 201, description: 'Register success' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @ApiBody({ type: RegisterDto })\n  @Public()\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    const userExists = await this.usersService.findOneByEmail(\n      registerDto.Email,\n      false,\n    );\n    if (userExists) {\n      throw new ConflictException('A user already exist with this email');\n    }\n\n    const newUser = await this.usersService.create({\n      Email: registerDto.Email,\n      Firstname: registerDto.Firstname,\n      Lastname: registerDto.Lastname,\n      RoleName: 'User',\n      Password: null,\n    });\n    const confirmationToken =\n      await this.authService.createConfirmationToken(newUser);\n\n    await this.mailService.sendChangePasswordEmail(\n      newUser.Email,\n      confirmationToken,\n      newUser.Id,\n    );\n  }\n\n  @ApiResponse({ status: 201, description: 'Password changed' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: ChangePasswordDto })\n  @Public()\n  @Post('change-password')\n  async changePassword(\n    @Body() changePasswordDto: ChangePasswordDto,\n  ): Promise {\n    const { Token, NewPassword, ConfirmationPassword, UserId } =\n      changePasswordDto;\n\n    if (NewPassword !== ConfirmationPassword) {\n      throw new BadRequestException('Confirmation password does not match');\n    }\n    await this.usersService.findOne(UserId);\n    await this.authService.verifyConfirmationToken(Token, UserId);\n    await this.usersService.updateUserPassword(UserId, NewPassword);\n  }\n\n  @ApiResponse({ status: 200, description: 'Email sent' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: LostPassworDto })\n  @Public()\n  @Post('lost-password')\n  async lostPassword(@Body() body: LostPassworDto) {\n    const { Email } = body;\n    const user = await this.usersService.findOneByEmail(Email, false);\n    const token = await this.authService.createConfirmationToken(user);\n    await this.mailService.sendChangePasswordEmail(user.Email, token, user.Id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtOauthStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            OauthConfigService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { MailService } from '../mail/mail.service';\n\nimport { AuthController } from './auth.controller';\nimport { User } from '../users/user.entity';\n\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthGuard } from '../guards/jwt.guard';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { JwtOauthStrategy } from './jwt-oauth.strategy';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    HttpModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService): any => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User, OauthConfig]),\n  ],\n  providers: [\n    LocalStrategy,\n    JwtStrategy,\n    JwtOauthStrategy,\n    AuthService,\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    MailService,\n    OauthConfigService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access for users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createConfirmationToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyConfirmationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createConfirmationToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyConfirmationToken(token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  comparePasswords,\n  generateToken,\n  getTokenExpiration,\n} from '../utils/passwords';\n\n/**\n * Database access for users\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (user && (await comparePasswords(pass, user.Password))) {\n      delete user.Password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = {\n      sub: user.Id,\n      email: user.Email,\n      role: user.Role,\n      userId: user.Id,\n    };\n    return {\n      AccessToken: await this.jwtService.signAsync(payload),\n      UserId: user.Id,\n    };\n  }\n\n  async createConfirmationToken(user: User): Promise {\n    const { hash, token: confirmationToken } = await generateToken();\n    user.Token = hash;\n    user.TokenExpiration = getTokenExpiration();\n    user.Password = null;\n    await this.usersService.update(user.Id, user);\n    return confirmationToken;\n  }\n\n  async verifyConfirmationToken(\n    token: string,\n    userId: number,\n  ): Promise {\n    const user = await this.usersService.findOne(userId);\n\n    if (new Date() > user.TokenExpiration) {\n      throw new BadRequestException('Token expired');\n    }\n    const isMatch = await comparePasswords(token, user.Token);\n    if (!isMatch) {\n      throw new BadRequestException('Invalid token');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoQueryGuard.html":{"url":"guards/AutoQueryGuard.html","title":"guard - AutoQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autoquery permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoRoutingGuard.html":{"url":"guards/AutoRoutingGuard.html","title":"guard - AutoRoutingGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoRoutingGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autorouting permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autorouting.html":{"url":"entities/Autorouting.html","title":"entity - Autorouting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autorouting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Activated\n                            \n                            \n                                    \n                                    \n                                    \n                                EventType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Activated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        EventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'event_type'})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'router', type: 'jsonb'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingHandler.html":{"url":"injectables/AutoroutingHandler.html","title":"injectable - AutoroutingHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler service to execute autorouting rules\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoroutingConfigs\n                            \n                            \n                                levelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleAutoroutingUpdated\n                            \n                            \n                                    \n                                    Async\n                                handleEvent\n                            \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Private\n                                isGreaterThan\n                            \n                            \n                                    Private\n                                isIn\n                            \n                            \n                                    Private\n                                isLessThan\n                            \n                            \n                                    Private\n                                isNotIn\n                            \n                            \n                                    Private\n                                isSendable\n                            \n                            \n                                    Async\n                                processEvent\n                            \n                            \n                                    Private\n                                ruleToBoolean\n                            \n                            \n                                    Private\n                                    Async\n                                sendToDestination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingService: AutoroutingsService, processingQueueService: ProcessingQueueService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autorouting.handler.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingService\n                                                  \n                                                        \n                                                                        AutoroutingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingQueueService\n                                                  \n                                                        \n                                                                        ProcessingQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleAutoroutingUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoroutingUpdated()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('autorouting.updated')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(payload: OrthancEventPayloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('orthanc.*')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEqual\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEqual(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGreaterThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGreaterThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLessThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLessThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNotIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNotIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSendable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSendable(router: Router, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(autorouting: Autorouting, payload: OrthancEventPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ruleToBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    ruleToBoolean(rule: Rule, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendToDestination\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToDestination(destination: Destination, level: LevelType, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            Destination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            LevelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoroutingConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { Injectable } from '@nestjs/common';\nimport { OrthancEventPayloadDto } from './dto/orthanc-event-payload.dto';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { Autorouting, Destination, Router, Rule } from './autorouting.entity';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  LevelType,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport OrthancClient from '../utils/orthanc-client';\nimport * as moment from 'moment';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\n/**\n * Handler service to execute autorouting rules\n */\n@Injectable()\nexport class AutoroutingHandler {\n  autoroutingConfigs: Array = [];\n\n  levelMapping = {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  };\n\n  constructor(\n    private autoroutingService: AutoroutingsService,\n    private processingQueueService: ProcessingQueueService,\n    private orthancClient: OrthancClient,\n  ) {\n    this.handleAutoroutingUpdated();\n  }\n\n  @OnEvent('autorouting.updated')\n  async handleAutoroutingUpdated() {\n    this.autoroutingConfigs = await this.autoroutingService.findAll();\n  }\n\n  private isEqual(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return value === Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return value === rule.Value.toString();\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isSame(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isNotIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return !rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isGreaterThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value) > Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isAfter(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isLessThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value)  {\n            console.error(\"can't send to aet: \", e);\n          });\n        break;\n      case DestinationType.TMTVJOB:\n        if (level !== LevelType.STUDIES) {\n          console.error('TMTVJob can only be sent to series');\n          return;\n        }\n\n        const seriesDetails =\n          await this.orthancClient.getSeriesDetailsOfStudy(orthancID);\n\n        const allModalities = seriesDetails.map(\n          (series: any) => series.MainDicomTags.Modality,\n        );\n\n        if (\n          allModalities.length !== 2 ||\n          !allModalities.includes('PT') ||\n          !allModalities.includes('CT')\n        ) {\n          console.error('Invalid series modalities: ', allModalities);\n          return;\n        }\n\n        const ctSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'CT',\n        ).ID;\n\n        const ptSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'PT',\n        ).ID;\n\n        const jobId = await this.processingQueueService.addJob(null, {\n          JobType: ProcessingJobType.TMTV,\n          TmtvJob: {\n            PtOrthancSeriesId: ptSeriesID,\n            CtOrthancSeriesId: ctSeriesID,\n            SendMaskToOrthancAs: [ProcessingMask.RTSS, ProcessingMask.SEG],\n            WithFragmentedMask: true,\n          },\n        });\n        break;\n      case DestinationType.PEER:\n        this.orthancClient\n          .sendToPeer(destination.Name, [orthancID])\n          .catch((e) => {\n            console.error(\"can't send to peer: \", e);\n          });\n        break;\n    }\n  }\n\n  async processEvent(\n    autorouting: Autorouting,\n    payload: OrthancEventPayloadDto,\n  ) {\n    const level = this.levelMapping[payload.ChangeType];\n    const data = await this.orthancClient.getOrthancDetails(level, payload.ID);\n    const isSendable = this.isSendable(autorouting.Router, data);\n\n    if (isSendable) {\n      for (const destination of autorouting.Router.Destinations) {\n        this.sendToDestination(destination, level, payload.ID);\n      }\n    }\n  }\n\n  @OnEvent('orthanc.*')\n  async handleEvent(payload: OrthancEventPayloadDto) {\n    const autoroutingMatches = this.autoroutingConfigs.filter(\n      (autorouting) =>\n        autorouting.EventType === payload.ChangeType && autorouting.Activated,\n    );\n\n    autoroutingMatches.forEach((autorouting: Autorouting) => {\n      this.processEvent(autorouting, payload);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoroutingsController.html":{"url":"controllers/AutoroutingsController.html","title":"controller - AutoroutingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoroutingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /autorouting\n            \n\n\n            \n                Description\n            \n            \n                API controllers for autorouting related routes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAutorouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAutorouting(createAutoroutingDto: CreateAutoroutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'create autorouting'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@UsePipes(new ValidationPipe())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAutoroutingDto\n                                            \n                                                            CreateAutoroutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'delete autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'disable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/disable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'enable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/enable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAutorouting()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all autorouting', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Body,\n  Post,\n  Delete,\n  Param,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AutoRoutingGuard } from '../guards/roles.guard';\nimport { CreateAutoroutingDto } from './dto/create-autorouting.dto';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\n\n/**\n * API controllers for autorouting related routes\n */\n@ApiTags('autorouting')\n@Controller('/autorouting')\nexport class AutoroutingsController {\n  constructor(private autoroutingService: AutoroutingsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'create autorouting',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post()\n  async createAutorouting(\n    @Body() createAutoroutingDto: CreateAutoroutingDto,\n  ): Promise {\n    return await this.autoroutingService.create(createAutoroutingDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all autorouting',\n    type: [Autorouting],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @Get()\n  async getAutorouting(): Promise {\n    return await this.autoroutingService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'delete autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Delete('/:id')\n  async deleteAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.findOneOrFail(id);\n    return await this.autoroutingService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'enable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/enable')\n  async enableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.enable(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'disable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/disable')\n  async disableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoroutingsModule.html":{"url":"modules/AutoroutingsModule.html","title":"module - AutoroutingsModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoroutingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/autorouting/autoroutings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoroutingHandler\n                        \n                        \n                            AutoroutingsService\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoroutingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { AutoroutingsController } from './autoroutings.controller';\nimport { AutoroutingHandler } from './autorouting.handler';\nimport OrthancClient from '../utils/orthanc-client';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Autorouting])],\n  providers: [\n    AutoroutingsService,\n    AutoroutingHandler,\n    OrthancClient,\n    ProcessingQueueService,\n  ],\n  controllers: [AutoroutingsController],\n})\nexport class AutoroutingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingsService.html":{"url":"injectables/AutoroutingsService.html","title":"injectable - AutoroutingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to autorouting data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEventType\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingsRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autoroutings.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEventType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEventType(eventType: AutoroutingEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventType\n                                            \n                                                            AutoroutingEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrFail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Autorouting } from './autorouting.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { AutoroutingEventType } from './autorouting.enum';\n\n/**\n * Database access to autorouting data\n */\n@Injectable()\nexport class AutoroutingsService {\n  constructor(\n    @InjectRepository(Autorouting)\n    private autoroutingsRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.autoroutingsRepository.find();\n  }\n\n  async findOneByEventType(\n    eventType: AutoroutingEventType,\n  ): Promise {\n    return await this.autoroutingsRepository.find({\n      where: { EventType: eventType, Activated: true },\n    });\n  }\n\n  async findOneOrFail(id: number): Promise {\n    return await this.autoroutingsRepository.findOneOrFail({\n      where: { Id: id },\n    });\n  }\n\n  async create(autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.save(autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async update(id: number, autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.update(id, autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async remove(id: number): Promise {\n    await this.autoroutingsRepository.delete(id);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async enable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = true;\n    await this.update(id, autorouting);\n  }\n\n  async disable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = false;\n    await this.update(id, autorouting);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CdBurnerGuard.html":{"url":"guards/CdBurnerGuard.html","title":"guard - CdBurnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CdBurnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has cdBurner permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ConfirmationPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                Token\n                            \n                            \n                                    \n                                    \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ConfirmationPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()@MinLength(12)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {message: 'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(12)\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {\n    message:\n      'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character',\n  })\n  NewPassword: string;\n\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  ConfirmationPassword: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  Token: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  UserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckLabelInRole.html":{"url":"guards/CheckLabelInRole.html","title":"guard - CheckLabelInRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckLabelInRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-label-in-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested label belongs to user's role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-label-in-role.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-label-in-role.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\n/**\n * Guard checking requested label belongs to user's role\n */\n@Injectable()\nexport class CheckLabelInRole implements CanActivate {\n  constructor(private rolesService: RolesService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const labelName = request.params.labelName;\n    const userRole = request.user.role.Name;\n    const labelsOfRole = (await this.rolesService.getRoleLabels(userRole)).map(\n      (label) => label.Name,\n    );\n\n    return labelsOfRole.includes(labelName);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdParamsGuard.html":{"url":"guards/CheckUserIdParamsGuard.html","title":"guard - CheckUserIdParamsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdParamsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-params.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in param is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-params.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-params.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in param is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdParamsGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.id;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdQueryGuard.html":{"url":"guards/CheckUserIdQueryGuard.html","title":"guard - CheckUserIdQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-query.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in query is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-query.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-query.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in query is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdQueryGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.query.userId;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserRoleGuard.html":{"url":"guards/CheckUserRoleGuard.html","title":"guard - CheckUserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking role name in param is the same as user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-role.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-role.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking role name in param is the same as user calling role\n */\n@Injectable()\nexport class CheckUserRoleGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.roleName;\n    const userRole = request.user.role.Name;\n\n    return value == userRole && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoroutingDto.html":{"url":"classes/CreateAutoroutingDto.html","title":"class - CreateAutoroutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoroutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/create-autorouting.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Autorouting, [\n  'Id',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Autorouting } from '../autorouting.entity';\n\nexport class CreateAutoroutingDto extends OmitType(Autorouting, [\n  'Id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOptionDto.html":{"url":"classes/CreateOptionDto.html","title":"class - CreateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/create-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: false, default: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false, default: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean, IsNumber } from 'class-validator';\n\nexport class CreateOptionDto {\n  @ApiProperty({ example: 22 })\n  @IsNumber()\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @IsNumber()\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false, default: 10 })\n  @IsNumber()\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: true, required: false, default: true })\n  @IsBoolean()\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @IsString()\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @IsString()\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @IsString()\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @IsString()\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Import: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Export: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Query: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Delete: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Admin: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Modify: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  ReadAll: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd1234!'})@IsString()@Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty({ example: 'myPassw0rd1234!' })\n  @IsString()\n  @Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {\n    message: 'Password too weak',\n  })\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DeleteGuard.html":{"url":"guards/DeleteGuard.html","title":"guard - DeleteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DeleteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has delete permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Destination.html":{"url":"classes/Destination.html","title":"class - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Destination\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DestinationType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'type'})@IsEnum(DestinationType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DicomWebGuard.html":{"url":"guards/DicomWebGuard.html","title":"guard - DicomWebGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DicomWebGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/dicom-web.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                level\n                            \n                            \n                                    Private\n                                pathname\n                            \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getPatientID\n                            \n                            \n                                    Private\n                                getSeriesInstanceUID\n                            \n                            \n                                    Private\n                                getStudyInstanceUID\n                            \n                            \n                                    Private\n                                getUID\n                            \n                            \n                                    Private\n                                setLevel\n                            \n                            \n                                    Private\n                                strstr\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/dicom-web.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPatientID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatientID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSeriesInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeriesInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStudyInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudyInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUID($requestedURI: string, level: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:61\n                        \n                    \n\n\n            \n                \n                        Isolate the called Study or Series Instance UID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $requestedURI\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLevel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        strstr\n                        \n                    \n                \n            \n            \n                \n                        \n                    strstr(haystack, needle, bool)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                haystack\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                needle\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bool\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\nimport OrthancClient from '../utils/orthanc-client';\n/**\n * Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n */\n@Injectable()\nexport class DicomWebGuard implements CanActivate {\n  private level: string;\n  private pathname: string;\n  private query: Record = {};\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly rolesService: RolesService,\n  ) {}\n\n  private setLevel(): void {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query['00100020']) {\n        this.level = 'patients';\n        return;\n      }\n\n      if (this.query['0020000D'] || this.query['StudyInstanceUID']) {\n        this.level = 'studies';\n        return;\n      }\n    }\n\n    if (this.pathname.endsWith('/studies')) this.level = 'patients';\n    else if (this.pathname.endsWith('/series')) this.level = 'studies';\n    else this.level = 'series';\n  }\n\n  private getPatientID(): string {\n    if (this.query['00100020']) return this.query['00100020'].replace('*', '');\n    else {\n      throw new Error('No Patient ID Found');\n    }\n  }\n\n  private getStudyInstanceUID(): string {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query?.['0020000D']) return this.query?.['0020000D'];\n      if (this.query?.['StudyInstanceUID'])\n        return this.query?.['StudyInstanceUID'];\n    }\n    return this.getUID(this.pathname, 'studies');\n  }\n\n  private getSeriesInstanceUID(): string {\n    return this.getUID(this.pathname, 'series');\n  }\n\n  /**\n   * Isolate the called Study or Series Instance UID\n   * @return string\n   */\n  private getUID($requestedURI: string, level: string): string {\n    let studySubString = this.strstr($requestedURI, '/' + level + '/', false);\n    studySubString = studySubString.replace('/' + level + '/', '');\n\n    const endStudyUIDPosition = studySubString.indexOf('/');\n\n    let studyUID: string;\n    if (endStudyUIDPosition) {\n      studyUID = studySubString.substr(0, endStudyUIDPosition);\n    } else {\n      studyUID = studySubString;\n    }\n\n    return studyUID;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const url = new URL('http://localhost:3000' + request.url);\n    const params = Object.fromEntries(url.searchParams.entries());\n    const userRole = request.user.role.Name;\n\n    this.pathname = url.pathname;\n    this.query = params;\n    this.setLevel();\n\n    let orthancStudyId = null;\n    if (this.level === 'patients') {\n      //Patient Level cannot be associated to a label, so we check that the client asked for a specific patient for the qido request\n      //Metadata and image retrieve will use anyway the studies/series which are protected\n      if (this.getPatientID()) return true;\n    } else if (this.level === 'series') {\n      const getSeriesInstanceUID = this.getSeriesInstanceUID();\n      const series = await this.orthancClient.lookup(getSeriesInstanceUID);\n      if (series.length == 1) {\n        const orthancSeriesId = series[0].ID;\n        const parentStudy = await this.orthancClient\n          .getParentStudy('series', orthancSeriesId)\n          .catch(() => null);\n\n        if (parentStudy?.ID) {\n          orthancStudyId = parentStudy.ID;\n        }\n      }\n    } else if (this.level === 'studies') {\n      const getStudyInstanceUID = this.getStudyInstanceUID();\n      const parentStudies =\n        await this.orthancClient.lookup(getStudyInstanceUID);\n      if (parentStudies.length == 1) {\n        orthancStudyId = parentStudies[0].ID;\n      }\n    }\n\n    if (orthancStudyId)\n      return await checkLabelRoleStudy(\n        orthancStudyId,\n        userRole,\n        this.rolesService,\n        this.orthancClient,\n      );\n    return false;\n  }\n\n  private strstr(haystack, needle, bool) {\n    // Finds first occurrence of a string within another\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/strstr\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: strstr(‘Kevin van Zonneveld’, ‘van’);\n    // *     returns 1: ‘van Zonneveld’\n    // *     example 2: strstr(‘Kevin van Zonneveld’, ‘van’, true);\n    // *     returns 2: ‘Kevin ‘\n    // *     example 3: strstr(‘name@example.com’, ‘@’);\n    // *     returns 3: ‘@example.com’\n    // *     example 4: strstr(‘name@example.com’, ‘@’, true);\n    // *     returns 4: ‘name’\n    let pos = 0;\n\n    haystack += '';\n    pos = haystack.indexOf(needle);\n    if (pos == -1) {\n      return false;\n    } else {\n      if (bool) {\n        return haystack.substr(0, pos);\n      } else {\n        return haystack.slice(pos);\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExportGuard.html":{"url":"guards/ExportGuard.html","title":"guard - ExportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has export permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOptionDto.html":{"url":"classes/GetOptionDto.html","title":"class - GetOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/get-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancAddress\n                            \n                            \n                                    \n                                    \n                                OrthancPassword\n                            \n                            \n                                    \n                                    \n                                OrthancPort\n                            \n                            \n                                    \n                                    \n                                OrthancUsername\n                            \n                            \n                                    \n                                    \n                                RedisAddress\n                            \n                            \n                                    \n                                    \n                                RedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\nimport { IsString } from 'class-validator';\n\nexport class GetOptionDto extends PartialType(CreateOptionDto) {\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPort: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancUsername: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPassword: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisPort: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleDto.html":{"url":"classes/GetRoleDto.html","title":"class - GetRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/get-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/get-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { Label } from '../../labels/label.entity';\n\nexport class GetRoleDto extends PartialType(CreateRoleDto) {\n  @ApiProperty({ required: false, default: null })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInstance(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsInstance, IsNumber, IsString } from 'class-validator';\nimport { Role } from '../../roles/role.entity';\n\nexport class GetUserDto {\n  @ApiProperty()\n  @IsNumber()\n  Id: number;\n\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty()\n  @IsInstance(Role)\n  Role?: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClient.html":{"url":"classes/HttpClient.html","title":"class - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/http.client.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardedAddress\n                            \n                            \n                                    Protected\n                                forwardedProtocol\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Protected\n                                password\n                            \n                            \n                                request\n                            \n                            \n                                requestBuffer\n                            \n                            \n                                requestStream\n                            \n                            \n                                streamAnswerToRes\n                            \n                            \n                                    Protected\n                                url\n                            \n                            \n                                    Protected\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getResponseAsBuffer\n                            \n                            \n                                    Async\n                                getResponseAsStream\n                            \n                            \n                                setForwardedAdress\n                            \n                            \n                                setForwardedProtocol\n                            \n                            \n                                setPassword\n                            \n                            \n                                setUrl\n                            \n                            \n                                setUsername\n                            \n                            \n                                    Async\n                                streamToWriteAnswerWithCallBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedProtocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamAnswerToRes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsBuffer(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsStream(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedAdress\n                        \n                    \n                \n            \n            \n                \nsetForwardedAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedProtocol\n                        \n                    \n                \n            \n            \n                \nsetForwardedProtocol(protocol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                protocol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUsername\n                        \n                    \n                \n            \n            \n                \nsetUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        streamToWriteAnswerWithCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToWriteAnswerWithCallBack(url: string, method: string, body: object, streamWriter: any, finishCallBack: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamWriter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finishCallBack\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { Response } from 'express';\n\nexport class HttpClient {\n  protected url: string;\n  protected username: string;\n  protected password: string;\n  protected forwardedAddress: string;\n  protected forwardedProtocol: string;\n\n  getOptions = (\n    url: string,\n    method: string,\n    headers: object,\n    data: object | string | Buffer | any,\n    responseType: string | undefined = undefined,\n  ): object => {\n    return {\n      method: method,\n      baseURL: this.url,\n      url: url,\n      auth: {\n        username: this.username,\n        password: this.password,\n      },\n      headers: {\n        Forwarded:\n          'by=localhost;for=localhost;host=' +\n          this.forwardedAddress +\n          '/api;proto=' +\n          this.forwardedProtocol,\n        ...headers,\n      },\n      data: data ?? undefined,\n      responseType: responseType,\n    };\n  };\n\n  setForwardedAdress(address: string): void {\n    this.forwardedAddress = address;\n  }\n\n  setForwardedProtocol(protocol: string): void {\n    this.forwardedProtocol = protocol;\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  request = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body);\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestBuffer = (\n    url: string,\n    method: string,\n    body: object | string | null | any = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'arraybuffer');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestStream = (\n    url: string,\n    method: string,\n    body: object | string | null = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  streamAnswerToRes = (\n    url: string,\n    method: string,\n    body: object,\n    res: Response,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios\n      .request(option)\n      .then((response) => {\n        res.setHeader('content-type', response.headers['content-type']);\n        response.data.pipe(res);\n      })\n      .catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            res.status(500).send('Bad credentials');\n          } else {\n            res\n              .status(error.response.status)\n              .send(error.response.statusMessage);\n          }\n        }\n      });\n  };\n\n  async streamToWriteAnswerWithCallBack(\n    url: string,\n    method: string,\n    body: object,\n    streamWriter: any,\n    finishCallBack: any,\n  ) {\n    const config = this.getOptions(url, method, {}, body, 'stream');\n    return axios\n      .request(config)\n      .then((response) => {\n        response.data.pipe(streamWriter).on('finish', () => {\n          finishCallBack();\n        });\n      })\n      .catch(function (error) {\n        throw new Error(error);\n      });\n  }\n\n  async getResponseAsStream(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestStream(url, method, body);\n    return response.data;\n  }\n\n  async getResponseAsBuffer(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestBuffer(url, method, body);\n    return Buffer.from(response.data, 'binary');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ImportGuard.html":{"url":"guards/ImportGuard.html","title":"guard - ImportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ImportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has import permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstanceGuard.html":{"url":"injectables/InstanceGuard.html","title":"injectable - InstanceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstanceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/instance.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/instance.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n */\n@Injectable()\nexport class InstanceGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('instances', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNumberOrString.html":{"url":"classes/IsNumberOrString.html","title":"class - IsNumberOrString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNumberOrString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/string-or-number.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(text: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'string-or-number', async: false })\nexport class IsNumberOrString implements ValidatorConstraintInterface {\n  validate(text: any, args: ValidationArguments) {\n    return typeof text === 'number' || typeof text === 'string';\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return '($value) must be number or string';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Global guard for all non public routes\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/jwt.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/jwt.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../constants/constants';\n\n/**\n * Global guard for all non public routes\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOAuthGuard.html":{"url":"injectables/JwtOAuthGuard.html","title":"injectable - JwtOAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt-oauth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding JWT Strategy (validation of token to a third oauth)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('bearer')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * Guard extanding JWT Strategy (validation of token to a third oauth)\n */\n@Injectable()\nexport class JwtOAuthGuard extends AuthGuard('bearer') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOauthStrategy.html":{"url":"injectables/JwtOauthStrategy.html","title":"injectable - JwtOauthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOauthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserInfoUrl\n                            \n                            \n                                    Async\n                                getWellKnown\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateIssuer\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, httpService: HttpService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-oauth.strategy.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserInfoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfoUrl(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWellKnown\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWellKnown(iss: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iss\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIssuer\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIssuer(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      email: payload.email,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Label.html":{"url":"entities/Label.html","title":"entity - Label","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/label.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Label {\n  @ApiProperty({ example: 'name' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelDto.html":{"url":"classes/LabelDto.html","title":"class - LabelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/labels.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class LabelDto {\n  @ApiProperty({ example: 'name' })\n  @IsString()\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LabelsController.html":{"url":"controllers/LabelsController.html","title":"controller - LabelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LabelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /labels\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'remove label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:labelName')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  ConflictException,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LabelsService } from './labels.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { LabelDto } from './labels.dto';\n\n@ApiTags('labels')\n@Controller('/labels')\nexport class LabelsController {\n  constructor(private readonly LabelsService: LabelsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(): Promise {\n    const allLabels = await this.LabelsService.findAll();\n    return allLabels.map((label) => label.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'remove label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:labelName')\n  async remove(@Param('labelName') labelName: string): Promise {\n    await this.LabelsService.findOneByOrFail(labelName);\n    return this.LabelsService.remove(labelName);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async create(@Body() labelDto: LabelDto): Promise {\n    if (await this.LabelsService.isLabelExist(labelDto.Name))\n      throw new ConflictException('Label with this name already exists');\n    return this.LabelsService.create(labelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabelsModule.html":{"url":"modules/LabelsModule.html","title":"module - LabelsModule","body":"\n                   \n\n\n\n\n    Modules\n    LabelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nLabelsModule\n\nLabelsModule\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/labels/labels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LabelsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LabelsService } from './labels.service';\nimport { LabelsController } from './labels.controller';\nimport { Label } from './label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Label])],\n  providers: [LabelsService],\n  controllers: [LabelsController],\n})\nexport class LabelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                isLabelExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/labels/labels.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(label: Label)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            Label\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isLabelExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLabelExist(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Label } from './label.entity';\n\n@Injectable()\nexport class LabelsService {\n  constructor(\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.labelsRepository.find();\n  }\n\n  async findOneByOrFail(labelName: string): Promise {\n    return await this.labelsRepository.findOneByOrFail({ Name: labelName });\n  }\n\n  async isLabelExist(labelName: string): Promise {\n    const answser = await this.labelsRepository.findOneBy({ Name: labelName });\n    return answser !== null;\n  }\n\n  async remove(labelName: string): Promise {\n    await this.labelsRepository.delete(labelName);\n  }\n\n  async create(label: Label): Promise {\n    await this.labelsRepository.save(label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/local.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding looal Strategy (validation of password in the database)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * Guard extanding looal Strategy (validation of password in the database)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'Email',\n      passwordField: 'Password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'email@gaelo.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'email@gaelo.com' })\n  @IsNotEmpty()\n  Email: string;\n\n  @ApiProperty({ example: 'myPassw0rd' })\n  @IsNotEmpty()\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LostPassworDto.html":{"url":"classes/LostPassworDto.html","title":"class - LostPassworDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LostPassworDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/lost-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/lost-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LostPassworDto {\n  @ApiProperty({ example: 'user1@mail.com' })\n  @IsNotEmpty()\n  Email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\n\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: config.get('MAIL_ENCRYPTION', false) === 'tls',\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: join(__dirname, './templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  exports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendChangePasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendChangePasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChangePasswordEmail(email: string, token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    private configService: ConfigService,\n  ) {}\n\n  async sendChangePasswordEmail(\n    email: string,\n    token: string,\n    userId: number,\n  ): Promise {\n    const changePasswordUrl = `${this.configService.get('APP_URL')}:${this.configService.get('PORT_CLIENT')}/change-password?token=${token}&userId=${userId}`;\n    await this.mailerService.sendMail({\n      from: '\"GaelO-Flow\" ',\n      to: email,\n      subject: 'Change your password',\n      html: `Follow this link to set your password : ${changePasswordUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaskProcessingService.html":{"url":"injectables/MaskProcessingService.html","title":"injectable - MaskProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaskProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/mask-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskId\n                            \n                            \n                                    Private\n                                petId\n                            \n                            \n                                    Private\n                                petSeriesOrthancId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fragmentMask\n                            \n                            \n                                    Async\n                                getMaskAs\n                            \n                            \n                                getMaskId\n                            \n                            \n                                    Async\n                                getStatOfMask\n                            \n                            \n                                setMaskId\n                            \n                            \n                                setPetId\n                            \n                            \n                                    Async\n                                thresholdMaskTo41\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processingService: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/mask-processing.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processingService\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fragmentMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    fragmentMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaskAs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaskAs(type: ProcessingMask, orientation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ProcessingMask\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orientation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaskId\n                        \n                    \n                \n            \n            \n                \ngetMaskId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatOfMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatOfMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaskId\n                        \n                    \n                \n            \n            \n                \nsetMaskId(maskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPetId\n                        \n                    \n                \n            \n            \n                \nsetPetId(petId: string, petSeriesOrthancId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                petId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                petSeriesOrthancId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        thresholdMaskTo41\n                        \n                    \n                \n            \n            \n                \n                        \n                    thresholdMaskTo41()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petSeriesOrthancId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProcessingMask } from '../constants/enums';\nimport ProcessingClient from '../utils/processing.client';\n\n@Injectable()\nexport class MaskProcessingService {\n  private maskId: string;\n  private petId: string;\n  private petSeriesOrthancId: string;\n\n  constructor(private readonly processingService: ProcessingClient) {}\n\n  setMaskId(maskId: string): void {\n    this.maskId = maskId;\n  }\n\n  getMaskId(): string {\n    return this.maskId;\n  }\n\n  setPetId(petId: string, petSeriesOrthancId: string): void {\n    this.petId = petId;\n    this.petSeriesOrthancId = petSeriesOrthancId;\n  }\n\n  async getMaskAs(\n    type: ProcessingMask,\n    orientation: string = null,\n  ): Promise {\n    switch (type) {\n      case ProcessingMask.NIFTI:\n        return await this.processingService.getMaskDicomOrientation(\n          this.maskId,\n          orientation,\n          true,\n        );\n      case ProcessingMask.RTSS:\n        const rtssId = await this.processingService.createRtssFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const rtssBuffer = await this.processingService.getRtss(rtssId);\n        await this.processingService.deleteRessource('rtss', rtssId);\n        return rtssBuffer;\n      case ProcessingMask.SEG:\n        const segId = await this.processingService.createSegFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const segBuffer = await this.processingService.getSeg(segId);\n        await this.processingService.deleteRessource('seg', segId);\n        return segBuffer;\n      default:\n        throw new Error('Invalid mask type');\n    }\n  }\n\n  async getStatOfMask(): Promise {\n    return await this.processingService.getStatsMaskSeries(\n      this.maskId,\n      this.petId,\n    );\n  }\n\n  async fragmentMask(): Promise {\n    const fragmentedMaskId = await this.processingService.fragmentMask(\n      this.petId,\n      this.maskId,\n      true,\n    );\n    const fragmentedMask = new MaskProcessingService(this.processingService);\n    fragmentedMask.setMaskId(fragmentedMaskId);\n    fragmentedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return fragmentedMask;\n  }\n\n  async thresholdMaskTo41(): Promise {\n    const thresholdedMaskId = await this.processingService.thresholdMask(\n      this.maskId,\n      this.petId,\n      '41%',\n    );\n    const thresholdedMask = new MaskProcessingService(this.processingService);\n    thresholdedMask.setMaskId(thresholdedMaskId);\n    thresholdedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return thresholdedMask;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ModifyGuard.html":{"url":"guards/ModifyGuard.html","title":"guard - ModifyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ModifyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has modify permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundInterceptor.html":{"url":"injectables/NotFoundInterceptor.html","title":"injectable - NotFoundInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/not-found.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/not-found.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NotFoundException,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, catchError } from 'rxjs';\nimport { EntityNotFoundError } from 'typeorm';\n\n@Injectable()\nexport class NotFoundInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof EntityNotFoundError) {\n          throw new NotFoundException(error.message);\n        } else {\n          throw error;\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OauthConfig.html":{"url":"entities/OauthConfig.html","title":"entity - OauthConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OauthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'back-end'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@PrimaryColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class OauthConfig {\n  @ApiProperty({ example: 'keycloak' })\n  @PrimaryColumn({ name: 'id' })\n  Name: string;\n\n  @ApiProperty({ example: 'keycloak' })\n  @Column()\n  Provider: string;\n\n  @ApiProperty({\n    example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n  })\n  @Column()\n  AuthorizationUrl: string;\n\n  @ApiProperty({ example: 'back-end' })\n  @Column()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OauthConfigController.html":{"url":"controllers/OauthConfigController.html","title":"controller - OauthConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OauthConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth-config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOauthConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Oauth config added'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Oauth config already exists'})@ApiBearerAuth('access-token')@ApiBody({type: OauthConfigDto})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config deleted'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 404, description: 'Oauth config not found'})@ApiBearerAuth('access-token')@ApiParam({name: 'name', required: true})@UseGuards(AdminGuard)@Delete(':name')\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config returned', type: OauthConfigDto, isArray: true})@Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Public } from '../interceptors/public';\nimport { OauthConfigService } from './oauth-configs.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@ApiTags('oauth-config')\n@Controller('oauth-config')\nexport class OauthConfigController {\n  constructor(private readonly oauthConfigService: OauthConfigService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Oauth config returned',\n    type: OauthConfigDto,\n    isArray: true,\n  })\n  @Public()\n  @Get()\n  async getOauthConfig(): Promise {\n    return await this.oauthConfigService.getOauthConfig();\n  }\n\n  @ApiResponse({ status: 200, description: 'Oauth config deleted' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 404, description: 'Oauth config not found' })\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'name', required: true })\n  @UseGuards(AdminGuard)\n  @Delete(':name')\n  async deleteOauthConfig(@Param('name') name: string) {\n    const config = await this.oauthConfigService.findOneByName(name);\n    if (!config) throw new NotFoundException('Oauth config not found');\n\n    return this.oauthConfigService.deleteOauthConfig(name);\n  }\n\n  @ApiResponse({ status: 201, description: 'Oauth config added' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Oauth config already exists' })\n  @ApiBearerAuth('access-token')\n  @ApiBody({ type: OauthConfigDto })\n  @UseGuards(AdminGuard)\n  @Post()\n  async addOauthConfig(@Body() oauthConfigDto: OauthConfigDto) {\n    const exists = await this.oauthConfigService.findOneByName(\n      oauthConfigDto.Name,\n    );\n    if (exists) throw new ConflictException('Oauth config already exists');\n\n    return this.oauthConfigService.addOauthConfig(oauthConfigDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthConfigDto.html":{"url":"classes/OauthConfigDto.html","title":"class - OauthConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class OauthConfigDto {\n  @ApiProperty()\n  @IsString()\n  Name: string;\n\n  @ApiProperty()\n  @IsString()\n  Provider: string;\n\n  @ApiProperty()\n  @IsString()\n  AuthorizationUrl: string;\n\n  @ApiProperty()\n  @IsString()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OauthConfigModule.html":{"url":"modules/OauthConfigModule.html","title":"module - OauthConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    OauthConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OauthConfigModule\n\n\n\ncluster_OauthConfigModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OauthConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OauthConfigService } from './oauth-configs.service';\nimport { OauthConfigController } from './oauth-configs.controller';\nimport { OauthConfig } from './oauth-config.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([OauthConfig])],\n  providers: [OauthConfigService],\n  controllers: [OauthConfigController],\n})\nexport class OauthConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OauthConfigService.html":{"url":"injectables/OauthConfigService.html","title":"injectable - OauthConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OauthConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByAuthorizationUrl\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByName\n                            \n                            \n                                    Public\n                                    Async\n                                getOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthConfigsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth-configs/oauth-configs.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthConfigsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByAuthorizationUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuthorizationUrl(AuthorizationUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AuthorizationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { OauthConfig } from './oauth-config.entity';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@Injectable()\nexport class OauthConfigService {\n  constructor(\n    @InjectRepository(OauthConfig)\n    private oauthConfigsRepository: Repository,\n  ) {}\n\n  public async findOneByName(Name: string): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { Name },\n    });\n    return config;\n  }\n\n  public async findOneByAuthorizationUrl(\n    AuthorizationUrl: string,\n  ): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { AuthorizationUrl },\n    });\n    return config;\n  }\n\n  public async getOauthConfig(): Promise {\n    return await this.oauthConfigsRepository.find();\n  }\n\n  public async deleteOauthConfig(Name: string) {\n    await this.oauthConfigsRepository.delete({ Name });\n  }\n\n  public async addOauthConfig(oauthConfigDto: OauthConfigDto) {\n    const config = this.oauthConfigsRepository.create(oauthConfigDto);\n\n    await this.oauthConfigsRepository.insert(config);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.oauthConfigsRepository.create({\n      Name: 'keycloak',\n      Provider: 'keycloak',\n      AuthorizationUrl:\n        'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n      ClientId: 'back-end',\n    });\n    await this.oauthConfigsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Option.html":{"url":"entities/Option.html","title":"entity - Option","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/option.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@Column({name: 'auto_query_hour_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@Column({name: 'auto_query_hour_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'autorouter_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@Column({default: 'uk', name: 'burner_date_format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'burner_delete_study_after_sent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_label_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@Column({default: 'Epson', name: 'burner_manifacturer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_monitored_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@Column({default: 'Study', name: 'burner_monitoring_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false})@Column({default: false, name: 'burner_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@Column({default: 'Auto', name: 'burner_support_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transcoding'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transfer_syntax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_viewer_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn({name: 'id'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false})@Column({default: 10, name: 'orthanc_monitoring_rate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Option {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn({ name: 'id' })\n  @Exclude()\n  Id: number;\n\n  @ApiProperty({ example: 22 })\n  @Column({ name: 'auto_query_hour_start' })\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_start' })\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @Column({ name: 'auto_query_hour_stop' })\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_stop' })\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false })\n  @Column({ default: 10, name: 'orthanc_monitoring_rate' })\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: false, required: false })\n  @Column({ default: false, name: 'burner_started' })\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_label_path' })\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @Column({ default: 'Study', name: 'burner_monitoring_level' })\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @Column({ default: 'Epson', name: 'burner_manifacturer' })\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_monitored_path' })\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'burner_delete_study_after_sent' })\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @Column({ default: 'Auto', name: 'burner_support_type' })\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_viewer_path' })\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transfer_syntax' })\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @Column({ default: 'uk', name: 'burner_date_format' })\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transcoding' })\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'autorouter_started' })\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OptionsController.html":{"url":"controllers/OptionsController.html","title":"controller - OptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /options\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all options', type: GetOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(options: UpdateOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update options', type: UpdateOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nimport { OptionsService } from './options.service';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { GetOptionDto } from './dto/get-option.dto';\n\n@ApiTags('options')\n@Controller('/options')\nexport class OptionsController {\n  constructor(\n    private readonly optionService: OptionsService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all options',\n    type: GetOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getOptions(): Promise {\n    const { Id, ...options } = await this.optionService.getOptions();\n    const getOptionDto: GetOptionDto = {\n      ...options,\n      OrthancAddress: this.configService.get('ORTHANC_ADDRESS'),\n      OrthancPort: this.configService.get('ORTHANC_PORT'),\n      OrthancUsername: this.configService.get('ORTHANC_USERNAME'),\n      OrthancPassword: this.configService.get('ORTHANC_PASSWORD'),\n      RedisAddress: this.configService.get('REDIS_ADDRESS'),\n      RedisPort: this.configService.get('REDIS_PORT'),\n    };\n\n    return getOptionDto;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Update options',\n    type: UpdateOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Patch()\n  async update(@Body() options: UpdateOptionDto): Promise {\n    return await this.optionService.update(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsModule.html":{"url":"modules/OptionsModule.html","title":"module - OptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\n\nOptionsService\n\nOptionsService\n\n\n\nOptionsModule\n\nOptionsModule\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OptionsService } from './options.service';\nimport { OptionsController } from './options.controller';\nimport { Option } from './option.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [OptionsService, ConfigService],\n  controllers: [OptionsController],\n})\nexport class OptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOptions\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/options/options.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(option: UpdateOptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Option } from './option.entity';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\n@Injectable()\nexport class OptionsService {\n  constructor(\n    @InjectRepository(Option)\n    private optionsRepository: Repository,\n  ) {}\n\n  async getOptions(): Promise {\n    return await this.optionsRepository.findOneByOrFail({ Id: 1 });\n  }\n\n  async update(option: UpdateOptionDto): Promise {\n    await this.optionsRepository.update(1, option);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.optionsRepository.create({\n      AutoQueryHourStart: 22,\n      AutoQueryMinuteStart: 0,\n      AutoQueryHourStop: 6,\n      AutoQueryMinuteStop: 0,\n    });\n    await this.optionsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrGuardOptions.html":{"url":"interfaces/OrGuardOptions.html","title":"interface - OrGuardOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrGuardOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/or.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            throwOnFirstError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnFirstError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throwOnFirstError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  InjectionToken,\n  mixin,\n  Type,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport {\n  defer,\n  from,\n  Observable,\n  of,\n  OperatorFunction,\n  throwError,\n} from 'rxjs';\nimport { catchError, last, mergeMap, takeWhile } from 'rxjs/operators';\n\ninterface OrGuardOptions {\n  throwOnFirstError?: boolean;\n}\n\n/**\n * Guard testing an array of guards, activate at the first guard activation granted\n * @param guards Array of guards to be tested\n * @param orGuardOptions {throwOnFirstError : optional}\n * @returns Guard\n */\nexport function OrGuard(\n  guards: Array | InjectionToken>,\n  orGuardOptions?: OrGuardOptions,\n) {\n  class OrMixinGuard implements CanActivate {\n    public guards: CanActivate[] = [];\n    constructor(@Inject(ModuleRef) private readonly modRef: ModuleRef) {}\n\n    //For testing purposes only\n    __getGuards = () => guards;\n\n    canActivate(context: ExecutionContext): Observable {\n      this.guards = guards.map((guard) =>\n        this.modRef.get(guard, { strict: false }),\n      );\n      const canActivateReturns: Array> = this.guards.map(\n        (guard) => this.deferGuard(guard, context),\n      );\n      return from(canActivateReturns).pipe(\n        mergeMap((obs) => {\n          return obs.pipe(this.handleError());\n        }),\n        takeWhile((val) => val === false, true),\n        last(),\n      );\n    }\n\n    private deferGuard(\n      guard: CanActivate,\n      context: ExecutionContext,\n    ): Observable {\n      return defer(() => {\n        const guardVal = guard.canActivate(context);\n        if (this.guardIsPromise(guardVal)) {\n          return from(guardVal);\n        }\n        if (this.guardIsObservable(guardVal)) {\n          return guardVal;\n        }\n        return of(guardVal);\n      });\n    }\n\n    private handleError(): OperatorFunction {\n      return catchError((err) => {\n        if (orGuardOptions?.throwOnFirstError) {\n          return throwError(() => err);\n        }\n        return of(false);\n      });\n    }\n\n    private guardIsPromise(\n      guard: boolean | Promise | Observable,\n    ): guard is Promise {\n      return !!(guard as Promise).then;\n    }\n\n    private guardIsObservable(\n      guard: boolean | Observable,\n    ): guard is Observable {\n      return !!(guard as Observable).pipe;\n    }\n  }\n\n  const Guard = mixin(OrMixinGuard);\n  return Guard as Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancAdminController.html":{"url":"controllers/OrthancAdminController.html","title":"controller - OrthancAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-admin.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createEcho\n                            \n                            \n                                    \n                                    \n                                    \n                                createJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteModality\n                            \n                            \n                                    \n                                    \n                                    \n                                deletePeer\n                            \n                            \n                                    \n                                    \n                                    \n                                editModality\n                            \n                            \n                                    \n                                    \n                                    \n                                editPeer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                getLogLevel\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeerSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                getPlugins\n                            \n                            \n                                    \n                                    \n                                    \n                                getSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                resetOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                shutdownOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createEcho\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEcho(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/echo')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/jobs/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/peers/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    editModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editPeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    editPeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/peers/*/')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: false, description: 'Gets the job id', allowEmptyValue: true})@Get('/jobs/:id?')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeerSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeerSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers/*/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPlugins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlugins(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/plugins')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        resetOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/reset')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        shutdownOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    shutdownOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/shutdown')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiParam } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancAdminController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/system')\n  @UseGuards(AdminGuard)\n  getSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/reset')\n  @UseGuards(AdminGuard)\n  resetOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/shutdown')\n  @UseGuards(AdminGuard)\n  shutdownOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/tools/log-level')\n  @UseGuards(AdminGuard)\n  getLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/tools/log-level')\n  @UseGuards(AdminGuard)\n  updateLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/plugins')\n  @UseGuards(AdminGuard)\n  getPlugins(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/jobs/*')\n  @UseGuards(AdminGuard)\n  createJobs(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({\n    name: 'id',\n    required: false,\n    description: 'Gets the job id',\n    allowEmptyValue: true,\n  })\n  @Get('/jobs/:id?')\n  @UseGuards(AdminGuard)\n  getJobs(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/modalities/*')\n  @UseGuards(AdminGuard)\n  deleteModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/echo')\n  @UseGuards(AdminGuard)\n  createEcho(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/modalities/*')\n  @UseGuards(AdminGuard)\n  editModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/peers/*')\n  @UseGuards(AdminGuard)\n  deletePeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers/*/system')\n  @UseGuards(AdminGuard)\n  getPeerSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/peers/*/')\n  @UseGuards(AdminGuard)\n  editPeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancController.html":{"url":"controllers/OrthancController.html","title":"controller - OrthancController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getDicomWeb\n                            \n                            \n                                    \n                                    \n                                    \n                                getInstances\n                            \n                            \n                                    \n                                    \n                                    \n                                getModalities\n                            \n                            \n                                    \n                                    \n                                    \n                                getSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                getStudies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getStudiesWithLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getDicomWeb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDicomWeb(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/dicom-web/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/instances/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getModalities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModalities(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/modalities*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/series/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/studies/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getStudiesWithLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudiesWithLabel(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/labels/:labelName/studies')@UseGuards(CheckLabelInRole)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Param,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { OrGuard } from '../guards/or.guard';\nimport {\n  AdminGuard,\n  AutoQueryGuard,\n  ExportGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from '../guards/roles.guard';\nimport { StudyGuard } from '../guards/study.guard';\nimport { DicomWebGuard } from '../guards/dicom-web.guard';\nimport { SeriesGuard } from '../guards/series.guard';\nimport { InstanceGuard } from '../guards/instance.guard';\nimport { CheckLabelInRole } from '../guards/check-label-in-role.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/labels/:labelName/studies')\n  @UseGuards(CheckLabelInRole)\n  async getStudiesWithLabel(@Param('labelName') labelName: string) {\n    const answer = await this.orthancClient.findInOrthanc(\n      'Study',\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      [labelName],\n    );\n    return answer;\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/studies/*')\n  @UseGuards(OrGuard([ReadAllGuard, StudyGuard]))\n  getStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/series/*')\n  @UseGuards(OrGuard([ReadAllGuard, SeriesGuard]))\n  getSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/instances/*')\n  @UseGuards(OrGuard([ReadAllGuard, InstanceGuard]))\n  getInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/dicom-web/*')\n  @UseGuards(OrGuard([ReadAllGuard, DicomWebGuard]))\n  getDicomWeb(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/modalities*')\n  @UseGuards(OrGuard([AdminGuard, QueryGuard, AutoQueryGuard, ExportGuard]))\n  getModalities(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancDeleteController.html":{"url":"controllers/OrthancDeleteController.html","title":"controller - OrthancDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-delete.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deletePatients\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteStudies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/patients/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/series/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  Request,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { DeleteGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancDeleteController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Delete('/patients/*')\n  @UseGuards(DeleteGuard)\n  deletePatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*')\n  @UseGuards(DeleteGuard)\n  deleteStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/series/*')\n  @UseGuards(DeleteGuard)\n  deleteSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthancEventPayloadDto.html":{"url":"classes/OrthancEventPayloadDto.html","title":"class - OrthancEventPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthancEventPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/orthanc-event-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ChangeType\n                            \n                            \n                                    \n                                    \n                                Date\n                            \n                            \n                                    \n                                    \n                                ID\n                            \n                            \n                                    \n                                    \n                                Path\n                            \n                            \n                                    \n                                    \n                                ResourceType\n                            \n                            \n                                    \n                                    \n                                Seq\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ChangeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NewInstance', required: true})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'YYYYMMDDTHHMMSS', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Seq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { AutoroutingEventType } from '../autorouting.enum';\n\nexport class OrthancEventPayloadDto {\n  @ApiProperty({ example: 'NewInstance', required: true })\n  @IsEnum(AutoroutingEventType)\n  ChangeType: AutoroutingEventType;\n\n  @ApiProperty({ example: 'YYYYMMDDTHHMMSS', required: true })\n  @IsString()\n  Date: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ID: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  Path: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ResourceType: string;\n\n  @ApiProperty({ example: 0, required: true })\n  @IsNumber()\n  Seq: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancExportController.html":{"url":"controllers/OrthancExportController.html","title":"controller - OrthancExportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancExportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-export.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                createMedia\n                            \n                            \n                                    \n                                    \n                                    \n                                createMediaExtended\n                            \n                            \n                                    \n                                    \n                                    \n                                createModalitiesExport\n                            \n                            \n                                    \n                                    \n                                    \n                                createPeersStore\n                            \n                            \n                                    \n                                    \n                                    \n                                createTasksUserExport\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-archive')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMediaExtended\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMediaExtended(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media-extended')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPeersStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPeersStore(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/peers/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createTasksUserExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTasksUserExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tasks/:user/export')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers*')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ExportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancExportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/store')\n  @UseGuards(ExportGuard)\n  createModalitiesExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-archive')\n  @UseGuards(ExportGuard)\n  createArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media')\n  @UseGuards(ExportGuard)\n  createMedia(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media-extended')\n  @UseGuards(ExportGuard)\n  createMediaExtended(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers*')\n  @UseGuards(ExportGuard)\n  getPeers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/peers/*/store')\n  @UseGuards(ExportGuard)\n  createPeersStore(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tasks/:user/export')\n  @UseGuards(ExportGuard)\n  createTasksUserExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancImportController.html":{"url":"controllers/OrthancImportController.html","title":"controller - OrthancImportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancImportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-import.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createDicom\n                            \n                            \n                                    \n                                    \n                                    \n                                createInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createDicom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDicom(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-dicom')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/instances')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ImportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancImportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/instances')\n  @UseGuards(ImportGuard)\n  createInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-dicom')\n  @UseGuards(ImportGuard)\n  createDicom(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancModifyController.html":{"url":"controllers/OrthancModifyController.html","title":"controller - OrthancModifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancModifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-modify.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createSeriesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createStudiesModify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createSeriesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeriesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createStudiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStudiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ModifyGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancModifyController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/modify')\n  @UseGuards(ModifyGuard)\n  createModalitiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/*/modify')\n  @UseGuards(ModifyGuard)\n  createStudiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/*/modify')\n  @UseGuards(ModifyGuard)\n  createSeriesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrthancModule.html":{"url":"modules/OrthancModule.html","title":"module - OrthancModule","body":"\n                   \n\n\n\n\n    Modules\n    OrthancModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\ncluster_OrthancModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nOrthancModule\n\nOrthancModule\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nOrthancModule -->\n\nSeriesGuard->OrthancModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orthanc/orthanc.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            SeriesGuard\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrthancController\n                        \n                        \n                            OrthancAdminController\n                        \n                        \n                            OrthancDeleteController\n                        \n                        \n                            OrthancExportController\n                        \n                        \n                            OrthancImportController\n                        \n                        \n                            OrthancModifyController\n                        \n                        \n                            OrthancQueryController\n                        \n                        \n                            OrthancReadAllController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrthancAdminController } from './orthanc-admin.controller';\nimport { OrthancController } from './orthanc.controller';\nimport { OrthancDeleteController } from './orthanc-delete.controller';\nimport { OrthancExportController } from './orthanc-export.controller';\nimport { OrthancImportController } from './orthanc-import.controller';\nimport { OrthancModifyController } from './orthanc-modify.controller';\nimport { OrthancQueryController } from './orthanc-query.controller';\nimport OrthancClient from '../utils/orthanc-client';\nimport { RolesModule } from '../roles/roles.module';\nimport { OrthancReadAllController } from './orthanc-read-all.controller';\nimport { DicomWebGuard } from '../guards/dicom-web.guard';\nimport { StudyGuard } from '../guards/study.guard';\nimport { SeriesGuard } from '../guards/series.guard';\n\n@Module({\n  imports: [RolesModule],\n  providers: [OrthancClient, DicomWebGuard, StudyGuard, SeriesGuard],\n  controllers: [\n    OrthancController,\n    OrthancAdminController,\n    OrthancDeleteController,\n    OrthancExportController,\n    OrthancImportController,\n    OrthancModifyController,\n    OrthancQueryController,\n    OrthancReadAllController,\n  ],\n})\nexport class OrthancModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrthancMonitoringTask.html":{"url":"injectables/OrthancMonitoringTask.html","title":"injectable - OrthancMonitoringTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrthancMonitoringTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/orthanc-monitoring.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                orthancMonitoringCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        orthancMonitoringCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    orthancMonitoringCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/orthanc-monitoring.task.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport OrthancClient from '../utils/orthanc-client';\n\n@Injectable()\nexport class OrthancMonitoringTask {\n  private lastChanges: number = null;\n\n  constructor(\n    private orthancClient: OrthancClient,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  async orthancMonitoringCron() {\n    if (this.lastChanges === null) {\n      this.lastChanges = (await this.orthancClient.getLastChanges()).Last;\n    }\n\n    const changes = await this.orthancClient.getChangesSince(\n      this.lastChanges.toString(),\n    );\n\n    this.lastChanges = changes.Last;\n    changes.Changes.forEach((element: any) => {\n      this.eventEmitter.emit('orthanc.' + element.ChangeType, element);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancQueryController.html":{"url":"controllers/OrthancQueryController.html","title":"controller - OrthancQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-query.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                getQueryAnswers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryParsedAnswer\n                            \n                            \n                                    \n                                    \n                                retrieve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesQuery(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQueryAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryAnswers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/queries/*/answers*')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryParsedAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryParsedAnswer(id: string, queryParsedAnswer: QueryParsedAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/:id/parsed-query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParsedAnswer\n                                            \n                                                            QueryParsedAnswerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/queries/:id/answers/:index/retrieve')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Param,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\nimport {\n  QueryParsedAnswerDto,\n  QuerySeriesDto,\n  QueryStudyDto,\n} from './dto/query-parsed-answer.dto';\nimport { QueryAnswerType } from '../constants/enums';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancQueryController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/query')\n  @UseGuards(QueryGuard)\n  createModalitiesQuery(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/queries/*/answers*')\n  @UseGuards(QueryGuard)\n  getQueryAnswers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @Post('/queries/:id/answers/:index/retrieve')\n  @UseGuards(QueryGuard)\n  retrieve(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/:id/parsed-query')\n  @UseGuards(QueryGuard)\n  async getQueryParsedAnswer(\n    @Param('id') id: string,\n    @Body() queryParsedAnswer: QueryParsedAnswerDto,\n  ) {\n    if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_SERIES) {\n      const seriesDto = queryParsedAnswer.Query as QuerySeriesDto;\n      const seriesDetails = await this.orthancClient.querySeriesInAet(\n        seriesDto.StudyUID,\n        seriesDto.Modality,\n        seriesDto.ProtocolName,\n        seriesDto.SeriesDescription,\n        seriesDto.SeriesNumber,\n        seriesDto.SeriesInstanceUID,\n        id,\n      );\n      return seriesDetails;\n    } else if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_STUDY) {\n      const studyDto = queryParsedAnswer.Query as QueryStudyDto;\n      const studyDetails = await this.orthancClient.queryStudiesInAet(\n        studyDto.PatientName,\n        studyDto.PatientID,\n        studyDto.StudyDate,\n        studyDto.Modality,\n        studyDto.StudyDescription,\n        studyDto.AccessionNb,\n        studyDto.StudyInstanceUID,\n        id,\n      );\n      return studyDetails;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancReadAllController.html":{"url":"controllers/OrthancReadAllController.html","title":"controller - OrthancReadAllController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancReadAllController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-read-all.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deleteLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                getPatients\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/find')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/patients/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { ReadAllGuard } from '../guards/roles.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancReadAllController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Put('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  updateLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  deleteLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/find')\n  @UseGuards(ReadAllGuard)\n  find(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/patients/*')\n  @UseGuards(ReadAllGuard)\n  getPatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessingController.html":{"url":"controllers/ProcessingController.html","title":"controller - ProcessingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /processing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(request: Request, processingJobDto: ProcessingJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Add job and returns the JobId', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(ReadAllGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@UseGuards(AdminGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Job } from 'bullmq';\n\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { ProcessingQueueService } from './processing-queue.service';\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdQueryGuard } from '../guards/check-user-id-query.guard';\n\n@ApiTags('processing')\n@Controller('/processing')\nexport class ProcessingController {\n  constructor(\n    private readonly processingQueueService: ProcessingQueueService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.processingQueueService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdQueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.processingQueueService.getAllUuids();\n    } else {\n      return await this.processingQueueService.getUuidsOfUser(userId);\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidsOfUser = await this.processingQueueService.getUuidsOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidsOfUser.includes(uuid)) {\n      const jobs = await this.processingQueueService.getJobs(undefined, uuid);\n      const results = [];\n      jobs.forEach((job: Job) => {\n        results.push({\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n        });\n      });\n      return results;\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'Add job and returns the JobId',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(ReadAllGuard)\n  @Post()\n  async addJob(\n    @Req() request: Request,\n    @Body() processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const user = request['user'];\n\n    return {\n      JobId: await this.processingQueueService.addJob(\n        user.userId,\n        processingJobDto,\n      ),\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @UseGuards(AdminGuard)\n  @Delete(':uuid')\n  async removeJob(@Param('uuid') uuid: string): Promise {\n    this.processingQueueService.removeJob(uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingFile.html":{"url":"classes/ProcessingFile.html","title":"class - ProcessingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing.file.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessingFile {\n  private id: string;\n  private type: string;\n\n  constructor(id: string, type: string) {\n    this.id = id;\n    this.type = type;\n  }\n\n  public getType(): string {\n    return this.type;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingJobDto.html":{"url":"classes/ProcessingJobDto.html","title":"class - ProcessingJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                JobType\n                            \n                            \n                                    \n                                    \n                                TmtvJob\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JobType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingJobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: ProcessingJobType})@IsEnum(ProcessingJobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        TmtvJob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TmtvJobDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessingModule.html":{"url":"modules/ProcessingModule.html","title":"module - ProcessingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessingModule\n\n\n\ncluster_ProcessingModule_providers\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\n\n\nProcessingModule\n\nProcessingModule\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/processing/processing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProcessingController } from './processing.controller';\nimport { ProcessingQueueService } from './processing-queue.service';\n\n@Module({\n  imports: [],\n  providers: [ProcessingQueueService],\n  controllers: [ProcessingController],\n})\nexport class ProcessingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessingQueueService.html":{"url":"injectables/ProcessingQueueService.html","title":"injectable - ProcessingQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessingQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processingQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getUuidsOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing-queue.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(userId: number, processingJobDto: ProcessingJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(userId: number, jobId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidsOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidsOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processingQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-queue.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Job, Queue } from 'bullmq';\n\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { generateRandomUUID } from '../utils/passwords';\n\n@Injectable()\nexport class ProcessingQueueService {\n  private processingQueue: Queue;\n\n  constructor(private readonly configService: ConfigService) {\n    this.processingQueue = new Queue('processing', {\n      connection: {\n        host: this.configService.get('REDIS_ADDRESS', 'localhost'),\n        port: this.configService.get('REDIS_PORT', 6379),\n      },\n    });\n    this.processingQueue.resume();\n  }\n\n  async flush(): Promise {\n    await this.processingQueue.obliterate({ force: true });\n  }\n\n  async removeJob(uuid: string): Promise {\n    await this.processingQueue.remove(uuid);\n  }\n\n  async addJob(\n    userId: number,\n    processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const jobId = generateRandomUUID();\n    const data = {\n      ...processingJobDto,\n      userId,\n    };\n\n    this.processingQueue.add(jobId, data, {\n      jobId: jobId,\n    });\n\n    return jobId;\n  }\n\n  async getJobs(\n    userId: number = undefined,\n    jobId: string = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.processingQueue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return (\n        (job.data.userId == userId || userId == undefined) &&\n        (job.id == jobId || jobId == undefined)\n      );\n    });\n\n    return filteredJob;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs.map((job) => job.id);\n\n    return uuids;\n  }\n\n  async getUuidsOfUser(userId: number): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs\n      .filter((job) => job.data.userId == userId)\n      .map((job) => job.id);\n\n    return uuids;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryAnswer.html":{"url":"classes/QueryAnswer.html","title":"class - QueryAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query.answer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: QueryAnswerType, answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        QueryAnswerType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\n\nexport default abstract class QueryAnswer {\n  AnswerId: string;\n  AnswerNumber: number;\n  OriginAET: string;\n  PatientName: string | null;\n  PatientID: string;\n  AccessionNumber: string | null;\n  StudyDescription: string | null;\n  StudyDate: string | null;\n  RequestedProcedureDescription: string | null;\n\n  Level: QueryAnswerType;\n\n  constructor(\n    level: QueryAnswerType,\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    accessionNumber: string | null,\n    studyDescription: string | null,\n    studyDate: string | null,\n    requestedProcedureDescription: string | null,\n  ) {\n    this.AnswerId = answerId;\n    this.AnswerNumber = answerNumber;\n    this.Level = level;\n    this.OriginAET = originAET;\n    this.PatientName = patientName;\n    this.PatientID = patientID;\n    this.AccessionNumber = accessionNumber;\n    this.StudyDescription = studyDescription;\n    this.StudyDate = studyDate;\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  }\n\n  setAnswerId = (answerId: string): void => {\n    this.AnswerId = answerId;\n  };\n\n  setAnswerNumber = (answerNumber: number): void => {\n    this.AnswerNumber = answerNumber;\n  };\n\n  setLevel = (level: QueryAnswerType): void => {\n    this.Level = level;\n  };\n\n  setOriginAET = (originAET: string): void => {\n    this.OriginAET = originAET;\n  };\n\n  setPatientName = (patientName: string): void => {\n    this.PatientName = patientName;\n  };\n\n  setPatientID = (patientID: string): void => {\n    this.PatientID = patientID;\n  };\n\n  setAccessionNumber = (accessionNumber: string | null): void => {\n    this.AccessionNumber = accessionNumber;\n  };\n\n  setStudyDescription = (studyDescription: string | null): void => {\n    this.StudyDescription = studyDescription;\n  };\n\n  setStudyDate = (studyDate: string | null): void => {\n    this.StudyDate = studyDate;\n  };\n\n  setRequestedProcedureDescription = (\n    requestedProcedureDescription: string | null,\n  ): void => {\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryGuard.html":{"url":"guards/QueryGuard.html","title":"guard - QueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has query permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParsedAnswerDto.html":{"url":"classes/QueryParsedAnswerDto.html","title":"class - QueryParsedAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParsedAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Level\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, enum: QueryAnswerType})@IsEnum(QueryAnswerType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QuerySeriesDto | QueryStudyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryQueueTask.html":{"url":"injectables/QueryQueueTask.html","title":"injectable - QueryQueueTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryQueueTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/query-queue.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                queryQueueCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionRepository: Repository, queueQueryService: QueuesQueryService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/query-queue.task.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueQueryService\n                                                  \n                                                        \n                                                                        QueuesQueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        queryQueueCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryQueueCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/query-queue.task.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Repository } from 'typeorm';\n\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport { Option } from '../options/option.entity';\n\nimport { isTimeBetween } from '../utils/is-time-between';\n\n@Injectable()\nexport class QueryQueueTask {\n  constructor(\n    @InjectRepository(Option)\n    private optionRepository: Repository,\n    private queueQueryService: QueuesQueryService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async queryQueueCron() {\n    const options: Option = (await this.optionRepository.find())[0];\n    const currentHour = new Date().getHours();\n    const currentMinute = new Date().getMinutes();\n    const isBetween = isTimeBetween(\n      options.AutoQueryHourStart,\n      options.AutoQueryMinuteStart,\n      options.AutoQueryHourStop,\n      options.AutoQueryMinuteStop,\n      currentHour,\n      currentMinute,\n    );\n    const queueState = await this.queueQueryService.isPaused();\n\n    if (queueState && isBetween) {\n      await this.queueQueryService.resume();\n    } else if (!queueState && !isBetween) {\n      await this.queueQueryService.pause();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesAnswer.html":{"url":"classes/QuerySeriesAnswer.html","title":"class - QuerySeriesAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-series.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Modality\n                            \n                            \n                                NumberOfSeriesRelatedInstances\n                            \n                            \n                                SeriesDescription\n                            \n                            \n                                SeriesInstanceUID\n                            \n                            \n                                SeriesNumber\n                            \n                            \n                                setModality\n                            \n                            \n                                setNumberOfSeriesRelatedInstances\n                            \n                            \n                                setSeriesDescription\n                            \n                            \n                                setSeriesInstanceUID\n                            \n                            \n                                setSeriesNumber\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyUID: string, seriesUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modality: string | null, seriesDescription: string | null, seriesNumber: number | null, numberOfSeriesRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modality\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesNumber\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfSeriesRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModality\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QuerySeriesAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  SeriesInstanceUID: string;\n  Modality: string | null = null;\n  SeriesDescription: string | null = null;\n  SeriesNumber: number | null = null;\n  NumberOfSeriesRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string|null,\n    patientID: string,\n    studyUID: string,\n    seriesUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modality: string | null = null,\n    seriesDescription: string | null = null,\n    seriesNumber: number | null = null,\n    numberOfSeriesRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_SERIES,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.StudyInstanceUID = studyUID;\n    this.SeriesInstanceUID = seriesUID;\n    this.Modality = modality;\n    this.SeriesDescription = seriesDescription;\n    this.SeriesNumber = seriesNumber;\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  }\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setSeriesInstanceUID = (seriesInstanceUID: string): void => {\n    this.SeriesInstanceUID = seriesInstanceUID;\n  };\n\n  setModality = (modality: string | null): void => {\n    this.Modality = modality;\n  };\n\n  setSeriesDescription = (seriesDescription: string | null): void => {\n    this.SeriesDescription = seriesDescription;\n  };\n\n  setSeriesNumber = (seriesNumber: number | null): void => {\n    this.SeriesNumber = seriesNumber;\n  };\n\n  setNumberOfSeriesRelatedInstances = (\n    numberOfSeriesRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesDto.html":{"url":"classes/QuerySeriesDto.html","title":"class - QuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyAnswer.html":{"url":"classes/QueryStudyAnswer.html","title":"class - QueryStudyAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-study.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ModalitiesInStudy\n                            \n                            \n                                NumberOfStudyRelatedInstances\n                            \n                            \n                                NumberOfStudyRelatedSeries\n                            \n                            \n                                setModalitiesInStudy\n                            \n                            \n                                setNumberOfStudyRelatedInstances\n                            \n                            \n                                setNumberOfStudyRelatedSeries\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modalitiesInStudy: string | null, numberOfStudyRelatedSeries: number | null, numberOfStudyRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalitiesInStudy\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedSeries\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QueryStudyAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  ModalitiesInStudy: string | null = null;\n  NumberOfStudyRelatedSeries: number | null = null;\n  NumberOfStudyRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    studyInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modalitiesInStudy: string | null = null,\n    numberOfStudyRelatedSeries: number | null = null,\n    numberOfStudyRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_STUDY,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.ModalitiesInStudy = modalitiesInStudy;\n    this.StudyInstanceUID = studyInstanceUID;\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  }\n\n  setModalitiesInStudy = (modalitiesInStudy: string | null): void => {\n    this.ModalitiesInStudy = modalitiesInStudy;\n  };\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setNumberOfStudyRelatedSeries = (\n    numberOfStudyRelatedSeries: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n  };\n\n  setNumberOfStudyRelatedInstances = (\n    numberOfStudyRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyDto.html":{"url":"classes/QueryStudyDto.html","title":"class - QueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queues/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueuesAnonService\n                        \n                        \n                            QueuesDeleteService\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueuesAnonController\n                        \n                        \n                            QueuesDeleteController\n                        \n                        \n                            QueuesQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QueuesAnonController } from './anon/queue-anons.controller';\nimport { QueuesDeleteController } from './delete/queue-deletes.controller';\nimport { QueuesQueryController } from './query/queue-query.controller';\nimport { QueuesAnonService } from './anon/queue-anons.service';\nimport { QueuesDeleteService } from './delete/queue-deletes.service';\nimport { QueuesQueryService } from './query/queue-query.service';\n\n@Module({\n  imports: [],\n  providers: [QueuesAnonService, QueuesDeleteService, QueuesQueryService],\n  controllers: [\n    QueuesAnonController,\n    QueuesDeleteController,\n    QueuesQueryController,\n  ],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesAnonController.html":{"url":"controllers/QueuesAnonController.html","title":"controller - QueuesAnonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesAnonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/anon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addAnonJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeAnonJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAnonJob(queuesAnonsDto: QueuesAnonsDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(AnonymizeGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesAnonsDto\n                                            \n                                                            QueuesAnonsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAnonJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AnonymizeGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesAnonService } from './queue-anons.service';\nimport { QueuesAnonsDto } from './queue-anons.dto';\n\nimport { AdminGuard, AnonymizeGuard } from '../../guards/roles.guard';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/anon')\n@Controller('/queues/anon')\nexport class QueuesAnonController {\n  constructor(private readonly QueuesAnonService: QueuesAnonService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesAnonService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesAnonService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesAnonService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesAnonService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesAnonService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(AnonymizeGuard)\n  @Post()\n  async addAnonJob(\n    @Body() queuesAnonsDto: QueuesAnonsDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesAnonService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const anonymizes = queuesAnonsDto.Anonymizes;\n    const uuid = generateRandomUUID();\n    anonymizes.forEach((anonymize) => {\n      this.QueuesAnonService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        anonymize: anonymize,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AnonymizeGuard)\n  @Delete(':uuid')\n  async removeAnonJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesAnonService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonDto.html":{"url":"classes/QueuesAnonDto.html","title":"class - QueuesAnonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewAccessionNumber\n                            \n                            \n                                    \n                                    \n                                NewPatientID\n                            \n                            \n                                    \n                                    \n                                NewPatientName\n                            \n                            \n                                    \n                                    \n                                NewStudyDescription\n                            \n                            \n                                    \n                                    \n                                OrthancStudyID\n                            \n                            \n                                    \n                                    \n                                Profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_accession_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancStudyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'orthanc_study_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'profile'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesAnonService.html":{"url":"injectables/QueuesAnonService.html","title":"injectable - QueuesAnonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesAnonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/anon/queue-anons.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Queue } from 'bullmq';\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesAnonService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const anonQueue = new Queue('anon', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(anonQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonsDto.html":{"url":"classes/QueuesAnonsDto.html","title":"class - QueuesAnonsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Anonymizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Anonymizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueuesAnonDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesDeleteController.html":{"url":"controllers/QueuesDeleteController.html","title":"controller - QueuesDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/delete\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addDeleteJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeDeleteJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDeleteJob(queuesDeleteDto: QueuesDeleteDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(DeleteGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesDeleteDto\n                                            \n                                                            QueuesDeleteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDeleteJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(DeleteGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesDeleteService } from './queue-deletes.service';\nimport { AdminGuard, DeleteGuard } from '../../guards/roles.guard';\nimport { QueuesDeleteDto } from './queue-deletes.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/delete')\n@Controller('/queues/delete')\nexport class QueuesDeleteController {\n  constructor(private readonly QueuesDeleteService: QueuesDeleteService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesDeleteService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesDeleteService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesDeleteService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesDeleteService.getUuidOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesDeleteService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(DeleteGuard)\n  @Post()\n  async addDeleteJob(\n    @Body() queuesDeleteDto: QueuesDeleteDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesDeleteService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const orthancSeriesIds = queuesDeleteDto.OrthancSeriesIds;\n    const uuid = generateRandomUUID();\n    orthancSeriesIds.forEach((orthancSeriesId) => {\n      this.QueuesDeleteService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        orthancSeriesId: orthancSeriesId,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(DeleteGuard)\n  @Delete(':uuid')\n  async removeDeleteJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesDeleteService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesDeleteDto.html":{"url":"classes/QueuesDeleteDto.html","title":"class - QueuesDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancSeriesIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancSeriesIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/delete/queue-deletes.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nexport class QueuesDeleteDto {\n  @ApiProperty({ example: ['series_id_1', 'series_id_2'] })\n  @IsArray()\n  OrthancSeriesIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesDeleteService.html":{"url":"injectables/QueuesDeleteService.html","title":"injectable - QueuesDeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesDeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/delete/queue-deletes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesDeleteService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const deleteQueue = new Queue('delete', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(deleteQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesQueryController.html":{"url":"controllers/QueuesQueryController.html","title":"controller - QueuesQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/query\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addQueryJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeQueryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addQueryJob(queuesQueryDto: QueuesQueryDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(QueryGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesQueryDto\n                                            \n                                                            QueuesQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeQueryJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(QueryGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesQueryService } from './queue-query.service';\nimport { AdminGuard, QueryGuard } from '../../guards/roles.guard';\nimport {\n  QueuesQueryDto,\n  QueuesQueryStudyDto,\n  QueuesQuerySeriesDto,\n} from './queue-query.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/query')\n@Controller('/queues/query')\nexport class QueuesQueryController {\n  constructor(private readonly QueuesQueryService: QueuesQueryService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesQueryService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesQueryService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesQueryService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesQueryService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesQueryService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(QueryGuard)\n  @Post()\n  async addQueryJob(\n    @Body() queuesQueryDto: QueuesQueryDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesQueryService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const queuesQueryStudy: QueuesQueryStudyDto[] = queuesQueryDto.Studies;\n    const queuesQuerySeries: QueuesQuerySeriesDto[] = queuesQueryDto.Series;\n\n    if (queuesQuerySeries.length === 0 && queuesQueryStudy.length === 0)\n      throw new BadRequestException('No studies or series found');\n\n    const uuid = generateRandomUUID();\n    queuesQueryStudy.forEach((study) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        study: study,\n        results: null,\n      });\n    });\n    queuesQuerySeries.forEach((series) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        series: series,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(QueryGuard)\n  @Delete(':uuid')\n  async removeQueryJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesQueryService.removeJob({ uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryDto.html":{"url":"classes/QueuesQueryDto.html","title":"class - QueuesQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Series\n                            \n                            \n                                    \n                                    \n                                    \n                                Studies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQuerySeriesDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Studies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQueryStudyDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQuerySeriesDto.html":{"url":"classes/QueuesQuerySeriesDto.html","title":"class - QueuesQuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesQueryService.html":{"url":"injectables/QueuesQueryService.html","title":"injectable - QueuesQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isPaused\n                            \n                            \n                                    Async\n                                pause\n                            \n                            \n                                    Async\n                                resume\n                            \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/query/queue-query.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isPaused\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPaused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesQueryService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const queryQueue = new Queue('query', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    queryQueue.pause();\n    super(queryQueue);\n  }\n\n  async pause(): Promise {\n    await this.queue.pause();\n  }\n\n  async resume(): Promise {\n    await this.queue.resume();\n  }\n\n  async isPaused(): Promise {\n    return await this.queue.isPaused();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryStudyDto.html":{"url":"classes/QueuesQueryStudyDto.html","title":"class - QueuesQueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReadAllGuard.html":{"url":"guards/ReadAllGuard.html","title":"guard - ReadAllGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReadAllGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has readall permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mail@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'firstname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lastname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'mail@example.com' })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'firstname' })\n  @IsNotEmpty()\n  Firstname: string;\n\n  @ApiProperty({ example: 'lastname' })\n  @IsNotEmpty()\n  Lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Labels\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'anonymize'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_routing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'cd_burner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'export'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'import'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, label => label.Name)@JoinTable({name: 'role_label'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'modify'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'read_all'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Label } from '../labels/label.entity';\nimport { Entity, Column, PrimaryColumn, ManyToMany, JoinTable } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @ApiProperty({ example: 'admin' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'import' })\n  Import: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'anonymize' })\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'export' })\n  Export: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'query' })\n  Query: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_query' })\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'delete' })\n  Delete: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'admin' })\n  Admin: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'modify' })\n  Modify: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'cd_burner' })\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_routing' })\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'read_all' })\n  ReadAll: boolean;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Label, (label) => label.Name)\n  @JoinTable({ name: 'role_label' })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addLabelToRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeLabelFromRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addLabelToRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLabelToRole(roleName: string, labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add label to role'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({schema: undefined})@UseGuards(undefined)@Post('/:roleName/label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@ApiBody({type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(withLabels: WithLabels)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all roles', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                withLabels\n                                            \n                                                            WithLabels\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get role by name', type: Role})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels from role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeLabelFromRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLabelFromRole(roleName: string, label: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove label from role'})@ApiResponse({status: 400, description: 'Label does not exist for this role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:roleName/label/:label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Put('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Delete,\n  Put,\n  ForbiddenException,\n  ConflictException,\n  BadRequestException,\n  UseGuards,\n  Query,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from '../users/users.service';\nimport { LabelsService } from '../labels/labels.service';\nimport { RolesService } from './roles.service';\n\nimport { Role } from './role.entity';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserRoleGuard } from '../guards/check-user-role.guard';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { GetRoleDto } from './dto/get-role.dto';\nimport { WithLabels } from './dto/with-labels.dto';\nimport { LabelDto } from '../labels/labels.dto';\n\n@ApiTags('roles')\n@Controller('/roles')\nexport class RolesController {\n  constructor(\n    private readonly roleService: RolesService,\n    private readonly labelService: LabelsService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all roles',\n    type: [GetRoleDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(@Query() withLabels: WithLabels): Promise {\n    if (withLabels.WithLabels)\n      return await this.roleService.findAllWithLabels();\n    return await this.roleService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get role by name', type: Role })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get('/:name')\n  async findOne(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n    return role;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @ApiBody({ type: CreateRoleDto })\n  @Post()\n  async createRole(@Body() createRoleDto: CreateRoleDto): Promise {\n    if (createRoleDto.Name == undefined)\n      throw new BadRequestException(\"Missing Primary Key 'name'\");\n\n    if (await this.roleService.isRoleExist(createRoleDto.Name))\n      throw new ConflictException('Role with this name already exists');\n\n    await this.roleService.create(createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:name')\n  async delete(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n\n    if (await this.userService.isRoleUsed(role.Name))\n      throw new ForbiddenException('Role is used');\n\n    return this.roleService.remove(name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Put('/:name')\n  async update(\n    @Param('name') name: string,\n    @Body() createRoleDto: CreateRoleDto,\n  ): Promise {\n    if ((await this.roleService.isRoleExist(name)) == false)\n      throw new NotFoundException('Role not found');\n\n    await this.roleService.update(name, createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add label to role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ schema: { example: { Name: 'label' } } })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Post('/:roleName/label')\n  async addLabelToRole(\n    @Param('roleName') roleName: string,\n    @Body() labelDto: LabelDto,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    if ((await this.labelService.isLabelExist(labelDto.Name)) == false)\n      throw new NotFoundException('Label not found');\n\n    await this.roleService.addRoleLabel(roleName, labelDto.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels from role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Get('/:roleName/labels')\n  async getRoleLabels(@Param('roleName') roleName: string): Promise {\n    return (await this.roleService.getRoleLabels(roleName)).map(\n      (label) => label.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove label from role' })\n  @ApiResponse({\n    status: 400,\n    description: 'Label does not exist for this role',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Delete('/:roleName/label/:label')\n  async removeLabelFromRole(\n    @Param('roleName') roleName: string,\n    @Param('label') label: string,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    await this.labelService.findOneByOrFail(label);\n\n    await this.roleService.removeRoleLabel(roleName, label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nLabelsService\n\nLabelsService\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\nimport { LabelsService } from '../labels/labels.service';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role, Label, User])],\n  providers: [RolesService, LabelsService, UsersService],\n  controllers: [RolesController],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRoleLabel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithLabels\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    Async\n                                isRoleExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRoleLabel\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesRepository: Repository, labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectRepository(Role)\n    private rolesRepository: Repository,\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.rolesRepository.find();\n  }\n\n  async findAllWithLabels(): Promise {\n    const allRoles = await this.rolesRepository.find({\n      relations: ['Labels'],\n    });\n    return allRoles;\n  }\n\n  async findOneByOrFail(name: string): Promise {\n    return await this.rolesRepository.findOneByOrFail({ Name: name });\n  }\n\n  async isRoleExist(name: string): Promise {\n    return (await this.rolesRepository.findOneBy({ Name: name })) != null;\n  }\n\n  async create(role: Role): Promise {\n    await this.rolesRepository.save(role);\n  }\n\n  async remove(name: string): Promise {\n    await this.rolesRepository.delete(name);\n  }\n\n  async update(name: string, role: Role): Promise {\n    await this.rolesRepository.update(name, role);\n  }\n\n  async addRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    const label = await this.labelsRepository.findOneOrFail({\n      where: { Name: labelName },\n    });\n    if (role.Labels.find((label) => label.Name == labelName))\n      throw new ConflictException('Label already exists for role');\n\n    role.Labels.push(label);\n    await this.rolesRepository.save(role);\n  }\n\n  async getRoleLabels(roleName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    return role.Labels;\n  }\n\n  async removeRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n\n    role.Labels = role.Labels.filter((label) => label.Name != labelName);\n    await this.rolesRepository.save(role);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const admin = this.rolesRepository.create({\n      Name: 'Admin',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: true,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    const user = this.rolesRepository.create({\n      Name: 'User',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: false,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    await this.rolesRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Router.html":{"url":"classes/Router.html","title":"class - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                Destinations\n                            \n                            \n                                    \n                                    \n                                    \n                                RuleCondition\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Destination[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'destinations', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RuleCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleCondition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rule_condition'})@IsEnum(RuleCondition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rules', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Condition\n                            \n                            \n                                    \n                                    \n                                    \n                                DicomTag\n                            \n                            \n                                    \n                                    \n                                    \n                                Value\n                            \n                            \n                                    \n                                    \n                                    \n                                ValueRepresentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'condition'})@IsEnum(Condition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DicomTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DicomTag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'dicom_tag'})@IsEnum(DicomTag)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'value'})@Validate(IsNumberOrString)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ValueRepresentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValueRepresentation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'value_representation'})@IsEnum(ValueRepresentation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                        \n                            OptionsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            SeederService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './seeder.service';\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { Autorouting } from '../autorouting/autorouting.entity';\nimport { Option } from '../options/option.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User,\n      Role,\n      Option,\n      Label,\n      OauthConfig,\n      Autorouting,\n    ]),\n  ],\n  providers: [\n    SeederService,\n    RolesService,\n    UsersService,\n    OptionsService,\n    OauthConfigService,\n  ],\n  controllers: [],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(rolesService: RolesService, usersService: UsersService, optionService: OptionsService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/seeder/seeder.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionService\n                                                  \n                                                        \n                                                                        OptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Injectable()\nexport class SeederService {\n  public constructor(\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService,\n    private readonly optionService: OptionsService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {}\n\n  public async seed() {\n    await this.rolesService.seed();\n    await this.usersService.seed();\n    await this.optionService.seed();\n    await this.oauthConfigService.seed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesGuard.html":{"url":"injectables/SeriesGuard.html","title":"injectable - SeriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/series.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard checking parent study of a dicom series has a label belonging to the user calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/series.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n\n/**\n * Guard checking parent study of a dicom series has a label belonging to the user calling role\n */\n@Injectable()\nexport class SeriesGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('series', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StudyGuard.html":{"url":"guards/StudyGuard.html","title":"guard - StudyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    StudyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/study.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard a dicomstudy has a label belonging to the user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/guards/study.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guard a dicomstudy has a label belonging to the user calling role\n */\n@Injectable()\nexport class StudyGuard implements CanActivate {\n  constructor(\n    protected rolesService: RolesService,\n    protected orthancClient: OrthancClient,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    return checkLabelRoleStudy(\n      orthancID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagAnon.html":{"url":"classes/TagAnon.html","title":"class - TagAnon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagAnon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/tag-anon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replaceValue\n                            \n                            \n                                tag\n                            \n                            \n                                tagPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: string, tagPolicy: TagPolicies, replaceValue: string | number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/tag-anon.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagPolicy\n                                                  \n                                                        \n                                                                        TagPolicies\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        replaceValue\n                                                  \n                                                        \n                                                                    string | number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        replaceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagPolicies\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagPolicies } from '../constants/enums';\n\nexport default class TagAnon {\n  tagPolicy: TagPolicies;\n  tag: string;\n  replaceValue: string | number | undefined;\n\n  constructor(\n    tag: string,\n    tagPolicy: TagPolicies,\n    replaceValue: string | number | undefined = undefined,\n  ) {\n    this.tagPolicy = tagPolicy;\n    this.tag = tag;\n    this.replaceValue = replaceValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_exports\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\n\n\nTasksModule\n\nTasksModule\n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Option } from '../options/option.entity';\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryQueueTask } from './query-queue.task';\nimport { OrthancMonitoringTask } from './orthanc-monitoring.task';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [\n    QueuesQueryService,\n    OrthancClient,\n    QueryQueueTask,\n    OrthancMonitoringTask,\n  ],\n  exports: [QueryQueueTask, OrthancMonitoringTask],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvJobDto.html":{"url":"classes/TmtvJobDto.html","title":"class - TmtvJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                CtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                PtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                SendMaskToOrthancAs\n                            \n                            \n                                    \n                                    \n                                WithFragmentedMask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SendMaskToOrthancAs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingMask[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEnum(ProcessingMask)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WithFragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvService.html":{"url":"classes/TmtvService.html","title":"class - TmtvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/tmtv.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createdFiles\n                            \n                            \n                                    Private\n                                ctOrthancSeriesId\n                            \n                            \n                                    Private\n                                ctSeriesId\n                            \n                            \n                                    Private\n                                fragmentedMask\n                            \n                            \n                                    Private\n                                ptOrthancSeriesId\n                            \n                            \n                                    Private\n                                ptSeriesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeries\n                            \n                            \n                                    Async\n                                deleteAllRessources\n                            \n                            \n                                getCreatedFiles\n                            \n                            \n                                    Async\n                                runInference\n                            \n                            \n                                    Async\n                                sendDicomToProcessing\n                            \n                            \n                                    Async\n                                sendMaskAsRtssToOrthanc\n                            \n                            \n                                    Async\n                                sendMaskAsSegToOrthanc\n                            \n                            \n                                setCtOrthancSeriesId\n                            \n                            \n                                setPtOrthancSeriesId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, processingClient: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/tmtv.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingClient\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllRessources\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllRessources()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedFiles\n                        \n                    \n                \n            \n            \n                \ngetCreatedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProcessingFile[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInference\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInference(fragmented: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fragmented\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendDicomToProcessing\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDicomToProcessing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsRtssToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsRtssToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsSegToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsSegToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetCtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetPtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import OrthancClient from '../utils/orthanc-client';\nimport ProcessingClient from '../utils/processing.client';\nimport { ProcessingFile } from './processing.file';\nimport { MaskProcessingService } from './mask-processing.service';\nimport { ProcessingMask } from '../constants/enums';\nimport { ReadableStream } from 'node:stream/web';\nimport { createWriteStream } from 'node:fs';\n\nexport class TmtvService {\n  private ptOrthancSeriesId: string;\n  private ctOrthancSeriesId: string;\n  private ptSeriesId: string;\n  private ctSeriesId: string;\n\n  private fragmentedMask: MaskProcessingService;\n\n  private createdFiles: ProcessingFile[] = [];\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly processingClient: ProcessingClient,\n  ) {}\n\n  setPtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ptOrthancSeriesId = orthancSeriesId;\n  }\n\n  setCtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ctOrthancSeriesId = orthancSeriesId;\n  }\n\n  getCreatedFiles(): ProcessingFile[] {\n    return this.createdFiles;\n  }\n\n  async sendDicomToProcessing() {\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ptOrthancSeriesId])\n      .then(async (result) => {\n        const ptResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ptResponse, 'dicoms'));\n      });\n\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ctOrthancSeriesId])\n      .then(async (result) => {\n        const ctResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ctResponse, 'dicoms'));\n      });\n  }\n\n  async createSeries() {\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ctOrthancSeriesId, false, false)\n      .then((ctSeriesId) => {\n        this.ctSeriesId = ctSeriesId;\n\n        this.createdFiles.push(new ProcessingFile(this.ctSeriesId, 'series'));\n      });\n\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ptOrthancSeriesId, true, true)\n      .then((ptSeriesId) => {\n        this.ptSeriesId = ptSeriesId;\n        this.createdFiles.push(new ProcessingFile(this.ptSeriesId, 'series'));\n      });\n  }\n\n  async runInference(fragmented: boolean = false) {\n    const maskId = (\n      await this.processingClient.executeInference('pt_seg_attentionunet', {\n        idCT: this.ctSeriesId,\n        idPT: this.ptSeriesId,\n      })\n    )['id_mask'];\n    const mask = new MaskProcessingService(this.processingClient);\n\n    mask.setMaskId(maskId);\n    mask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n    this.createdFiles.push(new ProcessingFile(maskId, 'masks'));\n\n    if (fragmented) {\n      const fragmentedMaskId = await this.processingClient.fragmentMask(\n        this.ptSeriesId,\n        maskId,\n        true,\n      );\n      const fragmentedMask = new MaskProcessingService(this.processingClient);\n\n      this.createdFiles.push(new ProcessingFile(fragmentedMaskId, 'masks'));\n      fragmentedMask.setMaskId(fragmentedMaskId);\n      fragmentedMask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n      this.fragmentedMask = fragmentedMask;\n    }\n  }\n\n  async sendMaskAsRtssToOrthanc(): Promise {\n    const rtssData = await this.fragmentedMask.getMaskAs(ProcessingMask.RTSS);\n\n    return await this.orthancClient.sendDicomToOrthanc(rtssData);\n  }\n\n  async sendMaskAsSegToOrthanc(): Promise {\n    const segData = await this.fragmentedMask.getMaskAs(ProcessingMask.SEG);\n\n    return await this.orthancClient.sendDicomToOrthanc(segData);\n  }\n\n  async deleteAllRessources() {\n    this.createdFiles.forEach((file) => {\n      this.processingClient.deleteRessource(file.getType(), file.getId());\n    });\n    this.createdFiles = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOptionDto.html":{"url":"classes/UpdateOptionDto.html","title":"class - UpdateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/update-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\n\nexport class UpdateOptionDto extends PartialType(CreateOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gaelo.fr', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gaelo.fr', required: true })\n  @IsString()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                TokenExpiration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com'})@Column({unique: true, name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@Column({name: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@Column({name: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@ManyToOne(undefined, role => role.Name)@JoinColumn({name: 'role_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@Column({name: 'role_name', unique: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        TokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { Role } from '../roles/role.entity';\n\n@Entity()\nexport class User {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty({ example: 'John' })\n  @Column({\n    name: 'firstname',\n  })\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @Column({\n    name: 'lastname',\n  })\n  Lastname: string;\n\n  @Column({\n    nullable: true,\n    name: 'password',\n  })\n  @Exclude()\n  Password: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com' })\n  @Column({\n    unique: true,\n    name: 'email',\n  })\n  Email: string;\n\n  @ApiProperty({ example: 'admin' })\n  @Column({\n    name: 'role_name',\n    unique: false,\n    nullable: true,\n  })\n  RoleName: string;\n\n  @ApiProperty()\n  @ManyToOne(() => Role, (role) => role.Name)\n  @JoinColumn({ name: 'role_name' })\n  Role?: Role;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  Token?: string;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  TokenExpiration?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoResponse.html":{"url":"interfaces/UserInfoResponse.html","title":"interface - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            preferred_username\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferred_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferred_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsersId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Conflict'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all users', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsersId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get user by id', type: GetUserDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, userDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update user'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Delete,\n  UseGuards,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { User } from './user.entity';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdParamsGuard } from '../guards/check-user-id-params.guard';\n\nimport { hashPassword } from '../utils/passwords';\n\n@ApiTags('users')\n@Controller('/users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users',\n    type: [GetUserDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getUsers(): Promise {\n    const allUsers = await this.userService.findAll();\n    return allUsers.map((user) => {\n      return {\n        Id: user.Id,\n        Firstname: user.Firstname,\n        Lastname: user.Lastname,\n        Email: user.Email,\n        RoleName: user.RoleName,\n        Role: user.Role,\n      };\n    });\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get user by id', type: GetUserDto })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Get('/:id')\n  async getUsersId(@Param('id') id: number): Promise {\n    const user = await this.userService.findOne(id);\n    return {\n      Id: user.Id,\n      Firstname: user.Firstname,\n      Lastname: user.Lastname,\n      Email: user.Email,\n      RoleName: user.RoleName,\n      Role: user.Role,\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update user' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Put('/:id')\n  async update(\n    @Param('id') id: number,\n    @Body() userDto: UpdateUserDto,\n  ): Promise {\n    const user = await this.userService.findOne(id);\n\n    if (!user) throw new NotFoundException('User not found');\n\n    user.Firstname = userDto.Firstname;\n    user.Lastname = userDto.Lastname;\n    user.Role = await this.roleService.findOneByOrFail(userDto.RoleName);\n\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    if (existingUser && existingUser.Id != id)\n      throw new ConflictException('Email already used');\n    user.Email = userDto.Email;\n\n    await this.userService.update(id, user);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Delete('/:id')\n  async delete(@Param('id') id: number): Promise {\n    const existingUser = await this.userService.isExistingUser(id);\n\n    if (!existingUser) throw new NotFoundException('User not found');\n    return await this.userService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async createUser(@Body() userDto: CreateUserDto): Promise {\n    let user = new User();\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    const role = await this.roleService.isRoleExist(userDto.RoleName);\n\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    if (existingUser) {\n      throw new ConflictException('Email already used');\n    }\n    user = { ...userDto, Password: await hashPassword(userDto.Password) };\n    return (await this.userService.create(user)).Id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { UsersController } from './users.controller';\n\nimport { User } from './user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Role, Label])],\n  providers: [UsersService, RolesService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                isExistingUser\n                            \n                            \n                                    Async\n                                isRoleUsed\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isExistingUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isExistingUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleUsed(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPassword(id: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { hashPassword } from '../utils/passwords';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async isRoleUsed(roleName: string): Promise {\n    const roleCount = await this.usersRepository.findAndCount({\n      where: {\n        RoleName: roleName,\n      },\n    });\n    return roleCount[1] > 0;\n  }\n\n  async findAll(): Promise {\n    return await this.usersRepository.find({\n      relations: { Role: true },\n    });\n  }\n\n  async findOne(id: number, withRole: boolean = true): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n      relations: {\n        Role: withRole,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  async isExistingUser(id: number): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n    });\n    return user ? true : false;\n  }\n\n  async findOneByEmail(\n    email: string,\n    withRole: boolean = true,\n  ): Promise | undefined {\n    if (email === undefined) return undefined;\n    const user = await this.usersRepository.findOne({\n      where: { Email: email },\n      relations: {\n        Role: withRole,\n      },\n    });\n    return user;\n  }\n\n  async update(id: number, user: User): Promise {\n    await this.usersRepository.update(id, user);\n  }\n\n  async updateUserPassword(id: number, newPassword: string): Promise {\n    const hashedPassword = await hashPassword(newPassword);\n    const findUser = await this.findOne(id);\n    const userWithPasswordUpdated = { ...findUser, Password: hashedPassword };\n    await this.update(id, userWithPasswordUpdated);\n  }\n\n  async create(user: User): Promise {\n    return await this.usersRepository.save(user);\n  }\n\n  async remove(id: number): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const hashAdmin = await hashPassword('passwordadmin');\n\n    const hashUser = await hashPassword('passworduser');\n\n    const admin = this.usersRepository.create({\n      Firstname: 'Admin',\n      Lastname: 'Admin',\n      Email: 'admin@gaelo.com',\n      Password: hashAdmin,\n      RoleName: 'Admin',\n    });\n\n    const user = this.usersRepository.create({\n      Firstname: 'User',\n      Lastname: 'User',\n      Email: 'user@gaelo.com',\n      Password: hashUser,\n      RoleName: 'User',\n    });\n\n    await this.usersRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithLabels.html":{"url":"classes/WithLabels.html","title":"class - WithLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/with-labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                WithLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        WithLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({example: true})@Transform( => , {toClassOnly: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/with-labels.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\n\nexport class WithLabels {\n  @IsOptional()\n  @ApiProperty({ example: true })\n  @Transform(\n    ({ value }) => {\n      return value === 'true' || value === '';\n    },\n    { toClassOnly: true },\n  )\n  @IsBoolean()\n  WithLabels: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/lost-password.dto.ts\n            \n            class\n            LostPassworDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            injectable\n            JwtOauthStrategy\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            interface\n            UserInfoResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            entity\n            Autorouting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Router\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.handler.ts\n            \n            injectable\n            AutoroutingHandler\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.controller.ts\n            \n            controller\n            AutoroutingsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.service.ts\n            \n            injectable\n            AutoroutingsService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/autorouting/dto/create-autorouting.dto.ts\n            \n            class\n            CreateAutoroutingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/dto/orthanc-event-payload.dto.ts\n            \n            class\n            OrthancEventPayloadDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/build_docs.ts\n            \n            variable\n            buildDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/check-label-in-role.guard.ts\n            \n            guard\n            CheckLabelInRole\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-params.guard.ts\n            \n            guard\n            CheckUserIdParamsGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-query.guard.ts\n            \n            guard\n            CheckUserIdQueryGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-role.guard.ts\n            \n            guard\n            CheckUserRoleGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/dicom-web.guard.ts\n            \n            guard\n            DicomWebGuard\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/guards/instance.guard.ts\n            \n            injectable\n            InstanceGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/jwt-oauth.guard.ts\n            \n            injectable\n            JwtOAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            interface\n            OrGuardOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            function\n            OrGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AdminGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AnonymizeGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoQueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoRoutingGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            CdBurnerGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            DeleteGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ExportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ImportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ModifyGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            QueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ReadAllGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/series.guard.ts\n            \n            injectable\n            SeriesGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/study.guard.ts\n            \n            guard\n            StudyGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interceptors/not-found.interceptor.ts\n            \n            injectable\n            NotFoundInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/label.entity.ts\n            \n            entity\n            Label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/labels.controller.ts\n            \n            controller\n            LabelsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/labels/labels.dto.ts\n            \n            class\n            LabelDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/labels/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupWorkers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.dto.ts\n            \n            class\n            OauthConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.entity.ts\n            \n            entity\n            OauthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.controller.ts\n            \n            controller\n            OauthConfigController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.service.ts\n            \n            injectable\n            OauthConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/options/dto/create-option.dto.ts\n            \n            class\n            CreateOptionDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/options/dto/get-option.dto.ts\n            \n            class\n            GetOptionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/options/dto/update-option.dto.ts\n            \n            class\n            UpdateOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/option.entity.ts\n            \n            entity\n            Option\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/options.controller.ts\n            \n            controller\n            OptionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/options.service.ts\n            \n            injectable\n            OptionsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryParsedAnswerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QuerySeriesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryStudyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-admin.controller.ts\n            \n            controller\n            OrthancAdminController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-delete.controller.ts\n            \n            controller\n            OrthancDeleteController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-export.controller.ts\n            \n            controller\n            OrthancExportController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-import.controller.ts\n            \n            controller\n            OrthancImportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-modify.controller.ts\n            \n            controller\n            OrthancModifyController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-query.controller.ts\n            \n            controller\n            OrthancQueryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-read-all.controller.ts\n            \n            controller\n            OrthancReadAllController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc.controller.ts\n            \n            controller\n            OrthancController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-series.answer.ts\n            \n            class\n            QuerySeriesAnswer\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-study.answer.ts\n            \n            class\n            QueryStudyAnswer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query.answer.ts\n            \n            class\n            QueryAnswer\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/orthanc/tag-anon.ts\n            \n            class\n            TagAnon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/utils.ts\n            \n            variable\n            doReverseProxy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/mask-processing.service.ts\n            \n            injectable\n            MaskProcessingService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            ProcessingJobDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            TmtvJobDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/processing/processing-queue.service.ts\n            \n            injectable\n            ProcessingQueueService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/processing/processing.controller.ts\n            \n            controller\n            ProcessingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.file.ts\n            \n            class\n            ProcessingFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            setupProcessingWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            tmtvJob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/tmtv.service.ts\n            \n            class\n            TmtvService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            isSecondaryCapture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            setupAnonWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.controller.ts\n            \n            controller\n            QueuesAnonController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.service.ts\n            \n            injectable\n            QueuesAnonService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/delete/delete.worker.ts\n            \n            function\n            setupDeleteWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.controller.ts\n            \n            controller\n            QueuesDeleteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.dto.ts\n            \n            class\n            QueuesDeleteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.service.ts\n            \n            injectable\n            QueuesDeleteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processSeries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            setupQueryWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.controller.ts\n            \n            controller\n            QueuesQueryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQuerySeriesDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryStudyDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.service.ts\n            \n            injectable\n            QueuesQueryService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/queues/queue.service.ts\n            \n            injectable\n            AbstractQueueService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/dto/get-role.dto.ts\n            \n            class\n            GetRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/dto/with-labels.dto.ts\n            \n            class\n            WithLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/seeder/seed.ts\n            \n            variable\n            seeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/orthanc-monitoring.task.ts\n            \n            injectable\n            OrthancMonitoringTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/query-queue.task.ts\n            \n            injectable\n            QueryQueueTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils/check-label-role-study.ts\n            \n            variable\n            checkLabelRoleStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/http.client.ts\n            \n            class\n            HttpClient\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/utils/is-time-between.ts\n            \n            function\n            isTimeBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/orthanc-client.ts\n            \n            injectable\n            OrthancClient\n            \n                0 %\n                (0/50)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateRandomUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            getTokenExpiration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/processing.client.ts\n            \n            injectable\n            ProcessingClient\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/validators/string-or-number.ts\n            \n            class\n            IsNumberOrString\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.11.0\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.3.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.7\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.7\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            axios : ^1.6.0\n        \n            bcryptjs : ^2.4.3\n        \n            bullmq : ^5.5.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            css-inline : ^0.11.2\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.30.1\n        \n            nodemailer : ^6.9.7\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            pg : ^8.11.4\n        \n            postgres : ^3.3.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sqlite : ^5.0.1\n        \n            sqlite3 : ^5.1.6\n        \n            tmp : ^0.2.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoroutingEventType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            Condition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DestinationType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DicomTag   (src/.../autorouting.enum.ts)\n                        \n                        \n                            LevelType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            ProcessingJobType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingMask   (src/.../enums.ts)\n                        \n                        \n                            QueryAnswerType   (src/.../enums.ts)\n                        \n                        \n                            RuleCondition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            TagPolicies   (src/.../enums.ts)\n                        \n                        \n                            ValueRepresentation   (src/.../autorouting.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/autorouting/autorouting.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AutoroutingEventType\n                    \n                \n                        \n                            \n                                 NEW_INSTANCE\n                            \n                        \n                        \n                            \n                                Value : NewInstance\n                            \n                        \n                        \n                            \n                                 NEW_SERIES\n                            \n                        \n                        \n                            \n                                Value : NewSeries\n                            \n                        \n                        \n                            \n                                 NEW_STUDY\n                            \n                        \n                        \n                            \n                                Value : NewStudy\n                            \n                        \n                        \n                            \n                                 NEW_PATIENT\n                            \n                        \n                        \n                            \n                                Value : NewPatient\n                            \n                        \n                        \n                            \n                                 STABLE_SERIES\n                            \n                        \n                        \n                            \n                                Value : StableSeries\n                            \n                        \n                        \n                            \n                                 STABLE_STUDY\n                            \n                        \n                        \n                            \n                                Value : StableStudy\n                            \n                        \n                        \n                            \n                                 STABLE_PATIENT\n                            \n                        \n                        \n                            \n                                Value : StablePatient\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : EQUALS\n                            \n                        \n                        \n                            \n                                 DIFFERENT\n                            \n                        \n                        \n                            \n                                Value : DIFFERENT\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : NOT_IN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DestinationType\n                    \n                \n                        \n                            \n                                 AET\n                            \n                        \n                        \n                            \n                                Value : AET\n                            \n                        \n                        \n                            \n                                 TMTVJOB\n                            \n                        \n                        \n                            \n                                Value : TMTVJob\n                            \n                        \n                        \n                            \n                                 PEER\n                            \n                        \n                        \n                            \n                                Value : Peer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DicomTag\n                    \n                \n                        \n                            \n                                 PATIENT_NAME\n                            \n                        \n                        \n                            \n                                Value : PatientName\n                            \n                        \n                        \n                            \n                                 PATIENT_ID\n                            \n                        \n                        \n                            \n                                Value : PatientID\n                            \n                        \n                        \n                            \n                                 PATIENT_BIRTHDATE\n                            \n                        \n                        \n                            \n                                Value : PatientBirthDate\n                            \n                        \n                        \n                            \n                                 PATIENT_SEX\n                            \n                        \n                        \n                            \n                                Value : PatientSex\n                            \n                        \n                        \n                            \n                                 OTHER_PATIENT_IDS\n                            \n                        \n                        \n                            \n                                Value : OtherPatientIDs\n                            \n                        \n                        \n                            \n                                 STUDY_DATE\n                            \n                        \n                        \n                            \n                                Value : StudyDate\n                            \n                        \n                        \n                            \n                                 STUDY_TIME\n                            \n                        \n                        \n                            \n                                Value : StudyTime\n                            \n                        \n                        \n                            \n                                 STUDY_ID\n                            \n                        \n                        \n                            \n                                Value : StudyID\n                            \n                        \n                        \n                            \n                                 STUDY_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : StudyDescription\n                            \n                        \n                        \n                            \n                                 ACCESSION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AccessionNumber\n                            \n                        \n                        \n                            \n                                 STUDY_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : StudyInstanceUID\n                            \n                        \n                        \n                            \n                                 REQUESTED_PROCEDURE_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : RequestedProcedureDescription\n                            \n                        \n                        \n                            \n                                 INSTITUTION_NAME\n                            \n                        \n                        \n                            \n                                Value : InstitutionName\n                            \n                        \n                        \n                            \n                                 REQUESTING_PHYSICIAN\n                            \n                        \n                        \n                            \n                                Value : RequestingPhysician\n                            \n                        \n                        \n                            \n                                 REFERRING_PHYSICIAN_NAME\n                            \n                        \n                        \n                            \n                                Value : ReferringPhysicianName\n                            \n                        \n                        \n                            \n                                 SERIES_DATE\n                            \n                        \n                        \n                            \n                                Value : SeriesDate\n                            \n                        \n                        \n                            \n                                 SERIES_TIME\n                            \n                        \n                        \n                            \n                                Value : SeriesTime\n                            \n                        \n                        \n                            \n                                 MODALITY\n                            \n                        \n                        \n                            \n                                Value : Modality\n                            \n                        \n                        \n                            \n                                 MANUFACTURER\n                            \n                        \n                        \n                            \n                                Value : Manufacturer\n                            \n                        \n                        \n                            \n                                 STATION_NAME\n                            \n                        \n                        \n                            \n                                Value : StationName\n                            \n                        \n                        \n                            \n                                 SERIES_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : SeriesDescription\n                            \n                        \n                        \n                            \n                                 BODY_PART_EXAMINED\n                            \n                        \n                        \n                            \n                                Value : BodyPartExamined\n                            \n                        \n                        \n                            \n                                 SEQUENCE_NAME\n                            \n                        \n                        \n                            \n                                Value : SequenceName\n                            \n                        \n                        \n                            \n                                 PROTOCOL_NAME\n                            \n                        \n                        \n                            \n                                Value : ProtocolName\n                            \n                        \n                        \n                            \n                                 SERIES_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SeriesNumber\n                            \n                        \n                        \n                            \n                                 CARDIAC_NUMBER_OF_IMAGES\n                            \n                        \n                        \n                            \n                                Value : CardiacNumberOfImages\n                            \n                        \n                        \n                            \n                                 IMAGES_IN_ACQUISITION\n                            \n                        \n                        \n                            \n                                Value : ImagesInAcquisition\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TEMPORAL_POSITIONS\n                            \n                        \n                        \n                            \n                                Value : NumberOfTemporalPositions\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfSlices\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TIME_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfTimeSlices\n                            \n                        \n                        \n                            \n                                 SERIES_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SeriesInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_ORIENTATION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImageOrientationPatient\n                            \n                        \n                        \n                            \n                                 SERIES_TYPE\n                            \n                        \n                        \n                            \n                                Value : SeriesType\n                            \n                        \n                        \n                            \n                                 OPERATORS_NAME\n                            \n                        \n                        \n                            \n                                Value : OperatorsName\n                            \n                        \n                        \n                            \n                                 PERFORMED_PROCEDURE_STEP_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : PerformedProcedureStepDescription\n                            \n                        \n                        \n                            \n                                 ACQUISITION_DEVICE_PROCESSING_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : AcquisitionDeviceProcessingDescription\n                            \n                        \n                        \n                            \n                                 CONTRAST_BOLUS_AGENT\n                            \n                        \n                        \n                            \n                                Value : ContrastBolusAgent\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_DATE\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationDate\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_TIME\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationTime\n                            \n                        \n                        \n                            \n                                 ACQUISITION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AcquisitionNumber\n                            \n                        \n                        \n                            \n                                 IMAGE_INDEX\n                            \n                        \n                        \n                            \n                                Value : ImageIndex\n                            \n                        \n                        \n                            \n                                 INSTANCE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : InstanceNumber\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_FRAMES\n                            \n                        \n                        \n                            \n                                Value : NumberOfFrames\n                            \n                        \n                        \n                            \n                                 TEMPORAL_POSITION_IDENTIFIER\n                            \n                        \n                        \n                            \n                                Value : TemporalPositionIdentifier\n                            \n                        \n                        \n                            \n                                 SOP_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SOPInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_POSITION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImagePositionPatient\n                            \n                        \n                        \n                            \n                                 IMAGE_COMMENTS\n                            \n                        \n                        \n                            \n                                Value : ImageComments\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LevelType\n                    \n                \n                        \n                            \n                                 INSTANCES\n                            \n                        \n                        \n                            \n                                Value : instances\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 STUDIES\n                            \n                        \n                        \n                            \n                                Value : studies\n                            \n                        \n                        \n                            \n                                 PATIENTS\n                            \n                        \n                        \n                            \n                                Value : patients\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RuleCondition\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : AND\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueRepresentation\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n            \n        \n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProcessingJobType\n                    \n                \n                        \n                            \n                                 TMTV\n                            \n                        \n                        \n                            \n                                Value : tmtv\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingMask\n                    \n                \n                        \n                            \n                                 RTSS\n                            \n                        \n                        \n                            \n                                Value : rtss\n                            \n                        \n                        \n                            \n                                 SEG\n                            \n                        \n                        \n                            \n                                Value : seg\n                            \n                        \n                        \n                            \n                                 NIFTI\n                            \n                        \n                        \n                            \n                                Value : nifti\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryAnswerType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TagPolicies\n                    \n                \n                        \n                            \n                                 KEEP\n                            \n                        \n                        \n                            \n                                Value : Keep\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : Replace\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : Remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildSwagger   (src/.../main.ts)\n                        \n                        \n                            isSecondaryCapture   (src/.../anon.worker.ts)\n                        \n                        \n                            isTimeBetween   (src/.../is-time-between.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            OrGuard   (src/.../or.guard.ts)\n                        \n                        \n                            processSeries   (src/.../query.worker.ts)\n                        \n                        \n                            processStudy   (src/.../query.worker.ts)\n                        \n                        \n                            setupAnonWorker   (src/.../anon.worker.ts)\n                        \n                        \n                            setupDeleteWorker   (src/.../delete.worker.ts)\n                        \n                        \n                            setupProcessingWorker   (src/.../processing.worker.ts)\n                        \n                        \n                            setupQueryWorker   (src/.../query.worker.ts)\n                        \n                        \n                            setupWorkers   (src/.../main.ts)\n                        \n                        \n                            tmtvJob   (src/.../processing.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildSwagger\n                        \n                    \n                \n            \n            \n                \nbuildSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupWorkers\n                        \n                    \n                \n            \n            \n                \nsetupWorkers(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/anon/anon.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSecondaryCapture\n                        \n                    \n                \n            \n            \n                \nisSecondaryCapture(sopClassUid: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sopClassUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupAnonWorker\n                        \n                    \n                \n            \n            \n                \nsetupAnonWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/is-time-between.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTimeBetween\n                        \n                    \n                \n            \n            \n                \nisTimeBetween(startHour: number, startMinute: number, endHour: number, endMinute: number, currentHour: number, currentMinute: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/guards/or.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrGuard\n                        \n                    \n                \n            \n            \n                \nOrGuard(guards: Array, orGuardOptions?: OrGuardOptions)\n                \n            \n\n\n\n\n            \n                \n                        Guard testing an array of guards, activate at the first guard activation granted\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                guards\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of guards to be tested\n\n                                            \n                                        \n                                        \n                                                orGuardOptions\n                                            \n                                                            OrGuardOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    : optional}\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/query/query.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSeries\n                        \n                    \n                \n            \n            \n                \nprocessSeries(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processStudy\n                        \n                    \n                \n            \n            \n                \nprocessStudy(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupQueryWorker\n                        \n                    \n                \n            \n            \n                \nsetupQueryWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/delete/delete.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDeleteWorker\n                        \n                    \n                \n            \n            \n                \nsetupDeleteWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/processing/processing.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupProcessingWorker\n                        \n                    \n                \n            \n            \n                \nsetupProcessingWorker(orthancClient: OrthancClient, configService: ConfigService, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmtvJob\n                        \n                    \n                \n            \n            \n                \ntmtvJob(job: Job, orthancClient: OrthancClient, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoroutingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OauthConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrthancModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\nLabelsService\n\nLabelsService\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nOrthancModule -->\n\nSeriesGuard->OrthancModule\n\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : AGPLv3\n        \n            Author : Pixilib SAS\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildDocs   (src/.../build_docs.ts)\n                        \n                        \n                            checkLabelRoleStudy   (src/.../check-label-role-study.ts)\n                        \n                        \n                            comparePasswords   (src/.../passwords.ts)\n                        \n                        \n                            doReverseProxy   (src/.../utils.ts)\n                        \n                        \n                            generateRandomUUID   (src/.../passwords.ts)\n                        \n                        \n                            generateToken   (src/.../passwords.ts)\n                        \n                        \n                            getTokenExpiration   (src/.../passwords.ts)\n                        \n                        \n                            hashPassword   (src/.../passwords.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                        \n                            seeder   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/build_docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix('api');\n  const config = new DocumentBuilder()\n    .setTitle('GaelO Flow API')\n    .setDescription('The GaelO Flow API description')\n    .setVersion('2.0')\n    .addBearerAuth(\n      { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n      'access-token',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  writeFileSync('../openapi.json', JSON.stringify(document));\n  await app.close();\n  console.log('Documentation built -> openapi.json');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/check-label-role-study.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkLabelRoleStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  studyID: string,\n  role: string,\n  rolesService: RolesService,\n  orthancClient: OrthancClient,\n) => {\n  const labelsOfRole = (await rolesService.getRoleLabels(role)).map(\n    (label) => label.Name,\n  );\n  const labelsOfStudy = await orthancClient\n    .listLabels('studies', studyID)\n    .catch(() => {\n      return [];\n    });\n\n  return (\n    labelsOfRole.filter((value: string) => labelsOfStudy.includes(value))\n      .length > 0\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/passwords.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string, hash: string) => {\n  return bcryptjs.compare(password, hash);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomUUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const jobId = randomUUID();\n  return jobId;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const token = crypto.randomBytes(32).toString('hex');\n  const hash = await hashPassword(token);\n  return { token, hash };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (hours = 24): Date => {\n  return new Date(Date.now() + hours * 60 * 60 * 1000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const saltTest = await bcryptjs.genSalt();\n  const hash = await bcryptjs.hash(password, saltTest);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n\n    src/orthanc/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doReverseProxy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: Request,\n  response: Response,\n  orthancClient: OrthancClient,\n) => {\n  const url = request.url;\n  const orthancCalledApi = url.replace('/api', '');\n  const method = request.method;\n  const body = request.body;\n  orthancClient.streamAnswerToRes(orthancCalledApi, method, body, response, {\n    accept: request.headers.accept,\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n\n    src/interceptors/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/seeder/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  const seedservice = app.get(SeederService);\n\n  await seedservice.seed();\n  await app.close();\n\n  console.log('Seeding complete');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
