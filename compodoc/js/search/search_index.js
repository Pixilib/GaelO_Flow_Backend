var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractQueueService.html",[0,0.621,1,3.068]],["body/injectables/AbstractQueueService.html",[0,0.659,1,3.254,2,1.105,3,0.051,4,0.046,5,0.046,6,2.826,7,0.14,8,0.959,9,3.742,10,4.912,11,0.75,12,2.19,13,3.254,14,3.648,15,4.908,16,4.619,17,4.619,18,3.307,19,3.648,20,3.648,21,3.254,22,0.839,23,4.824,24,0.451,25,4.824,26,1.087,27,0.008,28,0.784,29,0.361,30,0.951,31,3.648,32,3.884,33,3.187,34,3.992,35,1.196,36,2.59,37,3.648,38,2.232,39,3.187,40,3.263,41,3.187,42,3.187,43,3.187,44,1.96,45,1.111,46,4.037,47,3.187,48,2.162,49,2.112,50,4.834,51,3.648,52,3.187,53,3.648,54,3.187,55,3.648,56,3.187,57,0.086,58,0.353,59,4.941,60,2.049,61,0.051,62,2.826,63,0.122,64,3.187,65,2.246,66,3.187,67,3.187,68,4.824,69,4.824,70,3.187,71,2.826,72,1.66,73,5.293,74,6.49,75,2.826,76,6.49,77,4.824,78,5.755,79,4.824,80,3.187,81,4.824,82,3.187,83,3.187,84,1.472,85,4.277,86,2.826,87,2.826,88,2.826,89,2.826,90,2.826,91,2.826,92,2.826,93,2.826,94,2.826,95,2.826,96,4.726,97,2.826,98,3.187,99,2.826,100,3.917,101,2.826,102,2.826,103,2.826,104,1.426,105,4.277,106,2.826,107,4.277,108,3.086,109,4.824,110,1.034,111,3.187,112,2.15,113,2.826,114,3.187,115,3.187,116,3.187,117,3.187,118,2.826,119,3.187,120,0.006,121,2.826,122,3.187,123,1.672,124,3.917,125,5.16,126,2.826,127,2.826,128,3.187,129,0.004]],["title/guards/AdminGuard.html",[130,1.222,131,1.689]],["body/guards/AdminGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,2,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,2.32,138,4.766,139,3.623,140,3.559,141,3.533,142,3.696,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026]],["title/guards/AnonymizeGuard.html",[130,1.222,152,2.191]],["body/guards/AnonymizeGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,2.595,152,2.595,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,178,3.696]],["title/controllers/AppController.html",[179,1.198,180,3.439]],["body/controllers/AppController.html",[3,0.091,4,0.082,5,0.082,7,0.251,11,1.124,12,2.101,22,1.499,24,0.392,27,0.008,28,0.586,35,1.077,57,0.16,58,0.631,61,0.091,63,0.218,84,1.44,104,1.354,120,0.006,123,2.508,129,0.006,179,1.905,180,5.47,181,1.733,182,5.048,183,8.365,184,7.417,185,1.354,186,5.693,187,5.693,188,8.365,189,5.693,190,5.693,191,4.449,192,3.117,193,4.623,194,2.887,195,5.693,196,5.693,197,5.693,198,2.39,199,3.707,200,4.623,201,2.453,202,7.233,203,4.449,204,1.066,205,4.449,206,5.048,207,4.65,208,5.048,209,3.66,210,5.048,211,3.015,212,3.502,213,5.693,214,5.693,215,5.693,216,3.841,217,5.693,218,1.974,219,5.693,220,5.693,221,5.693]],["title/modules/AppModule.html",[222,1.476,223,3.439]],["body/modules/AppModule.html",[3,0.061,4,0.055,5,0.055,11,0.592,24,0.206,26,0.543,27,0.008,28,0.392,29,0.253,30,0.475,35,0.567,48,1.414,57,0.166,58,0.422,61,0.061,63,0.146,84,1.79,120,0.004,129,0.004,146,1.558,180,4.885,181,1.966,222,2.096,223,7.161,224,2.435,225,1.732,226,1.834,227,1.834,228,1.834,229,3.113,230,1.781,231,3.375,232,3.375,233,3.375,234,5.568,235,5.568,236,5.568,237,5.568,238,5.568,239,5.568,240,5.568,241,5.568,242,5.568,243,5.568,244,5.03,245,5.568,246,5.568,247,5.278,248,5.278,249,2.651,250,1.834,251,1.834,252,3.807,253,3.113,254,3.807,255,5.501,256,7.076,257,3.807,258,3.807,259,1.781,260,5.501,261,3.807,262,2.163,263,1.685,264,4.878,265,3.748,266,2.016,267,3.091,268,3.807,269,5.501,270,2.709,271,4.16,272,3.807,273,3.807,274,3.091,275,3.807,276,3.807,277,3.807,278,2.879,279,3.807,280,2.163,281,2.016,282,3.807,283,3.807,284,2.709,285,2.709,286,3.807,287,3.375,288,3.375,289,3.807,290,3.807,291,3.807,292,3.807,293,3.807,294,3.807,295,3.807,296,3.807,297,3.807,298,3.807,299,3.807,300,3.807,301,3.807,302,3.807,303,3.807,304,3.807,305,3.807,306,2.879,307,3.091,308,3.807,309,3.807,310,6.656,311,2.568,312,3.807,313,2.709,314,2.709,315,3.807,316,3.807,317,3.375,318,3.807,319,1.951,320,3.807,321,2.879,322,3.807,323,3.091,324,3.091,325,3.807,326,3.807,327,3.375,328,3.375,329,3.807,330,3.091,331,3.091,332,3.807]],["title/controllers/AuthController.html",[179,1.198,333,3.439]],["body/controllers/AuthController.html",[3,0.05,4,0.045,5,0.045,7,0.138,11,0.741,12,2.064,22,0.827,24,0.376,26,0.988,27,0.008,28,0.713,29,0.368,30,0.864,35,1.032,36,1.392,40,2.232,57,0.15,58,0.348,61,0.05,63,0.12,65,2.378,72,1.558,104,0.893,108,2.111,110,1.547,120,0.004,129,0.004,134,2.368,136,2.021,147,2.334,179,1.92,181,0.955,185,1.296,191,2.933,198,1.318,199,3.737,200,2.549,204,0.588,218,2.233,319,4.099,333,3.606,334,2.783,335,4.769,336,4.228,337,4.769,338,5.766,339,6.924,340,4.769,341,4.769,342,6.44,343,3.139,344,5.905,345,6.141,346,4.14,347,3.139,348,5.229,349,5.71,350,4.769,351,3.139,352,3.139,353,3.139,354,3.997,355,5.766,356,3.411,357,3.139,358,3.139,359,3.139,360,4.345,361,3.139,362,5.237,363,3.413,364,3.139,365,3.139,366,3.139,367,3.44,368,3.139,369,3.139,370,3.139,371,3.139,372,3.139,373,5.731,374,3.872,375,3.139,376,3.139,377,3.139,378,1.469,379,3.139,380,3.139,381,2.374,382,1.931,383,2.118,384,5.624,385,3.139,386,4.543,387,1.353,388,2.118,389,3.139,390,2.118,391,3.139,392,2.783,393,3.707,394,2.549,395,2.955,396,2.018,397,3.606,398,3.139,399,3.139,400,4.769,401,3.89,402,2.783,403,3.139,404,3.139,405,3.139,406,2.142,407,4.47,408,5.766,409,2.614,410,4.769,411,3.139,412,3.139,413,3.139,414,3.139,415,3.139,416,2.783,417,3.139,418,3.139,419,3.139,420,3.872,421,3.139,422,3.872,423,2.485,424,1.999,425,2.549,426,6.44,427,4.769,428,4.769,429,2.71,430,3.139,431,2.71,432,3.139,433,2.816,434,3.139,435,2.783,436,3.139,437,3.139,438,3.139,439,4.769,440,3.139,441,1.854,442,2.783,443,3.139,444,3.139,445,3.139,446,4.228,447,3.139,448,3.139,449,3.139,450,3.139,451,3.139,452,3.139,453,4.682,454,4.228,455,3.139,456,3.139,457,2.783,458,3.139,459,3.139,460,2.783,461,3.139,462,3.139,463,2.783,464,3.139,465,3.139,466,2.549]],["title/modules/AuthModule.html",[222,1.476,234,3.237]],["body/modules/AuthModule.html",[3,0.075,4,0.067,5,0.067,27,0.008,57,0.166,58,0.518,61,0.075,63,0.179,120,0.005,129,0.005,136,1.363,181,1.933,222,2.342,224,2.068,225,2.125,226,2.251,227,2.251,228,2.251,229,3.477,230,3.377,234,6.699,247,5.636,249,3.06,250,2.251,251,2.251,253,3.06,262,2.655,263,2.068,265,3.821,266,2.474,270,3.325,280,3.609,281,3.364,287,4.142,306,3.533,307,3.794,327,4.142,328,4.142,333,5.457,393,5.83,394,3.794,395,4.281,396,3.004,401,5.636,402,4.142,467,4.142,468,4.672,469,4.142,470,4.142,471,5.636,472,5.945,473,5.945,474,4.578,475,4.672,476,6.351,477,4.672,478,3.325,479,6.351,480,3.533,481,4.672,482,3.533,483,4.672,484,4.672,485,4.285,486,4.672,487,4.083,488,3.533,489,3.152,490,4.672,491,3.004,492,4.672,493,2.874,494,4.672,495,4.672,496,4.672,497,4.672,498,4.672,499,4.142]],["title/injectables/AuthService.html",[0,0.621,393,2.924]],["body/injectables/AuthService.html",[0,0.828,2,1.516,3,0.07,4,0.063,5,0.063,7,0.193,11,0.943,12,2.135,22,1.598,24,0.429,26,1.128,27,0.008,28,0.814,29,0.364,30,0.987,35,1.121,36,2.389,38,2.121,40,3.701,45,1.267,57,0.141,58,0.485,61,0.07,63,0.167,65,2.303,72,1.511,84,1.105,104,1.48,108,2.685,120,0.005,129,0.005,134,1.151,136,2.653,162,1.55,191,2.689,218,2.61,321,4.589,339,5.38,363,2.839,382,2.689,393,3.901,395,4.195,396,2.81,406,2.253,423,2.615,424,2.416,446,5.38,457,3.876,463,3.876,466,5.659,478,3.111,482,3.306,500,3.876,501,3.901,502,5.38,503,6.067,504,6.067,505,6.969,506,4.371,507,6.816,508,4.371,509,6.067,510,4.371,511,6.067,512,4.371,513,6.067,514,6.179,515,4.371,516,4.371,517,4.371,518,3.549,519,4.927,520,4.927,521,2.81,522,4.371,523,6.969,524,3.549,525,3.549,526,3.876,527,1.789,528,3.876,529,4.371,530,4.371,531,5.38,532,6.067,533,6.067,534,4.371,535,3.111,536,4.371,537,4.371,538,6.067,539,4.371,540,4.371]],["title/guards/AutoQueryGuard.html",[130,1.222,160,2.128]],["body/guards/AutoQueryGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,2.674,160,2.52,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,541,3.696]],["title/guards/AutoRoutingGuard.html",[130,1.222,173,2.191]],["body/guards/AutoRoutingGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.954,173,2.595,174,2.026,175,1.835,176,1.681,177,2.026,542,3.696]],["title/entities/Autorouting.html",[172,1.65,543,2.128]],["body/entities/Autorouting.html",[3,0.067,4,0.06,5,0.06,7,0.184,8,1.169,24,0.422,27,0.008,28,0.958,29,0.416,30,0.733,38,2.246,45,1.076,49,2.823,57,0.144,61,0.119,63,0.308,84,1.487,120,0.005,123,2.697,129,0.005,144,1.827,172,2.133,185,1.456,204,0.782,543,2.751,544,2.686,545,2.973,546,5.253,547,4.841,548,5.531,549,5.523,550,4.177,551,4.177,552,4.184,553,1.385,554,3.159,555,4.177,556,4.177,557,3.704,558,4.177,559,3.392,560,4.177,561,4.177,562,4.177,563,5.555,564,3.966,565,1.849,566,2.707,567,3.471,568,2.374,569,2.586,570,2.57,571,5.582,572,1.356,573,5.248,574,3.966,575,5.253,576,4.589,577,4.98,578,2.686,579,2.57,580,2.686,581,3.159,582,4.373,583,2.575,584,4.445,585,3.159,586,3.159,587,4.184,588,3.159,589,3.159,590,3.159,591,4.445,592,3.159,593,5.001,594,4.445,595,3.159,596,3.159,597,3.159,598,3.159,599,4.184,600,5.143,601,3.471,602,4.445,603,2.973,604,3.159,605,2.973]],["title/injectables/AutoroutingHandler.html",[0,0.621,606,3.237]],["body/injectables/AutoroutingHandler.html",[0,0.564,2,0.904,3,0.042,4,0.037,5,0.037,7,0.115,8,0.821,11,0.642,12,1.882,22,1.088,24,0.448,26,1.127,27,0.008,28,0.814,29,0.376,30,0.986,32,1.381,34,4.158,35,1.177,38,2.543,45,1.241,48,1.534,49,2.744,57,0.138,58,0.289,61,0.042,63,0.1,65,1.6,72,1.479,84,0.66,104,1.547,110,1.893,120,0.003,123,1.432,129,0.003,134,0.687,144,2.499,172,2.811,185,0.773,284,1.857,285,1.857,406,3.298,460,2.313,524,5.161,548,3.749,552,1.605,573,1.76,574,1.76,576,1.76,577,1.76,578,1.677,582,5.89,587,3.65,593,4.086,599,2.94,603,2.94,606,2.94,607,2.313,608,4.131,609,4.131,610,4.131,611,5.128,612,5.128,613,5.832,614,4.131,615,4.131,616,4.131,617,4.131,618,4.131,619,4.131,620,5.832,621,5.128,622,4.131,623,4.131,624,2.609,625,3.749,626,4.356,627,2.898,628,2.609,629,3.662,630,4.131,631,2.609,632,4.131,633,5.356,634,4.131,635,2.609,636,4.131,637,2.609,638,4.131,639,2.609,640,4.131,641,2.609,642,4.131,643,2.609,644,4.131,645,2.609,646,2.609,647,2.609,648,2.609,649,2.609,650,2.609,651,2.609,652,2.609,653,3.753,654,4.547,655,3.878,656,2.609,657,3.354,658,2.609,659,4.131,660,4.131,661,5.832,662,4.131,663,6.355,664,4.131,665,5.832,666,4.131,667,4.131,668,4.131,669,2.609,670,2.609,671,2.609,672,2.118,673,2.609,674,2.118,675,1.857,676,1.221,677,1.187,678,3.662,679,2.313,680,1.677,681,1.973,682,1.76,683,1.337,684,2.609,685,2.609,686,2.313,687,7.344,688,5.128,689,4.131,690,2.609,691,4.131,692,2.609,693,4.131,694,4.131,695,2.609,696,4.131,697,4.131,698,1.857,699,4.131,700,5.128,701,3.662,702,2.609,703,2.609,704,3.753,705,2.313,706,2.609,707,4.131,708,2.609,709,5.128,710,2.609,711,2.118,712,2.609,713,2.609,714,2.609,715,2.609,716,3.662,717,4.131,718,2.609,719,3.662,720,2.609,721,1.973,722,2.609,723,2.118,724,2.609,725,1.76,726,1.973,727,1.973,728,2.118,729,2.313,730,2.313,731,2.118,732,2.609,733,1.296,734,2.609,735,2.609,736,2.313,737,2.609,738,2.609,739,4.131,740,2.609,741,2.609,742,2.609,743,2.609,744,2.609,745,2.609,746,2.609,747,2.313,748,2.609,749,2.609]],["title/controllers/AutoroutingsController.html",[179,1.198,750,3.439]],["body/controllers/AutoroutingsController.html",[3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,12,2.123,24,0.402,26,0.996,27,0.008,28,0.823,29,0.401,30,0.871,35,1.105,36,2.477,38,2.647,57,0.138,58,0.41,61,0.059,63,0.141,65,2.124,84,2.022,104,1.189,120,0.004,123,3.091,129,0.004,134,2.418,162,2.253,172,3.212,173,1.781,179,0.973,181,1.933,185,1.389,192,3.657,194,3.091,198,1.552,201,1.593,203,4.293,204,0.692,218,2.572,336,4.774,346,3.462,354,4.49,356,4.495,367,2.674,378,2.52,386,4.713,387,1.593,407,4.652,409,4.066,625,3.462,629,3.277,674,3.001,675,2.63,686,3.277,750,4.072,751,3.277,752,2.1,753,4.774,754,4.372,755,6.352,756,5.384,757,5.384,758,5.384,759,6.979,760,3.696,761,5.856,762,4.38,763,2.951,764,3.696,765,3.696,766,3.696,767,3.696,768,3.696,769,6.352,770,6.352,771,3.696,772,3.696,773,3.696,774,4.774,775,3.696,776,3.696,777,3.696,778,4.774,779,3.696,780,3.696,781,2.273,782,3.696,783,3.696,784,1.835,785,3.696,786,5.384,787,1.636,788,3.001,789,3.696,790,3.696,791,3.696,792,1.552,793,7.419,794,3.696,795,3.277,796,3.696,797,3.277,798,3.696,799,3.696,800,3.696,801,3.696,802,3.696,803,3.696,804,3.696,805,3.696,806,3.696]],["title/modules/AutoroutingsModule.html",[222,1.476,235,3.237]],["body/modules/AutoroutingsModule.html",[3,0.094,4,0.084,5,0.084,27,0.008,57,0.163,58,0.65,61,0.094,63,0.224,120,0.006,129,0.006,172,2.128,181,2.243,222,2.616,224,2.596,225,2.668,226,2.826,227,2.826,228,2.826,229,3.884,230,2.745,235,6.673,249,3.551,250,2.826,251,2.826,253,2.826,262,3.333,263,2.596,606,6.329,625,5.717,626,5.47,627,3.639,674,4.762,675,4.174,676,2.745,677,2.668,679,5.2,680,3.77,750,6.095,807,5.2,808,5.2,809,5.865,810,5.865,811,5.865,812,5.865]],["title/injectables/AutoroutingsService.html",[0,0.621,625,2.924]],["body/injectables/AutoroutingsService.html",[0,0.788,2,1.412,3,0.065,4,0.058,5,0.058,7,0.179,11,0.897,12,2.228,22,1.52,24,0.464,26,1.199,27,0.008,28,0.866,29,0.387,30,1.049,34,3.551,35,1.252,36,2.656,38,2.754,57,0.143,58,0.452,61,0.065,63,0.156,65,2.379,72,1.103,84,1.46,104,1.255,110,1.321,120,0.005,123,2.853,129,0.005,134,1.072,172,3.332,263,1.802,284,2.898,285,2.898,321,4.366,406,2.144,501,3.712,546,2.898,547,5.194,552,4.489,565,1.802,578,2.618,625,3.712,675,2.898,747,5.119,763,3.164,774,5.119,778,5.119,813,3.611,814,4.924,815,6.707,816,5.773,817,3.164,818,3.712,819,4.072,820,4.489,821,5.947,822,6.471,823,4.072,824,5.773,825,5.773,826,4.072,827,5.773,828,4.072,829,5.773,830,4.072,831,4.072,832,4.072,833,4.072,834,5.773,835,4.072,836,5.119,837,4.072,838,4.688,839,4.072,840,2.618,841,4.072,842,5.773,843,4.072,844,4.072,845,6.707,846,4.072,847,4.072,848,5.773,849,5.119]],["title/guards/CdBurnerGuard.html",[130,1.222,170,2.259]],["body/guards/CdBurnerGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,2.674,170,2.674,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,850,3.696]],["title/classes/ChangePasswordDto.html",[63,0.174,344,3.439]],["body/classes/ChangePasswordDto.html",[3,0.088,4,0.079,5,0.079,7,0.242,8,1.407,24,0.448,27,0.008,29,0.38,38,2.153,40,3.661,45,1.275,57,0.126,61,0.088,63,0.271,120,0.006,129,0.006,185,1.546,204,1.029,218,2.712,319,3.626,344,5.351,453,6.352,454,6.936,553,2.347,566,2.546,569,3.14,572,1.785,583,2.153,851,1.478,852,7.575,853,4.466,854,5.5,855,5.5,856,5.5,857,7.075,858,7.075,859,7.075,860,7.075,861,6.273,862,7.075,863,9.011,864,7.075,865,8.258,866,7.075,867,7.075,868,7.075,869,7.075,870,5.5,871,5.5,872,5.5,873,5.5,874,5.5,875,6.461,876,5.351,877,4.876,878,5.5,879,7.075,880,5.5,881,5.5]],["title/guards/CheckLabelInRole.html",[130,1.222,882,3.237]],["body/guards/CheckLabelInRole.html",[0,0.997,3,0.093,4,0.083,5,0.083,7,0.255,11,1.135,12,1.907,22,1.523,24,0.396,26,1.042,27,0.008,28,0.752,29,0.337,30,0.912,35,0.861,36,2.132,57,0.13,58,0.641,61,0.093,63,0.221,65,1.586,72,1.607,104,1.082,120,0.006,129,0.006,130,1.963,132,2.428,134,1.523,139,3.443,140,2.99,141,3.358,143,2.308,146,2.367,147,1.688,148,2.492,527,2.99,792,2.428,882,5.2,883,5.7,884,3.626,885,4.696,886,5.2,887,5.932,888,7.306,889,5.932,890,4.696,891,4.401,892,5.783,893,5.783,894,3.718,895,4.116,896,5.783,897,3.902,898,3.902,899,5.128,900,5.783,901,3.902,902,5.783]],["title/guards/CheckUserIdParamsGuard.html",[130,1.222,903,3.237]],["body/guards/CheckUserIdParamsGuard.html",[0,1.018,3,0.096,4,0.086,5,0.086,7,0.263,11,1.159,22,2.14,24,0.404,26,0.852,27,0.008,28,0.615,29,0.275,30,0.745,35,0.89,40,3.983,46,2.717,49,2.949,57,0.106,58,0.662,61,0.096,63,0.228,72,1.552,104,1.118,120,0.006,123,3.037,129,0.006,130,2.004,132,2.507,134,1.573,136,2.372,139,3.483,140,3.051,141,3.397,143,2.384,144,2.317,146,2.444,147,1.743,148,2.574,784,3.702,883,5.784,886,5.306,887,6.053,903,5.306,904,5.296,905,6.053,906,4.793,907,5.973,908,5.973,909,4.517,910,5.296]],["title/guards/CheckUserIdQueryGuard.html",[130,1.222,911,3.439]],["body/guards/CheckUserIdQueryGuard.html",[0,1.018,3,0.096,4,0.086,5,0.086,7,0.263,11,1.159,22,2.14,24,0.404,26,0.852,27,0.008,28,0.615,29,0.275,30,0.745,35,0.89,40,3.983,46,2.717,49,2.949,57,0.106,58,0.662,61,0.096,63,0.228,72,1.552,104,1.118,120,0.006,123,3.037,129,0.006,130,2.004,132,2.507,134,1.573,136,2.372,139,3.483,140,3.051,141,3.397,143,2.384,144,2.317,146,2.444,147,1.743,148,2.574,156,2.644,883,5.784,886,5.306,887,6.053,905,6.053,906,4.793,910,5.296,911,5.638,912,5.296,913,5.973,914,5.973,915,5.973]],["title/guards/CheckUserRoleGuard.html",[130,1.222,916,3.237]],["body/guards/CheckUserRoleGuard.html",[0,1.019,3,0.096,4,0.086,5,0.086,7,0.264,11,1.16,22,2.142,24,0.405,26,0.854,27,0.008,28,0.838,29,0.276,30,0.747,35,0.891,46,2.723,49,2.952,57,0.107,58,0.664,61,0.096,63,0.229,72,1.554,104,1.12,120,0.006,129,0.006,130,2.006,132,2.513,134,1.576,136,2.558,139,3.486,140,3.055,141,3.4,143,2.389,144,2.32,146,2.449,147,1.747,148,2.579,527,3.486,784,3.707,883,5.79,885,4.86,886,5.313,897,5.036,898,4.038,905,6.061,906,4.799,916,5.313,917,5.985,918,5.985,919,5.985]],["title/classes/CreateAutoroutingDto.html",[63,0.174,761,3.439]],["body/classes/CreateAutoroutingDto.html",[3,0.111,4,0.099,5,0.099,27,0.008,57,0.145,61,0.111,63,0.265,72,1.557,120,0.007,123,2.827,129,0.007,172,2.512,204,1.296,675,4.927,761,6.165,851,1.86,920,6.137,921,6.137,922,3.608,923,8.153,924,6.922]],["title/classes/CreateOptionDto.html",[63,0.174,925,3.237]],["body/classes/CreateOptionDto.html",[3,0.056,4,0.05,5,0.05,7,0.152,8,1.02,24,0.485,27,0.008,29,0.412,38,2.543,45,1.31,48,3.436,57,0.091,61,0.056,63,0.196,84,1.546,110,3.041,120,0.004,129,0.004,144,2.351,185,1.672,194,3.693,204,0.647,553,2.963,566,2.677,567,3.992,569,3.297,572,1.123,583,2.719,851,0.93,876,5.72,925,3.65,926,7.966,927,2.616,928,4.963,929,4.963,930,4.963,931,4.963,932,5.42,933,5.42,934,5.42,935,5.42,936,5.42,937,5.42,938,5.42,939,5.42,940,5.42,941,5.42,942,5.42,943,5.42,944,5.42,945,3.459,946,3.459,947,3.459,948,3.459,949,5.129,950,3.459,951,3.459,952,4.548,953,3.459,954,5.42,955,3.459,956,3.459,957,3.459,958,3.459,959,5.42,960,3.459,961,3.459,962,3.459,963,3.609,964,3.459,965,3.459,966,2.809,967,3.459,968,5.42,969,3.459,970,3.459,971,6.706,972,5.129,973,3.459,974,3.459,975,3.459,976,4.963,977,3.459,978,3.459,979,2.809,980,3.028,981,2.462]],["title/classes/CreateRoleDto.html",[63,0.174,982,3.237]],["body/classes/CreateRoleDto.html",[3,0.068,4,0.06,5,0.06,7,0.186,8,1.177,24,0.484,27,0.008,28,0.704,29,0.411,45,0.863,57,0.139,61,0.119,63,0.226,84,2.412,120,0.005,129,0.005,137,3.364,144,2.904,151,3.295,156,2.425,159,3.396,162,2.425,166,3.396,169,3.396,172,2.481,175,3.396,185,1.668,194,3.747,204,0.79,553,2.956,566,2.677,567,5.263,569,2.251,572,1.369,583,2.713,851,1.134,966,7.172,982,4.213,983,7.965,984,3.426,985,4.219,986,4.219,987,4.219,988,4.219,989,4.219,990,4.219,991,4.219,992,4.219,993,4.219,994,2.847,995,3.741,996,4.219,997,4.219]],["title/classes/CreateUserDto.html",[63,0.174,998,3.439]],["body/classes/CreateUserDto.html",[3,0.086,4,0.076,5,0.076,7,0.235,8,1.38,24,0.459,27,0.008,29,0.39,45,1.331,57,0.124,61,0.086,63,0.265,84,2.065,120,0.006,129,0.006,137,2.991,185,1.584,194,3.575,204,0.999,319,4.338,363,3.609,429,4.382,431,4.382,433,4.554,553,2.807,566,2.585,569,3.219,572,1.733,583,2.576,851,1.435,861,6.154,877,4.734,994,5.203,998,5.249,999,7.693,1000,4.037,1001,5.636,1002,4.734,1003,4.734,1004,5.249,1005,4.734,1006,5.249,1007,4.734,1008,5.339,1009,6.941,1010,6.941,1011,6.941,1012,6.941,1013,6.941,1014,5.339,1015,4.734,1016,5.636,1017,5.339,1018,5.339]],["title/guards/DeleteGuard.html",[130,1.222,163,2.128]],["body/guards/DeleteGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.91,163,2.52,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,1019,3.696]],["title/classes/Destination.html",[63,0.174,593,2.924]],["body/classes/Destination.html",[3,0.071,4,0.063,5,0.063,7,0.194,8,1.214,24,0.331,27,0.008,28,0.964,29,0.406,38,2.131,45,1.102,49,2.879,57,0.146,61,0.121,63,0.314,84,1.544,120,0.005,123,2.117,129,0.005,144,1.371,172,1.6,185,1.143,204,0.826,543,2.857,545,3.139,546,4.346,547,3.139,548,5.102,549,3.582,552,3.756,553,1.463,554,3.336,559,3.582,563,5.6,564,4.119,565,1.952,566,2.728,567,3.605,568,2.506,569,2.663,570,2.713,571,5.715,572,1.431,573,5.354,574,4.724,575,5.379,576,4.724,577,5.099,578,2.836,579,2.713,580,2.836,581,3.336,582,4.502,583,2.61,584,4.617,585,3.336,586,3.336,587,4.346,588,3.336,589,3.336,590,3.336,591,4.617,592,3.336,593,5.515,594,4.617,595,3.336,596,3.336,597,3.336,598,3.336,599,4.346,600,5.296,601,3.605,602,4.617,603,3.139,604,3.336,605,3.139,851,1.185,1020,4.411,1021,4.411,1022,4.411]],["title/guards/DicomWebGuard.html",[130,1.222,1023,3.237]],["body/guards/DicomWebGuard.html",[0,0.612,3,0.046,4,0.041,5,0.041,7,0.128,8,0.575,9,1.86,11,0.696,12,1.305,22,1.18,24,0.413,26,0.88,27,0.008,28,0.687,29,0.253,30,0.77,35,1.21,36,1.307,45,1.289,57,0.11,58,0.321,61,0.046,63,0.111,65,1.693,72,1.552,84,1.386,104,1.597,108,1.983,110,1.779,120,0.004,123,1.003,129,0.004,132,1.215,134,0.762,135,2.296,139,2.526,140,1.833,141,2.463,143,1.155,146,1.184,147,1.307,148,1.247,156,1.589,216,1.952,259,2.096,406,3.368,423,1.247,424,1.553,527,2.243,583,1.878,627,2.889,653,4.492,676,1.354,677,2.038,704,4.169,711,3.637,733,2.225,754,3.637,884,2.526,889,3.637,891,3.657,894,1.86,897,3.022,898,1.952,906,2.88,963,3.236,980,3.236,1023,3.188,1024,6.924,1025,2.565,1026,3.972,1027,4.479,1028,3.388,1029,3.972,1030,5.472,1031,4.479,1032,3.388,1033,4.479,1034,6.171,1035,6.675,1036,6.675,1037,4.479,1038,4.667,1039,4.479,1040,2.349,1041,2.893,1042,2.893,1043,2.893,1044,2.893,1045,2.893,1046,4.479,1047,2.893,1048,4.479,1049,3.972,1050,4.479,1051,2.893,1052,2.893,1053,4.479,1054,5.481,1055,6.171,1056,2.893,1057,4.479,1058,3.022,1059,2.188,1060,2.893,1061,1.983,1062,4.479,1063,4.479,1064,6.745,1065,4.86,1066,2.893,1067,2.893,1068,4.163,1069,2.893,1070,2.893,1071,2.893,1072,2.893,1073,5.481,1074,1.952,1075,4.479,1076,4.479,1077,4.479,1078,5.481,1079,2.893,1080,2.893,1081,5.481,1082,2.893,1083,3.796,1084,2.893,1085,2.893,1086,2.565,1087,4.479,1088,2.893,1089,2.893,1090,2.893,1091,2.893,1092,2.893,1093,5.42,1094,2.893,1095,2.565,1096,2.893,1097,2.893,1098,2.893,1099,2.565,1100,2.893,1101,2.565,1102,2.893,1103,2.893,1104,2.893,1105,2.893,1106,2.893,1107,2.893,1108,2.893,1109,5.42,1110,3.637,1111,2.893,1112,2.349,1113,2.565,1114,1.952,1115,2.893,1116,2.349,1117,2.893,1118,2.893,1119,2.893,1120,2.893,1121,2.893,1122,2.188,1123,2.893,1124,2.349,1125,2.893,1126,2.893,1127,2.893,1128,2.565,1129,2.893,1130,2.893,1131,2.893,1132,2.893,1133,5.481,1134,7.363,1135,6.675,1136,4.479,1137,2.893,1138,2.893,1139,2.893,1140,2.893,1141,4.479,1142,4.479,1143,4.479,1144,2.893,1145,4.479,1146,6.171,1147,2.893,1148,2.893,1149,2.893]],["title/guards/ExportGuard.html",[130,1.222,154,2.128]],["body/guards/ExportGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.141,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,2.52,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,1150,3.696]],["title/classes/GetOptionDto.html",[63,0.174,1151,3.439]],["body/classes/GetOptionDto.html",[3,0.087,4,0.077,5,0.077,7,0.238,8,1.392,24,0.472,27,0.008,29,0.401,45,1.352,57,0.138,61,0.087,63,0.268,120,0.006,129,0.006,185,1.63,204,1.012,553,2.888,566,2.64,569,3.544,572,1.755,583,2.65,763,2.964,851,1.453,922,3.098,925,3.849,927,4.09,1151,5.293,1152,7.856,1153,6.206,1154,6.88,1155,6.88,1156,6.88,1157,6.88,1158,6.88,1159,6.88,1160,5.408,1161,5.408,1162,5.408,1163,5.408,1164,5.408,1165,5.408,1166,4.391,1167,4.09]],["title/classes/GetRoleDto.html",[63,0.174,1168,3.439]],["body/classes/GetRoleDto.html",[3,0.105,4,0.093,5,0.093,7,0.287,8,1.562,24,0.353,27,0.008,29,0.3,30,0.98,46,2.959,48,2.918,57,0.15,61,0.105,63,0.249,108,2.879,110,2.55,120,0.006,129,0.006,185,1.218,194,2.597,204,1.218,566,2.341,763,3.565,851,1.748,884,3.454,922,3.477,982,4.63,984,5.282,995,5.768,1166,5.282,1168,5.941,1169,6.966,1170,7.856,1171,6.008,1172,5.282,1173,5.768,1174,4.389]],["title/classes/GetUserDto.html",[63,0.174,1175,3.439]],["body/classes/GetUserDto.html",[3,0.086,4,0.076,5,0.076,7,0.235,8,1.38,24,0.471,27,0.008,29,0.4,30,0.866,38,2.112,45,1.306,57,0.137,61,0.086,63,0.265,84,2.065,120,0.006,123,2.674,129,0.006,137,2.991,185,1.624,194,3.575,204,0.999,363,3.609,429,4.382,431,4.382,433,4.554,527,3.551,553,2.708,566,2.632,569,3.105,572,1.733,583,2.485,851,1.435,876,5.249,994,5.203,1000,4.037,1001,5.636,1002,4.734,1004,5.249,1006,5.249,1016,5.636,1175,5.249,1176,7.833,1177,5.339,1178,5.339,1179,5.339,1180,5.339,1181,5.339,1182,5.339,1183,5.339,1184,5.339,1185,5.339,1186,4.037,1187,5.339]],["title/modules/GuardsModule.html",[222,1.476,236,3.237]],["body/modules/GuardsModule.html",[3,0.08,4,0.071,5,0.071,27,0.008,57,0.165,58,0.553,61,0.08,63,0.191,120,0.005,123,1.728,129,0.005,131,2.463,136,1.936,145,3.196,152,3.196,154,3.104,156,1.767,157,3.018,160,3.104,163,3.104,167,3.196,170,3.294,173,3.196,176,3.018,181,1.517,205,4.08,207,5.472,209,5.472,222,2.42,224,2.206,225,2.267,226,2.401,227,2.401,228,2.401,229,3.593,230,2.332,236,6.69,244,5.472,249,3.196,250,2.401,251,2.401,253,3.196,388,5.742,390,5.742,392,4.418,485,5.742,489,3.362,627,3.483,677,2.267,882,4.721,884,2.039,903,4.721,916,4.721,1023,4.721,1028,3.769,1095,6.611,1188,4.418,1189,4.983,1190,4.418,1191,4.983,1192,5.386,1193,4.418,1194,4.418,1195,4.983,1196,4.983,1197,4.983,1198,4.983,1199,4.983,1200,4.046,1201,4.983,1202,4.418]],["title/classes/HttpClient.html",[63,0.174,1203,3.693]],["body/classes/HttpClient.html",[3,0.044,4,0.039,5,0.039,7,0.121,8,0.855,9,5.429,11,0.668,12,1.83,24,0.47,26,1.066,27,0.008,28,0.77,29,0.389,30,0.933,32,4.644,34,3.259,35,1.113,36,1.75,45,1.389,46,2.41,48,2.681,49,2.62,57,0.077,61,0.044,63,0.105,65,1.179,72,1.379,104,1.399,108,2.345,120,0.004,129,0.004,147,1.546,191,1.688,216,5.841,259,3.379,317,6.124,319,3.54,331,7.23,356,1.453,367,4.355,423,2.584,424,2.079,493,1.688,851,0.737,1203,3.49,1204,2.433,1205,5.299,1206,5.299,1207,4.302,1208,5.299,1209,5.299,1210,5.299,1211,5.299,1212,5.299,1213,4.298,1214,4.298,1215,4.298,1216,4.298,1217,4.298,1218,5.299,1219,2.744,1220,2.744,1221,2.744,1222,2.744,1223,2.744,1224,2.744,1225,2.744,1226,2.744,1227,2.744,1228,2.744,1229,2.744,1230,2.744,1231,2.744,1232,2.744,1233,4.298,1234,2.744,1235,4.298,1236,4.298,1237,2.744,1238,4.298,1239,4.298,1240,2.744,1241,4.298,1242,2.744,1243,4.298,1244,2.744,1245,2.744,1246,5.299,1247,5.997,1248,2.744,1249,5.317,1250,3.073,1251,1.559,1252,6.506,1253,2.744,1254,3.129,1255,2.744,1256,4.298,1257,2.433,1258,4.298,1259,4.298,1260,2.744,1261,2.744,1262,4.298,1263,2.744,1264,4.298,1265,3.408,1266,6.511,1267,5.299,1268,5.997,1269,2.744,1270,5.299,1271,3.811,1272,2.744,1273,4.298,1274,2.744,1275,2.744,1276,2.744,1277,4.298,1278,3.25,1279,2.744,1280,2.744,1281,2.744,1282,2.744,1283,2.744,1284,2.744,1285,2.744,1286,2.744,1287,2.744,1288,2.744,1289,2.744,1290,2.744,1291,2.744,1292,2.744]],["title/guards/ImportGuard.html",[130,1.222,145,2.191]],["body/guards/ImportGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.113,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,2.595,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,1293,3.696]],["title/injectables/InstanceGuard.html",[0,0.621,209,2.924]],["body/injectables/InstanceGuard.html",[0,0.99,2,1.982,3,0.092,4,0.082,5,0.082,7,0.252,11,1.127,12,1.896,24,0.31,26,0.815,27,0.008,28,0.589,29,0.263,30,0.713,35,0.851,36,2.116,57,0.142,58,0.634,61,0.092,63,0.219,65,1.568,72,1.6,104,1.357,108,2.53,110,1.855,120,0.006,129,0.006,134,1.505,135,3.716,139,2.968,140,2.968,141,3.344,143,2.281,147,1.668,148,2.463,205,4.899,209,4.662,527,3.26,655,5.484,733,3.601,884,3.26,889,5.888,897,4.892,898,3.856,906,4.662,909,4.322,922,3.209,963,4.703,1026,6.429,1030,6.429,1032,5.484,1049,6.429,1058,4.892,1059,4.322,1112,5.888,1114,3.856,1116,4.641,1122,4.322,1200,4.641,1294,5.067,1295,5.888,1296,6.429,1297,5.715,1298,5.715]],["title/classes/IsNumberOrString.html",[63,0.174,580,2.924]],["body/classes/IsNumberOrString.html",[3,0.097,4,0.087,5,0.087,7,0.267,11,1.169,12,1.443,24,0.408,26,1.073,27,0.008,28,0.842,29,0.347,30,0.939,35,1.12,38,2.49,45,1.247,49,2.199,57,0.108,61,0.097,63,0.288,104,1.408,110,1.966,120,0.006,129,0.006,144,1.884,146,3.078,570,4.627,572,1.966,580,4.836,851,1.629,1299,7.253,1300,5.373,1301,8.18,1302,7.522,1303,7.522,1304,9.089,1305,6.059,1306,8.555,1307,7.522,1308,6.059,1309,8.18,1310,7.522,1311,7.522]],["title/injectables/JwtAuthGuard.html",[0,0.621,485,3.068]],["body/injectables/JwtAuthGuard.html",[0,1.01,2,2.046,3,0.095,4,0.084,5,0.084,7,0.26,11,1.15,22,1.554,24,0.401,26,1.055,27,0.008,28,0.762,29,0.341,30,0.923,35,0.879,57,0.151,58,0.654,61,0.095,63,0.226,72,1.127,84,1.492,104,1.385,120,0.006,129,0.006,130,1.988,134,1.554,139,3.028,140,3.028,141,3.383,143,2.355,199,3.792,270,4.199,485,4.991,754,6.007,792,2.477,922,3.274,1312,5.231,1313,6.56,1314,7.398,1315,7.398,1316,5.9,1317,8.906,1318,5.9,1319,5.9,1320,4.791,1321,3.629,1322,4.791,1323,5.9,1324,3.793,1325,6.56,1326,5.9,1327,5.9,1328,5.9,1329,5.9]],["title/injectables/JwtOAuthGuard.html",[0,0.621,390,3.068]],["body/injectables/JwtOAuthGuard.html",[0,1.093,2,2.328,3,0.108,4,0.096,5,0.096,27,0.008,57,0.143,58,0.745,61,0.108,63,0.257,120,0.007,129,0.007,130,2.152,134,1.768,218,2.776,280,4.55,390,5.402,489,5.402,922,3.544,1320,5.452,1321,4.131,1330,5.954,1331,5.954,1332,7.1,1333,5.402,1334,7.1,1335,8.007,1336,8.007]],["title/injectables/JwtOauthStrategy.html",[0,0.621,471,3.068]],["body/injectables/JwtOauthStrategy.html",[0,0.77,2,1.366,3,0.063,4,0.056,5,0.056,7,0.174,11,0.877,12,2.144,22,1.485,24,0.429,26,1.129,27,0.008,28,0.839,29,0.365,30,0.988,32,4.192,35,1.133,36,2.513,45,1.313,57,0.145,58,0.437,61,0.063,63,0.151,65,2.287,72,1.592,104,1.424,120,0.005,129,0.005,144,1.225,216,2.658,218,2.744,280,2.239,281,2.087,363,2.639,381,2.98,406,2.446,420,5.348,422,3.199,423,3.098,424,2.493,425,5.348,429,2.239,431,2.239,471,3.805,474,4.467,478,2.804,480,2.98,491,2.533,493,3.469,507,6.427,525,3.199,570,3.469,922,2.496,1061,2.915,1114,3.805,1250,2.019,1252,3.199,1278,4.265,1321,2.424,1324,2.533,1333,2.658,1337,6.618,1338,3.199,1339,4.265,1340,5.639,1341,5.639,1342,5.639,1343,5.639,1344,3.94,1345,7.226,1346,3.94,1347,5,1348,3.94,1349,6.375,1350,5,1351,3.94,1352,3.94,1353,5,1354,3.94,1355,5,1356,3.94,1357,5,1358,3.94,1359,2.98,1360,2.804,1361,2.98,1362,4.265,1363,5.84,1364,2.804,1365,2.658,1366,2.98,1367,3.494,1368,3.494,1369,3.494,1370,3.494,1371,5,1372,3.494,1373,3.494,1374,3.494,1375,3.494,1376,3.494,1377,2.804,1378,3.494,1379,3.494,1380,3.494,1381,3.494,1382,3.494,1383,3.494,1384,3.494,1385,3.494,1386,3.494,1387,3.494,1388,3.494,1389,3.494,1390,3.494,1391,3.494,1392,3.494,1393,3.494]],["title/injectables/JwtStrategy.html",[0,0.621,472,3.237]],["body/injectables/JwtStrategy.html",[0,1.023,2,2.088,3,0.097,4,0.086,5,0.086,7,0.265,11,1.165,12,1.942,22,1.586,24,0.406,26,1.069,27,0.008,28,0.772,29,0.345,30,0.935,35,0.897,40,2.818,57,0.152,58,0.668,61,0.097,63,0.23,104,1.127,110,1.954,120,0.006,129,0.006,191,3.704,265,4.74,266,3.189,363,2.818,472,5.333,489,4.063,524,4.89,527,2.465,570,4.609,792,2.528,922,3.316,1061,2.665,1321,3.704,1324,3.872,1333,4.063,1339,5.667,1359,4.554,1360,4.286,1394,5.339,1395,4.286,1396,6.022,1397,7.493,1398,6.022,1399,6.022,1400,6.022,1401,6.022,1402,6.022,1403,6.022,1404,6.022,1405,6.022,1406,6.022,1407,6.022]],["title/entities/Label.html",[543,2.128,884,1.861]],["body/entities/Label.html",[3,0.107,4,0.096,5,0.096,7,0.295,8,1.588,24,0.363,27,0.008,28,0.955,29,0.308,45,1.164,57,0.142,61,0.107,63,0.256,120,0.007,129,0.007,185,1.251,204,1.251,543,3.737,544,4.297,553,2.217,565,2.958,566,2.38,583,2.034,884,3.268,1408,5.926,1409,6.684,1410,6.684,1411,6.484]],["title/classes/LabelDto.html",[63,0.174,1412,3.237]],["body/classes/LabelDto.html",[3,0.109,4,0.097,5,0.097,7,0.298,8,1.599,24,0.367,27,0.008,28,0.914,29,0.311,45,1.172,57,0.143,61,0.109,63,0.307,120,0.007,129,0.007,185,1.266,204,1.266,553,2.243,559,5.49,566,2.396,569,3.058,572,2.194,583,2.058,851,1.817,1412,5.723,1413,5.995,1414,6.761]],["title/controllers/LabelsController.html",[179,1.198,1415,3.439]],["body/controllers/LabelsController.html",[3,0.076,4,0.068,5,0.068,7,0.208,11,0.995,12,2.104,24,0.394,26,0.913,27,0.008,28,0.747,29,0.358,30,0.799,35,1.081,36,2.446,45,1.134,57,0.145,58,0.524,61,0.076,63,0.181,65,1.991,72,0.902,104,1.358,120,0.005,129,0.005,131,1.755,134,2.392,162,1.676,179,1.244,181,1.438,185,1.358,192,3.612,198,1.984,201,2.036,204,0.884,218,2.517,346,4.115,354,4.264,356,4.439,367,2.347,378,2.995,383,3.188,386,4.697,387,2.036,407,4.594,409,3.978,423,2.036,424,1.638,441,2.79,752,2.685,762,4.286,763,4.264,781,2.907,784,2.347,787,2.091,792,1.984,814,5.248,817,4.264,884,2.619,895,4.555,901,3.188,1061,2.091,1171,5.166,1412,5.965,1415,4.84,1416,4.189,1417,4.725,1418,6.4,1419,4.725,1420,4.725,1421,3.573,1422,4.725,1423,4.189,1424,4.725,1425,4.725,1426,4.465,1427,4.189,1428,4.189,1429,4.725,1430,4.725,1431,4.124,1432,4.725,1433,4.725,1434,4.725,1435,4.725,1436,4.725,1437,4.725,1438,4.725,1439,4.725,1440,4.725,1441,4.189,1442,3.573,1443,4.725]],["title/modules/LabelsModule.html",[222,1.476,237,3.237]],["body/modules/LabelsModule.html",[3,0.103,4,0.092,5,0.092,27,0.008,57,0.159,58,0.709,61,0.103,63,0.244,120,0.006,129,0.006,181,2.365,222,2.718,224,2.829,225,2.908,226,3.08,227,3.08,228,3.08,229,4.036,230,2.991,237,6.463,249,3.745,250,3.08,251,3.08,253,3.08,262,3.632,263,2.829,884,2.616,1415,6.334,1426,5.586,1427,5.667,1444,5.667,1445,5.667,1446,6.391,1447,6.391,1448,5.667,1449,6.391]],["title/injectables/LabelsService.html",[0,0.621,1426,2.797]],["body/injectables/LabelsService.html",[0,0.914,2,1.752,3,0.081,4,0.072,5,0.072,7,0.223,11,1.04,12,2.219,22,1.763,24,0.464,26,1.186,27,0.008,28,0.898,29,0.383,30,1.037,35,1.238,36,2.64,45,1.306,57,0.142,58,0.56,61,0.081,63,0.193,65,2.192,72,0.965,104,1.405,108,2.236,120,0.005,129,0.005,263,2.236,406,1.876,565,2.236,763,3.669,814,5.392,817,3.669,820,4.916,840,3.248,884,3.403,895,5.918,1423,5.935,1426,4.118,1448,4.48,1450,4.48,1451,5.935,1452,6.694,1453,5.052,1454,5.052,1455,5.935,1456,6.694,1457,5.052,1458,5.052,1459,6.694,1460,5.052,1461,6.694,1462,5.052,1463,5.052,1464,4.48,1465,5.052,1466,5.052,1467,6.694,1468,5.052,1469,5.052,1470,5.052]],["title/injectables/LocalAuthGuard.html",[0,0.621,388,3.068]],["body/injectables/LocalAuthGuard.html",[0,1.098,2,2.344,3,0.109,4,0.097,5,0.097,27,0.008,57,0.143,58,0.75,61,0.109,63,0.259,120,0.007,129,0.007,130,2.161,134,1.781,319,4.121,321,6.081,388,5.425,922,3.559,1320,5.49,1321,4.159,1332,7.129,1333,5.425,1334,7.129,1471,5.995,1472,8.04,1473,8.04]],["title/injectables/LocalStrategy.html",[0,0.621,473,3.237]],["body/injectables/LocalStrategy.html",[0,1.008,2,2.037,3,0.094,4,0.084,5,0.084,7,0.259,11,1.147,12,1.921,22,1.548,24,0.4,26,1.053,27,0.008,28,0.76,29,0.34,30,0.921,35,0.875,36,2.154,45,1.297,57,0.151,58,0.652,61,0.094,63,0.225,65,1.612,72,1.122,104,1.1,120,0.006,129,0.006,136,2.354,319,4.468,363,3.453,381,5.581,393,5.72,394,4.772,423,2.532,424,2.037,473,5.252,570,4.539,792,2.467,922,3.266,1321,3.615,1324,3.778,1333,3.965,1339,5.581,1359,4.444,1360,4.182,1474,5.21,1475,5.876,1476,5.876,1477,7.379,1478,5.876,1479,5.21,1480,5.876,1481,5.876,1482,5.876]],["title/classes/LoginDto.html",[63,0.174,397,3.439]],["body/classes/LoginDto.html",[3,0.104,4,0.093,5,0.093,7,0.286,8,1.56,24,0.426,27,0.008,29,0.361,45,1.277,57,0.14,61,0.104,63,0.3,120,0.006,129,0.006,185,1.469,204,1.215,319,4.322,363,3.946,397,5.933,553,2.602,566,2.513,572,2.106,583,2.388,851,1.744,875,6.377,1483,5.755,1484,6.491,1485,6.491,1486,6.491,1487,6.491,1488,6.491,1489,6.491]],["title/classes/LostPassworDto.html",[63,0.174,362,3.439]],["body/classes/LostPassworDto.html",[3,0.108,4,0.096,5,0.096,7,0.297,8,1.594,24,0.365,27,0.008,29,0.31,45,1.169,57,0.143,61,0.108,63,0.307,120,0.007,129,0.007,185,1.26,204,1.26,362,6.064,363,4.008,553,2.232,566,2.389,572,2.184,583,2.048,851,1.809,853,5.465,875,6.064,1490,7.109,1491,6.73,1492,6.73,1493,6.73]],["title/modules/MailModule.html",[222,1.476,238,3.237]],["body/modules/MailModule.html",[3,0.097,4,0.086,5,0.086,12,1.434,27,0.008,57,0.157,58,0.668,61,0.097,63,0.23,84,1.523,110,1.954,120,0.006,129,0.006,136,1.757,222,2.432,224,2.665,230,2.818,238,5.333,253,3.611,264,6.644,265,4.32,266,3.189,306,4.554,307,4.89,311,4.063,330,4.89,424,2.088,493,3.704,514,5.339,1257,5.339,1313,6.644,1494,6.022,1495,5.339,1496,7.493,1497,6.085,1498,4.89,1499,7.493,1500,6.022,1501,6.022,1502,6.022,1503,6.022,1504,6.022,1505,6.022,1506,6.022,1507,6.022,1508,6.022,1509,6.022,1510,6.022,1511,6.022,1512,6.022,1513,6.022,1514,6.022,1515,6.022,1516,4.89,1517,5.339]],["title/injectables/MailService.html",[0,0.621,401,3.068]],["body/injectables/MailService.html",[0,0.997,2,2.005,3,0.093,4,0.083,5,0.083,7,0.255,11,1.135,12,1.907,22,1.924,24,0.396,26,1.042,27,0.008,28,0.752,29,0.337,30,0.912,35,0.861,36,2.132,38,2.437,40,3.748,45,1.292,57,0.143,58,0.641,61,0.093,63,0.221,65,1.586,72,1.105,120,0.006,129,0.006,218,2.777,265,4.765,266,3.063,319,3.744,323,4.696,324,4.696,363,3.748,401,4.929,406,2.713,1497,4.696,1498,4.696,1518,5.128,1519,8.008,1520,5.783,1521,8.861,1522,5.783,1523,5.783,1524,5.783,1525,7.306,1526,5.783,1527,5.783,1528,5.783,1529,5.783,1530,5.783,1531,5.783,1532,5.783,1533,5.783,1534,5.783]],["title/injectables/MaskProcessingService.html",[0,0.621,1535,3.439]],["body/injectables/MaskProcessingService.html",[0,0.771,2,1.368,3,0.063,4,0.056,5,0.056,7,0.174,8,1.123,11,0.877,12,2.097,22,1.039,24,0.473,26,1.026,27,0.008,28,0.741,29,0.402,30,0.898,35,1.214,36,2.433,45,1.344,48,2.097,49,1.432,57,0.118,58,0.438,61,0.063,63,0.151,65,2.362,72,1.593,84,1.428,104,1.526,108,2.498,120,0.005,129,0.005,248,4.854,259,3.367,274,3.204,406,3.153,423,1.7,424,2.285,682,4.854,683,2.022,701,5.844,729,3.498,730,3.498,792,1.656,1061,1.746,1535,4.269,1536,7.807,1537,3.498,1538,6.749,1539,7.612,1540,8.153,1541,7.194,1542,6.591,1543,7.194,1544,7.194,1545,5.645,1546,5.645,1547,7.194,1548,3.945,1549,5.645,1550,5.645,1551,3.945,1552,3.945,1553,7.194,1554,3.945,1555,3.945,1556,3.945,1557,5.645,1558,3.945,1559,5.645,1560,3.945,1561,3.945,1562,3.945,1563,3.945,1564,8.339,1565,7.194,1566,7.612,1567,3.945,1568,3.945,1569,3.945,1570,5.645,1571,3.945,1572,5.645,1573,3.945,1574,3.945,1575,5.645,1576,3.945,1577,5.645,1578,3.945,1579,3.945,1580,3.945,1581,3.498,1582,3.945,1583,3.498,1584,3.945,1585,5.005,1586,5.645,1587,3.498,1588,3.945,1589,3.945,1590,3.945,1591,3.945,1592,5.645,1593,3.945,1594,3.945]],["title/guards/ModifyGuard.html",[130,1.222,167,2.191]],["body/guards/ModifyGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,2.674,167,2.595,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,1595,3.696]],["title/injectables/NotFoundInterceptor.html",[0,0.621,271,3.439]],["body/injectables/NotFoundInterceptor.html",[0,1.038,2,2.136,3,0.099,4,0.088,5,0.088,7,0.272,11,1.181,24,0.334,26,0.879,27,0.008,28,0.635,29,0.284,30,0.769,35,0.918,57,0.147,58,0.683,61,0.099,63,0.236,104,1.153,120,0.006,129,0.006,141,3.435,143,2.46,146,2.522,271,5.748,423,3.275,424,2.136,565,2.727,1278,5.748,1364,4.386,1596,6.739,1597,5.463,1598,7.601,1599,7.601,1600,5.561,1601,8.605,1602,6.162,1603,7.308,1604,4.386,1605,7.601,1606,5.463,1607,7.601,1608,6.162,1609,6.162,1610,6.162,1611,6.162]],["title/entities/OauthConfig.html",[487,2.924,543,2.128]],["body/entities/OauthConfig.html",[3,0.093,4,0.083,5,0.083,7,0.254,8,1.451,24,0.456,27,0.008,28,0.866,29,0.387,45,1.326,57,0.13,61,0.093,63,0.221,120,0.006,123,2.53,129,0.006,185,1.574,204,1.08,281,4.592,487,4.691,543,3.415,544,3.711,553,2.788,563,5.171,565,2.555,566,2.584,583,2.558,1377,5.695,1411,5.925,1612,5.85,1613,5.118,1614,6.497,1615,6.497,1616,6.469,1617,5.772,1618,5.772,1619,6.469,1620,5.772,1621,5.772,1622,5.772,1623,5.772,1624,5.772,1625,5.772,1626,6.469,1627,5.118,1628,5.118]],["title/controllers/OauthConfigController.html",[179,1.198,1629,3.439]],["body/controllers/OauthConfigController.html",[3,0.068,4,0.061,5,0.061,7,0.187,11,0.924,12,2.056,24,0.372,26,0.848,27,0.008,28,0.857,29,0.36,30,0.742,35,1.022,36,1.735,45,1,57,0.145,58,0.471,61,0.068,63,0.162,65,1.882,72,1.135,84,1.503,104,1.284,120,0.005,129,0.005,131,1.576,134,2.384,162,1.505,179,1.118,181,1.292,185,1.284,191,3.656,192,2.561,193,3.446,194,2.373,198,1.782,199,3.046,200,3.446,201,1.829,203,3.656,204,0.794,218,2.061,280,5.11,281,3.936,345,6.082,346,3.821,354,4.074,356,3.936,367,2.108,374,4.826,378,2.782,383,2.863,384,4.826,386,4.657,387,1.829,407,4.563,409,3.258,423,2.561,424,2.061,441,4.051,474,3.76,491,2.728,493,5.655,752,2.412,784,2.108,787,1.878,792,1.782,1061,1.878,1074,4.01,1431,3.378,1442,5.621,1604,3.021,1612,5.014,1629,4.495,1630,3.763,1631,5.27,1632,5.27,1633,6.59,1634,3.763,1635,6.145,1636,4.244,1637,4.01,1638,4.244,1639,4.244,1640,4.244,1641,4.244,1642,3.763,1643,4.244,1644,5.944,1645,4.244,1646,4.244,1647,4.244,1648,5.944,1649,3.821,1650,4.244,1651,4.244,1652,3.763,1653,4.244,1654,4.244,1655,4.244,1656,4.244,1657,4.244,1658,4.244,1659,4.244,1660,4.244,1661,4.244,1662,4.244,1663,4.244,1664,4.244,1665,4.244,1666,4.244,1667,4.244]],["title/classes/OauthConfigDto.html",[63,0.174,1635,3.237]],["body/classes/OauthConfigDto.html",[3,0.098,4,0.087,5,0.087,7,0.268,8,1.5,24,0.465,27,0.008,28,0.844,29,0.395,45,1.34,57,0.134,61,0.098,63,0.288,120,0.006,129,0.006,185,1.604,204,1.139,281,4.664,566,2.624,569,3.349,572,1.975,851,1.635,1377,5.833,1612,5.942,1614,6.655,1615,6.655,1635,5.368,1668,5.395,1669,8.567,1670,6.085,1671,6.085,1672,6.085,1673,6.085]],["title/modules/OauthConfigModule.html",[222,1.476,239,3.237]],["body/modules/OauthConfigModule.html",[3,0.102,4,0.091,5,0.091,27,0.008,57,0.159,58,0.701,61,0.102,63,0.242,120,0.006,129,0.006,181,2.35,222,2.705,224,2.798,225,2.876,226,3.046,227,3.046,228,3.046,229,4.017,230,2.959,239,6.447,249,3.721,250,3.046,251,3.046,253,3.046,262,3.593,263,2.798,280,4.737,281,3.348,474,4.964,487,4.065,488,4.781,491,4.065,1612,4.265,1629,6.304,1674,6.322,1675,6.322,1676,6.322,1677,6.322,1678,6.322]],["title/injectables/OauthConfigService.html",[0,0.621,474,2.492]],["body/injectables/OauthConfigService.html",[0,0.833,2,1.527,3,0.071,4,0.063,5,0.063,7,0.194,11,0.948,12,2.208,22,1.606,24,0.456,26,1.131,27,0.008,28,0.908,29,0.365,30,0.99,35,1.222,36,2.394,45,1.269,57,0.141,58,0.488,61,0.071,63,0.168,65,2.251,72,1.443,104,1.31,120,0.005,129,0.005,199,4.752,263,1.949,280,3.466,281,4.541,406,1.636,474,3.343,487,2.831,488,3.331,493,4.879,565,1.949,820,4.646,840,2.831,1265,2.503,1377,5.375,1600,2.971,1612,5.785,1614,3.576,1615,3.576,1616,3.905,1619,3.905,1626,5.408,1627,3.905,1628,3.905,1631,5.408,1632,5.408,1633,6.697,1634,5.408,1635,5.645,1642,5.408,1652,3.905,1679,3.905,1680,6.997,1681,6.099,1682,5.375,1683,4.404,1684,4.404,1685,6.099,1686,4.404,1687,4.404,1688,4.404,1689,4.404,1690,6.099,1691,4.404,1692,4.404,1693,4.404,1694,4.404,1695,6.099,1696,4.404,1697,4.404,1698,4.404,1699,4.404,1700,3.331,1701,3.331,1702,4.404,1703,4.404]],["title/entities/Option.html",[543,2.128,1265,2.584]],["body/entities/Option.html",[3,0.049,4,0.043,5,0.043,7,0.133,8,0.92,24,0.477,27,0.008,28,0.951,29,0.405,38,2.535,45,1.283,48,3.457,57,0.1,61,0.049,63,0.177,110,3.035,120,0.004,123,2.188,129,0.004,144,2.232,185,1.647,194,3.638,204,0.565,543,2.166,544,1.941,553,2.918,563,5.413,564,3.123,565,1.336,566,2.638,579,1.857,583,2.678,928,4.571,929,4.571,930,4.571,931,4.571,932,4.991,933,4.991,934,4.991,935,4.991,936,4.991,937,4.991,938,4.991,939,4.991,940,4.991,941,4.991,942,4.991,943,4.991,944,4.991,954,6.035,959,6.035,963,4.019,968,6.035,971,7.157,976,5.125,979,2.451,980,2.733,981,2.149,1109,2.451,1265,2.63,1704,2.677,1705,3.019,1706,4.629,1707,3.019,1708,3.019,1709,4.629,1710,3.019,1711,4.629,1712,4.629,1713,3.019,1714,4.629,1715,3.019,1716,6.311,1717,4.629,1718,3.019,1719,3.019,1720,4.629,1721,3.019,1722,4.629,1723,3.019,1724,5.629,1725,4.629,1726,3.019,1727,3.019,1728,4.629,1729,3.019,1730,4.629,1731,3.019,1732,3.019,1733,4.629,1734,3.019,1735,4.629,1736,3.019,1737,3.019,1738,4.629,1739,3.019,1740,4.629,1741,4.629,1742,3.019,1743,4.629,1744,3.019,1745,4.629,1746,3.019,1747,3.019,1748,3.019,1749,3.019,1750,4.629,1751,3.019,1752,4.104]],["title/controllers/OptionsController.html",[179,1.198,1753,3.439]],["body/controllers/OptionsController.html",[3,0.079,4,0.071,5,0.071,7,0.217,11,1.023,12,2.02,22,1.297,24,0.357,26,0.702,27,0.008,28,0.507,29,0.38,30,0.614,35,0.98,36,2.309,57,0.154,58,0.546,61,0.079,63,0.188,65,1.805,72,1.257,104,1.232,120,0.005,123,1.707,129,0.005,131,1.829,134,2.318,179,1.297,181,1.499,185,1.232,192,3.409,198,2.067,201,2.122,204,0.922,218,2.282,265,3.925,266,2.608,354,4.336,356,4.19,367,2.446,386,4.519,387,2.122,406,2.444,407,4.336,409,3.607,752,2.798,762,3.886,787,2.18,818,5.086,1061,2.913,1151,6.235,1154,4.366,1155,4.366,1156,4.366,1157,4.366,1158,4.366,1159,4.366,1167,4.977,1207,6.424,1421,3.724,1431,3.74,1516,7.237,1753,4.977,1754,4.366,1755,4.924,1756,4.924,1757,4.924,1758,5.868,1759,4.924,1760,4.924,1761,4.924,1762,6.581,1763,4.048,1764,4.366,1765,3.999,1766,3.999,1767,4.924,1768,4.924,1769,4.366,1770,4.924,1771,4.924,1772,4.924,1773,4.924,1774,4.924,1775,4.366,1776,4.366,1777,4.924,1778,4.924]],["title/modules/OptionsModule.html",[222,1.476,240,3.237]],["body/modules/OptionsModule.html",[3,0.101,4,0.09,5,0.09,27,0.008,57,0.161,58,0.7,61,0.101,63,0.241,120,0.006,129,0.006,181,2.347,222,2.703,224,2.792,225,2.87,226,3.04,227,3.04,228,3.04,229,4.013,230,2.952,240,6.443,249,3.716,250,3.04,251,3.04,253,3.04,262,3.585,263,2.792,265,4.084,266,3.341,1265,3.585,1753,6.298,1763,5.569,1764,5.593,1779,5.593,1780,5.593,1781,6.308,1782,6.308,1783,5.593,1784,5.593]],["title/injectables/OptionsService.html",[0,0.621,1763,2.797]],["body/injectables/OptionsService.html",[0,0.964,2,1.9,3,0.088,4,0.078,5,0.078,7,0.241,11,1.097,12,2.166,22,1.859,24,0.447,26,1.007,27,0.008,28,0.727,29,0.325,30,0.881,35,1.163,36,2.407,57,0.152,58,0.608,61,0.088,63,0.209,65,2.142,72,1.047,104,1.026,120,0.006,123,1.9,129,0.006,199,4.002,263,2.425,406,2.035,565,2.425,818,4.538,820,5.073,840,3.523,928,4.449,929,4.449,930,4.449,931,4.449,979,4.449,980,4.168,981,3.9,1109,4.449,1167,4.144,1207,6.696,1265,4.686,1600,3.697,1682,5.869,1700,4.144,1701,4.144,1758,5.869,1763,4.342,1765,4.449,1783,4.858,1785,4.858,1786,5.479,1787,5.479,1788,7.058,1789,5.479,1790,5.479,1791,7.058,1792,5.479,1793,4.858,1794,5.479,1795,5.479,1796,5.479,1797,5.479]],["title/interfaces/OrGuardOptions.html",[1365,3.068,1798,3.439]],["body/interfaces/OrGuardOptions.html",[3,0.074,4,0.066,5,0.066,7,0.203,8,1.249,27,0.008,29,0.33,30,0.893,35,0.685,36,1.834,57,0.137,58,0.51,61,0.074,63,0.176,72,1.367,84,1.163,104,1.693,110,2.039,120,0.005,129,0.005,130,2.447,132,3.49,139,3.148,140,1.882,141,2.857,143,2.508,144,2.503,146,1.882,199,2.357,211,2.435,270,3.273,306,3.478,406,2.991,657,6.246,784,3.12,1061,2.035,1124,3.734,1364,3.273,1365,3.102,1517,4.077,1603,7.371,1606,4.077,1798,6.09,1799,3.734,1800,3.734,1801,8.053,1802,6.283,1803,4.598,1804,6.283,1805,6.283,1806,6.283,1807,6.283,1808,6.283,1809,4.598,1810,4.598,1811,4.598,1812,5.571,1813,4.077,1814,4.077,1815,4.077,1816,4.077,1817,4.077,1818,4.598,1819,4.598,1820,4.598,1821,4.598,1822,4.598,1823,4.598,1824,4.598,1825,4.598,1826,4.598,1827,4.598,1828,4.598,1829,4.598,1830,4.598,1831,4.598,1832,4.598,1833,4.598,1834,4.598,1835,6.283,1836,4.598,1837,4.598,1838,4.598,1839,4.598,1840,4.598,1841,4.598,1842,4.598,1843,4.598,1844,4.598,1845,4.598,1846,4.598,1847,4.598,1848,4.598,1849,4.598,1850,4.598]],["title/controllers/OrthancAdminController.html",[179,1.198,1851,3.439]],["body/controllers/OrthancAdminController.html",[3,0.044,4,0.039,5,0.039,7,0.121,11,0.669,18,2.448,24,0.454,26,1.193,27,0.008,28,0.87,29,0.385,30,1.043,35,1.245,57,0.123,58,0.305,59,2.65,61,0.044,63,0.105,84,0.696,110,1.398,120,0.004,123,2.082,129,0.004,131,1.022,134,1.134,147,2.729,162,0.976,179,1.134,181,0.837,185,1.565,192,3.909,193,2.234,194,1.719,198,1.155,201,1.186,203,2.65,204,0.515,218,2.899,259,3.913,378,1.288,387,1.186,627,2.172,653,2.543,676,1.288,677,1.252,733,4.152,787,1.218,792,1.155,1250,4.905,1251,1.563,1254,5.521,1431,4.751,1851,3.258,1852,5.197,1853,2.439,1854,5.308,1855,5.308,1856,5.308,1857,5.308,1858,5.308,1859,5.308,1860,5.308,1861,5.308,1862,5.308,1863,5.308,1864,5.308,1865,5.308,1866,5.308,1867,2.751,1868,5.751,1869,2.751,1870,2.751,1871,2.751,1872,2.751,1873,2.751,1874,2.751,1875,2.751,1876,2.751,1877,2.751,1878,2.751,1879,2.751,1880,2.751,1881,2.751,1882,2.751,1883,2.751,1884,2.751,1885,2.751,1886,2.751,1887,4.307,1888,4.307,1889,2.751,1890,2.751,1891,2.751,1892,2.751,1893,4.307,1894,2.751,1895,2.751,1896,2.751,1897,2.751,1898,2.751,1899,2.751,1900,2.751,1901,2.751,1902,2.751,1903,2.751,1904,2.751,1905,2.751,1906,2.751,1907,2.751,1908,2.751,1909,2.751,1910,2.751,1911,2.751,1912,2.751,1913,2.081,1914,1.563,1915,1.692,1916,1.692,1917,2.751,1918,5.143,1919,2.751,1920,2.751,1921,2.751,1922,2.751,1923,2.751,1924,2.751,1925,2.751,1926,2.751,1927,2.751,1928,2.751,1929,2.751,1930,2.751,1931,2.751,1932,2.751]],["title/controllers/OrthancController.html",[179,1.198,1933,3.439]],["body/controllers/OrthancController.html",[3,0.063,4,0.056,5,0.056,7,0.172,11,0.871,12,1.561,24,0.428,26,1.126,27,0.008,28,0.813,29,0.364,30,0.985,35,1.176,45,0.956,46,3.784,57,0.157,58,0.433,61,0.063,63,0.149,65,1.072,72,0.747,104,0.732,120,0.005,129,0.005,131,1.452,147,2.654,154,2.624,157,2.551,160,2.624,176,1.778,179,1.477,181,1.189,185,1.477,191,2.404,192,3.788,198,1.641,201,1.684,204,0.732,205,3.449,206,3.466,207,3.605,208,3.466,209,3.605,210,3.466,211,2.07,212,2.404,218,2.737,259,3.549,387,1.684,627,2.683,676,1.829,677,1.778,733,3.767,784,1.941,787,1.73,792,1.641,882,2.782,884,1.6,895,4.667,963,2.308,1023,3.991,1029,3.466,1192,3.174,1194,3.466,1250,4.808,1251,2.221,1254,5.342,1868,5.565,1914,2.221,1915,2.404,1916,2.404,1918,4.666,1933,4.24,1934,3.466,1935,6.557,1936,6.557,1937,6.557,1938,6.557,1939,6.557,1940,5.607,1941,3.909,1942,3.909,1943,3.909,1944,3.909,1945,3.909,1946,3.909,1947,3.909,1948,3.909,1949,3.909,1950,3.909,1951,3.909,1952,3.909,1953,3.909,1954,3.909,1955,3.909,1956,3.909,1957,3.909,1958,3.909,1959,3.909,1960,3.909,1961,2.956,1962,3.909,1963,3.909,1964,3.909,1965,5.607,1966,3.909,1967,3.909,1968,7.163,1969,3.909,1970,3.909,1971,3.909,1972,3.909,1973,2.513]],["title/controllers/OrthancDeleteController.html",[179,1.198,1974,3.439]],["body/controllers/OrthancDeleteController.html",[3,0.082,4,0.073,5,0.073,7,0.225,11,1.046,24,0.409,26,1.075,27,0.008,28,0.776,29,0.347,30,0.941,35,1.123,57,0.153,58,0.565,61,0.082,63,0.195,120,0.006,129,0.006,147,2.665,162,1.807,163,2.385,179,1.773,181,1.551,185,1.411,192,3.691,198,2.14,201,2.196,204,0.954,218,2.614,259,3.528,387,2.196,627,3.085,676,2.385,677,2.318,733,3.744,787,2.256,792,2.14,1250,4.814,1251,2.896,1254,5.349,1852,4.933,1868,5.573,1914,2.896,1915,3.135,1916,3.135,1918,4.638,1974,5.091,1975,4.519,1976,7.539,1977,7.539,1978,7.539,1979,5.096,1980,5.096,1981,5.096,1982,5.096,1983,5.096,1984,5.096,1985,5.096,1986,5.096,1987,5.096,1988,5.096,1989,6.685,1990,5.096,1991,5.096]],["title/classes/OrthancEventPayloadDto.html",[63,0.174,633,3.439]],["body/classes/OrthancEventPayloadDto.html",[3,0.083,4,0.074,5,0.074,7,0.227,8,1.348,24,0.466,27,0.008,29,0.396,38,2.063,45,1.296,57,0.135,61,0.083,63,0.259,84,2.173,120,0.006,123,2.628,129,0.006,185,1.608,194,3.675,204,0.964,330,6.154,535,5.394,552,4.662,553,2.849,566,2.61,568,2.927,569,3.182,572,1.671,578,3.311,583,2.615,605,3.666,633,5.127,672,7.112,851,1.384,876,5.127,980,4.003,994,5.433,1992,7.766,1993,4.567,1994,7.578,1995,7.578,1996,7.578,1997,6.011,1998,5.15,1999,5.15,2000,6.779,2001,5.15,2002,5.15,2003,5.15,2004,5.15,2005,5.15,2006,5.15]],["title/controllers/OrthancExportController.html",[179,1.198,2007,3.439]],["body/controllers/OrthancExportController.html",[3,0.063,4,0.056,5,0.056,7,0.172,11,0.87,24,0.441,26,1.159,27,0.008,28,0.837,29,0.374,30,1.014,35,1.21,57,0.141,58,0.432,61,0.063,63,0.149,120,0.005,129,0.005,147,2.712,154,1.824,179,1.474,181,1.186,185,1.521,192,3.849,198,1.637,201,1.68,204,0.73,218,2.817,259,3.802,378,1.824,387,1.68,627,2.679,676,1.824,677,1.773,733,4.035,787,1.725,792,1.637,1250,4.878,1251,2.215,1254,5.471,1852,5.113,1868,5.7,1914,2.215,1915,2.398,1916,2.398,1918,4.998,2007,4.232,2008,3.456,2009,6.547,2010,6.547,2011,6.547,2012,6.547,2013,6.547,2014,6.547,2015,6.547,2016,3.898,2017,5.805,2018,3.898,2019,3.898,2020,3.898,2021,3.898,2022,3.898,2023,3.898,2024,6.547,2025,3.898,2026,3.898,2027,3.898,2028,3.898,2029,3.898,2030,3.898,2031,3.898,2032,3.898,2033,3.898,2034,3.898,2035,3.898,2036,3.898,2037,3.898,2038,3.898,2039,3.898,2040,8.124,2041,5.805,2042,3.898,2043,3.898,2044,3.898,2045,3.898,2046,3.898]],["title/controllers/OrthancImportController.html",[179,1.198,2047,3.439]],["body/controllers/OrthancImportController.html",[3,0.088,4,0.078,5,0.078,7,0.241,11,1.097,24,0.383,26,1.007,27,0.008,28,0.727,29,0.325,30,0.881,35,1.051,57,0.156,58,0.608,61,0.088,63,0.209,120,0.006,129,0.006,145,2.64,147,2.628,179,1.859,181,1.667,185,1.321,192,3.554,198,2.3,201,2.361,204,1.026,218,2.447,259,3.303,378,2.564,387,2.361,627,3.196,676,2.564,677,2.493,733,3.505,787,2.425,792,2.3,1028,4.144,1250,4.761,1251,3.114,1254,5.248,1852,4.803,1868,5.467,1914,3.114,1915,3.37,1916,3.37,1918,4.342,2017,4.858,2041,4.858,2047,5.338,2048,4.858,2049,7.808,2050,7.808,2051,5.479,2052,5.479,2053,5.479,2054,5.479,2055,5.479,2056,5.479,2057,5.479,2058,7.058]],["title/controllers/OrthancModifyController.html",[179,1.198,2059,3.439]],["body/controllers/OrthancModifyController.html",[3,0.082,4,0.073,5,0.073,7,0.225,11,1.046,24,0.409,26,1.075,27,0.008,28,0.776,29,0.347,30,0.941,35,1.123,57,0.153,58,0.565,61,0.082,63,0.195,120,0.006,129,0.006,147,2.665,167,2.456,179,1.773,181,1.551,185,1.411,192,3.691,198,2.14,201,2.196,204,0.954,218,2.614,259,3.528,378,2.385,387,2.196,627,3.085,676,2.385,677,2.318,733,3.744,787,2.256,792,2.14,1250,4.814,1251,2.896,1254,5.349,1852,4.933,1868,5.573,1914,2.896,1915,3.135,1916,3.135,1918,4.638,2059,5.091,2060,4.519,2061,7.539,2062,7.539,2063,7.539,2064,5.096,2065,5.096,2066,5.096,2067,5.096,2068,5.096,2069,5.096,2070,5.096,2071,5.096,2072,5.096,2073,5.096,2074,7.539,2075,5.096,2076,5.096]],["title/modules/OrthancModule.html",[222,1.476,241,3.237]],["body/modules/OrthancModule.html",[3,0.09,4,0.081,5,0.081,27,0.008,57,0.165,58,0.624,61,0.09,63,0.215,120,0.006,129,0.006,181,2.185,222,2.566,224,2.491,225,2.56,226,2.711,227,2.711,228,2.711,229,3.81,230,2.633,241,6.444,244,5.657,249,3.46,250,2.711,251,2.711,253,3.46,288,4.989,627,3.601,676,2.633,677,2.56,1295,7.261,1851,5.98,1933,5.98,1974,5.98,2007,5.98,2047,5.98,2059,5.98,2077,5.627,2078,5.627,2079,5.627,2080,5.627,2081,5.98,2082,5.98,2083,5.627,2084,5.627,2085,5.627,2086,5.627,2087,5.627,2088,5.627,2089,4.989,2090,4.255,2091,5.627]],["title/injectables/OrthancMonitoringTask.html",[0,0.621,2092,3.237]],["body/injectables/OrthancMonitoringTask.html",[0,0.981,2,1.955,3,0.091,4,0.081,5,0.081,7,0.248,8,1.429,11,1.117,12,1.884,22,1.893,24,0.429,26,0.804,27,0.008,28,0.581,29,0.331,30,0.703,35,0.84,38,2.188,48,2.094,49,2.046,57,0.149,58,0.625,61,0.091,63,0.216,65,1.972,72,1.077,108,3.503,120,0.006,129,0.006,185,1.055,278,4.264,284,4.013,285,4.013,406,3.198,627,3.603,676,2.638,677,2.565,821,7.017,822,7.39,1040,4.578,2092,5.116,2093,7.39,2094,4.999,2095,7.914,2096,8.335,2097,7.189,2098,7.189,2099,5.638,2100,4.999,2101,4.999,2102,7.914,2103,5.638,2104,5.638,2105,5.638,2106,5.638,2107,5.638,2108,5.638,2109,5.638,2110,5.638,2111,5.638]],["title/controllers/OrthancQueryController.html",[179,1.198,2081,3.439]],["body/controllers/OrthancQueryController.html",[3,0.068,4,0.061,5,0.061,7,0.186,11,0.921,12,1.63,24,0.402,26,1.058,27,0.008,28,0.764,29,0.342,30,0.926,35,1.105,45,0.998,57,0.154,58,0.469,61,0.068,63,0.162,65,1.625,72,1.417,104,1.109,120,0.005,123,2.572,129,0.005,147,2.578,156,1.499,157,1.922,160,3.656,179,1.561,181,1.286,185,1.389,191,2.599,192,3.49,198,1.774,201,1.821,204,0.791,211,2.238,218,2.373,259,3.203,367,2.943,378,1.977,387,1.821,627,2.801,676,1.977,677,1.922,683,2.166,705,5.254,733,3.399,784,2.099,787,1.87,792,1.774,1101,6.068,1250,4.709,1251,2.401,1254,5.16,1852,4.805,1868,5.376,1914,2.401,1915,2.599,1916,2.599,1918,4.21,2081,4.481,2112,3.431,2113,6.844,2114,6.844,2115,6.844,2116,4.225,2117,4.225,2118,4.225,2119,4.225,2120,4.225,2121,4.225,2122,4.225,2123,6.844,2124,5.005,2125,4.225,2126,4.225,2127,4.225,2128,4.225,2129,4.225,2130,4.225,2131,3.998,2132,3.998,2133,4.225,2134,3.007,2135,4.225,2136,2.599,2137,4.225,2138,4.225,2139,7.418,2140,4.225,2141,4.225,2142,4.225,2143,3.747,2144,5.926,2145,3.007,2146,4.225,2147,5.926,2148,4.225,2149,4.225,2150,4.225,2151,4.225,2152,4.225,2153,4.225,2154,4.225,2155,3.747,2156,4.225,2157,5.926,2158,4.225,2159,4.225,2160,4.225,2161,4.225,2162,4.225,2163,4.225,2164,4.225,2165,4.225]],["title/controllers/OrthancReadAllController.html",[179,1.198,2082,3.439]],["body/controllers/OrthancReadAllController.html",[3,0.076,4,0.067,5,0.067,7,0.208,11,0.993,24,0.421,26,1.108,27,0.008,28,0.8,29,0.358,30,0.969,35,1.157,57,0.149,58,0.522,61,0.076,63,0.18,120,0.005,129,0.005,147,2.667,162,1.67,176,2.143,179,1.682,181,1.433,185,1.454,192,3.754,198,1.977,201,2.03,204,0.882,218,2.694,259,3.636,378,2.204,387,2.03,627,2.965,676,2.204,677,2.143,733,3.858,787,2.085,792,1.977,1250,4.839,1251,2.676,1254,5.396,1852,4.995,1868,5.622,1913,3.562,1914,2.676,1915,2.897,1916,2.897,1918,4.779,2082,4.83,2090,6.141,2166,4.176,2167,7.246,2168,6.386,2169,7.246,2170,7.246,2171,4.71,2172,4.71,2173,4.71,2174,4.71,2175,4.71,2176,4.71,2177,4.71,2178,4.71,2179,4.71,2180,4.71,2181,4.71,2182,4.71,2183,4.71,2184,6.888,2185,4.71,2186,4.71,2187,4.71,2188,4.71]],["title/controllers/ProcessingController.html",[179,1.198,2189,3.439]],["body/controllers/ProcessingController.html",[3,0.052,4,0.046,5,0.046,7,0.143,10,2.882,11,0.758,12,2.075,13,3.963,18,3.338,21,3.292,22,0.852,24,0.381,26,0.933,27,0.008,28,0.76,29,0.379,30,0.816,32,2.584,35,1.141,36,2.399,38,1.788,40,3.285,44,1.991,45,1.116,50,4.853,57,0.141,58,0.359,59,4.318,60,2.081,61,0.052,63,0.124,65,2.024,72,1.409,73,3.963,75,2.87,84,0.819,96,2.628,100,2.628,104,1.224,110,1.05,112,3.292,120,0.006,123,1.692,124,2.628,125,2.87,126,2.87,127,2.87,129,0.004,131,1.202,134,2.419,136,1.909,147,2.58,156,1.148,162,1.731,165,2.352,176,1.472,179,0.852,181,0.985,185,1.314,192,3.542,194,2.802,198,1.359,201,1.395,203,3.002,204,0.606,211,1.714,212,1.991,218,2.434,346,3.138,354,4.32,356,4.353,360,4.413,367,2.424,378,2.284,382,1.991,386,4.736,387,1.395,406,1.202,407,4.69,409,3.847,423,2.103,424,1.692,501,2.081,626,3.614,680,2.081,721,4.443,752,1.839,762,4.144,781,1.991,784,1.607,787,1.432,817,2.675,911,3.691,1061,1.432,1431,2.773,1637,3.963,1961,2.448,1973,2.081,2184,2.87,2189,3.691,2190,2.87,2191,4.77,2192,4.947,2193,4.443,2194,3.237,2195,5.318,2196,3.473,2197,3.691,2198,3.237,2199,3.237,2200,2.448,2201,2.448,2202,3.237,2203,5.58,2204,2.448,2205,3.237,2206,3.237,2207,2.448,2208,2.448,2209,2.448,2210,3.237,2211,2.87,2212,2.448,2213,3.237,2214,3.237,2215,2.304,2216,3.691,2217,2.87,2218,3.237,2219,3.237,2220,3.237,2221,2.448,2222,3.237,2223,4.443,2224,2.448,2225,4.443,2226,3.237,2227,3.237,2228,2.448,2229,2.448,2230,2.448,2231,3.237,2232,3.237,2233,3.691,2234,3.237,2235,3.237,2236,3.237,2237,2.448,2238,2.448,2239,2.448,2240,3.237,2241,2.448,2242,3.237,2243,3.237]],["title/classes/ProcessingFile.html",[63,0.174,2244,3.439]],["body/classes/ProcessingFile.html",[3,0.096,4,0.085,5,0.085,7,0.262,8,1.479,11,1.156,22,1.566,24,0.475,26,0.849,27,0.008,28,0.613,29,0.428,30,0.742,35,1.108,45,1.38,61,0.096,63,0.227,104,1.392,120,0.006,123,3.033,129,0.006,199,4.573,406,3.314,851,1.599,2244,5.623,2245,5.274,2246,8.499,2247,8.499,2248,7.436,2249,7.436,2250,5.948,2251,5.948,2252,5.948,2253,7.436,2254,7.436]],["title/classes/ProcessingJobDto.html",[63,0.174,2195,3.068]],["body/classes/ProcessingJobDto.html",[3,0.094,4,0.083,5,0.083,7,0.257,8,1.46,24,0.398,27,0.008,29,0.338,45,1.07,48,2.165,57,0.143,61,0.118,63,0.307,84,2.199,110,2.608,120,0.006,129,0.006,144,1.812,185,1.374,194,3.544,204,1.091,566,2.686,567,4.335,568,3.313,569,3.057,572,1.892,681,6.381,682,4.954,683,2.988,723,6.527,725,5.423,726,4.409,727,4.409,728,4.734,731,4.734,851,1.567,1172,5.962,2195,4.954,2255,6.079,2256,4.734,2257,5.226,2258,5.829,2259,5.829,2260,6.079,2261,5.829,2262,5.829,2263,4.172,2264,5.169,2265,5.169]],["title/modules/ProcessingModule.html",[222,1.476,242,3.237]],["body/modules/ProcessingModule.html",[3,0.105,4,0.093,5,0.093,27,0.008,57,0.151,58,0.723,61,0.105,63,0.249,120,0.006,129,0.006,181,2.394,222,2.742,224,2.886,225,2.966,226,3.142,227,3.142,228,3.142,229,4.071,230,3.051,242,6.494,249,3.791,250,3.142,251,3.142,253,3.142,626,5.612,680,4.192,2189,6.389,2191,5.294,2266,6.52,2267,6.52,2268,6.52,2269,6.52]],["title/injectables/ProcessingQueueService.html",[0,0.621,626,2.797]],["body/injectables/ProcessingQueueService.html",[0,0.747,2,1.31,3,0.061,4,0.054,5,0.054,7,0.166,8,1.088,10,3.798,11,0.85,12,2.166,13,4.339,16,5.018,17,5.018,18,3.655,21,3.691,22,0.995,24,0.447,26,1.067,27,0.008,28,0.771,29,0.359,30,0.934,34,3.365,35,1.162,36,2.549,38,2.556,40,3.931,45,1.137,46,3.549,48,1.403,49,1.371,50,2.23,57,0.133,58,0.419,59,4.603,60,2.428,61,0.061,63,0.144,65,2.14,72,1.629,73,5.049,78,4.85,84,0.955,85,4.85,86,3.349,87,3.349,88,3.349,89,3.349,90,3.349,91,3.349,92,3.349,93,3.349,94,3.349,95,3.349,96,4.442,97,3.349,99,3.349,100,3.067,101,3.349,102,3.349,103,3.349,104,1.46,105,4.85,106,3.349,112,4.757,113,3.349,118,3.349,120,0.004,121,3.349,124,5.222,129,0.004,265,4.132,266,2,311,2.548,313,2.688,314,2.688,406,2.389,424,1.31,521,2.428,626,3.365,721,6.352,792,1.586,1061,1.672,1395,2.688,1775,3.349,1776,3.349,2191,3.067,2195,5.56,2211,4.85,2217,3.349,2255,6.352,2270,3.349,2271,6.431,2272,5.47,2273,5.47,2274,3.777,2275,3.777,2276,3.777,2277,3.777,2278,3.777,2279,3.777,2280,5.47,2281,3.777,2282,3.777,2283,3.691,2284,3.777,2285,3.777,2286,2.856,2287,2.856,2288,3.777,2289,3.777,2290,3.777,2291,3.777,2292,3.777,2293,5.47,2294,3.777]],["title/classes/QueryAnswer.html",[63,0.174,2295,3.237]],["body/classes/QueryAnswer.html",[3,0.052,4,0.047,5,0.047,7,0.144,8,0.977,22,1.294,24,0.49,26,0.466,27,0.008,28,0.336,29,0.385,30,0.407,38,2.253,45,1.387,48,3.107,49,2.989,57,0.058,61,0.052,62,2.895,63,0.125,108,4.101,120,0.004,129,0.004,259,3.855,653,4.667,683,1.674,851,0.878,1038,4.467,1064,4.356,2136,4.725,2295,3.497,2296,6.864,2297,2.895,2298,6.115,2299,6.566,2300,6.566,2301,6.566,2302,4.595,2303,4.595,2304,6.115,2305,4.796,2306,4.796,2307,4.796,2308,4.796,2309,4.796,2310,4.796,2311,4.796,2312,4.796,2313,4.796,2314,4.595,2315,4.595,2316,3.265,2317,4.913,2318,3.265,2319,3.265,2320,3.265,2321,3.265,2322,3.265,2323,3.265,2324,3.265,2325,3.265,2326,3.265,2327,3.265,2328,3.265,2329,3.265,2330,3.265,2331,3.265,2332,3.265,2333,3.265,2334,3.265,2335,3.265,2336,3.265,2337,4.913,2338,4.913,2339,4.913,2340,4.913,2341,4.913,2342,4.913,2343,4.913,2344,4.913,2345,4.913]],["title/guards/QueryGuard.html",[130,1.222,157,2.069]],["body/guards/QueryGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.91,157,2.45,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,1.835,176,1.681,177,2.026,2346,3.696]],["title/classes/QueryParsedAnswerDto.html",[63,0.174,2124,3.068]],["body/classes/QueryParsedAnswerDto.html",[3,0.083,4,0.074,5,0.074,7,0.227,8,1.347,24,0.367,27,0.008,29,0.312,45,1.349,46,2.339,57,0.135,61,0.122,63,0.308,120,0.006,129,0.006,156,2.685,185,1.267,204,0.962,553,1.705,566,2.793,568,2.922,569,3.536,572,1.668,583,2.83,653,4.471,683,2.635,851,1.382,1083,3.163,2124,4.569,2131,5.108,2132,5.108,2134,5.389,2136,4.95,2145,3.659,2257,4.819,2263,3.848,2302,2.922,2303,2.922,2314,2.922,2315,2.922,2347,5.726,2348,3.888,2349,5.141,2350,5.141,2351,5.141,2352,5.141,2353,3.469,2354,4.95,2355,3.305,2356,3.305,2357,3.305,2358,3.163,2359,3.305,2360,3.163,2361,3.305,2362,3.163,2363,3.305,2364,3.305,2365,3.305,2366,3.305,2367,3.469,2368,3.469,2369,3.305,2370,3.036,2371,4.175]],["title/injectables/QueryQueueTask.html",[0,0.621,2372,3.237]],["body/injectables/QueryQueueTask.html",[0,0.961,2,1.893,3,0.088,4,0.078,5,0.078,7,0.241,11,1.094,12,1.856,22,1.854,24,0.382,26,0.779,27,0.008,28,0.562,29,0.251,30,0.681,35,0.813,57,0.158,58,0.605,61,0.088,63,0.209,65,2.259,72,1.628,120,0.006,129,0.006,185,1.022,263,2.416,278,4.128,406,2.615,424,2.441,565,2.416,820,5.066,840,3.509,1265,4.001,1516,4.432,1793,4.84,2100,4.84,2101,4.84,2372,5.011,2373,6.911,2374,4.84,2375,8.235,2376,5.459,2377,7.794,2378,5.066,2379,5.459,2380,7.041,2381,7.041,2382,5.459,2383,4.84,2384,4.128,2385,4.432,2386,5.717,2387,5.459,2388,4.432,2389,5.459,2390,5.459,2391,6.243,2392,5.459,2393,6.243,2394,5.459,2395,7.794,2396,5.459,2397,5.459,2398,5.459,2399,5.459,2400,7.794,2401,5.459,2402,5.459,2403,5.459]],["title/classes/QuerySeriesAnswer.html",[63,0.174,2404,3.693]],["body/classes/QuerySeriesAnswer.html",[3,0.043,4,0.038,5,0.038,7,0.118,8,0.836,22,1.107,24,0.497,26,0.381,27,0.008,28,0.275,29,0.394,30,0.333,38,2.58,45,1.377,48,3.261,49,3.168,57,0.075,61,0.043,63,0.102,108,4.196,120,0.003,129,0.003,259,3.194,653,2.483,683,1.368,851,0.717,922,1.861,1038,3.18,1083,3.633,1324,1.715,2136,2.587,2145,1.899,2295,6.312,2296,6.28,2298,5.162,2299,5.217,2300,5.543,2301,5.543,2302,3.879,2303,3.879,2304,5.162,2305,3.415,2306,3.415,2307,3.415,2308,3.415,2309,3.415,2310,3.415,2311,3.415,2312,3.415,2313,3.415,2314,3.879,2315,3.879,2354,4.686,2358,4.686,2360,4.686,2362,3.953,2370,3.794,2404,3.415,2405,6.743,2406,2.366,2407,7.617,2408,5.204,2409,5.204,2410,5.204,2411,5.204,2412,5.204,2413,4.614,2414,2.366,2415,5.906,2416,4.205,2417,2.668,2418,2.668,2419,2.668,2420,2.668,2421,2.668,2422,2.668,2423,2.668,2424,2.668,2425,2.668,2426,2.668,2427,2.668,2428,6.214,2429,2.366,2430,2.366,2431,2.366,2432,2.366,2433,2.366,2434,2.366,2435,2.366,2436,2.366,2437,2.366,2438,2.366,2439,2.366,2440,2.366,2441,2.366,2442,2.366,2443,2.366,2444,2.366,2445,2.366,2446,2.366,2447,2.366,2448,2.366,2449,2.366,2450,2.668,2451,3.728,2452,4.205,2453,4.205,2454,4.205,2455,4.205,2456,4.205]],["title/classes/QuerySeriesDto.html",[63,0.174,2131,3.068]],["body/classes/QuerySeriesDto.html",[3,0.076,4,0.068,5,0.068,7,0.209,8,1.274,24,0.455,27,0.008,29,0.386,45,1.367,57,0.129,61,0.117,63,0.298,120,0.005,129,0.005,156,1.678,185,1.569,204,0.886,553,2.781,566,2.766,568,2.689,569,3.497,572,1.536,583,2.799,653,2.794,683,2.426,851,1.272,1083,4.468,2124,3.193,2131,4.901,2132,4.323,2134,6.103,2136,4.468,2145,3.368,2257,3.368,2263,3.641,2302,2.689,2303,2.689,2314,2.689,2315,2.689,2347,6.484,2348,3.579,2353,3.193,2354,5.158,2355,3.043,2356,4.67,2357,3.043,2358,4.468,2359,3.043,2360,4.468,2361,3.043,2362,4.468,2363,3.043,2364,3.043,2365,3.043,2366,3.043,2367,3.193,2368,3.193,2369,3.043,2370,2.794,2371,3.843,2457,3.579,2458,4.733,2459,4.196,2460,4.733,2461,4.196,2462,4.733,2463,4.196,2464,4.733,2465,4.196,2466,4.733,2467,4.196,2468,4.733]],["title/classes/QueryStudyAnswer.html",[63,0.174,2469,3.693]],["body/classes/QueryStudyAnswer.html",[3,0.047,4,0.042,5,0.042,7,0.13,8,0.903,22,1.195,24,0.497,26,0.42,27,0.008,28,0.303,29,0.394,30,0.367,38,2.628,45,1.372,48,3.254,49,3.158,57,0.081,61,0.047,63,0.113,108,4.194,120,0.004,129,0.004,259,2.914,653,2.68,683,1.508,851,0.791,922,2.009,1038,3.432,1324,1.892,2136,2.792,2155,2.609,2295,6.398,2296,6.062,2298,5.376,2299,5.463,2300,5.772,2301,5.772,2302,4.039,2303,4.039,2304,5.376,2305,3.685,2306,3.685,2307,3.685,2308,3.685,2309,3.685,2310,3.685,2311,3.685,2312,3.685,2313,3.685,2314,4.039,2315,4.039,2370,4.635,2405,6.509,2413,4.912,2414,2.609,2428,6.31,2429,2.609,2430,2.609,2431,2.609,2432,2.609,2433,2.609,2434,2.609,2435,2.609,2436,2.609,2437,2.609,2438,2.609,2439,2.609,2440,2.609,2441,2.609,2442,2.609,2443,2.609,2444,2.609,2445,2.609,2446,2.609,2447,2.609,2448,2.609,2449,2.609,2451,4.024,2469,3.685,2470,2.609,2471,7.849,2472,7.849,2473,7.849,2474,5.54,2475,5.54,2476,5.54,2477,4.539,2478,2.943,2479,2.943,2480,2.943,2481,2.943,2482,2.943,2483,2.943,2484,2.943,2485,4.539,2486,4.539,2487,4.539]],["title/classes/QueryStudyDto.html",[63,0.174,2132,3.068]],["body/classes/QueryStudyDto.html",[3,0.074,4,0.066,5,0.066,7,0.204,8,1.256,24,0.463,27,0.008,29,0.393,45,1.368,57,0.128,61,0.115,63,0.295,120,0.005,129,0.005,156,1.644,185,1.596,204,0.868,553,2.828,566,2.758,568,2.634,569,3.487,572,1.504,583,2.791,653,2.737,683,2.375,851,1.246,1083,2.851,2124,3.127,2131,4.262,2132,4.848,2134,6.178,2136,4.421,2145,3.299,2257,3.299,2263,3.59,2302,4.084,2303,4.084,2314,4.084,2315,4.084,2347,6.564,2348,3.505,2353,3.127,2354,5.126,2355,2.98,2356,2.98,2357,2.98,2358,2.851,2359,2.98,2360,2.851,2361,2.98,2362,2.851,2363,2.98,2364,2.98,2365,2.98,2366,2.98,2367,3.127,2368,4.848,2369,2.98,2370,4.243,2371,3.764,2457,3.505,2488,4.11,2489,4.635,2490,4.635,2491,4.11,2492,4.635,2493,4.11,2494,4.635,2495,4.11,2496,4.635,2497,4.11,2498,4.635,2499,4.11,2500,4.635]],["title/modules/QueueModule.html",[222,1.476,243,3.237]],["body/modules/QueueModule.html",[3,0.095,4,0.084,5,0.084,27,0.008,57,0.161,58,0.654,61,0.095,63,0.226,120,0.006,129,0.006,181,2.252,222,2.623,224,2.611,225,2.684,226,2.843,227,2.843,228,2.843,229,3.894,230,2.761,243,6.608,249,3.565,250,2.843,251,2.843,253,2.843,2089,5.231,2378,5.478,2384,4.462,2501,5.231,2502,5.231,2503,6.008,2504,6.008,2505,5.9,2506,6.112,2507,6.112,2508,6.112,2509,7.398,2510,5.9,2511,7.398,2512,5.9,2513,7.398,2514,5.231,2515,5.231]],["title/controllers/QueuesAnonController.html",[179,1.198,2506,3.439]],["body/controllers/QueuesAnonController.html",[3,0.05,4,0.045,5,0.045,7,0.138,10,3.805,11,0.742,12,2.064,18,3.279,24,0.376,26,0.919,27,0.008,28,0.751,29,0.376,30,0.804,32,2.527,35,1.032,36,2.381,38,1.756,40,3.656,44,1.933,45,1.105,50,5.285,57,0.135,58,0.348,59,3.549,61,0.05,63,0.12,65,2.001,72,1.448,73,4.347,84,0.795,104,1.206,108,1.391,110,1.02,112,3.22,120,0.005,129,0.004,131,1.167,134,2.411,136,2.022,147,2.584,151,2.3,152,2.78,156,1.114,162,1.693,165,2.78,179,0.828,181,0.956,185,1.297,192,3.515,194,2.766,198,1.319,201,1.354,203,2.936,204,0.588,211,1.664,212,1.933,218,2.402,354,4.471,356,4.32,360,4.347,367,2.37,378,2.233,382,1.933,386,4.71,387,1.354,407,4.662,409,3.798,423,2.777,424,2.234,441,3.407,501,3.068,521,2.02,752,1.786,762,4.091,781,1.933,784,1.561,787,1.391,792,1.319,817,2.616,1061,1.391,1431,1.786,1637,3.893,1973,3.068,2192,4.873,2193,4.364,2196,3.397,2197,3.609,2200,2.376,2201,2.376,2203,5.517,2204,2.376,2207,2.376,2208,2.376,2209,2.376,2212,2.376,2215,2.237,2216,3.609,2221,2.376,2223,4.873,2224,2.376,2225,4.364,2228,2.376,2229,2.376,2230,2.376,2233,3.609,2237,3.609,2238,3.609,2239,3.609,2241,2.376,2283,3.22,2503,3.893,2506,3.609,2514,2.786,2516,5.192,2517,2.786,2518,3.142,2519,5.77,2520,4.772,2521,3.142,2522,5.192,2523,3.142,2524,3.142,2525,3.142,2526,2.552,2527,3.142,2528,3.142,2529,3.142,2530,3.142,2531,3.142,2532,3.142,2533,3.142,2534,3.142,2535,3.142,2536,3.142,2537,3.142,2538,3.875,2539,3.142,2540,3.142,2541,4.772,2542,3.142,2543,2.552,2544,2.552,2545,3.142,2546,3.142,2547,3.142,2548,3.142,2549,3.142]],["title/classes/QueuesAnonDto.html",[63,0.174,2550,3.439]],["body/classes/QueuesAnonDto.html",[3,0.086,4,0.077,5,0.077,7,0.236,8,1.382,24,0.471,27,0.008,29,0.4,45,1.349,57,0.124,61,0.086,63,0.295,84,1.353,120,0.006,129,0.006,185,1.625,204,1.001,553,2.879,566,2.67,569,3.361,572,1.736,583,2.69,601,3.158,851,1.437,1093,6.268,1649,4.468,2263,3.949,2516,6.29,2522,3.807,2544,4.343,2550,6.18,2551,4.343,2552,6.844,2553,6.844,2554,6.844,2555,6.844,2556,7.245,2557,5.349,2558,5.349,2559,5.349,2560,5.349,2561,5.349,2562,5.349,2563,5.349,2564,5.349,2565,5.349,2566,5.349,2567,5.349,2568,5.349,2569,4.742,2570,4.742,2571,4.742,2572,4.742,2573,4.742]],["title/injectables/QueuesAnonService.html",[0,0.621,2503,3.068]],["body/injectables/QueuesAnonService.html",[0,0.842,1,6.117,2,1.55,3,0.072,4,0.064,5,0.064,7,0.197,8,1.226,9,3.963,10,4.489,11,0.958,12,2.211,13,4.158,14,4.661,15,5.334,16,5.02,17,5.02,18,3.503,19,4.661,20,4.661,21,4.158,22,1.178,24,0.484,26,1.205,27,0.008,28,0.87,29,0.396,30,1.054,31,3.382,32,4.026,34,3.792,35,1.301,36,2.549,37,3.382,38,2.314,40,2.884,44,2.751,45,1.108,46,3.843,48,2.62,49,2.559,50,3.639,51,3.382,53,3.382,55,3.382,57,0.136,58,0.496,60,2.875,61,0.072,63,0.171,72,0.854,120,0.005,129,0.005,265,4.223,266,2.368,311,3.017,313,3.183,314,3.183,424,1.55,680,2.875,922,2.728,1395,4.387,2286,3.382,2287,3.382,2428,6.291,2503,4.158,2516,4.387,2574,3.965,2575,4.472,2576,3.631,2577,3.631,2578,3.631,2579,3.631,2580,3.631,2581,3.631,2582,3.631,2583,3.631,2584,3.631,2585,3.631,2586,4.472,2587,4.472,2588,3.631,2589,3.631,2590,3.631,2591,3.631,2592,4.472]],["title/classes/QueuesAnonsDto.html",[63,0.174,2522,3.237]],["body/classes/QueuesAnonsDto.html",[3,0.096,4,0.086,5,0.086,7,0.264,8,1.486,24,0.325,27,0.008,29,0.276,45,1.304,57,0.133,61,0.096,63,0.311,84,1.89,120,0.006,129,0.006,185,1.123,204,1.123,553,1.989,566,2.732,569,3.449,572,1.946,583,2.76,601,3.541,851,1.612,1093,4.87,1649,4.805,2263,4.247,2516,5.319,2522,5.319,2544,6.612,2550,6.446,2551,4.87,2552,5.317,2553,5.317,2554,5.317,2555,5.317,2556,6.627,2569,5.317,2570,5.317,2571,5.317,2572,5.317,2573,5.317,2593,5.997,2594,5.997]],["title/controllers/QueuesDeleteController.html",[179,1.198,2507,3.439]],["body/controllers/QueuesDeleteController.html",[3,0.05,4,0.045,5,0.045,7,0.138,10,3.801,11,0.741,12,2.064,18,3.275,24,0.376,26,0.918,27,0.008,28,0.751,29,0.376,30,0.803,32,2.523,35,1.031,36,2.379,38,1.754,40,3.653,44,1.929,45,1.104,50,5.284,57,0.135,58,0.348,59,3.545,61,0.05,63,0.12,65,1.999,72,1.447,73,4.342,84,0.793,104,1.205,108,1.388,110,1.018,112,3.215,120,0.005,129,0.004,131,1.165,134,2.411,136,2.02,147,2.583,156,1.112,162,1.69,163,2.697,165,2.777,179,0.826,181,0.954,185,1.296,192,3.513,194,2.763,198,1.316,201,1.351,203,2.931,204,0.587,211,1.661,212,1.929,218,2.4,354,4.468,356,4.318,360,4.342,367,2.366,378,2.23,382,1.929,386,4.708,387,1.351,407,4.66,409,3.794,423,2.774,424,2.232,441,3.403,501,3.063,521,2.016,752,1.782,762,4.087,781,1.929,784,1.557,787,1.388,792,1.316,817,2.611,1061,1.388,1110,3.869,1431,1.782,1637,3.888,1973,3.063,1989,4.225,2192,4.868,2193,4.358,2196,3.391,2197,3.603,2200,2.371,2201,2.371,2203,5.512,2204,2.371,2207,2.371,2208,2.371,2209,2.371,2212,2.371,2215,2.232,2216,3.603,2221,2.371,2223,4.868,2224,2.371,2225,4.358,2228,2.371,2229,2.371,2230,2.371,2233,4.358,2237,3.603,2238,3.603,2239,3.603,2241,2.371,2283,3.215,2504,3.888,2507,3.603,2515,2.78,2526,2.546,2538,3.869,2543,2.546,2595,5.512,2596,2.78,2597,3.136,2598,5.762,2599,4.765,2600,3.136,2601,5.512,2602,3.136,2603,3.136,2604,3.136,2605,3.136,2606,3.136,2607,3.136,2608,3.136,2609,3.136,2610,3.136,2611,3.136,2612,3.136,2613,3.136,2614,3.136,2615,3.136,2616,3.136,2617,3.136,2618,3.136,2619,2.78,2620,3.136,2621,3.136,2622,3.136,2623,3.136,2624,3.136]],["title/classes/QueuesDeleteDto.html",[63,0.174,2601,3.439]],["body/classes/QueuesDeleteDto.html",[3,0.108,4,0.096,5,0.096,7,0.296,8,1.592,24,0.364,27,0.008,29,0.309,45,1.167,57,0.143,61,0.108,63,0.306,120,0.007,129,0.007,185,1.257,204,1.257,553,2.227,566,2.386,572,2.179,583,2.044,851,1.805,1649,5.148,2595,6.056,2601,6.056,2619,7.586,2625,5.954,2626,6.715,2627,6.715,2628,6.715,2629,6.715]],["title/injectables/QueuesDeleteService.html",[0,0.621,2504,3.068]],["body/injectables/QueuesDeleteService.html",[0,0.842,1,6.117,2,1.55,3,0.072,4,0.064,5,0.064,7,0.197,8,1.226,9,3.963,10,4.489,11,0.958,12,2.211,13,4.158,14,4.661,15,5.334,16,5.02,17,5.02,18,3.503,19,4.661,20,4.661,21,4.158,22,1.178,24,0.484,26,1.205,27,0.008,28,0.87,29,0.396,30,1.054,31,3.382,32,4.026,34,3.792,35,1.301,36,2.549,37,3.382,38,2.314,40,2.884,44,2.751,45,1.108,46,3.843,48,2.62,49,2.559,50,3.639,51,3.382,53,3.382,55,3.382,57,0.136,58,0.496,60,2.875,61,0.072,63,0.171,72,0.854,120,0.005,129,0.005,265,4.223,266,2.368,311,3.017,313,3.183,314,3.183,424,1.55,680,2.875,922,2.728,1395,4.387,2286,3.382,2287,3.382,2428,6.291,2504,4.158,2576,3.631,2577,3.631,2578,3.631,2579,3.631,2580,3.631,2581,3.631,2582,3.631,2583,3.631,2584,3.631,2585,3.631,2588,3.631,2589,3.631,2590,3.631,2591,3.631,2595,4.661,2630,3.965,2631,4.472,2632,4.472,2633,4.472,2634,4.472]],["title/controllers/QueuesQueryController.html",[179,1.198,2508,3.439]],["body/controllers/QueuesQueryController.html",[3,0.049,4,0.043,5,0.043,7,0.133,10,3.733,11,0.721,12,2.05,18,3.205,24,0.37,26,0.902,27,0.008,28,0.74,29,0.372,30,0.789,32,2.457,35,1.015,36,2.358,38,1.716,40,3.704,44,1.863,45,1.091,50,5.306,57,0.133,58,0.336,59,3.469,61,0.049,63,0.116,65,1.972,72,1.475,73,4.265,84,0.766,104,1.183,108,2.053,110,0.983,112,3.13,120,0.005,129,0.004,131,1.125,134,2.401,136,1.989,147,2.569,156,1.074,157,2.566,162,1.645,165,2.718,179,0.797,181,0.922,185,1.276,192,3.481,194,2.721,198,1.271,201,1.305,203,2.854,204,0.567,211,1.604,212,1.863,218,2.363,354,4.428,356,4.278,360,4.265,367,2.304,378,2.171,382,1.863,386,4.675,387,1.305,407,4.625,409,3.735,423,2.937,424,2.363,441,3.33,501,2.983,521,1.947,704,3.33,752,1.721,762,4.024,781,1.863,784,1.504,787,1.34,792,1.271,817,2.543,963,2.74,980,2.74,1061,1.34,1068,2.043,1074,2.043,1431,1.721,1637,3.805,1973,2.983,2112,2.459,2192,4.781,2193,4.265,2196,3.302,2197,3.509,2200,2.29,2201,2.29,2203,5.438,2204,2.29,2207,2.29,2208,2.29,2209,2.29,2212,2.29,2215,2.155,2216,3.509,2221,2.29,2223,4.781,2224,2.29,2225,4.265,2228,2.29,2229,2.29,2230,2.29,2233,4.265,2237,3.509,2238,3.509,2239,3.509,2241,2.29,2283,3.13,2378,3.469,2384,2.29,2508,3.509,2526,2.459,2538,3.767,2543,2.459,2635,4.851,2636,3.028,2637,5.64,2638,4.64,2639,3.028,2640,4.851,2641,3.028,2642,3.028,2643,3.028,2644,3.028,2645,3.028,2646,3.028,2647,3.028,2648,3.028,2649,3.13,2650,3.13,2651,3.028,2652,3.028,2653,3.028,2654,3.028,2655,3.028,2656,3.028,2657,3.028,2658,3.028,2659,4.64,2660,3.028,2661,3.028,2662,3.028,2663,3.028,2664,3.028,2665,3.028,2666,3.028,2667,3.028,2668,3.028,2669,4.64,2670,3.028,2671,3.028,2672,3.028]],["title/classes/QueuesQueryDto.html",[63,0.174,2640,3.068]],["body/classes/QueuesQueryDto.html",[3,0.074,4,0.066,5,0.066,7,0.202,8,1.248,24,0.34,27,0.008,29,0.289,45,1.342,46,2.855,48,2.331,49,2.277,57,0.112,61,0.115,63,0.294,84,1.944,110,2.037,120,0.005,129,0.005,185,1.175,194,3.068,204,0.859,553,2.082,566,2.776,569,3.516,572,1.49,583,2.825,601,3.706,698,6.164,704,4.223,851,1.234,1068,4.825,1083,3.861,1649,4.598,2263,4.064,2302,3.567,2303,3.567,2314,3.567,2315,3.567,2353,4.234,2354,5.327,2355,4.035,2356,4.035,2357,4.035,2358,3.861,2359,4.035,2360,3.861,2361,4.035,2362,3.861,2363,4.035,2364,4.035,2365,4.035,2366,4.035,2367,4.234,2368,4.234,2369,4.035,2370,3.706,2635,4.825,2640,4.234,2649,4.825,2650,4.825,2673,3.472,2674,6.276,2675,4.591,2676,4.591]],["title/classes/QueuesQuerySeriesDto.html",[63,0.174,2650,3.068]],["body/classes/QueuesQuerySeriesDto.html",[3,0.069,4,0.061,5,0.061,7,0.189,8,1.189,24,0.453,27,0.008,29,0.385,45,1.364,57,0.107,61,0.111,63,0.285,84,1.512,110,1.941,120,0.005,129,0.005,185,1.562,194,2.387,204,0.801,553,2.768,566,2.754,569,3.484,572,1.389,583,2.801,601,3.531,698,6.237,704,2.528,851,1.151,1068,2.888,1083,4.59,1649,4.431,2263,3.917,2302,3.398,2303,3.398,2314,3.398,2315,3.398,2353,4.035,2354,5.39,2355,3.845,2356,4.797,2357,3.845,2358,4.59,2359,3.845,2360,4.59,2361,3.845,2362,4.59,2363,3.845,2364,3.845,2365,3.845,2366,3.845,2367,4.035,2368,4.035,2369,3.845,2370,3.531,2457,3.238,2459,3.796,2461,3.796,2463,3.796,2465,3.796,2467,3.796,2635,5.745,2640,2.888,2649,4.035,2650,4.65,2673,3.238,2677,3.796,2678,4.281,2679,4.281,2680,4.281,2681,4.281,2682,4.281,2683,4.281,2684,4.281]],["title/injectables/QueuesQueryService.html",[0,0.621,2378,2.797]],["body/injectables/QueuesQueryService.html",[0,0.795,1,6.036,2,1.428,3,0.066,4,0.059,5,0.059,7,0.181,8,1.157,9,3.741,10,4.331,11,0.904,12,2.244,13,3.926,14,4.401,15,5.104,16,4.803,17,4.803,18,3.307,19,4.401,20,4.401,21,3.926,22,1.085,24,0.489,26,1.178,27,0.008,28,0.85,29,0.388,30,1.03,31,3.114,32,3.884,34,3.58,35,1.322,36,2.645,37,3.114,38,2.232,40,2.723,44,2.533,45,1.069,46,3.756,48,2.506,49,2.449,50,3.436,51,3.114,53,3.114,55,3.114,57,0.131,58,0.457,60,2.648,61,0.066,63,0.157,65,1.851,72,0.787,104,0.771,120,0.005,129,0.005,265,4.098,266,2.181,311,2.778,313,2.931,314,2.931,424,1.428,680,2.648,922,2.576,1395,4.142,2286,3.114,2287,3.114,2378,3.58,2428,6.186,2576,3.344,2577,3.344,2578,3.344,2579,3.344,2580,3.344,2581,3.344,2582,3.344,2583,3.344,2584,3.344,2585,3.344,2588,3.344,2589,3.344,2590,3.344,2591,3.344,2635,5.22,2685,3.651,2686,7.334,2687,7.334,2688,7.334,2689,4.118,2690,4.118,2691,4.118,2692,4.118,2693,4.118,2694,4.118,2695,4.118,2696,4.118,2697,4.118,2698,4.118,2699,4.118]],["title/classes/QueuesQueryStudyDto.html",[63,0.174,2649,3.068]],["body/classes/QueuesQueryStudyDto.html",[3,0.068,4,0.06,5,0.06,7,0.185,8,1.175,24,0.46,27,0.008,29,0.391,45,1.365,57,0.105,61,0.11,63,0.283,84,1.494,110,1.917,120,0.005,129,0.005,185,1.587,194,2.358,204,0.787,553,2.812,566,2.748,569,3.476,572,1.365,583,2.795,601,3.488,698,6.214,704,2.484,851,1.131,1068,2.838,1083,3.634,1649,4.39,2263,3.88,2302,4.208,2303,4.208,2314,4.208,2315,4.208,2353,3.986,2354,5.371,2355,3.798,2356,3.798,2357,3.798,2358,3.634,2359,3.798,2360,3.634,2361,3.798,2362,3.634,2363,3.798,2364,3.798,2365,3.798,2366,3.798,2367,3.986,2368,4.995,2369,3.798,2370,4.372,2457,3.182,2488,3.73,2491,3.73,2493,3.73,2495,3.73,2497,3.73,2499,3.73,2635,5.813,2640,2.838,2649,4.606,2650,3.986,2673,3.182,2677,3.73,2700,4.207,2701,4.207,2702,4.207,2703,4.207,2704,4.207,2705,4.207,2706,4.207,2707,4.207]],["title/guards/ReadAllGuard.html",[130,1.222,176,2.069]],["body/guards/ReadAllGuard.html",[0,1.187,3,0.059,4,0.053,5,0.053,7,0.163,11,0.837,24,0.2,26,0.527,27,0.008,28,0.381,29,0.17,30,0.461,35,0.55,57,0.096,58,0.41,61,0.14,63,0.329,72,1.759,104,1.61,120,0.004,129,0.004,130,2.337,131,1.373,132,1.552,133,1.957,134,0.973,135,4.457,136,2.757,137,1.593,138,4.766,139,3.623,140,3.559,141,3.533,143,1.475,144,2.703,145,1.781,146,3.52,147,2.51,148,3.706,149,4.713,150,2.026,151,1.781,152,1.781,153,2.026,154,1.73,155,2.026,156,1.311,157,1.681,158,2.026,159,1.835,160,1.73,161,2.026,162,1.311,163,1.73,164,2.026,165,1.781,166,1.835,167,1.781,168,2.026,169,1.835,170,1.835,171,2.026,172,1.341,173,1.781,174,2.026,175,2.674,176,2.45,177,2.026,2708,3.696]],["title/classes/RegisterDto.html",[63,0.174,373,3.439]],["body/classes/RegisterDto.html",[3,0.1,4,0.089,5,0.089,7,0.274,8,1.521,24,0.449,27,0.008,29,0.381,45,1.316,57,0.136,61,0.1,63,0.292,120,0.006,129,0.006,185,1.55,204,1.166,363,3.875,373,5.786,429,4.908,431,4.908,553,2.747,566,2.574,572,2.021,583,2.52,851,1.674,875,6.263,1016,6.212,2709,5.522,2710,6.228,2711,6.228,2712,6.228,2713,6.228,2714,6.228,2715,6.228,2716,6.228]],["title/entities/Role.html",[527,1.861,543,2.128]],["body/entities/Role.html",[3,0.061,4,0.054,5,0.054,7,0.167,8,1.089,24,0.478,27,0.008,28,0.967,29,0.406,30,0.683,45,0.798,46,1.72,48,3.274,57,0.147,61,0.125,63,0.145,84,2.186,110,3.014,120,0.004,129,0.004,137,3.364,144,2.871,151,3.608,156,2.655,159,3.197,162,2.655,166,3.718,169,3.197,172,2.335,175,3.197,185,1.65,194,2.186,204,0.708,527,2.241,543,2.562,544,2.431,553,2.924,563,5.373,565,1.674,566,2.648,583,2.683,884,3.195,901,2.551,1171,4.581,1174,2.551,1411,4.446,2717,3.353,2718,8.642,2719,3.782,2720,3.782,2721,5.475,2722,3.782,2723,5.475,2724,3.782,2725,5.475,2726,3.782,2727,3.782,2728,3.782,2729,3.782,2730,3.782,2731,3.782,2732,5.475,2733,3.782,2734,3.782,2735,3.782,2736,3.782,2737,3.782,2738,5.475,2739,3.782,2740,5.475,2741,5.475]],["title/controllers/RolesController.html",[179,1.198,2742,3.439]],["body/controllers/RolesController.html",[3,0.043,4,0.039,5,0.039,7,0.119,11,0.659,12,2.124,22,0.71,24,0.403,26,1.06,27,0.008,28,0.895,29,0.379,30,0.927,35,1.107,36,2.479,45,1.282,46,1.227,57,0.147,58,0.299,61,0.043,63,0.103,65,2.33,72,0.81,104,1.209,110,1.377,120,0.003,129,0.003,131,1.002,134,2.421,136,0.787,156,0.957,162,2.291,179,0.71,181,0.821,185,1.391,192,3.661,198,1.133,201,1.163,204,0.505,211,1.429,212,1.66,218,2.576,346,2.727,348,3.444,354,4.563,356,4.499,367,2.603,378,1.985,382,1.66,383,1.82,384,4.256,386,4.731,387,1.163,395,2.174,396,1.735,406,1.947,407,4.696,409,4.073,423,2.784,424,2.24,433,4.049,441,1.593,442,3.761,527,3.407,583,0.821,752,1.533,762,4.388,763,2.325,781,1.66,784,1.34,787,1.194,788,2.191,814,2.862,817,2.325,818,4.153,884,3.318,891,2.107,901,1.82,916,4.229,982,5.925,1061,2.32,1074,2.862,1168,3.208,1171,3.019,1173,3.761,1192,2.191,1412,5.106,1421,2.04,1426,2.609,1428,2.392,1431,3.671,1442,2.04,1604,1.92,1766,2.191,1913,2.04,1961,2.04,1973,3.37,2196,3.019,2215,1.92,2742,3.208,2743,2.392,2744,5.241,2745,5.241,2746,4.242,2747,3.761,2748,3.761,2749,5.241,2750,2.698,2751,7.174,2752,2.698,2753,2.698,2754,2.698,2755,2.698,2756,2.698,2757,2.698,2758,2.698,2759,2.698,2760,2.698,2761,2.698,2762,2.698,2763,5.186,2764,2.698,2765,2.698,2766,2.698,2767,2.698,2768,2.698,2769,2.392,2770,2.698,2771,2.698,2772,2.698,2773,2.698,2774,2.698,2775,2.392,2776,2.698,2777,2.698,2778,2.392,2779,2.392,2780,2.191,2781,2.698,2782,2.698,2783,2.698,2784,2.698,2785,2.392,2786,2.698,2787,2.392,2788,2.698,2789,2.698,2790,2.698,2791,2.698,2792,2.698,2793,2.698,2794,4.242,2795,2.698,2796,2.698,2797,2.698,2798,2.698,2799,2.698,2800,2.698,2801,2.698,2802,2.698,2803,2.698,2804,2.698,2805,2.698,2806,2.698,2807,2.392,2808,2.698,2809,2.698,2810,2.698,2811,2.698,2812,2.698,2813,2.698,2814,2.698,2815,2.698,2816,4.242,2817,4.242,2818,2.698,2819,2.698,2820,2.698,2821,2.698,2822,2.698,2823,2.698,2824,2.698,2825,2.698,2826,2.698,2827,2.698,2828,2.698]],["title/modules/RolesModule.html",[222,1.476,244,2.924]],["body/modules/RolesModule.html",[3,0.093,4,0.083,5,0.083,27,0.008,57,0.164,58,0.64,61,0.093,63,0.221,120,0.006,129,0.006,136,2.129,181,2.221,222,2.596,224,2.555,225,2.626,226,2.781,227,2.781,228,2.781,229,3.855,230,3.744,244,5.984,249,3.516,250,2.781,251,2.781,253,2.781,262,3.28,263,2.555,395,4.539,396,3.711,482,4.365,527,2.362,884,2.986,891,4.647,1174,3.894,1426,5.448,2742,6.051,2778,5.118,2779,5.118,2780,4.687,2829,5.118,2830,5.118,2831,5.118,2832,5.772,2833,5.772,2834,5.772]],["title/injectables/RolesService.html",[0,0.621,891,2.259]],["body/injectables/RolesService.html",[0,0.674,2,1.14,3,0.053,4,0.047,5,0.047,7,0.145,11,0.767,12,2.225,22,1.3,24,0.461,26,1.156,27,0.008,28,0.939,29,0.373,30,1.011,35,1.248,36,2.629,45,1.345,57,0.137,58,0.365,61,0.095,63,0.126,65,2.378,72,1.47,84,2.288,104,1.323,108,1.455,110,1.067,120,0.004,129,0.004,136,1.731,137,2.841,151,2.379,156,1.751,159,2.452,162,1.751,166,2.452,169,2.452,172,1.792,175,2.452,199,3.039,263,1.455,383,2.218,406,1.834,423,1.417,424,1.14,433,4.382,441,1.941,527,3.604,565,1.455,763,2.706,814,4.448,817,2.706,818,3.175,820,4.736,840,2.114,884,2.021,891,2.452,895,5.766,901,3.331,1171,5.282,1174,2.218,1441,2.915,1442,2.486,1451,4.378,1455,5.258,1464,2.915,1600,2.218,1682,4.692,1700,2.486,1701,2.486,2748,4.378,2769,4.378,2775,4.378,2780,2.67,2835,2.915,2836,4.938,2837,6.593,2838,4.938,2839,4.938,2840,3.288,2841,3.288,2842,4.938,2843,4.938,2844,3.288,2845,4.938,2846,3.288,2847,3.288,2848,3.288,2849,4.938,2850,3.288,2851,3.288,2852,4.938,2853,3.288,2854,4.938,2855,3.288,2856,4.938,2857,3.288,2858,3.288,2859,3.288,2860,3.288,2861,4.938,2862,4.938,2863,5.846,2864,3.288,2865,3.288,2866,5.93,2867,3.288,2868,3.288,2869,5.93,2870,3.288,2871,3.288,2872,3.288,2873,4.938,2874,3.288,2875,4.938,2876,3.288]],["title/classes/Router.html",[63,0.174,548,2.924]],["body/classes/Router.html",[3,0.069,4,0.061,5,0.061,7,0.189,8,1.19,24,0.374,27,0.008,28,0.955,29,0.415,38,2.099,45,1.006,49,2.85,57,0.145,61,0.12,63,0.311,84,1.514,120,0.005,123,2.076,129,0.005,144,1.333,172,1.556,185,1.291,204,0.803,543,2.802,545,3.052,546,4.261,547,3.052,548,5.231,552,3.683,553,2.288,554,5.216,563,5.577,564,4.039,565,1.898,566,2.717,567,3.535,568,2.436,569,2.623,570,2.637,571,5.646,572,1.391,573,5.299,574,4.039,575,5.314,576,5.489,577,5.037,578,2.757,579,2.637,580,2.757,581,3.242,582,4.8,583,2.592,584,4.527,585,3.242,586,3.242,587,4.261,588,3.242,589,3.242,590,3.242,591,4.527,592,3.242,593,5.231,594,4.527,595,3.242,596,3.242,597,3.242,598,3.242,599,5.59,600,5.216,601,3.535,602,5.94,603,3.052,604,3.242,605,3.052,851,1.152,2877,5.987,2878,5.987,2879,4.288,2880,4.288,2881,4.288,2882,4.288]],["title/classes/Rule.html",[63,0.174,582,2.924]],["body/classes/Rule.html",[3,0.068,4,0.061,5,0.061,7,0.187,8,1.182,24,0.403,27,0.008,28,0.954,29,0.411,38,2.262,45,1.083,49,3.021,57,0.145,61,0.119,63,0.31,84,1.503,120,0.005,123,2.061,129,0.005,144,1.319,172,1.54,185,1.391,204,0.794,543,2.782,545,3.021,546,4.23,547,3.021,548,5.03,549,3.446,552,3.656,553,2.275,554,5.188,563,5.568,564,4.01,565,1.878,566,2.713,567,3.51,568,2.412,569,2.609,570,2.611,571,5.621,572,1.377,573,5.732,574,4.01,575,5.926,576,4.628,577,5.617,578,2.728,579,2.611,580,2.728,581,3.209,582,4.778,583,2.586,584,4.495,585,3.209,586,3.209,587,4.23,588,3.209,589,3.209,590,3.209,591,4.495,592,3.209,593,5.03,594,4.495,595,3.209,596,3.209,597,3.209,598,3.209,599,4.23,600,5.188,601,3.51,602,4.495,603,3.021,604,3.209,605,3.021,851,1.141,2883,4.244,2884,4.244,2885,4.244,2886,4.244,2887,4.244,2888,4.244,2889,4.244,2890,4.244]],["title/modules/SeederModule.html",[222,1.476,245,3.237]],["body/modules/SeederModule.html",[3,0.087,4,0.077,5,0.077,27,0.008,57,0.166,58,0.598,61,0.087,63,0.206,120,0.006,129,0.006,136,2.038,172,2.534,181,1.64,222,2.514,224,2.385,225,2.451,226,2.596,227,2.596,228,2.596,229,3.732,230,2.522,245,6.658,249,3.364,250,2.596,251,2.596,253,2.596,262,3.062,263,2.385,280,3.968,281,3.698,395,4.458,396,3.464,474,4.767,482,4.075,487,4.489,488,4.075,491,3.464,527,2.857,884,2.857,891,4.32,894,3.464,1174,3.635,1186,4.075,1265,3.968,1763,5.35,2385,4.375,2891,4.777,2892,4.777,2893,6.19,2894,5.388,2895,5.388,2896,4.777,2897,5.388,2898,5.388]],["title/injectables/SeederService.html",[0,0.621,2893,3.237]],["body/injectables/SeederService.html",[0,1.004,2,2.025,3,0.094,4,0.084,5,0.084,7,0.257,11,1.143,12,1.916,22,1.936,24,0.399,26,0.833,27,0.008,28,0.601,29,0.269,30,0.729,35,0.87,57,0.155,58,0.648,61,0.094,63,0.223,65,2.316,120,0.006,129,0.006,199,4.46,280,3.319,281,3.093,395,4.621,396,3.755,406,3.136,474,4.942,491,3.755,890,4.743,891,4.412,894,3.755,1061,3.737,1682,6.009,1763,5.194,1769,7.133,2893,5.232,2896,5.179,2899,5.179,2900,5.841,2901,5.841,2902,5.841,2903,5.841,2904,5.841,2905,5.841]],["title/injectables/SeriesGuard.html",[0,0.621,207,2.924]],["body/injectables/SeriesGuard.html",[0,0.992,2,1.989,3,0.092,4,0.082,5,0.082,7,0.253,11,1.13,12,1.9,24,0.311,26,0.818,27,0.008,28,0.591,29,0.264,30,0.716,35,0.855,36,2.121,57,0.142,58,0.636,61,0.092,63,0.219,65,1.574,72,1.602,104,1.361,108,2.54,110,1.862,120,0.006,129,0.006,130,1.954,134,1.511,136,2.121,139,2.975,140,2.975,141,3.349,143,2.29,147,1.674,148,2.472,205,4.908,207,4.673,527,3.265,655,5.497,704,4.292,733,3.61,884,3.265,886,5.174,897,4.904,898,3.871,906,4.673,909,4.339,922,3.217,963,4.711,1028,5.497,1032,5.497,1058,4.904,1059,4.339,1112,5.903,1113,5.087,1114,3.871,1116,4.659,1122,4.339,1200,4.659,1296,6.445,2906,5.087,2907,5.738]],["title/guards/StudyGuard.html",[130,1.222,205,2.797]],["body/guards/StudyGuard.html",[0,0.984,3,0.091,4,0.081,5,0.081,7,0.249,9,4.633,11,1.12,12,1.888,22,1.898,24,0.391,26,1.028,27,0.008,28,0.742,29,0.332,30,0.899,35,0.843,36,2.103,57,0.149,58,0.628,61,0.091,63,0.216,72,1.514,104,1.059,120,0.006,129,0.006,130,1.937,132,2.376,134,1.49,136,2.103,139,3.416,140,2.949,141,3.332,143,2.259,146,2.316,147,1.652,148,2.439,205,4.433,527,3.245,627,3.664,655,5.45,676,2.649,677,2.575,733,2.811,884,3.245,890,4.596,891,4.376,894,3.639,897,4.862,898,3.818,906,4.633,909,4.28,963,3.342,1032,5.45,1058,4.862,1059,4.28,1122,4.28,2908,5.018,2909,7.206,2910,5.66,2911,5.66]],["title/classes/TagAnon.html",[63,0.174,2912,3.693]],["body/classes/TagAnon.html",[3,0.093,4,0.083,5,0.083,7,0.256,8,1.458,22,1.931,24,0.457,26,0.83,27,0.008,28,0.599,29,0.388,30,0.726,38,2.645,45,1.35,46,4.037,48,2.161,57,0.104,61,0.093,63,0.222,120,0.006,129,0.006,683,2.982,851,1.564,2912,5.955,2913,7.706,2914,5.158,2915,9.009,2916,8.874,2917,9.009,2918,5.818,2919,7.868,2920,7.333,2921,5.818,2922,5.818,2923,5.818,2924,5.818,2925,5.818]],["title/modules/TasksModule.html",[222,1.476,246,3.237]],["body/modules/TasksModule.html",[3,0.092,4,0.082,5,0.082,27,0.008,57,0.16,58,0.635,61,0.092,63,0.219,120,0.006,129,0.006,156,2.031,222,2.587,224,2.535,225,2.605,226,2.759,227,2.759,228,2.759,229,3.841,230,3.731,246,6.707,249,3.498,250,2.759,251,2.759,253,2.759,262,3.254,263,2.535,627,3.617,676,2.68,677,2.605,1265,3.254,1295,4.65,1784,5.077,2092,6.652,2372,6.652,2378,5.437,2383,5.077,2384,4.331,2385,4.65,2926,5.077,2927,5.077,2928,5.077,2929,5.726,2930,5.726,2931,5.726]],["title/classes/TmtvJobDto.html",[63,0.174,2260,3.439]],["body/classes/TmtvJobDto.html",[3,0.089,4,0.08,5,0.08,7,0.245,8,1.417,24,0.45,27,0.008,29,0.382,45,1.209,48,2.647,57,0.14,61,0.115,63,0.301,84,2.097,110,2.691,120,0.006,129,0.006,144,2.216,185,1.552,194,3.501,204,1.041,566,2.658,567,4.208,568,3.161,569,2.991,572,1.805,681,5.947,682,5.306,683,2.851,723,4.517,725,3.753,726,5.947,727,5.947,728,6.386,731,6.386,851,1.495,952,4.932,994,4.808,1172,6.734,2195,3.753,2255,6.484,2256,4.517,2257,3.959,2260,5.947,2263,4.05,2264,4.932,2265,4.932,2932,5.563,2933,5.563,2934,5.563,2935,5.563,2936,5.563]],["title/classes/TmtvService.html",[63,0.174,2937,3.693]],["body/classes/TmtvService.html",[3,0.056,4,0.05,5,0.05,7,0.154,8,1.025,11,0.801,12,2.141,22,1.358,24,0.482,26,0.968,27,0.008,28,0.699,29,0.386,30,0.847,35,1.226,36,1.98,45,1.277,48,1.915,49,1.871,57,0.14,61,0.056,63,0.133,65,2.357,72,1.539,84,1.552,104,1.149,107,4.572,110,2.202,120,0.004,129,0.004,144,1.908,248,5.294,259,3.175,274,2.829,406,3.372,424,1.788,627,3.103,676,1.63,677,1.585,682,2.35,683,1.785,704,3.045,716,6.015,719,6.015,726,4.642,727,4.642,733,2.561,851,0.936,1040,2.829,1061,2.282,1110,5.509,1535,4.642,1538,4.572,1581,4.572,1583,3.089,1585,6.421,1587,3.089,2244,5.477,2937,4.187,2938,3.089,2939,6.138,2940,6.784,2941,6.784,2942,6.784,2943,5.156,2944,6.784,2945,6.784,2946,6.784,2947,5.156,2948,5.156,2949,5.156,2950,3.484,2951,3.484,2952,3.484,2953,3.484,2954,3.484,2955,3.484,2956,3.484,2957,3.484,2958,5.156,2959,3.484,2960,5.156,2961,3.484,2962,3.484,2963,3.484,2964,5.156,2965,3.484,2966,5.156,2967,3.484,2968,3.484,2969,3.484,2970,3.484,2971,3.484,2972,3.484,2973,3.484,2974,6.138,2975,3.484,2976,5.156,2977,3.484,2978,5.156,2979,3.484,2980,5.156,2981,7.583,2982,3.484,2983,5.156,2984,3.484,2985,3.484,2986,3.484,2987,5.156,2988,3.484,2989,3.484,2990,5.156,2991,3.484,2992,3.484,2993,3.484,2994,6.138,2995,3.484,2996,3.484,2997,3.484,2998,3.484,2999,3.484,3000,5.156,3001,3.484,3002,3.484,3003,3.484,3004,5.156,3005,3.484,3006,3.484,3007,3.484,3008,3.484,3009,3.484,3010,3.484,3011,3.484,3012,3.484,3013,3.484,3014,3.484,3015,3.484,3016,3.484,3017,3.484]],["title/classes/UpdateOptionDto.html",[63,0.174,1758,3.237]],["body/classes/UpdateOptionDto.html",[3,0.113,4,0.101,5,0.101,27,0.008,57,0.147,61,0.113,63,0.269,120,0.007,129,0.007,204,1.317,763,3.858,851,1.892,922,3.644,925,5.01,927,5.323,1153,7.3,1166,5.716,1167,5.323,1758,5.86,3018,6.241]],["title/classes/UpdateUserDto.html",[63,0.174,3019,3.439]],["body/classes/UpdateUserDto.html",[3,0.093,4,0.082,5,0.082,7,0.254,8,1.449,24,0.456,27,0.008,29,0.387,45,1.326,57,0.13,61,0.093,63,0.279,84,2.125,120,0.006,129,0.006,137,3.14,185,1.572,194,3.631,204,1.078,363,3.741,429,4.543,431,4.543,433,4.72,553,2.786,566,2.582,569,3.295,572,1.869,583,2.557,851,1.548,994,5.668,1000,4.356,1003,5.107,1004,5.511,1005,5.107,1006,5.511,1007,5.107,1015,5.107,3019,5.511,3020,7.683,3021,7.287]],["title/entities/User.html",[136,1.327,543,2.128]],["body/entities/User.html",[3,0.073,4,0.065,5,0.065,7,0.201,8,1.243,24,0.476,27,0.008,28,0.903,29,0.404,30,1.079,38,1.902,45,1.317,57,0.137,61,0.073,63,0.239,84,2.244,110,2.028,120,0.005,123,2.785,129,0.005,136,1.824,137,1.966,185,1.642,204,0.854,218,2.471,319,3.929,363,3.758,429,4.564,431,4.564,433,4.209,527,3.59,535,4.448,543,2.925,544,2.933,553,2.543,557,4.045,563,5.319,564,4.216,565,2.019,566,2.614,579,2.807,583,2.333,1001,3.705,1004,3.45,1006,3.45,1186,3.45,1752,5.541,3022,4.045,3023,7.128,3024,4.562,3025,4.562,3026,4.562,3027,4.562,3028,4.562,3029,4.562,3030,4.562,3031,4.562,3032,4.562,3033,4.562,3034,4.562,3035,4.562,3036,7.667,3037,4.562,3038,4.562,3039,7.128,3040,8.031,3041,4.562,3042,6.249,3043,4.562,3044,4.562,3045,6.249,3046,6.249,3047,4.562]],["title/interfaces/UserInfoResponse.html",[1365,3.068,1366,3.439]],["body/interfaces/UserInfoResponse.html",[0,0.825,3,0.07,4,0.062,5,0.062,7,0.191,8,1.202,12,1.879,22,1.144,27,0.008,28,0.773,29,0.386,32,3.2,36,2.303,45,1.362,57,0.149,58,0.482,61,0.07,63,0.166,65,2.344,72,1.632,104,1.477,120,0.005,129,0.005,144,2.16,216,2.931,218,2.604,280,2.469,281,2.301,363,3.693,381,3.286,406,2.58,420,5.641,422,3.528,423,3.236,424,2.604,425,5.641,429,2.469,431,2.469,471,2.931,474,3.807,478,3.092,480,3.286,491,2.793,493,3.717,507,5.641,525,6.097,922,1.923,1061,3.075,1114,4.077,1250,2.227,1252,3.528,1278,4.57,1321,2.673,1324,2.793,1333,2.931,1337,3.528,1338,3.528,1339,3.286,1345,6.16,1347,3.853,1349,5.358,1350,3.853,1353,3.853,1355,3.853,1357,3.853,1359,3.286,1360,3.092,1361,3.286,1362,4.57,1363,6.16,1364,3.092,1365,2.931,1366,4.57,1367,6.658,1368,6.658,1369,6.658,1370,6.658,1371,5.358,1372,3.853,1373,3.853,1374,3.853,1375,3.853,1376,3.853,1377,3.092,1378,3.853,1379,3.853,1380,3.853,1381,3.853,1382,3.853,1383,3.853,1384,3.853,1385,3.853,1386,3.853,1387,3.853,1388,3.853,1389,3.853,1390,3.853,1391,3.853,1392,3.853,1393,3.853,1799,3.528]],["title/controllers/UsersController.html",[179,1.198,3048,3.439]],["body/controllers/UsersController.html",[3,0.05,4,0.045,5,0.045,7,0.137,11,0.737,12,2.061,22,0.82,24,0.374,26,0.915,27,0.008,28,0.661,29,0.359,30,0.8,35,1.028,36,2.375,38,2.429,57,0.15,58,0.346,61,0.05,63,0.119,65,2.301,72,1.444,104,1.292,120,0.004,123,2.909,129,0.004,131,1.157,134,2.409,136,2.503,147,1.384,162,2.448,179,0.82,181,0.948,185,1.292,192,3.507,198,1.308,201,1.343,204,0.583,211,1.65,212,1.917,218,2.393,319,1.597,346,3.048,348,5.209,349,5.688,354,4.27,356,4.31,363,2.219,367,2.355,374,3.85,378,2.219,382,1.917,383,2.102,386,4.702,387,1.343,395,2.43,406,1.761,407,4.653,409,3.783,423,2.974,424,2.521,429,2.694,431,2.694,433,2.8,435,2.762,441,2.8,466,3.85,502,5.089,521,2.003,526,5.089,527,2.625,528,5.089,752,1.77,762,4.076,763,2.599,781,1.917,784,1.547,787,1.379,788,2.53,797,2.762,818,4.438,838,2.53,891,2.355,894,2.003,903,4.566,998,4.852,1061,2.099,1074,3.872,1175,4.341,1193,2.762,1421,2.356,1431,2.694,1604,2.217,1637,2.102,1765,2.53,1766,2.53,1913,2.356,1961,2.356,1973,3.69,2143,2.762,2785,2.762,2787,2.762,2807,4.204,3019,4.852,3048,3.586,3049,2.762,3050,4.741,3051,6.415,3052,4.741,3053,3.116,3054,5.74,3055,4.741,3056,3.116,3057,3.116,3058,7.271,3059,3.116,3060,3.116,3061,3.116,3062,3.116,3063,3.116,3064,3.116,3065,3.116,3066,3.116,3067,3.116,3068,3.116,3069,2.762,3070,2.53,3071,5.74,3072,2.356,3073,3.116,3074,3.116,3075,3.116,3076,3.116,3077,3.116,3078,5.74,3079,5.74,3080,4.741,3081,3.116,3082,3.116,3083,4.741,3084,3.116,3085,4.204,3086,3.116,3087,3.116,3088,3.116,3089,7.271,3090,4.741,3091,3.116,3092,4.741,3093,3.116,3094,3.116,3095,3.116,3096,3.116,3097,3.116,3098,3.116,3099,3.116,3100,3.116,3101,3.116,3102,3.116]],["title/modules/UsersModule.html",[222,1.476,247,3.068]],["body/modules/UsersModule.html",[3,0.097,4,0.087,5,0.087,27,0.008,57,0.164,58,0.672,61,0.097,63,0.232,120,0.006,129,0.006,136,1.768,181,2.289,222,2.655,224,2.682,225,2.757,226,2.92,227,2.92,228,2.92,229,3.942,230,2.836,247,6.197,249,3.625,250,2.92,251,2.92,253,2.92,262,3.443,263,2.682,395,4.595,499,5.373,527,3.078,884,3.078,891,4.452,894,3.896,1174,4.088,1186,4.582,3048,6.186,3069,5.373,3070,4.92,3103,6.059,3104,6.059,3105,6.059,3106,6.059]],["title/injectables/UsersService.html",[0,0.621,395,2.331]],["body/injectables/UsersService.html",[0,0.683,2,1.161,3,0.054,4,0.048,5,0.048,7,0.148,11,0.778,12,2.216,22,1.318,24,0.457,26,1.161,27,0.008,28,0.838,29,0.375,30,1.016,35,1.235,36,2.609,38,2.669,45,1.187,46,3.027,48,1.859,49,1.816,57,0.127,58,0.371,61,0.054,63,0.128,65,2.386,72,1.607,84,1.89,104,1.45,110,1.086,120,0.004,123,2.823,129,0.004,136,2.675,137,2.867,144,2.323,199,3.073,263,1.482,319,3.073,363,3.625,395,2.565,406,1.243,423,1.443,424,1.161,429,2.845,431,2.845,433,4.205,453,4.868,521,2.152,527,2.454,565,1.482,763,2.744,814,4.489,817,2.744,818,3.218,820,4.093,836,4.438,838,4.065,840,2.152,849,2.968,980,1.977,1074,2.259,1600,2.259,1604,2.383,1682,4.735,1700,2.532,1701,2.532,2747,4.438,2863,5.316,3070,2.719,3072,2.532,3085,2.968,3107,2.968,3108,5.995,3109,5.006,3110,5.006,3111,5.006,3112,3.348,3113,3.348,3114,5.006,3115,5.006,3116,3.348,3117,3.348,3118,5.006,3119,7.963,3120,3.348,3121,3.348,3122,3.348,3123,5.006,3124,3.348,3125,5.006,3126,3.348,3127,3.348,3128,3.348,3129,3.348,3130,5.006,3131,3.348,3132,3.348,3133,3.348,3134,3.348,3135,3.348,3136,3.348,3137,5.995,3138,3.348,3139,5.006,3140,3.348,3141,5.006,3142,3.348,3143,5.006,3144,3.348,3145,3.348,3146,5.006,3147,3.348,3148,5.006,3149,3.348,3150,5.006,3151,3.348,3152,3.348,3153,3.348]],["title/classes/WithLabels.html",[63,0.174,2763,3.439]],["body/classes/WithLabels.html",[3,0.099,4,0.089,5,0.089,7,0.273,8,1.515,24,0.336,27,0.008,29,0.285,48,2.298,49,3.127,57,0.147,61,0.099,63,0.316,84,2.088,104,1.158,110,2.473,120,0.006,129,0.006,144,2.369,185,1.158,204,1.158,566,2.271,567,4.5,572,2.008,579,3.806,583,1.883,795,6.757,851,1.663,966,5.025,2763,6.692,3154,6.757,3155,5.487,3156,6.188,3157,6.188,3158,7.62,3159,6.188,3160,7.62]],["title/coverage.html",[3161,5.063]],["body/coverage.html",[0,1.21,1,1.506,5,0.032,6,1.979,27,0.008,29,0.103,63,0.348,120,0.003,123,1.263,129,0.003,130,2.216,131,0.829,133,3.999,136,1.555,145,1.075,152,1.075,154,1.044,157,1.015,160,1.044,163,1.044,167,1.075,170,1.108,172,0.81,173,1.075,176,1.015,179,2.228,180,1.688,182,1.979,199,1.144,205,1.373,207,1.435,209,1.435,211,1.182,248,1.506,267,1.812,271,1.688,281,2.822,333,1.688,334,1.979,344,1.688,362,1.688,373,1.688,388,1.506,390,1.506,393,1.435,395,1.144,397,1.688,401,1.506,424,0.774,471,1.506,472,1.588,473,1.588,474,1.223,485,1.506,487,1.435,500,1.979,518,1.812,519,1.812,520,1.812,527,1.491,543,2.948,545,3.793,548,1.435,580,1.435,582,1.435,593,1.435,606,1.588,607,1.979,625,1.435,626,1.373,627,0.913,633,1.688,672,1.812,725,1.506,750,1.688,751,1.979,761,1.688,813,1.979,852,1.979,853,2.958,882,1.588,883,3.793,884,1.889,885,2.958,891,1.108,903,1.588,904,1.979,911,1.688,912,1.979,916,1.588,920,1.979,921,1.979,925,1.588,926,1.979,927,3.491,976,1.812,980,5.677,981,1.588,982,1.588,983,1.979,984,2.958,998,1.688,999,1.979,1000,3.491,1023,1.588,1024,1.979,1025,1.979,1058,1.506,1151,1.688,1152,1.979,1168,1.688,1169,1.979,1175,1.688,1176,1.979,1202,1.979,1203,1.812,1204,1.979,1265,1.268,1294,1.979,1299,1.979,1300,1.979,1312,1.979,1322,1.812,1330,1.979,1331,1.979,1337,2.958,1338,2.958,1365,2.458,1366,1.688,1394,1.979,1408,1.979,1412,1.588,1413,1.979,1415,1.688,1416,1.979,1426,1.373,1450,1.979,1471,1.979,1474,1.979,1483,1.979,1490,1.979,1518,1.979,1535,1.688,1536,1.979,1537,1.979,1596,1.979,1597,1.979,1612,3.595,1613,1.979,1629,1.688,1630,1.979,1635,1.588,1668,1.979,1679,1.979,1704,1.979,1753,1.688,1754,1.979,1758,1.588,1763,1.373,1785,1.979,1798,1.688,1800,2.958,1817,7.056,1851,1.688,1852,4.088,1853,1.979,1914,1.268,1933,1.688,1934,1.979,1974,1.688,1975,1.979,1992,1.979,1993,1.979,2007,1.688,2008,1.979,2047,1.688,2048,1.979,2059,1.688,2060,1.979,2081,1.688,2082,1.688,2090,1.688,2092,1.588,2093,1.979,2094,1.979,2112,2.958,2124,1.506,2131,1.506,2132,1.506,2134,3.286,2166,1.979,2189,1.688,2190,1.979,2195,1.506,2244,1.688,2245,1.979,2255,3.491,2256,2.958,2260,1.688,2270,1.979,2283,1.506,2295,1.588,2296,3.491,2297,1.979,2347,3.491,2348,3.491,2372,1.588,2373,1.979,2374,1.979,2378,1.373,2386,1.812,2388,1.812,2404,1.812,2405,2.958,2406,1.979,2469,1.812,2470,1.979,2503,1.506,2504,1.506,2506,1.688,2507,1.688,2508,1.688,2516,3.793,2517,1.979,2522,1.588,2550,1.688,2551,2.958,2574,1.979,2595,3.491,2596,1.979,2601,1.688,2625,1.979,2630,1.979,2635,3.962,2640,1.506,2649,1.506,2650,1.506,2673,3.491,2685,1.979,2709,1.979,2717,1.979,2742,1.688,2743,1.979,2763,1.688,2835,1.979,2893,1.588,2899,1.979,2906,1.979,2908,1.979,2912,1.812,2913,1.979,2914,1.979,2937,1.812,2938,1.979,3018,1.979,3019,1.688,3020,1.979,3022,1.979,3048,1.688,3049,1.979,3072,1.688,3107,1.979,3154,1.979,3155,1.979,3161,1.812,3162,2.232,3163,2.232,3164,2.232,3165,7.958,3166,6.646,3167,2.232,3168,4.617,3169,3.643,3170,7.172,3171,6.932,3172,6.646,3173,6.932,3174,5.872,3175,8.952,3176,2.232,3177,2.232,3178,1.979,3179,7.552,3180,1.979,3181,1.979,3182,6.3,3183,2.232,3184,7.839,3185,7.839,3186,4.617,3187,4.617,3188,1.979,3189,4.093,3190,1.979,3191,1.979,3192,1.979,3193,2.232,3194,3.643,3195,2.232,3196,2.232,3197,2.232,3198,1.979,3199,5.872,3200,4.617,3201,6.646,3202,3.23,3203,1.979,3204,2.232,3205,3.23,3206,1.979,3207,1.979,3208,1.979,3209,1.979,3210,4.093,3211,1.979,3212,1.979,3213,1.979,3214,3.643,3215,1.979,3216,1.979,3217,1.979,3218,1.979,3219,2.232,3220,1.979,3221,1.979,3222,1.979,3223,2.232,3224,2.232,3225,5.206,3226,2.232,3227,2.232,3228,2.232,3229,2.232]],["title/dependencies.html",[225,2.492,3230,3.355]],["body/dependencies.html",[27,0.008,58,0.634,60,3.674,63,0.277,120,0.006,129,0.006,204,1.07,225,2.6,263,2.53,266,3.027,270,4.068,278,4.322,284,4.068,285,4.068,310,5.067,416,5.067,478,4.068,480,4.322,489,3.856,565,2.53,572,1.855,579,3.516,678,5.067,1099,5.067,1249,5.067,1251,3.248,1321,3.516,1360,6.153,1361,4.322,1362,4.322,1364,4.068,1479,5.067,1497,4.641,1498,4.641,3231,5.715,3232,5.715,3233,5.715,3234,5.715,3235,7.965,3236,5.715,3237,5.715,3238,5.715,3239,5.715,3240,5.715,3241,5.715,3242,5.715,3243,5.715,3244,5.715,3245,5.715,3246,5.715,3247,5.715,3248,5.715,3249,5.715,3250,5.715,3251,5.715,3252,5.715,3253,5.715,3254,5.715,3255,5.715,3256,5.715,3257,5.715,3258,5.715,3259,5.715,3260,5.715,3261,5.715,3262,5.715,3263,5.715,3264,5.715,3265,5.715,3266,5.715,3267,5.715,3268,5.715,3269,5.715,3270,5.715,3271,5.715,3272,5.715,3273,5.715,3274,5.715,3275,5.715,3276,5.715,3277,5.715,3278,5.715]],["title/miscellaneous/enumerations.html",[3279,2.553,3280,4.857]],["body/miscellaneous/enumerations.html",[7,0.173,27,0.008,38,1.71,45,0.819,49,3.531,120,0.005,129,0.005,535,3.998,552,3.456,573,3.79,574,3.79,575,3.998,576,3.79,577,3.79,654,4.981,681,4.248,682,3.79,698,3.998,704,3.877,725,3.79,736,4.981,817,3.079,963,2.314,1065,4.981,1068,3.79,1997,3.475,2136,3.456,2298,2.964,2302,2.227,2303,2.227,2304,2.964,2314,2.227,2315,2.227,2354,3.456,2355,2.52,2356,2.52,2357,2.52,2358,2.411,2359,2.52,2360,2.411,2361,2.52,2362,2.411,2363,2.52,2364,2.52,2365,2.52,2366,2.52,2369,2.52,2370,2.314,2919,4.981,3279,2.644,3280,3.475,3281,8.137,3282,7.172,3283,3.919,3284,3.919,3285,3.919,3286,3.919,3287,3.919,3288,3.919,3289,3.919,3290,3.919,3291,3.919,3292,3.919,3293,3.919,3294,3.919,3295,3.919,3296,3.919,3297,5.618,3298,5.618,3299,5.618,3300,5.618,3301,5.618,3302,3.919,3303,3.919,3304,3.919,3305,3.919,3306,3.919,3307,3.919,3308,3.919,3309,3.919,3310,3.919,3311,3.475,3312,3.919,3313,3.919,3314,3.919,3315,3.919,3316,3.919,3317,3.919,3318,3.919,3319,3.919,3320,3.919,3321,3.919,3322,3.919,3323,3.919,3324,5.618,3325,3.919,3326,3.919,3327,3.919,3328,3.919,3329,3.919,3330,3.919,3331,3.919,3332,3.919,3333,3.919,3334,3.919,3335,3.919,3336,3.919,3337,3.919,3338,3.919,3339,3.919,3340,3.919,3341,3.919,3342,3.919,3343,3.919,3344,3.919,3345,3.919,3346,3.919,3347,3.919,3348,3.919,3349,3.919,3350,3.919,3351,3.919,3352,3.919,3353,3.919,3354,3.919,3355,3.919,3356,3.919,3357,3.919,3358,3.919,3359,3.919,3360,3.919,3361,3.919,3362,3.919,3363,3.919,3364,3.919,3365,3.919,3366,3.919,3367,3.919,3368,3.919,3369,3.919,3370,3.919,3371,3.919,3372,3.919,3373,5.618,3374,3.919,3375,5.618,3376,5.618,3377,5.618,3378,5.618,3379,3.919,3380,3.919,3381,5.618,3382,5.618]],["title/miscellaneous/functions.html",[3279,2.553,3383,4.857]],["body/miscellaneous/functions.html",[7,0.198,26,1.294,27,0.008,28,0.934,29,0.418,30,1.139,35,0.668,38,2.741,45,0.9,59,5.495,120,0.005,129,0.005,130,1.66,132,2.966,134,1.181,144,1.394,147,1.803,211,3.271,248,5.81,265,4.882,267,5.016,360,3.026,627,3.846,657,6.181,725,4.167,1124,3.642,1250,3.166,1271,5.477,1600,4.167,1798,5.756,1800,3.642,1812,3.977,1813,3.977,1814,3.977,1815,3.977,1816,3.977,2386,5.016,2388,5.016,2391,5.477,2393,5.477,3189,3.977,3190,5.477,3191,6.264,3192,5.477,3202,3.977,3203,5.477,3205,3.977,3206,5.477,3207,5.477,3208,3.977,3209,5.477,3210,3.977,3211,5.477,3212,5.477,3213,5.477,3220,3.977,3221,5.477,3222,3.977,3279,3.026,3383,3.977,3384,7.065,3385,6.177,3386,4.485,3387,4.485,3388,4.485,3389,7.065,3390,4.485,3391,6.177,3392,4.485,3393,7.612,3394,5.016,3395,4.485,3396,4.485,3397,4.485,3398,4.485,3399,4.485,3400,6.177,3401,6.177,3402,6.177,3403,4.485,3404,4.485,3405,6.177,3406,4.485,3407,4.485,3408,4.485,3409,4.485,3410,4.485,3411,4.485,3412,4.485,3413,4.485]],["title/index.html",[7,0.167,3414,3.784,3415,3.784]],["body/index.html",[4,0.086,27,0.008,120,0.006,129,0.006,134,1.589,184,6.652,583,2.485,820,3.712,1495,5.35,2090,4.563,3161,4.9,3394,4.9,3416,6.034,3417,6.034,3418,7.503,3419,6.034,3420,6.034,3421,6.034,3422,6.034,3423,6.034,3424,6.034,3425,8.165,3426,6.034,3427,6.034,3428,6.034,3429,9.081,3430,6.034,3431,6.034,3432,8.956,3433,6.034,3434,6.034,3435,7.503,3436,6.034,3437,6.034,3438,6.034,3439,6.034,3440,7.503,3441,6.034,3442,6.034,3443,6.034,3444,7.503,3445,7.503,3446,6.034,3447,6.034,3448,6.034,3449,6.034,3450,6.034,3451,5.35,3452,6.034,3453,6.034,3454,6.034,3455,6.034,3456,6.034,3457,6.034,3458,6.034,3459,6.034,3460,5.35,3461,6.034,3462,6.034,3463,6.034,3464,6.034,3465,6.034,3466,6.034,3467,5.35]],["title/modules.html",[224,2.76]],["body/modules.html",[27,0.006,120,0.006,129,0.006,223,4.76,224,2.786,234,4.48,235,4.48,236,4.48,237,4.48,238,4.48,239,4.48,240,4.48,241,4.48,242,4.48,243,4.48,244,4.047,245,4.48,246,4.48,247,4.247,3451,8.445,3468,9.524,3469,9.524,3470,9.55,3471,6.295,3472,6.295]],["title/overview.html",[3473,5.529]],["body/overview.html",[2,1.31,27,0.008,120,0.004,129,0.004,132,1.586,181,1.149,207,4.135,209,4.135,222,1.226,223,7.136,224,1.672,225,1.718,226,1.82,227,1.82,228,1.82,229,1.82,230,1.768,231,3.349,232,3.349,233,3.349,234,6.527,235,6.149,236,6.442,237,5.326,238,4.577,239,5.326,240,5.326,241,5.728,242,5.326,243,5.978,244,5.615,245,6.273,246,6.273,247,5.56,248,4.339,249,2.636,250,1.82,251,1.82,388,4.339,390,4.339,393,5.174,395,3.999,401,4.339,467,3.349,469,3.349,470,3.349,471,4.339,472,4.577,473,4.577,474,4.101,485,4.339,544,2.428,606,4.577,625,4.135,626,4.337,627,3.193,711,3.067,807,3.349,808,3.349,851,1.015,891,4.171,981,2.688,1188,3.349,1190,3.349,1426,4.337,1444,3.349,1445,3.349,1763,4.337,1779,3.349,1780,3.349,1799,3.067,2092,5.728,2372,5.728,2378,4.337,2501,3.349,2502,3.349,2503,4.339,2504,4.339,2829,3.349,2830,3.349,2831,3.349,2891,3.349,2892,3.349,2893,4.577,2926,3.349,2927,3.349,2928,3.349,3473,3.349,3474,3.777,3475,3.777,3476,3.777,3477,3.777,3478,3.777]],["title/properties.html",[8,1.089,3230,3.355]],["body/properties.html",[8,1.445,27,0.008,120,0.007,129,0.007,134,1.914,1128,6.443,3460,6.443,3467,6.443,3479,7.267,3480,7.267,3481,7.267,3482,7.267]],["title/miscellaneous/variables.html",[3279,2.553,3483,4.857]],["body/miscellaneous/variables.html",[7,0.181,12,1.911,27,0.008,29,0.268,45,1.202,48,3.263,49,3.188,65,2.383,71,3.641,72,1.74,84,1.039,104,1.544,120,0.005,129,0.005,134,1.081,147,1.695,199,2.977,216,2.771,218,2.336,319,2.977,323,3.335,324,4.716,331,4.716,367,2.884,424,2.014,489,2.771,493,3.573,501,2.64,518,4.716,519,4.716,520,4.716,527,2.758,531,7.115,535,2.923,627,3.163,721,4.392,753,5.15,884,2.758,891,2.884,899,3.641,901,2.771,980,2.425,1058,3.918,1086,3.641,1114,2.771,1250,3.453,1322,4.716,1325,3.641,1361,3.106,1362,3.106,1914,3.3,2283,3.918,3072,4.392,3178,3.641,3180,5.15,3181,3.641,3188,3.641,3198,3.641,3215,3.641,3216,5.15,3217,3.641,3218,5.15,3225,3.641,3279,2.771,3311,5.15,3394,4.716,3483,3.641,3484,4.107,3485,4.107,3486,7.729,3487,4.107,3488,4.107,3489,4.107,3490,4.107,3491,4.107,3492,4.107,3493,4.107,3494,4.107,3495,4.107,3496,4.107,3497,4.107,3498,4.107,3499,4.107,3500,4.107,3501,4.107,3502,4.107,3503,4.107,3504,4.107,3505,5.808,3506,4.107,3507,4.107,3508,4.107,3509,5.808,3510,4.107,3511,4.107,3512,4.107,3513,4.107,3514,4.107,3515,4.107,3516,4.107,3517,4.107,3518,4.107,3519,4.107,3520,5.808,3521,4.107,3522,5.808,3523,4.107,3524,5.808,3525,4.107,3526,4.107,3527,4.107,3528,4.107,3529,4.107,3530,4.107,3531,4.107,3532,4.107,3533,4.107,3534,4.107,3535,4.107,3536,4.107,3537,4.107,3538,4.107,3539,4.107,3540,4.107]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":980,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/QueuesQueryController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":3479,"title":{},"body":{"properties.html":{}}}],["0.11.2",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3277,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3270,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":3278,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3175,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3199,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3214,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3194,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3204,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3193,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3219,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3171,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3197,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3165,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":3196,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":3195,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":3227,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3172,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3170,"title":{},"body":{"coverage.html":{}}}],["0/50",{"_index":3224,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3201,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3173,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3174,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3200,"title":{},"body":{"coverage.html":{}}}],["0})@column({name",{"_index":1711,"title":{},"body":{"entities/Option.html":{}}}],["0})@isnumber",{"_index":949,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1",{"_index":1109,"title":{},"body":{"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["1.0.0",{"_index":3264,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":3231,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":3247,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3265,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3187,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":3177,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3176,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3185,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3182,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3169,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":976,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"coverage.html":{}}}],["10.0.0",{"_index":3246,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":3242,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3234,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3238,"title":{},"body":{"dependencies.html":{}}}],["10.3.7",{"_index":3235,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":3186,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@isnumber",{"_index":977,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1103.1210",{"_index":1129,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["12",{"_index":1012,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["15",{"_index":3474,"title":{},"body":{"overview.html":{}}}],["16",{"_index":3168,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3478,"title":{},"body":{"overview.html":{}}}],["1})@primarygeneratedcolumn({name",{"_index":1747,"title":{},"body":{"entities/Option.html":{}}}],["2",{"_index":711,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"overview.html":{}}}],["2.0.2",{"_index":3241,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3237,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":3183,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":3167,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3475,"title":{},"body":{"overview.html":{}}}],["200",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["22",{"_index":979,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["22})@column({name",{"_index":1705,"title":{},"body":{"entities/Option.html":{}}}],["22})@isnumber",{"_index":945,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["24",{"_index":71,"title":{},"body":{"injectables/AbstractQueueService.html":{},"miscellaneous/variables.html":{}}}],["29",{"_index":3476,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1142,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["3.0.1",{"_index":3232,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3236,"title":{},"body":{"dependencies.html":{}}}],["3.3.5",{"_index":3268,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["302)@apiexcludeendpoint",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":3166,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":69,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["39",{"_index":3477,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1145,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["4.0.0",{"_index":3244,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":2203,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["404",{"_index":1644,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["409",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/UsersController.html":{}}}],["41",{"_index":1591,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["5.0.1",{"_index":3273,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":3275,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":3184,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":981,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["6.9.7",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":2287,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["6h",{"_index":498,"title":{},"body":{"modules/AuthModule.html":{}}}],["6})@column({name",{"_index":1708,"title":{},"body":{"entities/Option.html":{}}}],["6})@isnumber",{"_index":947,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["7.3.1",{"_index":3245,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3271,"title":{},"body":{"dependencies.html":{}}}],["8.11.4",{"_index":3267,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1011,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__getguards",{"_index":1822,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["abstract",{"_index":62,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QueryAnswer.html":{}}}],["abstractqueueservice",{"_index":1,"title":{"injectables/AbstractQueueService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["abstractqueueservice:101",{"_index":2579,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:105",{"_index":2582,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:12",{"_index":2576,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:23",{"_index":2584,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:38",{"_index":2581,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:6",{"_index":2585,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:75",{"_index":2577,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:82",{"_index":2583,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:90",{"_index":2580,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:97",{"_index":2578,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["accept",{"_index":3532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/variables.html":{}}}],["accession_nb",{"_index":2367,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_nb'})@isstring",{"_index":2488,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_number",{"_index":3312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessionnb",{"_index":2368,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accessionnumber",{"_index":2298,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["acquisition_device_processing_description",{"_index":3349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisition_number",{"_index":3357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitiondeviceprocessingdescription",{"_index":3350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitionnumber",{"_index":3358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1813,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["activated",{"_index":546,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["activated'})@isboolean",{"_index":550,"title":{},"body":{"entities/Autorouting.html":{}}}],["activation",{"_index":1814,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":89,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["adapter",{"_index":1515,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2196,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["addanonjob",{"_index":2519,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addanonjob(queuesanonsdto",{"_index":2521,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addbearerauth",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddeletejob",{"_index":2598,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["adddeletejob(queuesdeletedto",{"_index":2600,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["added",{"_index":1662,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["added'})@apiresponse({status",{"_index":1636,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addjob",{"_index":13,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(data",{"_index":31,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(request",{"_index":2194,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["addjob(userid",{"_index":2274,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["addlabeltorole",{"_index":2745,"title":{},"body":{"controllers/RolesController.html":{}}}],["addlabeltorole(rolename",{"_index":2750,"title":{},"body":{"controllers/RolesController.html":{}}}],["addoauthconfig",{"_index":1631,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addoauthconfig(@body",{"_index":1663,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addoauthconfig(oauthconfigdto",{"_index":1634,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addqueryjob",{"_index":2637,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["addqueryjob(queuesquerydto",{"_index":2639,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["address",{"_index":1235,"title":{},"body":{"classes/HttpClient.html":{}}}],["addrolelabel",{"_index":2836,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrolelabel(rolename",{"_index":2843,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin",{"_index":137,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/GetUserDto.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["admin'})@column({name",{"_index":3038,"title":{},"body":{"entities/User.html":{}}}],["admin'})@primarycolumn({name",{"_index":2735,"title":{},"body":{"entities/Role.html":{}}}],["admin.controller",{"_index":2083,"title":{},"body":{"modules/OrthancModule.html":{}}}],["admin.controller.ts",{"_index":1853,"title":{},"body":{"controllers/OrthancAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:102",{"_index":1890,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:109",{"_index":1876,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:119",{"_index":1870,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:129",{"_index":1882,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:139",{"_index":1879,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:149",{"_index":1897,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:159",{"_index":1885,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:26",{"_index":1903,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:36",{"_index":1906,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:46",{"_index":1909,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:56",{"_index":1894,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:66",{"_index":1912,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:76",{"_index":1900,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:86",{"_index":1873,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin@gaelo.com",{"_index":3151,"title":{},"body":{"injectables/UsersService.html":{}}}],["adminguard",{"_index":131,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["aet",{"_index":698,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["aet'})@isstring",{"_index":2677,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["age",{"_index":68,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["agplv3",{"_index":3480,"title":{},"body":{"properties.html":{}}}],["all.controller",{"_index":2091,"title":{},"body":{"modules/OrthancModule.html":{}}}],["all.controller.ts",{"_index":2166,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["all.controller.ts:26",{"_index":2182,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:36",{"_index":2173,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:46",{"_index":2176,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:53",{"_index":2179,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["alllabels",{"_index":1432,"title":{},"body":{"controllers/LabelsController.html":{}}}],["alllabels.map((label",{"_index":1434,"title":{},"body":{"controllers/LabelsController.html":{}}}],["allmodalities",{"_index":707,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('ct",{"_index":713,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('pt",{"_index":712,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.length",{"_index":710,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allowemptyvalue",{"_index":1888,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["allroles",{"_index":2862,"title":{},"body":{"injectables/RolesService.html":{}}}],["allusers",{"_index":3075,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers.map((user",{"_index":3077,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":3452,"title":{},"body":{"index.html":{}}}],["anon.ts",{"_index":2914,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["anon.ts:4",{"_index":2922,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:5",{"_index":2921,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:6",{"_index":2920,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon/queue",{"_index":2509,"title":{},"body":{"modules/QueueModule.html":{}}}],["anonqueue",{"_index":2586,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anons.controller",{"_index":2510,"title":{},"body":{"modules/QueueModule.html":{}}}],["anons.controller.ts",{"_index":2517,"title":{},"body":{"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["anons.controller.ts:103",{"_index":2524,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:130",{"_index":2531,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:39",{"_index":2525,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:50",{"_index":2528,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:77",{"_index":2527,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto",{"_index":2532,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto.ts",{"_index":2551,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["anons.dto.ts:11",{"_index":2568,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:15",{"_index":2558,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:19",{"_index":2560,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:23",{"_index":2562,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:27",{"_index":2564,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:36",{"_index":2594,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["anons.dto.ts:7",{"_index":2566,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.service",{"_index":2514,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{}}}],["anons.service.ts",{"_index":2574,"title":{},"body":{"injectables/QueuesAnonService.html":{},"coverage.html":{}}}],["anons.service.ts:8",{"_index":2575,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anonymize",{"_index":151,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["anonymizeguard",{"_index":152,"title":{"guards/AnonymizeGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["anonymizes",{"_index":2544,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["anonymizes.foreach((anonymize",{"_index":2546,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["another",{"_index":1127,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["answer",{"_index":1965,"title":{},"body":{"controllers/OrthancController.html":{}}}],["answer.dto",{"_index":2135,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["answer.dto.ts",{"_index":2348,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["answer.dto.ts:12",{"_index":2458,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:16",{"_index":2460,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:20",{"_index":2462,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:24",{"_index":2466,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:28",{"_index":2464,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:34",{"_index":2494,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:38",{"_index":2492,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:42",{"_index":2496,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:46",{"_index":2490,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:50",{"_index":2498,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:54",{"_index":2489,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:58",{"_index":2500,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:64",{"_index":2350,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:68",{"_index":2352,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:8",{"_index":2468,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer/query",{"_index":2405,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts",{"_index":2297,"title":{},"body":{"classes/QueryAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts:10",{"_index":2336,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:11",{"_index":2335,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:12",{"_index":2324,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:14",{"_index":2317,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:4",{"_index":2319,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:40",{"_index":2326,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:44",{"_index":2327,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:48",{"_index":2328,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:5",{"_index":2320,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:52",{"_index":2329,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:56",{"_index":2331,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:6",{"_index":2321,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:60",{"_index":2330,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:64",{"_index":2325,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:68",{"_index":2334,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:7",{"_index":2323,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:72",{"_index":2333,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:76",{"_index":2332,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:8",{"_index":2322,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:9",{"_index":2318,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answerid",{"_index":2299,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answernumber",{"_index":2300,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answser",{"_index":1467,"title":{},"body":{"injectables/LabelsService.html":{}}}],["anyway",{"_index":1103,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["api",{"_index":753,"title":{},"body":{"controllers/AutoroutingsController.html":{},"miscellaneous/variables.html":{}}}],["api;proto",{"_index":1263,"title":{},"body":{"classes/HttpClient.html":{}}}],["apibearerauth",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["apiexcludeendpoint",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioauth2(['openid",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiparam",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiproperty",{"_index":566,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{}}}],["apiproperty()@column({name",{"_index":549,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Rule.html":{}}}],["apiproperty()@column({nullable",{"_index":3042,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@isinstance(role",{"_index":1182,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":1179,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":873,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@isobject",{"_index":2351,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["apiproperty()@isstring",{"_index":1669,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":871,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":3034,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@primarygeneratedcolumn({name",{"_index":557,"title":{},"body":{"entities/Autorouting.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":553,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["apiproperty({required",{"_index":1172,"title":{},"body":{"classes/GetRoleDto.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["apiquery",{"_index":2216,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiresponse",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["apis",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('autorouting",{"_index":790,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["apitags('labels",{"_index":1429,"title":{},"body":{"controllers/LabelsController.html":{}}}],["apitags('oauth",{"_index":1653,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["apitags('options",{"_index":1767,"title":{},"body":{"controllers/OptionsController.html":{}}}],["apitags('orthanc",{"_index":1916,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["apitags('processing",{"_index":2219,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["apitags('queues/anon",{"_index":2533,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["apitags('queues/delete",{"_index":2611,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["apitags('queues/query",{"_index":2652,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["apitags('roles",{"_index":2783,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":3073,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":3394,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["app.get(seederservice",{"_index":3537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_interceptor",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":180,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":3424,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":223,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":2042,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["archive')@useguards(exportguard",{"_index":2018,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["args",{"_index":1306,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["array",{"_index":657,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["array.from(new",{"_index":114,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["arraybuffer",{"_index":1269,"title":{},"body":{"classes/HttpClient.html":{}}}],["asked",{"_index":1096,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["associated",{"_index":1094,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["async",{"_index":12,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1257,"title":{},"body":{"classes/HttpClient.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":333,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1320,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('bearer",{"_index":1336,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["authguard('jwt",{"_index":1315,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1473,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":234,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1389,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["authorizationurl",{"_index":1377,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["authservice",{"_index":393,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":968,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["auto'})@column({default",{"_index":1737,"title":{},"body":{"entities/Option.html":{}}}],["auto'})@isstring",{"_index":969,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["auto_query",{"_index":2721,"title":{},"body":{"entities/Role.html":{}}}],["auto_query_hour_start",{"_index":1706,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_hour_stop",{"_index":1709,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_start",{"_index":1712,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_stop",{"_index":1714,"title":{},"body":{"entities/Option.html":{}}}],["auto_routing",{"_index":2723,"title":{},"body":{"entities/Role.html":{}}}],["autoloadentities",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["autoquery",{"_index":159,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["autoqueryguard",{"_index":160,"title":{"guards/AutoQueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoqueryhourstart",{"_index":928,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryhourstop",{"_index":929,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestart",{"_index":930,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestop",{"_index":931,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autorouter_started",{"_index":1717,"title":{},"body":{"entities/Option.html":{}}}],["autorouterstarted",{"_index":932,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["autorouting",{"_index":172,"title":{"entities/Autorouting.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["autorouting'})@apiresponse({status",{"_index":764,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.activated",{"_index":747,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{}}}],["autorouting.dto",{"_index":789,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.dto.ts",{"_index":921,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["autorouting.entity",{"_index":675,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{}}}],["autorouting.enum",{"_index":578,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autorouting.eventtype",{"_index":745,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting.handler",{"_index":811,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autorouting.router.destinations",{"_index":741,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting/autorouting.entity",{"_index":2897,"title":{},"body":{"modules/SeederModule.html":{}}}],["autorouting/autoroutings.module",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["autoroutingconfigs",{"_index":611,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype",{"_index":552,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["autoroutingeventtype.new_instance",{"_index":603,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autoroutingeventtype.new_patient",{"_index":664,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_series",{"_index":660,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_study",{"_index":662,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_patient",{"_index":668,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_series",{"_index":666,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_study",{"_index":667,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingguard",{"_index":173,"title":{"guards/AutoRoutingGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoroutinghandler",{"_index":606,"title":{"injectables/AutoroutingHandler.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoroutingmatches",{"_index":743,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingmatches.foreach((autorouting",{"_index":748,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutings.controller",{"_index":810,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autoroutings.service",{"_index":674,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{}}}],["autoroutingscontroller",{"_index":750,"title":{"controllers/AutoroutingsController.html":{}},"body":{"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{}}}],["autoroutingservice",{"_index":629,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["autoroutingsmodule",{"_index":235,"title":{"modules/AutoroutingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoroutingsModule.html":{},"modules.html":{},"overview.html":{}}}],["autoroutingsrepository",{"_index":824,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["autoroutingsservice",{"_index":625,"title":{"injectables/AutoroutingsService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":3472,"title":{},"body":{"modules.html":{}}}],["await",{"_index":65,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1249,"title":{},"body":{"classes/HttpClient.html":{},"dependencies.html":{}}}],["axios.request(option).catch((error",{"_index":1267,"title":{},"body":{"classes/HttpClient.html":{}}}],["back",{"_index":1619,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["backers",{"_index":3453,"title":{},"body":{"index.html":{}}}],["bad",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception(\"missing",{"_index":2797,"title":{},"body":{"controllers/RolesController.html":{}}}],["badrequestexception('confirmation",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":2667,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["badrequestexception('role",{"_index":3100,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception('token",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('uuid",{"_index":2230,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["baseurl",{"_index":1255,"title":{},"body":{"classes/HttpClient.html":{}}}],["bcryptjs",{"_index":3248,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs.compare(password",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.gensalt",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.hash(password",{"_index":3526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1362,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belonging",{"_index":1032,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["belongs",{"_index":888,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["between",{"_index":2389,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["between.ts",{"_index":3221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["binary",{"_index":1292,"title":{},"body":{"classes/HttpClient.html":{}}}],["body",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["body_part_examined",{"_index":3327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bodypartexamined",{"_index":3328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bool",{"_index":1055,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"guards/ModifyGuard.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingJobDto.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["break",{"_index":700,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["browse",{"_index":3470,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3468,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1253,"title":{},"body":{"classes/HttpClient.html":{}}}],["buffer.from(response.data",{"_index":1291,"title":{},"body":{"classes/HttpClient.html":{}}}],["bugfixed",{"_index":1137,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["build",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builddocs",{"_index":3180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":3419,"title":{},"body":{"index.html":{}}}],["buildswagger",{"_index":3190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswagger(app",{"_index":3392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullmq",{"_index":60,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["burner_date_format",{"_index":1720,"title":{},"body":{"entities/Option.html":{}}}],["burner_delete_study_after_sent",{"_index":1722,"title":{},"body":{"entities/Option.html":{}}}],["burner_label_path",{"_index":1725,"title":{},"body":{"entities/Option.html":{}}}],["burner_manifacturer",{"_index":1728,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitored_path",{"_index":1730,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitoring_level",{"_index":1733,"title":{},"body":{"entities/Option.html":{}}}],["burner_started",{"_index":1735,"title":{},"body":{"entities/Option.html":{}}}],["burner_support_type",{"_index":1738,"title":{},"body":{"entities/Option.html":{}}}],["burner_transcoding",{"_index":1741,"title":{},"body":{"entities/Option.html":{}}}],["burner_transfer_syntax",{"_index":1743,"title":{},"body":{"entities/Option.html":{}}}],["burner_viewer_path",{"_index":1745,"title":{},"body":{"entities/Option.html":{}}}],["burnerdateformat",{"_index":933,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerdeletestudyaftersent",{"_index":934,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerlabelpath",{"_index":935,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermanifacturer",{"_index":936,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoredpath",{"_index":937,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoringlevel",{"_index":938,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerstarted",{"_index":939,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnersupporttype",{"_index":940,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertranscoding",{"_index":941,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertransfersyntax",{"_index":942,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerviewerpath",{"_index":943,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["by=localhost;for=localhost;host",{"_index":1261,"title":{},"body":{"classes/HttpClient.html":{}}}],["called",{"_index":1030,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["callhandler",{"_index":1601,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["calling",{"_index":906,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate(context",{"_index":140,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivatereturns",{"_index":1826,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["cardiac_number_of_images",{"_index":3331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardiacnumberofimages",{"_index":3332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":701,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["catch",{"_index":1114,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/SeriesGuard.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["catch((e",{"_index":735,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["catch(function",{"_index":1277,"title":{},"body":{"classes/HttpClient.html":{}}}],["catcherror",{"_index":1606,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["catcherror((err",{"_index":1842,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["catcherror((error",{"_index":1609,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["cd_burner",{"_index":2725,"title":{},"body":{"entities/Role.html":{}}}],["cdburner",{"_index":169,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["cdburnerguard",{"_index":170,"title":{"guards/CdBurnerGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["change",{"_index":1530,"title":{},"body":{"injectables/MailService.html":{}}}],["changed",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["changed'})@apiresponse({status",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(changepassworddto",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":344,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto})@public()@post('change",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordurl",{"_index":1525,"title":{},"body":{"injectables/MailService.html":{}}}],["changes",{"_index":2104,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.changes.foreach((element",{"_index":2108,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.last",{"_index":2107,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changetype",{"_index":1994,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["character",{"_index":869,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["check",{"_index":1095,"title":{},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{}}}],["checkifuseridhasjobs",{"_index":14,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkifuseridhasjobs(userid",{"_index":37,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checking",{"_index":886,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/SeriesGuard.html":{}}}],["checklabelinrole",{"_index":882,"title":{"guards/CheckLabelInRole.html":{}},"body":{"guards/CheckLabelInRole.html":{},"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["checklabelrolestudy",{"_index":1058,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkuseridparamsguard",{"_index":903,"title":{"guards/CheckUserIdParamsGuard.html":{}},"body":{"guards/CheckUserIdParamsGuard.html":{},"modules/GuardsModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["checkuseridqueryguard",{"_index":911,"title":{"guards/CheckUserIdQueryGuard.html":{}},"body":{"guards/CheckUserIdQueryGuard.html":{},"controllers/ProcessingController.html":{},"coverage.html":{}}}],["checkuserroleguard",{"_index":916,"title":{"guards/CheckUserRoleGuard.html":{}},"body":{"guards/CheckUserRoleGuard.html":{},"modules/GuardsModule.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["cheking",{"_index":135,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["children",{"_index":92,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["class",{"_index":63,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":851,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"overview.html":{}}}],["client",{"_index":677,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["client.ts",{"_index":3223,"title":{},"body":{"coverage.html":{}}}],["clientid",{"_index":1614,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["closequeueconnection",{"_index":15,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["cluster_appmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule",{"_index":807,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule_providers",{"_index":808,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule",{"_index":1188,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_imports",{"_index":1189,"title":{},"body":{"modules/GuardsModule.html":{}}}],["cluster_guardsmodule_providers",{"_index":1190,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule",{"_index":1444,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule_providers",{"_index":1445,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_oauthconfigmodule",{"_index":1674,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_oauthconfigmodule_providers",{"_index":1675,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_optionsmodule",{"_index":1779,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_optionsmodule_providers",{"_index":1780,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_orthancmodule",{"_index":2077,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_imports",{"_index":2079,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_providers",{"_index":2078,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_processingmodule",{"_index":2266,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_processingmodule_providers",{"_index":2267,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_queuemodule",{"_index":2501,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_providers",{"_index":2502,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2829,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":2831,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2830,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":2891,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":2892,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2926,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2927,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2928,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":3103,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":3104,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":563,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["column({default",{"_index":1724,"title":{},"body":{"entities/Option.html":{}}}],["column({nullable",{"_index":3031,"title":{},"body":{"entities/User.html":{}}}],["comparepasswords",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(pass",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(token",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":3540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":86,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["condition",{"_index":573,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["condition'})@isenum(condition",{"_index":2883,"title":{},"body":{"classes/Rule.html":{}}}],["condition.equals",{"_index":591,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["config",{"_index":493,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"modules/MailModule.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["config.dto",{"_index":1652,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["config.dto.ts",{"_index":1668,"title":{},"body":{"classes/OauthConfigDto.html":{},"coverage.html":{}}}],["config.dto.ts:11",{"_index":1673,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:15",{"_index":1670,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:19",{"_index":1671,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:7",{"_index":1672,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.entity",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{}}}],["config.entity.ts",{"_index":1613,"title":{},"body":{"entities/OauthConfig.html":{},"coverage.html":{}}}],["config.entity.ts:12",{"_index":1625,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:18",{"_index":1618,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:22",{"_index":1621,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:8",{"_index":1623,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.get('jwt_secret",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('mail_encryption",{"_index":1505,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":1503,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":1508,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":1507,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.controller",{"_index":1677,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.controller.ts",{"_index":1630,"title":{},"body":{"controllers/OauthConfigController.html":{},"coverage.html":{}}}],["configs.controller.ts:38",{"_index":1651,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:49",{"_index":1647,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:63",{"_index":1641,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.module",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.module.ts",{"_index":1676,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.service",{"_index":491,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["configs.service.ts",{"_index":1679,"title":{},"body":{"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["configs.service.ts:15",{"_index":1691,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:22",{"_index":1689,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:31",{"_index":1692,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:35",{"_index":1687,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:39",{"_index":1686,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:46",{"_index":1693,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:9",{"_index":1684,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs/oauth",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["configservice",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"miscellaneous/functions.html":{}}}],["configservice.get",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('redis_address",{"_index":2588,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('redis_port",{"_index":2590,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('typeorm_database",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_host",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_password",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_port",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_username",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1375,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["configure",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationpassword",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{}}}],["confirmationtoken",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflict",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflict'})@apibody({type",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflict'})@useguards(adminguard)@post",{"_index":3056,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["conflictexception('a",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('email",{"_index":3092,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception('label",{"_index":1441,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/RolesService.html":{}}}],["conflictexception('oauth",{"_index":1666,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["conflictexception('role",{"_index":2801,"title":{},"body":{"controllers/RolesController.html":{}}}],["connect/auth",{"_index":1627,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["connect/auth'})@column",{"_index":1617,"title":{},"body":{"entities/OauthConfig.html":{}}}],["connection",{"_index":2286,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["console.error(\"can't",{"_index":696,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('invalid",{"_index":714,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('tmtvjob",{"_index":703,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error(error",{"_index":1279,"title":{},"body":{"classes/HttpClient.html":{}}}],["console.log('documentation",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('seeding",{"_index":3539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":1323,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constants/enums",{"_index":683,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancQueryController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(moduleref",{"_index":1819,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["constructor(answerid",{"_index":2414,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["constructor(authservice",{"_index":1475,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(autoroutingservice",{"_index":624,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["constructor(autoroutingsrepository",{"_index":819,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["constructor(configservice",{"_index":1395,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["constructor(id",{"_index":2248,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["constructor(jwtservice",{"_index":1344,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["constructor(labelsrepository",{"_index":1453,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor(level",{"_index":2316,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["constructor(mailerservice",{"_index":1520,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(oauthconfigsrepository",{"_index":1683,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["constructor(optionrepository",{"_index":2376,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["constructor(optionsrepository",{"_index":1786,"title":{},"body":{"injectables/OptionsService.html":{}}}],["constructor(orthancclient",{"_index":1040,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/TmtvService.html":{}}}],["constructor(private",{"_index":792,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckLabelInRole.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["constructor(processingservice",{"_index":1548,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["constructor(queue",{"_index":23,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["constructor(reflector",{"_index":1316,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(rolesrepository",{"_index":2840,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(rolesservice",{"_index":890,"title":{},"body":{"guards/CheckLabelInRole.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{}}}],["constructor(tag",{"_index":2918,"title":{},"body":{"classes/TagAnon.html":{}}}],["constructor(usersrepository",{"_index":3112,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":862,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["context",{"_index":143,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["context.getclass",{"_index":1328,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1327,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":148,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["contrast_bolus_agent",{"_index":3351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contrastbolusagent",{"_index":3352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":179,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/autorouting",{"_index":791,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["controller('/labels",{"_index":1430,"title":{},"body":{"controllers/LabelsController.html":{}}}],["controller('/options",{"_index":1768,"title":{},"body":{"controllers/OptionsController.html":{}}}],["controller('/processing",{"_index":2220,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["controller('/queues/anon",{"_index":2534,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["controller('/queues/delete",{"_index":2612,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["controller('/queues/query",{"_index":2653,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["controller('/roles",{"_index":2784,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('/users",{"_index":3074,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('oauth",{"_index":1654,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["controllers",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":3161,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":763,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateOptionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1439,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(autorouting",{"_index":825,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["create(label",{"_index":1456,"title":{},"body":{"injectables/LabelsService.html":{}}}],["create(labeldto",{"_index":1417,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(role",{"_index":2845,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(user",{"_index":3115,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarchive",{"_index":2009,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createarchive(request",{"_index":2016,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createautorouting",{"_index":755,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautorouting(createautoroutingdto",{"_index":760,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautoroutingdto",{"_index":761,"title":{"classes/CreateAutoroutingDto.html":{}},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["createconfirmationtoken",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["createconfirmationtoken(user",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdfiles",{"_index":2939,"title":{},"body":{"classes/TmtvService.html":{}}}],["createdicom",{"_index":2049,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createdicom(request",{"_index":2051,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createecho",{"_index":1854,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createecho(request",{"_index":1867,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createinstances",{"_index":2050,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createinstances(request",{"_index":2054,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createjobs",{"_index":1855,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createjobs(request",{"_index":1871,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createmedia",{"_index":2010,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmedia(request",{"_index":2020,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended",{"_index":2011,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended(request",{"_index":2023,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport",{"_index":2012,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport(request",{"_index":2027,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesmodify",{"_index":2061,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesmodify(request",{"_index":2064,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesquery",{"_index":2113,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createmodalitiesquery(request",{"_index":2116,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createoptiondto",{"_index":925,"title":{"classes/CreateOptionDto.html":{}},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["createpeersstore",{"_index":2013,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createpeersstore(request",{"_index":2030,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createrole",{"_index":2746,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(@body",{"_index":2795,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(createroledto",{"_index":2755,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":982,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":2796,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto})@post",{"_index":2757,"title":{},"body":{"controllers/RolesController.html":{}}}],["createseries",{"_index":2940,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ctorthancseriesid",{"_index":2988,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ptorthancseriesid",{"_index":2992,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesmodify",{"_index":2062,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createseriesmodify(request",{"_index":2067,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify",{"_index":2063,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify(request",{"_index":2070,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createtasksuserexport",{"_index":2014,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createtasksuserexport(request",{"_index":2033,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createuser",{"_index":3050,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":3098,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdto",{"_index":3053,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":998,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createwritestream",{"_index":2972,"title":{},"body":{"classes/TmtvService.html":{}}}],["credentials",{"_index":1283,"title":{},"body":{"classes/HttpClient.html":{}}}],["cron",{"_index":2100,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":2098,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["cron(cronexpression.every_minute",{"_index":2381,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["cronexpression",{"_index":2101,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":3253,"title":{},"body":{"dependencies.html":{}}}],["ct",{"_index":718,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ctorthancseriesid",{"_index":727,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ctresponse",{"_index":2985,"title":{},"body":{"classes/TmtvService.html":{}}}],["ctseriesid",{"_index":716,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["currenthour",{"_index":2391,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["currentminute",{"_index":2393,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":34,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["data.uuid",{"_index":111,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['jobid",{"_index":81,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['userid",{"_index":79,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['uuid",{"_index":77,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["database",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"injectables/LocalAuthGuard.html":{}}}],["date",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrthancEventPayloadDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date().gethours",{"_index":2392,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date().getminutes",{"_index":2394,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date(date.now",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":1381,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["decorators",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"entities/Option.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1302,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaultmessage(args",{"_index":1303,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaults",{"_index":1509,"title":{},"body":{"modules/MailModule.html":{}}}],["defer",{"_index":1805,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["deferguard",{"_index":1834,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["delayed",{"_index":88,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["delete",{"_index":162,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["delete('/:id",{"_index":797,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:labelname",{"_index":1435,"title":{},"body":{"controllers/LabelsController.html":{}}}],["delete('/:name",{"_index":2803,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/:rolename/label/:label",{"_index":2825,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/modalities",{"_index":1927,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/patients",{"_index":1988,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/peers",{"_index":1930,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/series",{"_index":1991,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies",{"_index":1990,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies/*/labels",{"_index":2185,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["delete(':name",{"_index":1657,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["delete(':uuid",{"_index":2241,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["delete(@param('id",{"_index":3095,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('name",{"_index":2804,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete(id",{"_index":3059,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(name",{"_index":2759,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete.controller",{"_index":2085,"title":{},"body":{"modules/OrthancModule.html":{}}}],["delete.controller.ts",{"_index":1975,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"coverage.html":{}}}],["delete.controller.ts:23",{"_index":1981,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:33",{"_index":1987,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:43",{"_index":1984,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete/queue",{"_index":2511,"title":{},"body":{"modules/QueueModule.html":{}}}],["deleteallressources",{"_index":2941,"title":{},"body":{"classes/TmtvService.html":{}}}],["deleteautorouting",{"_index":756,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(@param('id",{"_index":798,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(id",{"_index":768,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleted",{"_index":1656,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleted'})@apiresponse({status",{"_index":1643,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteguard",{"_index":163,"title":{"guards/DeleteGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancDeleteController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesDeleteController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["deletelabels",{"_index":2167,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletelabels(request",{"_index":2171,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletemodality",{"_index":1856,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletemodality(request",{"_index":1874,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deleteoauthconfig",{"_index":1632,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deleteoauthconfig(@param('name",{"_index":1658,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteoauthconfig(name",{"_index":1642,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deletepatients",{"_index":1976,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepatients(request",{"_index":1979,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepeer",{"_index":1857,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletepeer(request",{"_index":1877,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletequeue",{"_index":2632,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deletes.controller",{"_index":2512,"title":{},"body":{"modules/QueueModule.html":{}}}],["deletes.controller.ts",{"_index":2596,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["deletes.controller.ts:104",{"_index":2603,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:131",{"_index":2609,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:38",{"_index":2604,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:49",{"_index":2606,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:76",{"_index":2605,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto",{"_index":2610,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto.ts",{"_index":2625,"title":{},"body":{"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["deletes.dto.ts:6",{"_index":2627,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["deletes.service",{"_index":2515,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{}}}],["deletes.service.ts",{"_index":2630,"title":{},"body":{"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["deletes.service.ts:8",{"_index":2631,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deleteseries",{"_index":1977,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleteseries(request",{"_index":1982,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies",{"_index":1978,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies(request",{"_index":1985,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":134,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"controllers/LabelsController.html":{},"injectables/LocalAuthGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":593,"title":{"classes/Destination.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["destinations",{"_index":602,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype",{"_index":574,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["destinationtype.aet",{"_index":594,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype.peer",{"_index":732,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["destinationtype.tmtvjob",{"_index":702,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["development",{"_index":3431,"title":{},"body":{"index.html":{}}}],["dicom",{"_index":1028,"title":{},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancImportController.html":{},"injectables/SeriesGuard.html":{}}}],["dicom')@useguards(importguard",{"_index":2052,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom_tag",{"_index":585,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicom_tag'})@isenum(dicomtag",{"_index":2885,"title":{},"body":{"classes/Rule.html":{}}}],["dicoms",{"_index":2983,"title":{},"body":{"classes/TmtvService.html":{}}}],["dicomstudy",{"_index":2909,"title":{},"body":{"guards/StudyGuard.html":{}}}],["dicomtag",{"_index":575,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["dicomtag.patient_name",{"_index":584,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicomwebguard",{"_index":1023,"title":{"guards/DicomWebGuard.html":{}},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["different",{"_index":3298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["digit",{"_index":867,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["dir",{"_index":1512,"title":{},"body":{"modules/MailModule.html":{}}}],["disable",{"_index":774,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["disable(id",{"_index":827,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["disableautorouting",{"_index":757,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(@param('id",{"_index":805,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(id",{"_index":773,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["discuss",{"_index":1130,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["docs/oauth2",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["document",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":3162,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":1006,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["doe'})@column({name",{"_index":3029,"title":{},"body":{"entities/User.html":{}}}],["don't",{"_index":2238,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["doreverseproxy",{"_index":1914,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doreverseproxy(request",{"_index":1918,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["dto/change",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":788,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/get",{"_index":1766,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/lost",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/orthanc",{"_index":671,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["dto/query",{"_index":2133,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["dto/register.dto",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":1765,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/UsersController.html":{}}}],["dto/with",{"_index":2781,"title":{},"body":{"controllers/RolesController.html":{}}}],["e",{"_index":699,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["e2e",{"_index":3441,"title":{},"body":{"index.html":{}}}],["each",{"_index":601,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["editmodality",{"_index":1858,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editmodality(request",{"_index":1880,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer",{"_index":1859,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer(request",{"_index":1883,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["efficient",{"_index":3420,"title":{},"body":{"index.html":{}}}],["element",{"_index":2111,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["element.changetype",{"_index":2110,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["email",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email@gaelo.com",{"_index":1488,"title":{},"body":{"classes/LoginDto.html":{}}}],["email@gaelo.com'})@isnotempty",{"_index":1484,"title":{},"body":{"classes/LoginDto.html":{}}}],["email_verified",{"_index":1367,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["emitter",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["enable",{"_index":778,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["enable(id",{"_index":829,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["enableautorouting",{"_index":758,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(@param('id",{"_index":802,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(id",{"_index":777,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["end",{"_index":1628,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["end'})@column",{"_index":1620,"title":{},"body":{"entities/OauthConfig.html":{}}}],["endhour",{"_index":3401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endminute",{"_index":3402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endstudyuidposition",{"_index":1081,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["entities",{"_index":544,"title":{},"body":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":543,"title":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitynotfounderror",{"_index":1607,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["enum",{"_index":2257,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["enumerations",{"_index":3280,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["epson",{"_index":959,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["epson'})@column({default",{"_index":1727,"title":{},"body":{"entities/Option.html":{}}}],["epson'})@isstring",{"_index":960,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["equals",{"_index":3297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1844,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["error",{"_index":1278,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{}}}],["error('invalid",{"_index":1580,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["error('no",{"_index":1072,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["error(error",{"_index":1268,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response",{"_index":1280,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response.status",{"_index":1281,"title":{},"body":{"classes/HttpClient.html":{}}}],["event",{"_index":672,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["event_type",{"_index":604,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["event_type'})@isenum(autoroutingeventtype",{"_index":555,"title":{},"body":{"entities/Autorouting.html":{}}}],["eventemitter",{"_index":821,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemitter2",{"_index":822,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemittermodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["eventtype",{"_index":547,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["example",{"_index":583,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["example.com",{"_index":1144,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["exclude",{"_index":1752,"title":{},"body":{"entities/Option.html":{},"entities/User.html":{}}}],["execute",{"_index":610,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["executioncontext",{"_index":141,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["exist",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{}}}],["existinguser",{"_index":3089,"title":{},"body":{"controllers/UsersController.html":{}}}],["existinguser.id",{"_index":3091,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists",{"_index":1442,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["exists'})@apibearerauth('access",{"_index":1638,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["exit(0",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":497,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":61,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["export.controller",{"_index":2086,"title":{},"body":{"modules/OrthancModule.html":{}}}],["export.controller.ts",{"_index":2008,"title":{},"body":{"controllers/OrthancExportController.html":{},"coverage.html":{}}}],["export.controller.ts:24",{"_index":2029,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:34",{"_index":2019,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:44",{"_index":2022,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:54",{"_index":2026,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:64",{"_index":2038,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:74",{"_index":2032,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:84",{"_index":2035,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exportguard",{"_index":154,"title":{"guards/ExportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["exports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1251,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"dependencies.html":{}}}],["extanding",{"_index":1332,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["extended",{"_index":2043,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extended')@useguards(exportguard",{"_index":2025,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extends",{"_index":922,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/SeriesGuard.html":{},"classes/UpdateOptionDto.html":{},"interfaces/UserInfoResponse.html":{}}}],["extractjwt",{"_index":1399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":87,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["false",{"_index":110,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["false})@column({default",{"_index":1716,"title":{},"body":{"entities/Option.html":{}}}],["false})@isarray()@isobject({each",{"_index":2674,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["false})@isboolean",{"_index":952,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/TmtvJobDto.html":{}}}],["false})@isobject",{"_index":2261,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["false})@useguards(undefined)@get",{"_index":2209,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["family_name",{"_index":1370,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["file.getid",{"_index":3017,"title":{},"body":{"classes/TmtvService.html":{}}}],["filter((job",{"_index":121,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["filteredjob",{"_index":105,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["find",{"_index":2168,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(@request",{"_index":2187,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(request",{"_index":2174,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["findall",{"_index":814,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":2788,"title":{},"body":{"controllers/RolesController.html":{}}}],["findall(withlabels",{"_index":2762,"title":{},"body":{"controllers/RolesController.html":{}}}],["findallwithlabels",{"_index":2837,"title":{},"body":{"injectables/RolesService.html":{}}}],["findone",{"_index":2747,"title":{},"body":{"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('name",{"_index":2793,"title":{},"body":{"controllers/RolesController.html":{}}}],["findone(id",{"_index":3118,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(name",{"_index":2765,"title":{},"body":{"controllers/RolesController.html":{}}}],["findonebyauthorizationurl",{"_index":1680,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyauthorizationurl(authorizationurl",{"_index":1688,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyemail",{"_index":3108,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":3121,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyeventtype",{"_index":815,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyeventtype(eventtype",{"_index":832,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyname",{"_index":1681,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyname(name",{"_index":1690,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyorfail",{"_index":1451,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["findonebyorfail(labelname",{"_index":1459,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findonebyorfail(name",{"_index":2849,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneorfail",{"_index":816,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findoneorfail(id",{"_index":834,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["finds",{"_index":1123,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["finduser",{"_index":3141,"title":{},"body":{"injectables/UsersService.html":{}}}],["finishcallback",{"_index":1247,"title":{},"body":{"classes/HttpClient.html":{}}}],["first",{"_index":1124,"title":{},"body":{"guards/DicomWebGuard.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["firstname",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname'})@isnotempty",{"_index":2712,"title":{},"body":{"classes/RegisterDto.html":{}}}],["firstvaluefrom",{"_index":1363,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["flow",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["flush",{"_index":16,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["flushed",{"_index":2221,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushed'})@apiresponse({status",{"_index":2200,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushqueue",{"_index":2192,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["follow",{"_index":1532,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":2223,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiparam({name",{"_index":2204,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiquery({name",{"_index":2208,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@useguards(adminguard)@delete(':uuid",{"_index":2213,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["forbiddenexception",{"_index":2215,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["forbiddenexception(\"you",{"_index":2237,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbiddenexception('role",{"_index":2806,"title":{},"body":{"controllers/RolesController.html":{}}}],["forbiddenexception('user",{"_index":2543,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["force",{"_index":118,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["foreach((job",{"_index":122,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["forwarded",{"_index":1260,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedaddress",{"_index":1205,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedprotocol",{"_index":1206,"title":{},"body":{"classes/HttpClient.html":{}}}],["found",{"_index":1074,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibearerauth('access",{"_index":1645,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["found.interceptor",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["found.interceptor.ts",{"_index":1597,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["found.interceptor.ts:13",{"_index":1602,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["fragmented",{"_index":2960,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmask",{"_index":1585,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setmaskid(fragmentedmaskid",{"_index":1587,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setpetid(this.petid",{"_index":1588,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["fragmentedmask.setpetid(this.ptseriesid",{"_index":3007,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmaskid",{"_index":1583,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentmask",{"_index":1541,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["framework",{"_index":3418,"title":{},"body":{"index.html":{}}}],["from(canactivatereturns).pipe",{"_index":1829,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["from(guardval",{"_index":1838,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["function",{"_index":1817,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{}}}],["functions",{"_index":3383,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaelo",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["generaterandomuuid",{"_index":2283,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatetoken",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":3081,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:name",{"_index":2792,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/:rolename/labels",{"_index":2822,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/dicom",{"_index":1971,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/instances",{"_index":1970,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/jobs/:id",{"_index":1925,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/labels/:labelname/studies",{"_index":1962,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/modalities",{"_index":1972,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/patients",{"_index":2188,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["get('/peers",{"_index":2044,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["get('/peers/*/system",{"_index":1931,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/plugins",{"_index":1923,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/queries/*/answers",{"_index":2140,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["get('/series",{"_index":1969,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/studies",{"_index":1967,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/system",{"_index":1917,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/tools/log",{"_index":1921,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get(':uuid",{"_index":2228,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["get('oauth2",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["get('test/:id",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["getalluuids",{"_index":17,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getarchivedicomasbuffer([this.ctorthancseriesid",{"_index":2984,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivedicomasbuffer([this.ptorthancseriesid",{"_index":2977,"title":{},"body":{"classes/TmtvService.html":{}}}],["getautorouting",{"_index":759,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["getcreatedfiles",{"_index":2942,"title":{},"body":{"classes/TmtvService.html":{}}}],["getdicomweb",{"_index":1935,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getdicomweb(request",{"_index":1941,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getid",{"_index":2246,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getinstances",{"_index":1936,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getinstances(request",{"_index":1945,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs",{"_index":18,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobs(@request",{"_index":1926,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(request",{"_index":1886,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(userid",{"_index":2278,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getjobs(uuid",{"_index":44,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid",{"_index":19,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid(uuid",{"_index":51,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getloglevel",{"_index":1860,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getloglevel(request",{"_index":1891,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getmaskas",{"_index":1542,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskas(type",{"_index":1552,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskid",{"_index":1543,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmodalities",{"_index":1937,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getmodalities(request",{"_index":1948,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getoauthconfig",{"_index":1633,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["getoptiondto",{"_index":1151,"title":{"classes/GetOptionDto.html":{}},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"coverage.html":{}}}],["getoptiondto})@apiresponse({status",{"_index":1755,"title":{},"body":{"controllers/OptionsController.html":{}}}],["getoptions",{"_index":1207,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{}}}],["getparentstudy('instances",{"_index":1298,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["getparentstudy('series",{"_index":1113,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/SeriesGuard.html":{}}}],["getpatientid",{"_index":1034,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getpatients",{"_index":2169,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatients(request",{"_index":2177,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpeers",{"_index":2015,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeers(request",{"_index":2036,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeersystem",{"_index":1861,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getpeersystem(request",{"_index":1895,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins",{"_index":1862,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins(request",{"_index":1898,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getqueryanswers",{"_index":2114,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryanswers(request",{"_index":2119,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer",{"_index":2115,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer(id",{"_index":2122,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getresponseasbuffer",{"_index":1211,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasbuffer(url",{"_index":1229,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream",{"_index":1212,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream(url",{"_index":1231,"title":{},"body":{"classes/HttpClient.html":{}}}],["getroledto",{"_index":1168,"title":{"classes/GetRoleDto.html":{}},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["getrolelabels",{"_index":2748,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolelabels(@param('rolename",{"_index":2823,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolelabels(rolename",{"_index":2769,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["gets",{"_index":1887,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getseries",{"_index":1938,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries(request",{"_index":1951,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesinstanceuid",{"_index":1035,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getstatofmask",{"_index":1544,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getstudies",{"_index":1939,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudies(request",{"_index":1954,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel",{"_index":1940,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(@param('labelname",{"_index":1964,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(labelname",{"_index":1957,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudyinstanceuid",{"_index":1036,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getsystem",{"_index":1863,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getsystem(request",{"_index":1901,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getting",{"_index":3414,"title":{"index.html":{}},"body":{}}],["gettokenexpiration",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettype",{"_index":2247,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getuid",{"_index":1037,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuid($requesteduri",{"_index":1046,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuserdto",{"_index":1175,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserdto})@apiresponse({status",{"_index":3064,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfourl",{"_index":1340,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getuserinfourl(wellknown",{"_index":1347,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["getusers",{"_index":3051,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid",{"_index":3052,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(@param('id",{"_index":3082,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(id",{"_index":3063,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuuid",{"_index":2193,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuid(userid",{"_index":2207,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuidofuser",{"_index":20,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidofuser(userid",{"_index":53,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidsofuser",{"_index":2272,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getuuidsofuser(userid",{"_index":2280,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getwellknown",{"_index":1341,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getwellknown(iss",{"_index":1350,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["given_name",{"_index":1369,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["global",{"_index":1313,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{}}}],["granted",{"_index":1815,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["graph",{"_index":3471,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":3301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":3448,"title":{},"body":{"index.html":{}}}],["guard",{"_index":130,"title":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["guard.canactivate(context",{"_index":1836,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guarding",{"_index":1026,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["guardisobservable",{"_index":1848,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guardispromise",{"_index":1846,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards",{"_index":132,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["guards.map((guard",{"_index":1824,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards/check",{"_index":1961,"title":{},"body":{"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/dicom",{"_index":1960,"title":{},"body":{"controllers/OrthancController.html":{}}}],["guards/guards.module",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["guards/instance.guard",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{}}}],["guards/jwt",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/local.guard",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/or.guard",{"_index":212,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/roles.guard",{"_index":787,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/series.guard",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{}}}],["guards/study.guard",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{}}}],["guardsmodule",{"_index":236,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules.html":{},"overview.html":{}}}],["guardval",{"_index":1835,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleautoroutingupdated",{"_index":613,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handlebars",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1499,"title":{},"body":{"modules/MailModule.html":{}}}],["handleerror",{"_index":1841,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleevent",{"_index":614,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handleevent(payload",{"_index":632,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handler",{"_index":608,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["hash",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["hashadmin",{"_index":3146,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":3139,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":3072,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('passwordadmin",{"_index":3147,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword('passworduser",{"_index":3149,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(newpassword",{"_index":3140,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(token",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword(userdto.password",{"_index":3101,"title":{},"body":{"controllers/UsersController.html":{}}}],["hashuser",{"_index":3148,"title":{},"body":{"injectables/UsersService.html":{}}}],["haystack",{"_index":1057,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.indexof(needle",{"_index":1147,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.slice(pos",{"_index":1149,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.substr(0",{"_index":1148,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["headers",{"_index":1252,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["here",{"_index":3457,"title":{},"body":{"index.html":{}}}],["host",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["hours",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1531,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1361,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://kevin.vanzonneveld.net",{"_index":1136,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["http://localhost:8080/realms/master/protocol/openid",{"_index":1616,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["http://phpjs.org/functions/strstr",{"_index":1131,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["httpclient",{"_index":1203,"title":{"classes/HttpClient.html":{}},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["httpcode",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":3464,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1345,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["httpstatus",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":123,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["id'})@apiresponse({status",{"_index":769,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["id'})@exclude",{"_index":1748,"title":{},"body":{"entities/Option.html":{}}}],["id_mask",{"_index":2999,"title":{},"body":{"classes/TmtvService.html":{}}}],["idct",{"_index":2997,"title":{},"body":{"classes/TmtvService.html":{}}}],["identifier",{"_index":3163,"title":{},"body":{"coverage.html":{}}}],["idpt",{"_index":2998,"title":{},"body":{"classes/TmtvService.html":{}}}],["ignore",{"_index":1701,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1100,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["image_comments",{"_index":3371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_index",{"_index":3359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_orientation_patient",{"_index":3341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_position_patient",{"_index":3369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagecomments",{"_index":3372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageindex",{"_index":3360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageorientationpatient",{"_index":3342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagepositionpatient",{"_index":3370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["images_in_acquisition",{"_index":3333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagesinacquisition",{"_index":3334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":146,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}}}],["import",{"_index":57,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["import.controller",{"_index":2087,"title":{},"body":{"modules/OrthancModule.html":{}}}],["import.controller.ts",{"_index":2048,"title":{},"body":{"controllers/OrthancImportController.html":{},"coverage.html":{}}}],["import.controller.ts:17",{"_index":2056,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["import.controller.ts:27",{"_index":2053,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["importguard",{"_index":145,"title":{"guards/ImportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancImportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["imports",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["improved",{"_index":1140,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":3393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["inherited",{"_index":2428,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["inject",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1802,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["injectrepository",{"_index":840,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(autorouting",{"_index":841,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["injectrepository(label",{"_index":1464,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["injectrepository(oauthconfig",{"_index":1694,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["injectrepository(option",{"_index":1793,"title":{},"body":{"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["injectrepository(role",{"_index":2860,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectrepository(user",{"_index":3132,"title":{},"body":{"injectables/UsersService.html":{}}}],["inline",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":3428,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3430,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1049,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["instance.guard",{"_index":1195,"title":{},"body":{"modules/GuardsModule.html":{}}}],["instance_creation_date",{"_index":3353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_creation_time",{"_index":3355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_number",{"_index":3361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationdate",{"_index":3354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationtime",{"_index":3356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceguard",{"_index":209,"title":{"injectables/InstanceGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"coverage.html":{},"overview.html":{}}}],["instancenumber",{"_index":3362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceof",{"_index":1610,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["instances",{"_index":3373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institution_name",{"_index":3314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institutionname",{"_index":3315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":1598,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["intercept(context",{"_index":1599,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptors/not",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/public",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["interface",{"_index":1365,"title":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":1799,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"overview.html":{}}}],["is_public_key",{"_index":1322,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":1649,"title":{},"body":{"controllers/OauthConfigController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["isbetween",{"_index":2395,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["isboolean",{"_index":567,"title":{},"body":{"entities/Autorouting.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Destination.html":{},"classes/ProcessingJobDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/WithLabels.html":{}}}],["isemail",{"_index":1016,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":568,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(autoroutingeventtype",{"_index":605,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(condition",{"_index":592,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(destinationtype",{"_index":595,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(dicomtag",{"_index":586,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(processingjobtype",{"_index":2265,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(processingmask",{"_index":2264,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(queryanswertype",{"_index":2371,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["isenum(rulecondition",{"_index":598,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(valuerepresentation",{"_index":589,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isequal",{"_index":615,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isequal(value",{"_index":636,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isexistinguser",{"_index":3109,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexistinguser(id",{"_index":3123,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["isgreaterthan",{"_index":616,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isgreaterthan(value",{"_index":638,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin",{"_index":617,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin(value",{"_index":640,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isinstance",{"_index":1185,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isinstance(role",{"_index":1187,"title":{},"body":{"classes/GetUserDto.html":{}}}],["islabelexist",{"_index":1452,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islabelexist(labelname",{"_index":1461,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islessthan",{"_index":618,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["islessthan(value",{"_index":642,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ismatch",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":875,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/RegisterDto.html":{}}}],["isnotin",{"_index":619,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnotin(value",{"_index":644,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnumber",{"_index":876,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["isnumberorstring",{"_index":580,"title":{"classes/IsNumberOrString.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["isobject",{"_index":2263,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["isolate",{"_index":1048,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["isoptional",{"_index":3160,"title":{},"body":{"classes/WithLabels.html":{}}}],["isoptional()@apiproperty({example",{"_index":3156,"title":{},"body":{"classes/WithLabels.html":{}}}],["ispaused",{"_index":2686,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["ispublic",{"_index":1325,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isroleexist",{"_index":2838,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleexist(name",{"_index":2852,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleused",{"_index":3110,"title":{},"body":{"injectables/UsersService.html":{}}}],["isroleused(rolename",{"_index":3125,"title":{},"body":{"injectables/UsersService.html":{}}}],["iss",{"_index":1352,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["issecondarycapture",{"_index":3206,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["issecondarycapture(sopclassuid",{"_index":3396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issendable",{"_index":620,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["issendable(router",{"_index":646,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isstring",{"_index":569,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/LabelDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["issuer",{"_index":1387,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["istanbul",{"_index":1700,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["istimebetween",{"_index":2386,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istimebetween(starthour",{"_index":3399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["job",{"_index":59,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["job'})@apiresponse({status",{"_index":2212,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["job.data.jobid",{"_index":80,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.data.results",{"_index":127,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["job.data.state",{"_index":100,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.userid",{"_index":78,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.uuid",{"_index":76,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.dto",{"_index":2217,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.dto.ts",{"_index":2256,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":2933,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:16",{"_index":2935,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:20",{"_index":2936,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:26",{"_index":2259,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:30",{"_index":2262,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:8",{"_index":2932,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.id",{"_index":124,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.progress",{"_index":126,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobid",{"_index":721,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":73,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["jobs'})@useguards(anonymizeguard)@post",{"_index":2523,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["jobs'})@useguards(deleteguard)@post",{"_index":2602,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["jobs'})@useguards(queryguard)@post",{"_index":2641,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["jobs.filter((job",{"_index":106,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.find((job",{"_index":109,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["jobs.foreach((job",{"_index":75,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobs.map((job",{"_index":113,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.map(async",{"_index":103,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.push(job",{"_index":101,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobtype",{"_index":723,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["john",{"_index":1004,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["john'})@column({name",{"_index":3026,"title":{},"body":{"entities/User.html":{}}}],["john.doe@gaelo.fr",{"_index":3021,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john.doe@gmail.com",{"_index":1001,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/User.html":{}}}],["john.doe@gmail.com'})@column({unique",{"_index":3024,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":1495,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1513,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":3045,"title":{},"body":{"entities/User.html":{}}}],["jointable",{"_index":2741,"title":{},"body":{"entities/Role.html":{}}}],["json.stringify(document",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonb",{"_index":600,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["jsonb'})@validatenested()@type(undefined",{"_index":561,"title":{},"body":{"entities/Autorouting.html":{}}}],["jsonb'})@validatenested({each",{"_index":2877,"title":{},"body":{"classes/Router.html":{}}}],["jwt",{"_index":489,"title":{},"body":{"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.guard",{"_index":1196,"title":{},"body":{"modules/GuardsModule.html":{}}}],["jwt.strategy",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":485,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoauthguard",{"_index":390,"title":{"injectables/JwtOAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{},"injectables/JwtOAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["jwtoauthstrategy",{"_index":471,"title":{"injectables/JwtOauthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["jwtstrategy",{"_index":472,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3461,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kevin",{"_index":1133,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["key",{"_index":2799,"title":{},"body":{"controllers/RolesController.html":{}}}],["keycloak",{"_index":1626,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["keycloak'})@column",{"_index":1624,"title":{},"body":{"entities/OauthConfig.html":{}}}],["keycloak'})@primarycolumn({name",{"_index":1622,"title":{},"body":{"entities/OauthConfig.html":{}}}],["known/openid",{"_index":1374,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["label",{"_index":884,"title":{"entities/Label.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label'})@apiresponse({status",{"_index":1418,"title":{},"body":{"controllers/LabelsController.html":{}}}],["label.entity",{"_index":1448,"title":{},"body":{"modules/LabelsModule.html":{},"injectables/LabelsService.html":{}}}],["label.name",{"_index":901,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["label.name)@jointable({name",{"_index":2731,"title":{},"body":{"entities/Role.html":{}}}],["labeldto",{"_index":1412,"title":{"classes/LabelDto.html":{}},"body":{"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["labeldto.name",{"_index":2821,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelname",{"_index":895,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"injectables/RolesService.html":{}}}],["labels",{"_index":1171,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["labels.controller",{"_index":1447,"title":{},"body":{"modules/LabelsModule.html":{}}}],["labels.dto",{"_index":1428,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/RolesController.html":{}}}],["labels.dto.ts",{"_index":3155,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["labels.dto.ts:15",{"_index":3159,"title":{},"body":{"classes/WithLabels.html":{}}}],["labels.service",{"_index":1427,"title":{},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{}}}],["labels/label.entity",{"_index":1174,"title":{},"body":{"classes/GetRoleDto.html":{},"entities/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{}}}],["labels/labels.dto",{"_index":2782,"title":{},"body":{"controllers/RolesController.html":{}}}],["labels/labels.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["labels/labels.service",{"_index":2778,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["labelscontroller",{"_index":1415,"title":{"controllers/LabelsController.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"coverage.html":{}}}],["labelservice",{"_index":2786,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelsmodule",{"_index":237,"title":{"modules/LabelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LabelsModule.html":{},"modules.html":{},"overview.html":{}}}],["labelsofrole",{"_index":899,"title":{},"body":{"guards/CheckLabelInRole.html":{},"miscellaneous/variables.html":{}}}],["labelsofrole.filter((value",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofrole.includes(labelname",{"_index":902,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["labelsofstudy",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofstudy.includes(value",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsrepository",{"_index":1455,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labelsservice",{"_index":1426,"title":{"injectables/LabelsService.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":1808,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["lastchanges",{"_index":2095,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["lastname",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname'})@isnotempty",{"_index":2714,"title":{},"body":{"classes/RegisterDto.html":{}}}],["legend",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less_than",{"_index":3300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":865,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["level",{"_index":653,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{}}}],["level')@useguards(adminguard",{"_index":1893,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["level_series",{"_index":3379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_study",{"_index":3380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelmapping",{"_index":612,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype",{"_index":654,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["leveltype.instances",{"_index":659,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.patients",{"_index":665,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.series",{"_index":661,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.studies",{"_index":663,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["license",{"_index":3467,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3445,"title":{},"body":{"index.html":{}}}],["link",{"_index":1533,"title":{},"body":{"injectables/MailService.html":{}}}],["listlabels('studies",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1479,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.guard",{"_index":1197,"title":{},"body":{"modules/GuardsModule.html":{}}}],["local.strategy",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":388,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["localhost",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["localstrategy",{"_index":473,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":397,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@public()@httpcode(httpstatus.ok)@useguards(localauthguard)@post('login",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["looal",{"_index":1472,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["lostpassword",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(@body",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(body",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpasswordto",{"_index":362,"title":{"classes/LostPassworDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["lostpasswordto})@public()@post('lost",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":866,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mail/mail.module",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mail@example.com",{"_index":2716,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mail@example.com'})@isemail",{"_index":2710,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mailermodule",{"_index":1496,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1501,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1521,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":238,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":401,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":3191,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manufacturer",{"_index":3324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":2740,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":3046,"title":{},"body":{"entities/User.html":{}}}],["map((job",{"_index":2294,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["marsman",{"_index":1139,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["mask",{"_index":1581,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["mask.setmaskid(maskid",{"_index":3001,"title":{},"body":{"classes/TmtvService.html":{}}}],["mask.setpetid(this.ptseriesid",{"_index":3002,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskid",{"_index":1538,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["maskprocessingservice",{"_index":1535,"title":{"injectables/MaskProcessingService.html":{}},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["maskprocessingservice(this.processingclient",{"_index":3000,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskprocessingservice(this.processingservice",{"_index":1586,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["masks",{"_index":3004,"title":{},"body":{"classes/TmtvService.html":{}}}],["match",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":877,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*?[a",{"_index":1018,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":881,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["matching",{"_index":129,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":2024,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["media')@useguards(exportguard",{"_index":2021,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["mergemap",{"_index":1809,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mergemap((obs",{"_index":1830,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["message",{"_index":861,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1099,"title":{},"body":{"guards/DicomWebGuard.html":{},"dependencies.html":{}}}],["method",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":878,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(12",{"_index":880,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["miscellaneous",{"_index":3279,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3444,"title":{},"body":{"index.html":{}}}],["mixin",{"_index":1803,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mixin(ormixinguard",{"_index":1850,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modalities",{"_index":715,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["modalitiesinstudy",{"_index":2471,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["modality",{"_index":2354,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["modality'})@isstring",{"_index":2457,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["mode",{"_index":3435,"title":{},"body":{"index.html":{}}}],["modify",{"_index":166,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["modify.controller",{"_index":2088,"title":{},"body":{"modules/OrthancModule.html":{}}}],["modify.controller.ts",{"_index":2060,"title":{},"body":{"controllers/OrthancModifyController.html":{},"coverage.html":{}}}],["modify.controller.ts:17",{"_index":2066,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:27",{"_index":2072,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:37",{"_index":2069,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modifyguard",{"_index":167,"title":{"guards/ModifyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancModifyController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["modref",{"_index":1820,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["module",{"_index":222,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":1804,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modules",{"_index":224,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1498,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1500,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":678,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"dependencies.html":{}}}],["moment(value.tostring()).isafter(moment(rule.value.tostring",{"_index":695,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["moment(value.tostring()).issame(moment(rule.value.tostring",{"_index":692,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["monitoring.task",{"_index":2931,"title":{},"body":{"modules/TasksModule.html":{}}}],["monitoring.task.ts",{"_index":2094,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["monitoring.task.ts:17",{"_index":2099,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["monitoring.task.ts:9",{"_index":2097,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["more",{"_index":3456,"title":{},"body":{"index.html":{}}}],["mypassw0rd",{"_index":1489,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd'})@isnotempty",{"_index":1486,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd1234",{"_index":1017,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mypassw0rd1234!'})@isstring()@matches(/^(?=.*?[a",{"_index":1008,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":3462,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":559,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/LabelDto.html":{}}}],["name'})@primarycolumn({name",{"_index":1409,"title":{},"body":{"entities/Label.html":{}}}],["needle",{"_index":1054,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["nest",{"_index":3425,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestfactory.createapplicationcontext(appmodule",{"_index":3535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":3466,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1605,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nestjs",{"_index":1497,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":3233,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":58,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/OrGuardOptions.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":3239,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1321,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3243,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_accession_number",{"_index":2570,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_accession_number'})@isstring",{"_index":2557,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_instance",{"_index":3284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient",{"_index":3289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient_id",{"_index":2571,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_id'})@isstring",{"_index":2559,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_patient_name",{"_index":2572,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_name'})@isstring",{"_index":2561,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_series",{"_index":3285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study",{"_index":3287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study_description",{"_index":2573,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_study_description'})@isstring",{"_index":2563,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["newaccessionnumber",{"_index":2552,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newinstance",{"_index":1997,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"injectables/UsersService.html":{}}}],["newpatient",{"_index":3290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpatientid",{"_index":2553,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newpatientname",{"_index":2554,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newseries",{"_index":3286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudy",{"_index":3288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudydescription",{"_index":2555,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newuser",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.email",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.id",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":1600,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":1608,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nextfunction",{"_index":3405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nifti",{"_index":3378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3417,"title":{},"body":{"index.html":{}}}],["node:fs",{"_index":2973,"title":{},"body":{"classes/TmtvService.html":{}}}],["node:stream/web",{"_index":2971,"title":{},"body":{"classes/TmtvService.html":{}}}],["nodemailer",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1314,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["none",{"_index":971,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["none'})@column({default",{"_index":1740,"title":{},"body":{"entities/Option.html":{}}}],["none'})@isstring",{"_index":972,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["not_in",{"_index":3299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1604,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('label",{"_index":2819,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('oauth",{"_index":1660,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["notfoundexception('role",{"_index":2812,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('user",{"_index":3085,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(error.message",{"_index":1611,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["notfoundinterceptor",{"_index":271,"title":{"injectables/NotFoundInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["npm",{"_index":3429,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/LabelsService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{}}}],["nullable",{"_index":3040,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":38,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"injectables/MailService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number'})@useguards(autoroutingguard)@delete('/:id",{"_index":771,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/disable",{"_index":775,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/enable",{"_index":779,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number(rule.value",{"_index":689,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number(value",{"_index":694,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number.ts",{"_index":1300,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["number.ts:13",{"_index":1305,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number.ts:9",{"_index":1308,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number_of_frames",{"_index":3363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_slices",{"_index":3337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_temporal_positions",{"_index":3335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_time_slices",{"_index":3339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofframes",{"_index":3364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofseriesrelatedinstances",{"_index":2407,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["numberofslices",{"_index":3338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofstudyrelatedinstances",{"_index":2472,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberofstudyrelatedseries",{"_index":2473,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberoftemporalpositions",{"_index":3336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberoftimeslices",{"_index":3340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["oauth.guard",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{}}}],["oauth.guard.ts",{"_index":1331,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["oauth.strategy",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth.strategy.ts",{"_index":1338,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["oauth.strategy.ts:22",{"_index":1346,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:31",{"_index":1351,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:42",{"_index":1356,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:49",{"_index":1348,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:53",{"_index":1358,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:80",{"_index":1354,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth2",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["oauth2')@public()@useguards(jwtoauthguard)@httpcode(httpstatus.ok)@post('oauth2",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(@request",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(req",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2redirect",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["oauthconfig",{"_index":487,"title":{"entities/OauthConfig.html":{}},"body":{"modules/AuthModule.html":{},"entities/OauthConfig.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["oauthconfigcontroller",{"_index":1629,"title":{"controllers/OauthConfigController.html":{}},"body":{"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"coverage.html":{}}}],["oauthconfigdto",{"_index":1635,"title":{"classes/OauthConfigDto.html":{}},"body":{"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["oauthconfigdto.name",{"_index":1665,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigdto})@useguards(adminguard)@post",{"_index":1640,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigmodule",{"_index":239,"title":{"modules/OauthConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OauthConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["oauthconfigservice",{"_index":474,"title":{"injectables/OauthConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["oauthconfigsrepository",{"_index":1685,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["object",{"_index":32,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"interfaces/UserInfoResponse.html":{}}}],["object.fromentries(url.searchparams.entries",{"_index":1088,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object.keys(this.query).length",{"_index":1062,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object})@apiresponse({status",{"_index":2197,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["obs.pipe(this.handleerror",{"_index":1831,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["observable",{"_index":1603,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["observable).pipe",{"_index":1849,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["occurrence",{"_index":1125,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["of(false",{"_index":1845,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["of(guardval",{"_index":1840,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["omittype",{"_index":924,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["omittype(autorouting",{"_index":923,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["one",{"_index":863,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["onevent",{"_index":670,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('autorouting.updated",{"_index":630,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('orthanc",{"_index":634,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onno",{"_index":1138,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["open",{"_index":3446,"title":{},"body":{"index.html":{}}}],["openapi.json",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operatorfunction",{"_index":1806,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["operators_name",{"_index":3345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operatorsname",{"_index":3346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":1265,"title":{"entities/Option.html":{}},"body":{"classes/HttpClient.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["option.dto",{"_index":1167,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{}}}],["option.dto.ts",{"_index":927,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["option.dto.ts:11",{"_index":950,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:12",{"_index":1162,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:15",{"_index":948,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:16",{"_index":1163,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:19",{"_index":951,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:20",{"_index":1161,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:23",{"_index":978,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:24",{"_index":1164,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:27",{"_index":967,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:28",{"_index":1165,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:31",{"_index":958,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:35",{"_index":965,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:39",{"_index":961,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:43",{"_index":962,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:47",{"_index":957,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:51",{"_index":970,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:55",{"_index":975,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:59",{"_index":974,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:63",{"_index":956,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:67",{"_index":973,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:7",{"_index":946,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:71",{"_index":953,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:8",{"_index":1160,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.entity",{"_index":1783,"title":{},"body":{"modules/OptionsModule.html":{},"injectables/OptionsService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionrepository",{"_index":2380,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options",{"_index":1516,"title":{},"body":{"modules/MailModule.html":{},"controllers/OptionsController.html":{},"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstart",{"_index":2396,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstop",{"_index":2398,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestart",{"_index":2397,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestop",{"_index":2399,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.controller",{"_index":1782,"title":{},"body":{"modules/OptionsModule.html":{}}}],["options.service",{"_index":1764,"title":{},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{}}}],["options/option.entity",{"_index":2385,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{}}}],["options/options.module",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["options/options.service",{"_index":2896,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["optionscontroller",{"_index":1753,"title":{"controllers/OptionsController.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"coverage.html":{}}}],["optionservice",{"_index":1769,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/SeederService.html":{}}}],["optionsmodule",{"_index":240,"title":{"modules/OptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["optionsrepository",{"_index":1788,"title":{},"body":{"injectables/OptionsService.html":{}}}],["optionsservice",{"_index":1763,"title":{"injectables/OptionsService.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["orguard",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguard(guards",{"_index":3406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orguardoptions",{"_index":1798,"title":{"interfaces/OrGuardOptions.html":{}},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguardoptions?.throwonfirsterror",{"_index":1843,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orientation",{"_index":1553,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["originaet",{"_index":2301,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["original",{"_index":1132,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["ormixinguard",{"_index":1818,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orthanc",{"_index":1295,"title":{},"body":{"injectables/InstanceGuard.html":{},"modules/OrthancModule.html":{},"modules/TasksModule.html":{}}}],["orthanc.controller",{"_index":2084,"title":{},"body":{"modules/OrthancModule.html":{}}}],["orthanc/orthanc.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc_monitoring_rate",{"_index":1750,"title":{},"body":{"entities/Option.html":{}}}],["orthanc_study_id",{"_index":2569,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthanc_study_id'})@isstring",{"_index":2565,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["orthancaddress",{"_index":1154,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancadmincontroller",{"_index":1851,"title":{"controllers/OrthancAdminController.html":{}},"body":{"controllers/OrthancAdminController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanccalledapi",{"_index":3527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthancclient",{"_index":627,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["orthancclient.streamanswertores(orthanccalledapi",{"_index":3531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthanccontroller",{"_index":1933,"title":{"controllers/OrthancController.html":{}},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancdeletecontroller",{"_index":1974,"title":{"controllers/OrthancDeleteController.html":{}},"body":{"controllers/OrthancDeleteController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanceventpayloaddto",{"_index":633,"title":{"classes/OrthancEventPayloadDto.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["orthancexportcontroller",{"_index":2007,"title":{"controllers/OrthancExportController.html":{}},"body":{"controllers/OrthancExportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancid",{"_index":655,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["orthancimportcontroller",{"_index":2047,"title":{"controllers/OrthancImportController.html":{}},"body":{"controllers/OrthancImportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodifycontroller",{"_index":2059,"title":{"controllers/OrthancModifyController.html":{}},"body":{"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodule",{"_index":241,"title":{"modules/OrthancModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules.html":{},"overview.html":{}}}],["orthancmonitoringcron",{"_index":2096,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["orthancmonitoringrate",{"_index":944,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["orthancmonitoringtask",{"_index":2092,"title":{"injectables/OrthancMonitoringTask.html":{}},"body":{"injectables/OrthancMonitoringTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["orthancpassword",{"_index":1155,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancport",{"_index":1156,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancquerycontroller",{"_index":2081,"title":{"controllers/OrthancQueryController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["orthancreadallcontroller",{"_index":2082,"title":{"controllers/OrthancReadAllController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["orthancseriesid",{"_index":1110,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesDeleteController.html":{},"classes/TmtvService.html":{}}}],["orthancseriesids",{"_index":2619,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{}}}],["orthancseriesids.foreach((orthancseriesid",{"_index":2621,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["orthancstudyid",{"_index":1093,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthancusername",{"_index":1157,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["other_patient_ids",{"_index":3305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otherpatientids",{"_index":3306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":3473,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":3230,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":784,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserRoleGuard.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":2143,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/UsersController.html":{}}}],["param('label",{"_index":2826,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('name",{"_index":2810,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('rolename",{"_index":2816,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('uuid",{"_index":2229,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1087,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["params.guard",{"_index":1193,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/UsersController.html":{}}}],["params.guard.ts",{"_index":904,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"coverage.html":{}}}],["params.guard.ts:6",{"_index":907,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["params.guard.ts:9",{"_index":908,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["parent",{"_index":1296,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudies",{"_index":1118,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies.length",{"_index":1120,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies[0].id",{"_index":1121,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudy",{"_index":1112,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy.id",{"_index":1116,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy?.id",{"_index":1115,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parsed",{"_index":2134,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["parsing",{"_index":1027,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["partialtype",{"_index":1166,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createoptiondto",{"_index":1153,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createroledto",{"_index":1170,"title":{},"body":{"classes/GetRoleDto.html":{}}}],["pass",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1360,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1359,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["passportstrategy(strategy",{"_index":1339,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["password",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpClient.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@exclude",{"_index":3032,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":853,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["password.dto.ts:19",{"_index":870,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:24",{"_index":855,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:29",{"_index":872,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:34",{"_index":874,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1492,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["password1234!change",{"_index":879,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty",{"_index":854,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty()@minlength(12)@matches(/^(?=.*[a",{"_index":856,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password?token=${token}&userid=${userid",{"_index":1527,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":1481,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1762,"title":{},"body":{"controllers/OptionsController.html":{}}}],["path",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["pathname",{"_index":1033,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient",{"_index":1073,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient_birthdate",{"_index":2365,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_birthdate'})@isstring",{"_index":2495,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_id",{"_index":2364,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_id'})@isstring",{"_index":2491,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_name",{"_index":2363,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_name'})@isstring",{"_index":2493,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_sex",{"_index":3303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientbirthdate",{"_index":3302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientid",{"_index":2302,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patientname",{"_index":2303,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patients",{"_index":1065,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/enumerations.html":{}}}],["patientsex",{"_index":3304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pause",{"_index":2687,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["paused",{"_index":94,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["payload",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/JwtStrategy.html":{}}}],["payload.changetype",{"_index":746,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto",{"_index":673,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto.ts",{"_index":1993,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:12",{"_index":2001,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:16",{"_index":2002,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:20",{"_index":2003,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":2004,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:28",{"_index":2006,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":1999,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.email",{"_index":1406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":739,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.role",{"_index":1407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peer",{"_index":736,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["performed_procedure_step_description",{"_index":3347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performedprocedurestepdescription",{"_index":3348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["petid",{"_index":1539,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["petseriesorthancid",{"_index":1540,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["pg",{"_index":3266,"title":{},"body":{"dependencies.html":{}}}],["pixilib",{"_index":3481,"title":{},"body":{"properties.html":{}}}],["please",{"_index":3455,"title":{},"body":{"index.html":{}}}],["port",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["pos",{"_index":1146,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["post",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post('/:id/disable",{"_index":804,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:id/enable",{"_index":801,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:rolename/label",{"_index":2815,"title":{},"body":{"controllers/RolesController.html":{}}}],["post('/instances",{"_index":2057,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["post('/jobs",{"_index":1924,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/echo",{"_index":1928,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/modify",{"_index":2073,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/modalities/*/query",{"_index":2138,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/modalities/*/store",{"_index":2039,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/modalities/:id/parsed",{"_index":2142,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/peers/*/store",{"_index":2045,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/queries/:id/answers/:index/retrieve",{"_index":2141,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/queries/:id/answers/:index/retrieve')@useguards(undefined",{"_index":2129,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/series/*/modify",{"_index":2076,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/studies/*/modify",{"_index":2075,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/tasks/:user/export",{"_index":2046,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/tools/create",{"_index":2041,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["post('/tools/find",{"_index":2186,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["post('/tools/reset",{"_index":1919,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/tools/shutdown",{"_index":1920,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('change",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('lost",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('oauth2",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["preferred_username",{"_index":1368,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["prefix",{"_index":752,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":2798,"title":{},"body":{"controllers/RolesController.html":{}}}],["primarycolumn",{"_index":1411,"title":{},"body":{"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":564,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["prioritized",{"_index":93,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["private",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LabelsService.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["processevent",{"_index":621,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processevent(autorouting",{"_index":648,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processing",{"_index":2191,"title":{},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{}}}],["processing.controller",{"_index":2269,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["processing.file",{"_index":2968,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service",{"_index":2969,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service.ts",{"_index":1537,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:13",{"_index":1558,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1555,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1560,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1554,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:58",{"_index":1556,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:65",{"_index":1551,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:7",{"_index":1562,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:77",{"_index":1561,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:8",{"_index":1563,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:9",{"_index":1549,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing/processing",{"_index":679,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{}}}],["processing/processing.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["processingclient",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["processingcontroller",{"_index":2189,"title":{"controllers/ProcessingController.html":{}},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"coverage.html":{}}}],["processingfile",{"_index":2244,"title":{"classes/ProcessingFile.html":{}},"body":{"classes/ProcessingFile.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["processingfile(ctresponse",{"_index":2986,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(fragmentedmaskid",{"_index":3006,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(maskid",{"_index":3003,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(ptresponse",{"_index":2982,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ctseriesid",{"_index":2991,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ptseriesid",{"_index":2995,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingjobdto",{"_index":2195,"title":{"classes/ProcessingJobDto.html":{}},"body":{"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["processingjobtype",{"_index":681,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"miscellaneous/enumerations.html":{}}}],["processingjobtype.tmtv",{"_index":724,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processingjobtype})@isenum(processingjobtype",{"_index":2258,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["processingmask",{"_index":682,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["processingmask.nifti",{"_index":1568,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processingmask.rtss",{"_index":729,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmask.seg",{"_index":730,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmodule",{"_index":242,"title":{"modules/ProcessingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProcessingModule.html":{},"modules.html":{},"overview.html":{}}}],["processingqueue",{"_index":2271,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["processingqueueservice",{"_index":626,"title":{"injectables/ProcessingQueueService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["processingservice",{"_index":1550,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processseries",{"_index":3211,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processseries(orthancclient",{"_index":3408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processstudy",{"_index":3212,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processstudy(orthancclient",{"_index":3409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":3437,"title":{},"body":{"index.html":{}}}],["profile",{"_index":2556,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["profile'})@isstring",{"_index":2567,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["progress",{"_index":125,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["progressive",{"_index":3416,"title":{},"body":{"index.html":{}}}],["project",{"_index":3447,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise).then",{"_index":1847,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["promise.all",{"_index":102,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"classes/WithLabels.html":{},"properties.html":{}}}],["protected",{"_index":9,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/StudyGuard.html":{}}}],["protocol",{"_index":1238,"title":{},"body":{"classes/HttpClient.html":{}}}],["protocol_name",{"_index":2355,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["protocol_name'})@isstring",{"_index":2459,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["protocolname",{"_index":2356,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["provide",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["provider",{"_index":1615,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["providers",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pt",{"_index":720,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ptorthancseriesid",{"_index":726,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ptresponse",{"_index":2979,"title":{},"body":{"classes/TmtvService.html":{}}}],["ptseriesid",{"_index":719,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["public",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingFile.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('oauth2",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["purposes",{"_index":1821,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["put",{"_index":1913,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["put('/:id",{"_index":3084,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:name",{"_index":2809,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('/modalities",{"_index":1929,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/peers",{"_index":1932,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/studies/*/labels",{"_index":2183,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["put('/tools/log",{"_index":1922,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["qido",{"_index":1098,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["query",{"_index":156,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"modules/TasksModule.html":{}}}],["query')@useguards(undefined",{"_index":2126,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query('userid",{"_index":2224,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.answer",{"_index":2449,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["query.controller",{"_index":2089,"title":{},"body":{"modules/OrthancModule.html":{},"modules/QueueModule.html":{}}}],["query.controller.ts",{"_index":2112,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["query.controller.ts:106",{"_index":2642,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:146",{"_index":2648,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:33",{"_index":2118,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:42",{"_index":2643,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:43",{"_index":2121,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:52",{"_index":2130,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:53",{"_index":2645,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:62",{"_index":2127,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:80",{"_index":2644,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto",{"_index":2651,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto.ts",{"_index":2673,"title":{},"body":{"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["query.dto.ts:104",{"_index":2675,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.dto.ts:11",{"_index":2703,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:15",{"_index":2705,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:19",{"_index":2702,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:23",{"_index":2706,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:27",{"_index":2700,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:31",{"_index":2707,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:35",{"_index":2701,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:41",{"_index":2684,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:45",{"_index":2679,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:49",{"_index":2680,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:53",{"_index":2681,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:57",{"_index":2683,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:61",{"_index":2682,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:65",{"_index":2678,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:7",{"_index":2704,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:86",{"_index":2676,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.guard",{"_index":2218,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["query.guard.ts",{"_index":912,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{},"coverage.html":{}}}],["query.guard.ts:6",{"_index":913,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.guard.ts:9",{"_index":914,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.service",{"_index":2384,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"modules/TasksModule.html":{}}}],["query.service.ts",{"_index":2685,"title":{},"body":{"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["query.service.ts:20",{"_index":2691,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:24",{"_index":2692,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:28",{"_index":2690,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:8",{"_index":2689,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query/queue",{"_index":2513,"title":{},"body":{"modules/QueueModule.html":{}}}],["queryanswer",{"_index":2295,"title":{"classes/QueryAnswer.html":{}},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["queryanswer:10",{"_index":2448,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:11",{"_index":2447,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:12",{"_index":2436,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:14",{"_index":2432,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:4",{"_index":2430,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:40",{"_index":2438,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:44",{"_index":2439,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:48",{"_index":2440,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:5",{"_index":2431,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:52",{"_index":2441,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:56",{"_index":2443,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:6",{"_index":2433,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:60",{"_index":2442,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:64",{"_index":2437,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:68",{"_index":2446,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:7",{"_index":2435,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:72",{"_index":2445,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:76",{"_index":2444,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:8",{"_index":2434,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:9",{"_index":2429,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype",{"_index":2136,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["queryanswertype.level_series",{"_index":2145,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["queryanswertype.level_study",{"_index":2155,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype})@isenum(queryanswertype",{"_index":2349,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["queryguard",{"_index":157,"title":{"guards/QueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["queryparsedanswer",{"_index":2123,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.level",{"_index":2144,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.query",{"_index":2147,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswerdto",{"_index":2124,"title":{"classes/QueryParsedAnswerDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queryqueue",{"_index":2693,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueue.pause",{"_index":2695,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueuecron",{"_index":2375,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queryqueuetask",{"_index":2372,"title":{"injectables/QueryQueueTask.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queryseriesanswer",{"_index":2404,"title":{"classes/QuerySeriesAnswer.html":{}},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["queryseriesdto",{"_index":2131,"title":{"classes/QuerySeriesDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["querystudyanswer",{"_index":2469,"title":{"classes/QueryStudyAnswer.html":{}},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["querystudydto",{"_index":2132,"title":{"classes/QueryStudyDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queue",{"_index":10,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["queue('anon",{"_index":2587,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["queue('delete",{"_index":2633,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["queue('processing",{"_index":2285,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue('query",{"_index":2694,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queue.service",{"_index":680,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["queue.service.ts",{"_index":2270,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"coverage.html":{}}}],["queue.service.ts:10",{"_index":2273,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:22",{"_index":2276,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:26",{"_index":2282,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:30",{"_index":2275,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:47",{"_index":2279,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:88",{"_index":2277,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:95",{"_index":2281,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.task",{"_index":2930,"title":{},"body":{"modules/TasksModule.html":{}}}],["queue.task.ts",{"_index":2374,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["queue.task.ts:12",{"_index":2379,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queue.task.ts:20",{"_index":2382,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queuemodule",{"_index":243,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queuequeryservice",{"_index":2377,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queues/anon",{"_index":2518,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queues/delete",{"_index":2597,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queues/query",{"_index":2636,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queues/query/queue",{"_index":2383,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{}}}],["queues/queue.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["queuesanoncontroller",{"_index":2506,"title":{"controllers/QueuesAnonController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["queuesanondto",{"_index":2550,"title":{"classes/QueuesAnonDto.html":{}},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto",{"_index":2522,"title":{"classes/QueuesAnonsDto.html":{}},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto.anonymizes",{"_index":2545,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queuesanonservice",{"_index":2503,"title":{"injectables/QueuesAnonService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesdeletecontroller",{"_index":2507,"title":{"controllers/QueuesDeleteController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["queuesdeletedto",{"_index":2601,"title":{"classes/QueuesDeleteDto.html":{}},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["queuesdeletedto.orthancseriesids",{"_index":2620,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queuesdeleteservice",{"_index":2504,"title":{"injectables/QueuesDeleteService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerycontroller",{"_index":2508,"title":{"controllers/QueuesQueryController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["queuesquerydto",{"_index":2640,"title":{"classes/QueuesQueryDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesquerydto.series",{"_index":2664,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerydto.studies",{"_index":2662,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries",{"_index":2663,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.foreach((series",{"_index":2670,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.length",{"_index":2665,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseriesdto",{"_index":2650,"title":{"classes/QueuesQuerySeriesDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesqueryservice",{"_index":2378,"title":{"injectables/QueuesQueryService.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerystudy",{"_index":2661,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.foreach((study",{"_index":2668,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.length",{"_index":2666,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudydto",{"_index":2649,"title":{"classes/QueuesQueryStudyDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuestate",{"_index":2400,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["randomuuid",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":2090,"title":{},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"index.html":{}}}],["read_all",{"_index":2738,"title":{},"body":{"entities/Role.html":{}}}],["readablestream",{"_index":2970,"title":{},"body":{"classes/TmtvService.html":{}}}],["readall",{"_index":175,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["readallguard",{"_index":176,"title":{"guards/ReadAllGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["readonly",{"_index":1061,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":1060,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["redirect",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/docs/oauth2",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html')@redirect('/docs/oauth2",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["redis_address",{"_index":2589,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redis_port",{"_index":2591,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redisaddress",{"_index":1158,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["redisport",{"_index":1159,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["referring_physician_name",{"_index":3318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referringphysicianname",{"_index":3319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":3269,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1317,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":373,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.firstname",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.lastname",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto})@public()@post('register",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["related",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{}}}],["relations",{"_index":2863,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":817,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('labelname",{"_index":1436,"title":{},"body":{"controllers/LabelsController.html":{}}}],["remove(id",{"_index":836,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["remove(labelname",{"_index":1423,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{}}}],["remove(name",{"_index":2854,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeanonjob",{"_index":2520,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(@param('uuid",{"_index":2548,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(uuid",{"_index":2529,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removechildren",{"_index":83,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removedeletejob",{"_index":2599,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(@param('uuid",{"_index":2623,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(uuid",{"_index":2607,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removejob",{"_index":21,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(@param('uuid",{"_index":2242,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["removejob(data",{"_index":55,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(uuid",{"_index":2211,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["removelabelfromrole",{"_index":2749,"title":{},"body":{"controllers/RolesController.html":{}}}],["removelabelfromrole(rolename",{"_index":2772,"title":{},"body":{"controllers/RolesController.html":{}}}],["removeoncomplete",{"_index":67,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removeonfail",{"_index":70,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removequeryjob",{"_index":2638,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(@param('uuid",{"_index":2671,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(uuid",{"_index":2646,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removerolelabel",{"_index":2839,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerolelabel(rolename",{"_index":2856,"title":{},"body":{"injectables/RolesService.html":{}}}],["repeat",{"_index":95,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["replace",{"_index":3382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["replacevalue",{"_index":2915,"title":{},"body":{"classes/TagAnon.html":{}}}],["reply",{"_index":1510,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":820,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["req['user",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":147,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibody({type",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":3055,"title":{},"body":{"controllers/UsersController.html":{}}}],["request(config",{"_index":1286,"title":{},"body":{"classes/HttpClient.html":{}}}],["request(option",{"_index":1272,"title":{},"body":{"classes/HttpClient.html":{}}}],["request.body",{"_index":3530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers.accept",{"_index":3533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.method",{"_index":3529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.params.id",{"_index":909,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.params.labelname",{"_index":896,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["request.params.rolename",{"_index":919,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["request.query.userid",{"_index":915,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["request.url",{"_index":1086,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":149,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["request.user.role.name",{"_index":898,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.user.userid",{"_index":910,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["request['user",{"_index":2225,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["requestbuffer",{"_index":1208,"title":{},"body":{"classes/HttpClient.html":{}}}],["requested",{"_index":887,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["requested_procedure_description",{"_index":3313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestedproceduredescription",{"_index":2304,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["requesteduri",{"_index":1051,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["requesting_physician",{"_index":3316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestingphysician",{"_index":3317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmethod",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["requeststream",{"_index":1209,"title":{},"body":{"classes/HttpClient.html":{}}}],["requesttype",{"_index":1868,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["required",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"controllers/OauthConfigController.html":{},"entities/Option.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["res",{"_index":1271,"title":{},"body":{"classes/HttpClient.html":{},"miscellaneous/functions.html":{}}}],["res.setheader('content",{"_index":1274,"title":{},"body":{"classes/HttpClient.html":{}}}],["res.status(500).send('bad",{"_index":1282,"title":{},"body":{"classes/HttpClient.html":{}}}],["reset",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetorthanc",{"_index":1864,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resetorthanc(request",{"_index":1904,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resource",{"_index":2239,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["resourcetype",{"_index":1995,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["response",{"_index":1250,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.data",{"_index":1289,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.email",{"_index":1390,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.family_name",{"_index":1392,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.given_name",{"_index":1391,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.pipe(res",{"_index":1276,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.pipe(streamwriter).on('finish",{"_index":1287,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.headers['content",{"_index":1275,"title":{},"body":{"classes/HttpClient.html":{}}}],["responsetype",{"_index":1254,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["ressource",{"_index":1031,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["result",{"_index":107,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/TmtvService.html":{}}}],["results",{"_index":120,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":2236,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["results[id",{"_index":128,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["resume",{"_index":2688,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["retrieve",{"_index":1101,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancQueryController.html":{}}}],["retrieve(request",{"_index":2128,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["return",{"_index":104,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1648,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":527,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":2751,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.dto",{"_index":1173,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{}}}],["role.dto.ts",{"_index":984,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":992,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":986,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":991,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:23",{"_index":996,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":987,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:31",{"_index":990,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:35",{"_index":985,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:39",{"_index":993,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:43",{"_index":989,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:47",{"_index":988,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:51",{"_index":997,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":995,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{}}}],["role.entity",{"_index":2780,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["role.guard",{"_index":1192,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"controllers/RolesController.html":{}}}],["role.guard.ts",{"_index":885,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:10",{"_index":893,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:6",{"_index":917,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.guard.ts:7",{"_index":892,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:9",{"_index":918,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.labels",{"_index":2873,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.filter((label",{"_index":2874,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.find((label",{"_index":2871,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.push(label",{"_index":2872,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.name",{"_index":3047,"title":{},"body":{"entities/User.html":{}}}],["role.name)@joincolumn({name",{"_index":3035,"title":{},"body":{"entities/User.html":{}}}],["role_label",{"_index":2732,"title":{},"body":{"entities/Role.html":{}}}],["role_name",{"_index":3036,"title":{},"body":{"entities/User.html":{}}}],["rolecount",{"_index":3133,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolecount[1",{"_index":3135,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolename",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":2744,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles.controller",{"_index":2833,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.guard",{"_index":1198,"title":{},"body":{"modules/GuardsModule.html":{}}}],["roles.service",{"_index":2779,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/role.entity",{"_index":1186,"title":{},"body":{"classes/GetUserDto.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{}}}],["roles/roles.service",{"_index":894,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["rolescontroller",{"_index":2742,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":2785,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":244,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/OrthancModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesrepository",{"_index":2842,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":891,"title":{"injectables/RolesService.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rolesservice.getrolelabels(role)).map",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role})@apiresponse({status",{"_index":2766,"title":{},"body":{"controllers/RolesController.html":{}}}],["router",{"_index":548,"title":{"classes/Router.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["routes",{"_index":754,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["rtss",{"_index":3376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rtssbuffer",{"_index":1572,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rtssdata",{"_index":3009,"title":{},"body":{"classes/TmtvService.html":{}}}],["rtssid",{"_index":1570,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rule",{"_index":582,"title":{"classes/Rule.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.value.tostring",{"_index":690,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.value.tostring().includes(value.tostring",{"_index":693,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.valuerepresentation",{"_index":687,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule_condition",{"_index":597,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rule_condition'})@isenum(rulecondition",{"_index":2880,"title":{},"body":{"classes/Router.html":{}}}],["rulecondition",{"_index":576,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["rulecondition.and",{"_index":596,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rules",{"_index":599,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["ruletoboolean",{"_index":622,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ruletoboolean(rule",{"_index":650,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["run",{"_index":3432,"title":{},"body":{"index.html":{}}}],["runinference",{"_index":2943,"title":{},"body":{"classes/TmtvService.html":{}}}],["runinference(fragmented",{"_index":2958,"title":{},"body":{"classes/TmtvService.html":{}}}],["rxjs",{"_index":1364,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1811,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["salttest",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":905,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["sas",{"_index":3482,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":3421,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2814,"title":{},"body":{"controllers/RolesController.html":{}}}],["scheme",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":494,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1504,"title":{},"body":{"modules/MailModule.html":{}}}],["seed",{"_index":1682,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}}}],["seeder",{"_index":3216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":2895,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["seedermodule",{"_index":245,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":2893,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedservice",{"_index":3536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedservice.seed",{"_index":3538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":3377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["segbuffer",{"_index":1577,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["segdata",{"_index":3012,"title":{},"body":{"classes/TmtvService.html":{}}}],["segid",{"_index":1575,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["send",{"_index":697,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["send(error.response.statusmessage",{"_index":1285,"title":{},"body":{"classes/HttpClient.html":{}}}],["sendchangepasswordemail",{"_index":1519,"title":{},"body":{"injectables/MailService.html":{}}}],["sendchangepasswordemail(email",{"_index":1523,"title":{},"body":{"injectables/MailService.html":{}}}],["senddicomtoprocessing",{"_index":2944,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskasrtsstoorthanc",{"_index":2945,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskassegtoorthanc",{"_index":2946,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmasktoorthancas",{"_index":728,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["sendtodestination",{"_index":623,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtodestination(destination",{"_index":652,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtopeer(destination.name",{"_index":734,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sent",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["sent'})@apiresponse({status",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["seq",{"_index":1996,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["sequence_name",{"_index":3329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sequencename",{"_index":3330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series",{"_index":704,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["series.answer.ts",{"_index":2406,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["series.answer.ts:10",{"_index":2416,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:49",{"_index":2426,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:5",{"_index":2427,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:53",{"_index":2424,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:57",{"_index":2421,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:6",{"_index":2419,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:61",{"_index":2423,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:65",{"_index":2425,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:69",{"_index":2422,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:7",{"_index":2417,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:8",{"_index":2418,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:9",{"_index":2420,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.guard",{"_index":1199,"title":{},"body":{"modules/GuardsModule.html":{}}}],["series.length",{"_index":1108,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series.maindicomtags.modality",{"_index":709,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["series[0].id",{"_index":1111,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series_date",{"_index":3320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_description",{"_index":2357,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_description'})@isstring",{"_index":2461,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_id_1",{"_index":2628,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_id_2",{"_index":2629,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_instance_uid",{"_index":2361,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_instance_uid'})@isstring",{"_index":2463,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_number",{"_index":2359,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_number'})@isstring",{"_index":2465,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_time",{"_index":3322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_type",{"_index":3343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdate",{"_index":3321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdescription",{"_index":2358,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesdetails",{"_index":705,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancQueryController.html":{}}}],["seriesdetails.find",{"_index":717,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdetails.map",{"_index":708,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdto",{"_index":2146,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.modality",{"_index":2150,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.protocolname",{"_index":2151,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesdescription",{"_index":2152,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesinstanceuid",{"_index":2154,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesnumber",{"_index":2153,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.studyuid",{"_index":2149,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesguard",{"_index":207,"title":{"injectables/SeriesGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"injectables/SeriesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["seriesinstanceuid",{"_index":2362,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesnumber",{"_index":2360,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriestime",{"_index":3323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriestype",{"_index":3344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesuid",{"_index":2415,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["server",{"_index":3422,"title":{},"body":{"index.html":{}}}],["service",{"_index":609,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["set",{"_index":1534,"title":{},"body":{"injectables/MailService.html":{}}}],["set(uuids",{"_index":115,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["setaccessionnumber",{"_index":2305,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswerid",{"_index":2306,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswernumber",{"_index":2307,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setctorthancseriesid",{"_index":2947,"title":{},"body":{"classes/TmtvService.html":{}}}],["setctorthancseriesid(orthancseriesid",{"_index":2964,"title":{},"body":{"classes/TmtvService.html":{}}}],["setdescription('the",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setforwardedadress",{"_index":1213,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedadress(address",{"_index":1233,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol",{"_index":1214,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol(protocol",{"_index":1236,"title":{},"body":{"classes/HttpClient.html":{}}}],["setlevel",{"_index":1038,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setmaskid",{"_index":1545,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmaskid(maskid",{"_index":1557,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmetadata(is_public_key",{"_index":3534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmodalitiesinstudy",{"_index":2474,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setmodality",{"_index":2408,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofseriesrelatedinstances",{"_index":2409,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofstudyrelatedinstances",{"_index":2475,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setnumberofstudyrelatedseries",{"_index":2476,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setoriginaet",{"_index":2308,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpassword",{"_index":1215,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpassword(password",{"_index":1239,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpatientid",{"_index":2309,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpatientname",{"_index":2310,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpetid",{"_index":1546,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setpetid(petid",{"_index":1559,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setptorthancseriesid",{"_index":2948,"title":{},"body":{"classes/TmtvService.html":{}}}],["setptorthancseriesid(orthancseriesid",{"_index":2966,"title":{},"body":{"classes/TmtvService.html":{}}}],["setrequestedproceduredescription",{"_index":2311,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setseriesdescription",{"_index":2410,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesinstanceuid",{"_index":2411,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesnumber",{"_index":2412,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setstudydate",{"_index":2312,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudydescription",{"_index":2313,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudyinstanceuid",{"_index":2413,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["settitle('gaelo",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupanonworker",{"_index":3207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupanonworker(orthancclient",{"_index":3398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupdeleteworker",{"_index":3209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupdeleteworker(orthancclient",{"_index":3411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupprocessingworker",{"_index":3203,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupprocessingworker(orthancclient",{"_index":3412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupqueryworker",{"_index":3213,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupqueryworker(orthancclient",{"_index":3410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupworkers",{"_index":3192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupworkers(app",{"_index":3395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seturl",{"_index":1216,"title":{},"body":{"classes/HttpClient.html":{}}}],["seturl(url",{"_index":1241,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername",{"_index":1217,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername(username",{"_index":1243,"title":{},"body":{"classes/HttpClient.html":{}}}],["setversion('2.0",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdownorthanc",{"_index":1865,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["shutdownorthanc(request",{"_index":1907,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["side",{"_index":3423,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{}}}],["sop_instance_uid",{"_index":3367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sopclassuid",{"_index":3397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sopinstanceuid",{"_index":3368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["special",{"_index":868,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["specific",{"_index":1097,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["sponsors",{"_index":3450,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":3272,"title":{},"body":{"dependencies.html":{}}}],["sqlite3",{"_index":3274,"title":{},"body":{"dependencies.html":{}}}],["src/.../anon.worker.ts",{"_index":3385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../autorouting.enum.ts",{"_index":3281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../build_docs.ts",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../check",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete.worker.ts",{"_index":3390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":3282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":3386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":3387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../or.guard.ts",{"_index":3388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwords.ts",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../processing.worker.ts",{"_index":3391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.worker.ts",{"_index":3389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:25",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:89",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:86",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/change",{"_index":852,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1483,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1487,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1485,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/lost",{"_index":1490,"title":{},"body":{"classes/LostPassworDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":2709,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":2713,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":2715,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":2711,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":1337,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1394,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":1398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":1396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1474,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:16",{"_index":1478,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":1476,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/autorouting/autorouting.entity.ts",{"_index":545,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.entity.ts:104",{"_index":556,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:109",{"_index":551,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:115",{"_index":562,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:25",{"_index":2886,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:30",{"_index":2890,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:35",{"_index":2888,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:40",{"_index":2884,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:47",{"_index":1021,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:52",{"_index":1022,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:59",{"_index":2881,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:74",{"_index":2882,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:87",{"_index":2879,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:94",{"_index":558,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:99",{"_index":560,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.enum.ts",{"_index":3283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/autorouting/autorouting.handler.ts",{"_index":607,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.handler.ts:118",{"_index":647,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:133",{"_index":656,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:196",{"_index":649,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:212",{"_index":635,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:24",{"_index":658,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:26",{"_index":669,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:34",{"_index":628,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:45",{"_index":631,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:49",{"_index":637,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:60",{"_index":641,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:67",{"_index":645,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:74",{"_index":639,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:83",{"_index":643,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:92",{"_index":651,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autoroutings.controller.ts",{"_index":751,"title":{},"body":{"controllers/AutoroutingsController.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.controller.ts:35",{"_index":767,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:50",{"_index":783,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:63",{"_index":772,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:77",{"_index":780,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:90",{"_index":776,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.module.ts",{"_index":809,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["src/autorouting/autoroutings.service.ts",{"_index":813,"title":{},"body":{"injectables/AutoroutingsService.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.service.ts:13",{"_index":823,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:20",{"_index":831,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:24",{"_index":833,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:32",{"_index":835,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:38",{"_index":826,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:43",{"_index":839,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:48",{"_index":837,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:53",{"_index":830,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:59",{"_index":828,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/dto/create",{"_index":920,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["src/autorouting/dto/orthanc",{"_index":1992,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["src/build_docs.ts",{"_index":3178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":3181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":3374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/guards/check",{"_index":883,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["src/guards/dicom",{"_index":1024,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["src/guards/guards.module.ts",{"_index":1191,"title":{},"body":{"modules/GuardsModule.html":{}}}],["src/guards/instance.guard.ts",{"_index":1294,"title":{},"body":{"injectables/InstanceGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts:9",{"_index":1297,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["src/guards/jwt",{"_index":1330,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts",{"_index":1312,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts:10",{"_index":1318,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/jwt.guard.ts:15",{"_index":1319,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/local.guard.ts",{"_index":1471,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard",{"_index":2137,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["src/guards/or.guard.ts",{"_index":1800,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/guards/roles.guard.ts",{"_index":133,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:111",{"_index":850,"title":{},"body":{"guards/CdBurnerGuard.html":{}}}],["src/guards/roles.guard.ts:124",{"_index":542,"title":{},"body":{"guards/AutoRoutingGuard.html":{}}}],["src/guards/roles.guard.ts:137",{"_index":2708,"title":{},"body":{"guards/ReadAllGuard.html":{}}}],["src/guards/roles.guard.ts:20",{"_index":178,"title":{},"body":{"guards/AnonymizeGuard.html":{}}}],["src/guards/roles.guard.ts:33",{"_index":1150,"title":{},"body":{"guards/ExportGuard.html":{}}}],["src/guards/roles.guard.ts:46",{"_index":2346,"title":{},"body":{"guards/QueryGuard.html":{}}}],["src/guards/roles.guard.ts:59",{"_index":541,"title":{},"body":{"guards/AutoQueryGuard.html":{}}}],["src/guards/roles.guard.ts:7",{"_index":1293,"title":{},"body":{"guards/ImportGuard.html":{}}}],["src/guards/roles.guard.ts:72",{"_index":1019,"title":{},"body":{"guards/DeleteGuard.html":{}}}],["src/guards/roles.guard.ts:85",{"_index":142,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/roles.guard.ts:98",{"_index":1595,"title":{},"body":{"guards/ModifyGuard.html":{}}}],["src/guards/series.guard.ts",{"_index":2906,"title":{},"body":{"injectables/SeriesGuard.html":{},"coverage.html":{}}}],["src/guards/series.guard.ts:10",{"_index":2907,"title":{},"body":{"injectables/SeriesGuard.html":{}}}],["src/guards/study.guard.ts",{"_index":2908,"title":{},"body":{"guards/StudyGuard.html":{},"coverage.html":{}}}],["src/guards/study.guard.ts:15",{"_index":2911,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:9",{"_index":2910,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/interceptors/not",{"_index":1596,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/public.ts",{"_index":3188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/labels/label.entity.ts",{"_index":1408,"title":{},"body":{"entities/Label.html":{},"coverage.html":{}}}],["src/labels/label.entity.ts:8",{"_index":1410,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/labels.controller.ts",{"_index":1416,"title":{},"body":{"controllers/LabelsController.html":{},"coverage.html":{}}}],["src/labels/labels.controller.ts:27",{"_index":1422,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:37",{"_index":1425,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:47",{"_index":1420,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.dto.ts",{"_index":1413,"title":{},"body":{"classes/LabelDto.html":{},"coverage.html":{}}}],["src/labels/labels.dto.ts:7",{"_index":1414,"title":{},"body":{"classes/LabelDto.html":{}}}],["src/labels/labels.module.ts",{"_index":1446,"title":{},"body":{"modules/LabelsModule.html":{}}}],["src/labels/labels.service.ts",{"_index":1450,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/labels/labels.service.ts:14",{"_index":1458,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:18",{"_index":1460,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:22",{"_index":1462,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:27",{"_index":1463,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:31",{"_index":1457,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:8",{"_index":1454,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/mail/mail.module.ts",{"_index":1494,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1518,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:12",{"_index":1524,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":1522,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/oauth",{"_index":1612,"title":{},"body":{"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["src/options/dto/create",{"_index":926,"title":{},"body":{"classes/CreateOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/get",{"_index":1152,"title":{},"body":{"classes/GetOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/update",{"_index":3018,"title":{},"body":{"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["src/options/option.entity.ts",{"_index":1704,"title":{},"body":{"entities/Option.html":{},"coverage.html":{}}}],["src/options/option.entity.ts:10",{"_index":1749,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:14",{"_index":1707,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:18",{"_index":1713,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:22",{"_index":1710,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:26",{"_index":1715,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:30",{"_index":1751,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:34",{"_index":1736,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:38",{"_index":1726,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:42",{"_index":1734,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:46",{"_index":1729,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:50",{"_index":1731,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:54",{"_index":1723,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:58",{"_index":1739,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:62",{"_index":1746,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:66",{"_index":1744,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:70",{"_index":1721,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:74",{"_index":1742,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:78",{"_index":1718,"title":{},"body":{"entities/Option.html":{}}}],["src/options/options.controller.ts",{"_index":1754,"title":{},"body":{"controllers/OptionsController.html":{},"coverage.html":{}}}],["src/options/options.controller.ts:28",{"_index":1756,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.controller.ts:52",{"_index":1761,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.module.ts",{"_index":1781,"title":{},"body":{"modules/OptionsModule.html":{}}}],["src/options/options.service.ts",{"_index":1785,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/options/options.service.ts:15",{"_index":1789,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:19",{"_index":1792,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:24",{"_index":1790,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:9",{"_index":1787,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/orthanc/dto/query",{"_index":2347,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["src/orthanc/orthanc",{"_index":1852,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts",{"_index":1934,"title":{},"body":{"controllers/OrthancController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts:36",{"_index":1959,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:55",{"_index":1956,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:65",{"_index":1953,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:75",{"_index":1947,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:85",{"_index":1944,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:95",{"_index":1950,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.module.ts",{"_index":2080,"title":{},"body":{"modules/OrthancModule.html":{}}}],["src/orthanc/query",{"_index":2296,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["src/orthanc/tag",{"_index":2913,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["src/orthanc/utils.ts",{"_index":3198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/processing/mask",{"_index":1536,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["src/processing/processing",{"_index":2255,"title":{},"body":{"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts",{"_index":2190,"title":{},"body":{"controllers/ProcessingController.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts:113",{"_index":2199,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:133",{"_index":2214,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:41",{"_index":2202,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:52",{"_index":2210,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:75",{"_index":2206,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.file.ts",{"_index":2245,"title":{},"body":{"classes/ProcessingFile.html":{},"coverage.html":{}}}],["src/processing/processing.file.ts:10",{"_index":2252,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:14",{"_index":2251,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:2",{"_index":2250,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:3",{"_index":2249,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.module.ts",{"_index":2268,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["src/processing/processing.worker.ts",{"_index":3202,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/processing/tmtv.service.ts",{"_index":2938,"title":{},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["src/processing/tmtv.service.ts:10",{"_index":2953,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:103",{"_index":2963,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:109",{"_index":2956,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:11",{"_index":2950,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:12",{"_index":2954,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:13",{"_index":2951,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:15",{"_index":2952,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:17",{"_index":2949,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:24",{"_index":2967,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:28",{"_index":2965,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:32",{"_index":2957,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:36",{"_index":2961,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:52",{"_index":2955,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:69",{"_index":2959,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:97",{"_index":2962,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/queues/anon/anon.worker.ts",{"_index":3205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/anon/queue",{"_index":2516,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["src/queues/delete/delete.worker.ts",{"_index":3208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/delete/queue",{"_index":2595,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["src/queues/query/query.worker.ts",{"_index":3210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/query/queue",{"_index":2635,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["src/queues/queue.module.ts",{"_index":2505,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queues/queue.service.ts",{"_index":6,"title":{},"body":{"injectables/AbstractQueueService.html":{},"coverage.html":{}}}],["src/queues/queue.service.ts:101",{"_index":42,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:105",{"_index":52,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:12",{"_index":33,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:23",{"_index":56,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:38",{"_index":47,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:6",{"_index":25,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:75",{"_index":39,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:82",{"_index":54,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:90",{"_index":43,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:97",{"_index":41,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/roles/dto/create",{"_index":983,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/get",{"_index":1169,"title":{},"body":{"classes/GetRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/with",{"_index":3154,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts",{"_index":2717,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts:13",{"_index":2729,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:17",{"_index":2720,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:21",{"_index":2728,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:25",{"_index":2737,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:29",{"_index":2722,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:33",{"_index":2727,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:37",{"_index":2719,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:41",{"_index":2734,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:45",{"_index":2726,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:49",{"_index":2724,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:53",{"_index":2739,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:58",{"_index":2733,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:9",{"_index":2736,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/roles.controller.ts",{"_index":2743,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:101",{"_index":2777,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:117",{"_index":2754,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:133",{"_index":2771,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:148",{"_index":2774,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:50",{"_index":2764,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:61",{"_index":2768,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:72",{"_index":2758,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:87",{"_index":2761,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":1201,"title":{},"body":{"modules/GuardsModule.html":{}}}],["src/roles/roles.module.ts",{"_index":2832,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":2835,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:17",{"_index":2847,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:21",{"_index":2848,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:28",{"_index":2850,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:32",{"_index":2853,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:36",{"_index":2846,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":2855,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:44",{"_index":2859,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:48",{"_index":2844,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":2851,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":2857,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:82",{"_index":2858,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":2841,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/seeder/seed.ts",{"_index":3215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeder/seeder.module.ts",{"_index":2894,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/seeder/seeder.service.ts",{"_index":2899,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/seeder/seeder.service.ts:17",{"_index":2901,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/seeder/seeder.service.ts:9",{"_index":2900,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/tasks/orthanc",{"_index":2093,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["src/tasks/query",{"_index":2373,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":2929,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/dto/create",{"_index":999,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":1176,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":3020,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":3022,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:17",{"_index":3028,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":3027,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":3030,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":3033,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:43",{"_index":3025,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:51",{"_index":3041,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":3037,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":3043,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":3044,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":3049,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:109",{"_index":3061,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:123",{"_index":3057,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":3062,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:66",{"_index":3066,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:83",{"_index":3068,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":3105,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":3107,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":3126,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":3117,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":3120,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":3124,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":3122,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:62",{"_index":3129,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":3131,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":3116,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":3127,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":3128,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":3113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/check",{"_index":3217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/http.client.ts",{"_index":1204,"title":{},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["src/utils/http.client.ts:11",{"_index":1221,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:123",{"_index":1248,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:143",{"_index":1232,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:152",{"_index":1230,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:39",{"_index":1234,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:43",{"_index":1237,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:47",{"_index":1242,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:5",{"_index":1227,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:51",{"_index":1244,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:55",{"_index":1240,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:59",{"_index":1223,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:6",{"_index":1228,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:7",{"_index":1222,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:71",{"_index":1224,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:8",{"_index":1219,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:83",{"_index":1225,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:9",{"_index":1220,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:95",{"_index":1226,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/is",{"_index":3220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.middleware.ts",{"_index":3222,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/orthanc",{"_index":1202,"title":{},"body":{"modules/GuardsModule.html":{},"coverage.html":{}}}],["src/utils/passwords.ts",{"_index":3225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/processing.client.ts",{"_index":3226,"title":{},"body":{"coverage.html":{}}}],["src/validators/string",{"_index":1299,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["stable_patient",{"_index":3295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_series",{"_index":3291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_study",{"_index":3293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablepatient",{"_index":3296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stableseries",{"_index":3292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablestudy",{"_index":3294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":3433,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3436,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3438,"title":{},"body":{"index.html":{}}}],["started",{"_index":3415,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3427,"title":{},"body":{"index.html":{}}}],["starthour",{"_index":3403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startminute",{"_index":3400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":96,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs",{"_index":97,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs.foreach((job",{"_index":99,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statements",{"_index":3164,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":85,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["station_name",{"_index":3325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationname",{"_index":3326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["status(error.response.status",{"_index":1284,"title":{},"body":{"classes/HttpClient.html":{}}}],["stay",{"_index":3458,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1333,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["stream",{"_index":1270,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamanswertores",{"_index":1210,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback",{"_index":1218,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback(url",{"_index":1245,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamwriter",{"_index":1246,"title":{},"body":{"classes/HttpClient.html":{}}}],["strict",{"_index":1517,"title":{},"body":{"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string|null",{"_index":2450,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["strstr",{"_index":1039,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(haystack",{"_index":1053,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘kevin",{"_index":1141,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘name@example.com",{"_index":1143,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studies",{"_index":1068,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studies/series",{"_index":1104,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["study",{"_index":963,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"controllers/QueuesQueryController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/enumerations.html":{}}}],["study'})@column({default",{"_index":1732,"title":{},"body":{"entities/Option.html":{}}}],["study'})@isstring",{"_index":964,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["study.answer.ts",{"_index":2470,"title":{},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["study.answer.ts:43",{"_index":2480,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:47",{"_index":2483,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:5",{"_index":2484,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:51",{"_index":2482,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:57",{"_index":2481,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:6",{"_index":2478,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:7",{"_index":2479,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:8",{"_index":2477,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.guard",{"_index":1200,"title":{},"body":{"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["study.ts",{"_index":3218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["study_date",{"_index":3307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_description",{"_index":2366,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_description'})@isstring",{"_index":2497,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_id",{"_index":3310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_instance_uid",{"_index":2369,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_instance_uid'})@isstring",{"_index":2499,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_time",{"_index":3308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_uid",{"_index":2353,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_uid'})@isstring",{"_index":2467,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["studydate",{"_index":2314,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydescription",{"_index":2315,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydetails",{"_index":2157,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto",{"_index":2156,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.accessionnb",{"_index":2164,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.modality",{"_index":2162,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientid",{"_index":2160,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientname",{"_index":2159,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydate",{"_index":2161,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydescription",{"_index":2163,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studyinstanceuid",{"_index":2165,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studyguard",{"_index":205,"title":{"guards/StudyGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{}}}],["studyid",{"_index":3311,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["studyinstanceuid",{"_index":2370,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studysubstring",{"_index":1078,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.indexof",{"_index":1082,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.replace",{"_index":1080,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.substr(0",{"_index":1084,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studytime",{"_index":3309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyuid",{"_index":1083,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["sub",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["subject",{"_index":1529,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1324,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"interfaces/UserInfoResponse.html":{}}}],["super(anonqueue",{"_index":2592,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["super(deletequeue",{"_index":2634,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["super(queryqueue",{"_index":2696,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["super.canactivate(context",{"_index":1329,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3451,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3469,"title":{},"body":{"modules.html":{}}}],["swaggermodule.createdocument(app",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1567,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["synchronize",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":3229,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3228,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2916,"title":{},"body":{"classes/TagAnon.html":{}}}],["taganon",{"_index":2912,"title":{"classes/TagAnon.html":{}},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["tagpolicies",{"_index":2919,"title":{},"body":{"classes/TagAnon.html":{},"miscellaneous/enumerations.html":{}}}],["tagpolicy",{"_index":2917,"title":{},"body":{"classes/TagAnon.html":{}}}],["takewhile",{"_index":1810,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["takewhile((val",{"_index":1832,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["tasks/tasks.module",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":246,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["template",{"_index":1511,"title":{},"body":{"modules/MailModule.html":{}}}],["templates",{"_index":1514,"title":{},"body":{"modules/MailModule.html":{}}}],["temporal_position_identifier",{"_index":3365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporalpositionidentifier",{"_index":3366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test:covsupport",{"_index":3443,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3442,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1816,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1812,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["tests",{"_index":3440,"title":{},"body":{"index.html":{}}}],["text",{"_index":1309,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["thanks",{"_index":3449,"title":{},"body":{"index.html":{}}}],["then((ctseriesid",{"_index":2989,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((ptseriesid",{"_index":2993,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((response",{"_index":1273,"title":{},"body":{"classes/HttpClient.html":{}}}],["then(async",{"_index":2978,"title":{},"body":{"classes/TmtvService.html":{}}}],["third",{"_index":1335,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["this.accessionnumber",{"_index":2342,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answerid",{"_index":2337,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answernumber",{"_index":2338,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.authservice.createconfirmationtoken(newuser",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createconfirmationtoken(user",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req['user",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1482,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verifyconfirmationtoken(token",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoroutingconfigs",{"_index":685,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingconfigs.filter",{"_index":744,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingservice.create(createautoroutingdto",{"_index":796,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.disable(id",{"_index":806,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.enable(id",{"_index":803,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findall",{"_index":686,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findoneorfail(id",{"_index":799,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.remove(id",{"_index":800,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingsrepository.delete(id",{"_index":847,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.find",{"_index":842,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.findoneorfail",{"_index":843,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.save(autorouting",{"_index":844,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.update(id",{"_index":846,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.configservice.get('app_url')}:${this.configservice.get('port_client')}/change",{"_index":1526,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('orthanc_address",{"_index":1771,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_password",{"_index":1774,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_port",{"_index":1772,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_username",{"_index":1773,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('redis_address",{"_index":1775,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.configservice.get('redis_port",{"_index":1776,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.createdfiles",{"_index":2976,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.foreach((file",{"_index":3015,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.push(new",{"_index":2981,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctorthancseriesid",{"_index":2975,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctseriesid",{"_index":2990,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.deferguard(guard",{"_index":1828,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.eventemitter.emit('autorouting.updated",{"_index":845,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.eventemitter.emit('orthanc",{"_index":2109,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.findone(id",{"_index":3142,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneorfail(id",{"_index":848,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.forwardedaddress",{"_index":1262,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.forwardedprotocol",{"_index":1264,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.fragmentedmask",{"_index":3008,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.rtss",{"_index":3010,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.seg",{"_index":3013,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.getjobs",{"_index":2293,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.getjobs(uuid",{"_index":119,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.getoptions(url",{"_index":1266,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.getpatientid",{"_index":1105,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getseriesinstanceuid",{"_index":1106,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getstudyinstanceuid",{"_index":1117,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuid(this.pathname",{"_index":1077,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuserinfourl(wellknown",{"_index":1384,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.getwellknown(decoded.iss",{"_index":1383,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.guardisobservable(guardval",{"_index":1839,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guardispromise(guardval",{"_index":1837,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards",{"_index":1823,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards.map",{"_index":1827,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.handleautoroutingupdated",{"_index":684,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.httpservice.get(iss",{"_index":1372,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.httpservice.get(url",{"_index":1388,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.id",{"_index":2253,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.issendable(autorouting.router",{"_index":740,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.jwtservice.decode(token",{"_index":1382,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.jwtservice.signasync(payload",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.labelservice.findonebyorfail(label",{"_index":2827,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelservice.islabelexist(labeldto.name",{"_index":2818,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelsrepository.delete(labelname",{"_index":1469,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.find",{"_index":1465,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneby",{"_index":1468,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findonebyorfail",{"_index":1466,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneorfail",{"_index":2870,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.labelsrepository.save(label",{"_index":1470,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsservice.create(labeldto",{"_index":1443,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findall",{"_index":1433,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findonebyorfail(labelname",{"_index":1437,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.islabelexist(labeldto.name",{"_index":1440,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.remove(labelname",{"_index":1438,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.lastchanges",{"_index":2102,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.lastchanges.tostring",{"_index":2106,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.level",{"_index":1064,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{}}}],["this.levelmapping[payload.changetype",{"_index":737,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.mailerservice.sendmail",{"_index":1528,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendchangepasswordemail",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendchangepasswordemail(user.email",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.maskid",{"_index":1564,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.modalitiesinstudy",{"_index":2485,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.modality",{"_index":2453,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.modref.get(guard",{"_index":1825,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.numberofseriesrelatedinstances",{"_index":2456,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofstudyrelatedinstances",{"_index":2487,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.numberofstudyrelatedseries",{"_index":2486,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.oauthconfigservice.addoauthconfig(oauthconfigdto",{"_index":1667,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.deleteoauthconfig(name",{"_index":1661,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyauthorizationurl(authorizationurl",{"_index":1379,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.oauthconfigservice.findonebyname",{"_index":1664,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyname(name",{"_index":1659,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.getoauthconfig",{"_index":1655,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.seed",{"_index":2905,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.oauthconfigsrepository.create",{"_index":1702,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.create(oauthconfigdto",{"_index":1698,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.delete",{"_index":1697,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.find",{"_index":1696,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.findone",{"_index":1695,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(config",{"_index":1699,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(option",{"_index":1703,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.optionrepository.find())[0",{"_index":2390,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.optionservice.getoptions",{"_index":1770,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionservice.seed",{"_index":2904,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.optionservice.update(options",{"_index":1778,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionsrepository.create",{"_index":1796,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.findonebyorfail",{"_index":1794,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.insert(option",{"_index":1797,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.update(1",{"_index":1795,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.originaet",{"_index":2339,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.orthancclient",{"_index":733,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{}}}],["this.orthancclient.findinorthanc",{"_index":1966,"title":{},"body":{"controllers/OrthancController.html":{}}}],["this.orthancclient.getchangessince",{"_index":2105,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getlastchanges()).last",{"_index":2103,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getorthancdetails(level",{"_index":738,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.getseriesdetailsofstudy(orthancid",{"_index":706,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.lookup(getseriesinstanceuid",{"_index":1107,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.lookup(getstudyinstanceuid",{"_index":1119,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.queryseriesinaet",{"_index":2148,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.querystudiesinaet",{"_index":2158,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.senddicomtoorthanc(rtssdata",{"_index":3011,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.orthancclient.senddicomtoorthanc(segdata",{"_index":3014,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.password",{"_index":1259,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.pathname",{"_index":1089,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/series",{"_index":1070,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/studies",{"_index":1069,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.patientid",{"_index":2341,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.patientname",{"_index":2340,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.petid",{"_index":1565,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.petseriesorthancid",{"_index":1566,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processevent(autorouting",{"_index":749,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingclient",{"_index":2987,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.createdicom(result",{"_index":2980,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.deleteressource(file.gettype",{"_index":3016,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.executeinference('pt_seg_attentionunet",{"_index":2996,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.fragmentmask",{"_index":3005,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingqueue",{"_index":2284,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.add(jobid",{"_index":2291,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.getjobs(state",{"_index":2292,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.obliterate",{"_index":2289,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.remove(uuid",{"_index":2290,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.resume",{"_index":2288,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueueservice.addjob",{"_index":2240,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.addjob(null",{"_index":722,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingqueueservice.flush",{"_index":2222,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getalluuids",{"_index":2226,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getjobs(undefined",{"_index":2235,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser",{"_index":2232,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser(userid",{"_index":2227,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.removejob(uuid",{"_index":2243,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingservice.creatertssfrommask",{"_index":1571,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.createsegfrommask",{"_index":1576,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('rtss",{"_index":1574,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('seg",{"_index":1579,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.fragmentmask",{"_index":1584,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getmaskdicomorientation",{"_index":1569,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getrtss(rtssid",{"_index":1573,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getseg(segid",{"_index":1578,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getstatsmaskseries",{"_index":1582,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.thresholdmask",{"_index":1590,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.ptorthancseriesid",{"_index":2974,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ptseriesid",{"_index":2994,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.query",{"_index":1091,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['0020000d",{"_index":1075,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['studyinstanceuid",{"_index":1076,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020",{"_index":1063,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020'].replace",{"_index":1071,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['0020000d",{"_index":1066,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['studyinstanceuid",{"_index":1067,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.queue",{"_index":64,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.add(data['uuid",{"_index":66,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.close",{"_index":116,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs",{"_index":74,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs(state",{"_index":98,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.ispaused",{"_index":2699,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.obliterate",{"_index":117,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.pause",{"_index":2697,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.remove(job.id",{"_index":82,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.resume",{"_index":2698,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queuequeryservice.ispaused",{"_index":2401,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.pause",{"_index":2403,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.resume",{"_index":2402,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuesanonservice.addjob",{"_index":2547,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.checkifuseridhasjobs(user.userid",{"_index":2542,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.flush",{"_index":2535,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getalluuids",{"_index":2536,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getjobsforuuid(uuid",{"_index":2540,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(user.userid",{"_index":2539,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(userid",{"_index":2537,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.removejob",{"_index":2549,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesdeleteservice.addjob",{"_index":2622,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.checkifuseridhasjobs(user.userid",{"_index":2618,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.flush",{"_index":2613,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getalluuids",{"_index":2614,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getjobsforuuid(uuid",{"_index":2617,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser",{"_index":2616,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser(userid",{"_index":2615,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.removejob",{"_index":2624,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesqueryservice.addjob",{"_index":2669,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.checkifuseridhasjobs(user.userid",{"_index":2660,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.flush",{"_index":2654,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getalluuids",{"_index":2655,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getjobsforuuid(uuid",{"_index":2658,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(user.userid",{"_index":2657,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(userid",{"_index":2656,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.removejob",{"_index":2672,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1326,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.replacevalue",{"_index":2925,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.requestbuffer(url",{"_index":1290,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.requestedproceduredescription",{"_index":2345,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.requeststream(url",{"_index":1288,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.roleservice.addrolelabel(rolename",{"_index":2820,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.create(createroledto",{"_index":2802,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findall",{"_index":2791,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findallwithlabels",{"_index":2790,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(name",{"_index":2794,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(rolename",{"_index":2817,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(userdto.rolename",{"_index":3088,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.getrolelabels(rolename)).map",{"_index":2824,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(createroledto.name",{"_index":2800,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(name",{"_index":2811,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(userdto.rolename",{"_index":3099,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.remove(name",{"_index":2808,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.removerolelabel(rolename",{"_index":2828,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.update(name",{"_index":2813,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesrepository.create",{"_index":2875,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.delete(name",{"_index":2867,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.find",{"_index":2861,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneby",{"_index":2865,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findonebyorfail",{"_index":2864,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneorfail",{"_index":2869,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.insert([admin",{"_index":2876,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.save(role",{"_index":2866,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.update(name",{"_index":2868,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice",{"_index":1122,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["this.rolesservice.getrolelabels(userrole)).map",{"_index":900,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["this.rolesservice.seed",{"_index":2902,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.sendtodestination(destination",{"_index":742,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.seriesdescription",{"_index":2454,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesinstanceuid",{"_index":2452,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesnumber",{"_index":2455,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.setlevel",{"_index":1092,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.strstr($requesteduri",{"_index":1079,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.studydate",{"_index":2344,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studydescription",{"_index":2343,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studyinstanceuid",{"_index":2451,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["this.tag",{"_index":2924,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.tagpolicy",{"_index":2923,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.type",{"_index":2254,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.update(id",{"_index":849,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["this.url",{"_index":1256,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.username",{"_index":1258,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.userservice.create(user)).id",{"_index":3102,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":3076,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findone(id",{"_index":3083,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyemail(userdto.email",{"_index":3090,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isexistinguser(id",{"_index":3096,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isroleused(role.name",{"_index":2805,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.userservice.remove(id",{"_index":3097,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.update(id",{"_index":3094,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":3150,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":3145,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":3136,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findandcount",{"_index":3134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":3137,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert([admin",{"_index":3153,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":3144,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":3138,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(userid",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(userdata.email",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.seed",{"_index":2903,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.usersservice.update(user.id",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserpassword(userid",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.validateissuer(wellknown",{"_index":1385,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.verifytoken(token",{"_index":1393,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["thresholdedmask",{"_index":1592,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setmaskid(thresholdedmaskid",{"_index":1593,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setpetid(this.petid",{"_index":1594,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmaskid",{"_index":1589,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdmaskto41",{"_index":1547,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["throw",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throwerror",{"_index":1807,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["throwonfirsterror",{"_index":1801,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["time",{"_index":2388,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tls",{"_index":1506,"title":{},"body":{"modules/MailModule.html":{}}}],["tmp",{"_index":3276,"title":{},"body":{"dependencies.html":{}}}],["tmtv",{"_index":3375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tmtvjob",{"_index":725,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob(job",{"_index":3413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tmtvjobdto",{"_index":2260,"title":{"classes/TmtvJobDto.html":{}},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["tmtvservice",{"_index":2937,"title":{"classes/TmtvService.html":{}},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["toclassonly",{"_index":3158,"title":{},"body":{"classes/WithLabels.html":{}}}],["token",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MailService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["token')@apibody({type",{"_index":1639,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["token')@apiparam({name",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{}}}],["token')@apiresponse({status",{"_index":762,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["token')@delete('/modalities/*')@useguards(adminguard",{"_index":1875,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/patients/*')@useguards(deleteguard",{"_index":1980,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/peers/*')@useguards(adminguard",{"_index":1878,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/series/*')@useguards(deleteguard",{"_index":1983,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*')@useguards(deleteguard",{"_index":1986,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*/labels/*')@useguards(readallguard",{"_index":2172,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/dicom",{"_index":1942,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/instances/*')@useguards(undefined",{"_index":1946,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/labels/:labelname/studies')@useguards(checklabelinrole",{"_index":1958,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/modalities*')@useguards(undefined",{"_index":1949,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/patients/*')@useguards(readallguard",{"_index":2178,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/peers*')@useguards(exportguard",{"_index":2037,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@get('/peers/*/system')@useguards(adminguard",{"_index":1896,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/plugins')@useguards(adminguard",{"_index":1899,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/queries/*/answers*')@useguards(undefined",{"_index":2120,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@get('/series/*')@useguards(undefined",{"_index":1952,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/studies/*')@useguards(undefined",{"_index":1955,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/system')@useguards(adminguard",{"_index":1902,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/tools/log",{"_index":1892,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/instances')@useguards(importguard",{"_index":2055,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["token')@post('/jobs/*')@useguards(adminguard",{"_index":1872,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/echo')@useguards(adminguard",{"_index":1869,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/modify')@useguards(modifyguard",{"_index":2065,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/modalities/*/query')@useguards(undefined",{"_index":2117,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/modalities/*/store')@useguards(exportguard",{"_index":2028,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/modalities/:id/parsed",{"_index":2125,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/peers/*/store')@useguards(exportguard",{"_index":2031,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/series/*/modify')@useguards(modifyguard",{"_index":2068,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/studies/*/modify')@useguards(modifyguard",{"_index":2071,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/tasks/:user/export')@useguards(exportguard",{"_index":2034,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/tools/create",{"_index":2017,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["token')@post('/tools/find')@useguards(readallguard",{"_index":2175,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@post('/tools/reset')@useguards(adminguard",{"_index":1905,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/tools/shutdown')@useguards(adminguard",{"_index":1908,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/modalities/*')@useguards(adminguard",{"_index":1881,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/peers/*/')@useguards(adminguard",{"_index":1884,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/studies/*/labels/*')@useguards(readallguard",{"_index":2181,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@put('/tools/log",{"_index":1911,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["tokenexpiration",{"_index":3023,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":3459,"title":{},"body":{"index.html":{}}}],["transform",{"_index":795,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/WithLabels.html":{}}}],["transformer",{"_index":579,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["transport",{"_index":1502,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":2718,"title":{},"body":{"entities/Role.html":{}}}],["true})@get('/jobs/:id?')@useguards(adminguard",{"_index":1889,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["true})@get(':uuid",{"_index":2205,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["true})@isboolean",{"_index":966,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/WithLabels.html":{}}}],["true})@isemail",{"_index":1002,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["true})@isenum(autoroutingeventtype",{"_index":1998,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isenum(processingmask",{"_index":2934,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["true})@isnumber",{"_index":2005,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isstring",{"_index":994,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["true})@public()@get",{"_index":1650,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@transform",{"_index":3157,"title":{},"body":{"classes/WithLabels.html":{}}}],["true})@type(undefined",{"_index":2878,"title":{},"body":{"classes/Router.html":{}}}],["true})@useguards(adminguard)@delete(':name",{"_index":1646,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@useguards(undefined)@get(':uuid",{"_index":2526,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["true})@useguards(undefined)@get('test/:id",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["try",{"_index":1371,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["twitter",{"_index":3465,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'})@isenum(destinationtype",{"_index":1020,"title":{},"body":{"classes/Destination.html":{}}}],["typeof",{"_index":1311,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["typeorm",{"_index":565,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"entities/Label.html":{},"injectables/LabelsService.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm_type",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":2898,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([autorouting",{"_index":812,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["typeormmodule.forfeature([label",{"_index":1449,"title":{},"body":{"modules/LabelsModule.html":{}}}],["typeormmodule.forfeature([oauthconfig",{"_index":1678,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["typeormmodule.forfeature([option",{"_index":1784,"title":{},"body":{"modules/OptionsModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":2834,"title":{},"body":{"modules/RolesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":499,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":3240,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3426,"title":{},"body":{"index.html":{}}}],["uid",{"_index":1050,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["uk",{"_index":954,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["uk'})@column({default",{"_index":1719,"title":{},"body":{"entities/Option.html":{}}}],["uk'})@isstring",{"_index":955,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["unauthorized",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@apibody({schema",{"_index":2752,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@apibody({type",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apioauth2(['openid",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":770,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":1637,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@apibody({type",{"_index":2756,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete",{"_index":2201,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:labelname",{"_index":1424,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:name",{"_index":2760,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get",{"_index":1421,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@get('/:name",{"_index":2767,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@patch",{"_index":1760,"title":{},"body":{"controllers/OptionsController.html":{}}}],["unauthorized'})@useguards(adminguard)@post",{"_index":1419,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@put('/:name",{"_index":2776,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(anonymizeguard)@delete(':uuid",{"_index":2530,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@get",{"_index":782,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@usepipes(new",{"_index":765,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(deleteguard)@delete(':uuid",{"_index":2608,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["unauthorized'})@useguards(queryguard)@delete(':uuid",{"_index":2647,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(readallguard)@post",{"_index":2198,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:id",{"_index":3060,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:rolename/label/:label",{"_index":2773,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:id",{"_index":3065,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:rolename/labels",{"_index":2770,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@put('/:id",{"_index":3067,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('invalid",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('unknown",{"_index":1386,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["undefined",{"_index":46,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"controllers/OrthancController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/TagAnon.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({status",{"_index":781,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["undefined})@column({name",{"_index":554,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["undefined})@isarray",{"_index":2626,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["undefined})@isarray()@isobject({each",{"_index":2593,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["undefined})@manytomany(undefined",{"_index":2730,"title":{},"body":{"entities/Role.html":{}}}],["undefined})@useguards(undefined)@post('/:rolename/label",{"_index":2753,"title":{},"body":{"controllers/RolesController.html":{}}}],["unique",{"_index":3039,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":3439,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtStrategy.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{}}}],["update",{"_index":818,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":1777,"title":{},"body":{"controllers/OptionsController.html":{}}}],["update(id",{"_index":838,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(name",{"_index":2775,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(option",{"_index":1791,"title":{},"body":{"injectables/OptionsService.html":{}}}],["update(options",{"_index":1757,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updatelabels",{"_index":2170,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updatelabels(request",{"_index":2180,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updateloglevel",{"_index":1866,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateloglevel(request",{"_index":1910,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateoptiondto",{"_index":1758,"title":{"classes/UpdateOptionDto.html":{}},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["updateoptiondto})@apiresponse({status",{"_index":1759,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updateuserdto",{"_index":3019,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpassword",{"_index":3111,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassword(id",{"_index":3130,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercase",{"_index":864,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["url",{"_index":216,"title":{},"body":{"controllers/AppController.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["url('http://localhost:3000",{"_index":1085,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.pathname",{"_index":1090,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.replace('/api",{"_index":3528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1102,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["useclass",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":2807,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefactory",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1431,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(anonymizeguard",{"_index":2541,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(autoroutingguard",{"_index":793,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["useguards(checklabelinrole",{"_index":1963,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(deleteguard",{"_index":1989,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/QueuesDeleteController.html":{}}}],["useguards(exportguard",{"_index":2040,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["useguards(importguard",{"_index":2058,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["useguards(jwtoauthguard",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(modifyguard",{"_index":2074,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["useguards(orguard([adminguard",{"_index":1973,"title":{},"body":{"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(orguard([instanceguard",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(orguard([queryguard",{"_index":2139,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["useguards(orguard([readallguard",{"_index":1968,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(queryguard",{"_index":2659,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["useguards(readallguard",{"_index":2184,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{}}}],["usepipes",{"_index":785,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["usepipes(new",{"_index":794,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["user",{"_index":136,"title":{"entities/User.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":889,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["user'})@apiresponse({status",{"_index":3054,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":3071,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1000,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":1007,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1178,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:15",{"_index":1003,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1181,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:19",{"_index":1015,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1177,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:24",{"_index":1184,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:26",{"_index":1014,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":1183,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:7",{"_index":1005,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1180,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.email",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.entity",{"_index":3070,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":3078,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.id",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.lastname",{"_index":3079,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.password",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.role.admin",{"_index":165,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.anonymize",{"_index":153,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autoquery",{"_index":161,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autorouting",{"_index":174,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.cdburner",{"_index":171,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.delete",{"_index":164,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.export",{"_index":155,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.import",{"_index":150,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.modify",{"_index":168,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.query",{"_index":158,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.readall",{"_index":177,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.rolename",{"_index":3080,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.token",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tokenexpiration",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":2233,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["user1@mail.com",{"_index":1493,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user1@mail.com'})@isnotempty",{"_index":1491,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user@gaelo.com",{"_index":3152,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.email",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.firstname",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdata.lastname",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":3058,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.email",{"_index":3093,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.firstname",{"_index":3086,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.lastname",{"_index":3087,"title":{},"body":{"controllers/UsersController.html":{}}}],["userexists",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":40,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["userinforesponse",{"_index":1366,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{}}}],["usernamefield",{"_index":1480,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":897,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["users",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":3106,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":3069,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{}}}],["users/users.module",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["userscontroller",{"_index":3048,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":2787,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":247,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":3114,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":395,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithpasswordupdated",{"_index":3143,"title":{},"body":{"injectables/UsersService.html":{}}}],["utils",{"_index":1915,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["utils/check",{"_index":1059,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["utils/is",{"_index":2387,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["utils/logger.middleware",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/orthanc",{"_index":676,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["utils/passwords",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utils/processing.client",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["uuid",{"_index":50,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["uuidofuser",{"_index":2538,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuids",{"_index":112,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuidsofuser",{"_index":2231,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["uuidsofuser.includes(uuid",{"_index":2234,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["val",{"_index":1833,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["validate",{"_index":570,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(email",{"_index":1477,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(isnumberorstring",{"_index":590,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(payload",{"_index":1397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(text",{"_index":1307,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validate(token",{"_index":1353,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateissuer",{"_index":1342,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["validateissuer(wellknown",{"_index":1355,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validatenested",{"_index":571,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validateuser",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1334,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["validationarguments",{"_index":1304,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validationpipe",{"_index":786,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validationpipe())@post",{"_index":766,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validator",{"_index":572,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1310,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validatorconstraintinterface",{"_index":1301,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validators/string",{"_index":581,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value",{"_index":49,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/Destination.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value'})@validate(isnumberorstring",{"_index":2887,"title":{},"body":{"classes/Rule.html":{}}}],["value_representation",{"_index":588,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value_representation'})@isenum(valuerepresentation",{"_index":2889,"title":{},"body":{"classes/Rule.html":{}}}],["valuerepresentation",{"_index":577,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["valuerepresentation.date",{"_index":691,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.number",{"_index":688,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.string",{"_index":587,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["van",{"_index":1134,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["variable",{"_index":3179,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3483,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyconfirmationtoken",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyconfirmationtoken(token",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":1343,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["verifytoken(token",{"_index":1357,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["version",{"_index":1128,"title":{},"body":{"guards/DicomWebGuard.html":{},"properties.html":{}}}],["void",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"classes/TmtvService.html":{}}}],["wait",{"_index":90,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["waiting",{"_index":91,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["watch",{"_index":3434,"title":{},"body":{"index.html":{}}}],["weak",{"_index":1013,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["web",{"_index":1029,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancController.html":{}}}],["web.guard",{"_index":1194,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/OrthancController.html":{}}}],["web.guard.ts",{"_index":1025,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["web.guard.ts:12",{"_index":1041,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:124",{"_index":1056,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:19",{"_index":1052,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:37",{"_index":1043,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:44",{"_index":1045,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:53",{"_index":1044,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:61",{"_index":1047,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:77",{"_index":1042,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web/*')@useguards(undefined",{"_index":1943,"title":{},"body":{"controllers/OrthancController.html":{}}}],["website",{"_index":3463,"title":{},"body":{"index.html":{}}}],["well",{"_index":1373,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown",{"_index":1349,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown.data",{"_index":1376,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['authorization_endpoint",{"_index":1378,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['userinfo_endpoint",{"_index":1380,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wildcard",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["withfragmentedmask",{"_index":731,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["within",{"_index":1126,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["withlabels",{"_index":2763,"title":{"classes/WithLabels.html":{}},"body":{"controllers/RolesController.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["withlabels.withlabels",{"_index":2789,"title":{},"body":{"controllers/RolesController.html":{}}}],["withrole",{"_index":3119,"title":{},"body":{"injectables/UsersService.html":{}}}],["working",{"_index":221,"title":{},"body":{"controllers/AppController.html":{}}}],["writefilesync('../openapi.json",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":3407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":3454,"title":{},"body":{"index.html":{}}}],["yyyymmddthhmmss",{"_index":2000,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["z\\d\\w]{12",{"_index":860,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*?[0",{"_index":1010,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*?[a",{"_index":1009,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":857,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*\\d)(?=.*[\\w])[a",{"_index":858,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["za",{"_index":859,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["zonneveld",{"_index":1135,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["zoom",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractQueueService.html":{"url":"injectables/AbstractQueueService.html","title":"injectable - AbstractQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queues/queue.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/queues/queue.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Job, Queue } from 'bullmq';\n\n@Injectable()\nexport abstract class AbstractQueueService {\n  protected queue: Queue;\n\n  constructor(queue: Queue) {\n    this.queue = queue;\n  }\n\n  async addJob(data: object): Promise {\n    await this.queue.add(data['uuid'], data, {\n      removeOnComplete: {\n        age: 3600,\n      },\n      removeOnFail: {\n        age: 24 * 3600,\n      },\n    });\n  }\n\n  async removeJob(data: object | undefined = undefined): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n\n    jobs.forEach((job) => {\n      if (\n        data == undefined ||\n        ((job.data.uuid == data['uuid'] || data['uuid'] == undefined) &&\n          (job.data.userId == data['userId'] || data['userId'] == undefined) &&\n          (job.data.jobId == data['jobId'] || data['jobId'] == undefined))\n      ) {\n        this.queue.remove(job.id, { removeChildren: true });\n      }\n    });\n  }\n\n  async getJobs(\n    uuid: string | undefined = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.queue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return job.data.uuid == uuid || uuid == undefined;\n    });\n\n    return filteredJob;\n  }\n\n  async checkIfUserIdHasJobs(userId: number): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const result: Job | null = jobs.find((job) => job.data.userId == userId);\n\n    return result ? true : false;\n  }\n\n  async getUuidOfUser(userId: number): Promise {\n    const jobs: Job[] | null = await this.queue.getJobs();\n    const uuid: string | null = jobs.find((job) => job.data.userId == userId)\n      ?.data.uuid;\n\n    return uuid ? uuid : null;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const uuids = jobs.map((job) => job.data.uuid);\n\n    return Array.from(new Set(uuids));\n  }\n\n  async closeQueueConnection(): Promise {\n    await this.queue.close();\n  }\n\n  async flush(): Promise {\n    await this.queue.obliterate({ force: true });\n  }\n\n  async getJobsForUuid(uuid: string = undefined): Promise {\n    const jobs: Job[] | null = await this.getJobs(uuid);\n\n    const results = {};\n    jobs\n      .filter((job) => job.data.uuid == uuid || uuid == undefined)\n      .forEach((job) => {\n        const id = job.id;\n        const progress = {\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n          UserId: job.data.userId,\n        };\n        results[id] = progress;\n      });\n\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has admin permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AnonymizeGuard.html":{"url":"guards/AnonymizeGuard.html","title":"guard - AnonymizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AnonymizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has anonymize permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Redirect\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Redirect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('oauth2-redirect.html')@Redirect('/docs/oauth2-redirect.html', 302)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: true})@UseGuards(undefined)@Get('TEST/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Redirect, UseGuards } from '@nestjs/common';\nimport { Public } from './interceptors/public';\nimport { ApiBearerAuth, ApiExcludeEndpoint, ApiParam } from '@nestjs/swagger';\nimport { StudyGuard } from './guards/study.guard';\nimport { SeriesGuard } from './guards/series.guard';\nimport { InstanceGuard } from './guards/instance.guard';\nimport { OrGuard } from './guards/or.guard';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Public()\n  @Get('oauth2-redirect.html')\n  @Redirect('/docs/oauth2-redirect.html', 302)\n  @ApiExcludeEndpoint()\n  async oauth2Redirect() {\n    return { url: '/docs/oauth2-redirect.html' };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'id', required: true })\n  @UseGuards(OrGuard([InstanceGuard, SeriesGuard, StudyGuard]))\n  @Get('TEST/:id')\n  async test() {\n    return 'Working!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoroutingsModule\n                        \n                        \n                            GuardsModule\n                        \n                        \n                            LabelsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OauthConfigModule\n                        \n                        \n                            OptionsModule\n                        \n                        \n                            OrthancModule\n                        \n                        \n                            ProcessingModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SeederModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { logger } from './utils/logger.middleware';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { NotFoundInterceptor } from './interceptors/not-found.interceptor';\n\nimport ProcessingClient from './utils/processing.client';\n\n// MODULES\nimport { AuthModule } from './auth/auth.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { MailModule } from './mail/mail.module';\nimport { OauthConfigModule } from './oauth-configs/oauth-configs.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AutoroutingsModule } from './autorouting/autoroutings.module';\nimport { UsersModule } from './users/users.module';\nimport { RolesModule } from './roles/roles.module';\nimport { LabelsModule } from './labels/labels.module';\nimport { OptionsModule } from './options/options.module';\nimport { OrthancModule } from './orthanc/orthanc.module';\nimport { ProcessingModule } from './processing/processing.module';\nimport { QueueModule } from './queues/queue.module';\n\n// CONTROLLERS\nimport { AppController } from './app.controller';\n\nimport { SeederModule } from './seeder/seeder.module';\nimport { GuardsModule } from './guards/guards.module';\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot({\n      wildcard: true,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: ['.env.dev', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\n          'TYPEORM_TYPE',\n          'postgres',\n        ) as 'postgres', // Default to 'postgres'\n        host: configService.get('TYPEORM_HOST', 'localhost'),\n        port: +configService.get('TYPEORM_PORT', 5432),\n        username: configService.get('TYPEORM_USERNAME', 'postgres'),\n        password: configService.get('TYPEORM_PASSWORD', 'postgres'),\n        database: configService.get('TYPEORM_DATABASE', 'gaelo-flow'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    AuthModule,\n    UsersModule,\n    RolesModule,\n    LabelsModule,\n    OptionsModule,\n    TasksModule,\n    OauthConfigModule,\n    ProcessingModule,\n    AutoroutingsModule,\n    QueueModule,\n    OrthancModule,\n    MailModule,\n    SeederModule,\n    GuardsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    ProcessingClient,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: NotFoundInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for all authentication related APIs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                lostPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Password changed'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: ChangePasswordDto})@Public()@Post('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({type: LoginDto})@Public()@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n                        login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        lostPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    lostPassword(body: LostPassworDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Email sent'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: LostPassworDto})@Public()@Post('lost-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LostPassworDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiOAuth2(['openid'], 'oauth2')@Public()@UseGuards(JwtOAuthGuard)@HttpCode(HttpStatus.OK)@Post('oauth2')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Register success'})@ApiResponse({status: 409, description: 'Conflict'})@ApiBody({type: RegisterDto})@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  BadRequestException,\n  ConflictException,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBody, ApiOAuth2, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LocalAuthGuard } from '../guards/local.guard';\nimport { JwtOAuthGuard } from '../guards/jwt-oauth.guard';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { Public } from '../interceptors/public';\nimport { LoginDto } from './dto/login.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { MailService } from '../mail/mail.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LostPassworDto } from './dto/lost-password.dto';\n\n/**\n * Controller for all authentication related APIs\n */\n@ApiTags('auth')\n@Controller('')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  /**\n   * login controller\n   */\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ type: LoginDto })\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req: Request) {\n    return await this.authService.login(req['user']);\n  }\n\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiOAuth2(['openid'], 'oauth2')\n  @Public()\n  @UseGuards(JwtOAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('oauth2')\n  async oauth2Login(@Request() req: Request) {\n    const userData = req['user'];\n\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    const userExists = await this.usersService.findOneByEmail(userData.email);\n    if (!userExists) {\n      await this.usersService.create({\n        Email: userData.email,\n        Firstname: userData.firstname,\n        Lastname: userData.lastname,\n        RoleName: 'User',\n        Password: null,\n      });\n    }\n\n    const user = await this.usersService.findOneByEmail(userData.email);\n    return await this.authService.login(user);\n  }\n\n  @ApiResponse({ status: 201, description: 'Register success' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @ApiBody({ type: RegisterDto })\n  @Public()\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    const userExists = await this.usersService.findOneByEmail(\n      registerDto.Email,\n      false,\n    );\n    if (userExists) {\n      throw new ConflictException('A user already exist with this email');\n    }\n\n    const newUser = await this.usersService.create({\n      Email: registerDto.Email,\n      Firstname: registerDto.Firstname,\n      Lastname: registerDto.Lastname,\n      RoleName: 'User',\n      Password: null,\n    });\n    const confirmationToken =\n      await this.authService.createConfirmationToken(newUser);\n\n    await this.mailService.sendChangePasswordEmail(\n      newUser.Email,\n      confirmationToken,\n      newUser.Id,\n    );\n  }\n\n  @ApiResponse({ status: 201, description: 'Password changed' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: ChangePasswordDto })\n  @Public()\n  @Post('change-password')\n  async changePassword(\n    @Body() changePasswordDto: ChangePasswordDto,\n  ): Promise {\n    const { Token, NewPassword, ConfirmationPassword, UserId } =\n      changePasswordDto;\n\n    if (NewPassword !== ConfirmationPassword) {\n      throw new BadRequestException('Confirmation password does not match');\n    }\n    await this.usersService.findOne(UserId);\n    await this.authService.verifyConfirmationToken(Token, UserId);\n    await this.usersService.updateUserPassword(UserId, NewPassword);\n  }\n\n  @ApiResponse({ status: 200, description: 'Email sent' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: LostPassworDto })\n  @Public()\n  @Post('lost-password')\n  async lostPassword(@Body() body: LostPassworDto) {\n    const { Email } = body;\n    const user = await this.usersService.findOneByEmail(Email, false);\n    const token = await this.authService.createConfirmationToken(user);\n    await this.mailService.sendChangePasswordEmail(user.Email, token, user.Id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtOauthStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            OauthConfigService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { MailService } from '../mail/mail.service';\n\nimport { AuthController } from './auth.controller';\nimport { User } from '../users/user.entity';\n\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthGuard } from '../guards/jwt.guard';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { JwtOauthStrategy } from './jwt-oauth.strategy';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    HttpModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService): any => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User, OauthConfig]),\n  ],\n  providers: [\n    LocalStrategy,\n    JwtStrategy,\n    JwtOauthStrategy,\n    AuthService,\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    MailService,\n    OauthConfigService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access for users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createConfirmationToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyConfirmationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createConfirmationToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyConfirmationToken(token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  comparePasswords,\n  generateToken,\n  getTokenExpiration,\n} from '../utils/passwords';\n\n/**\n * Database access for users\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (user && (await comparePasswords(pass, user.Password))) {\n      delete user.Password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = {\n      sub: user.Id,\n      email: user.Email,\n      role: user.Role,\n      userId: user.Id,\n    };\n    return {\n      AccessToken: await this.jwtService.signAsync(payload),\n      UserId: user.Id,\n    };\n  }\n\n  async createConfirmationToken(user: User): Promise {\n    const { hash, token: confirmationToken } = await generateToken();\n    user.Token = hash;\n    user.TokenExpiration = getTokenExpiration();\n    user.Password = null;\n    await this.usersService.update(user.Id, user);\n    return confirmationToken;\n  }\n\n  async verifyConfirmationToken(\n    token: string,\n    userId: number,\n  ): Promise {\n    const user = await this.usersService.findOne(userId);\n\n    if (new Date() > user.TokenExpiration) {\n      throw new BadRequestException('Token expired');\n    }\n    const isMatch = await comparePasswords(token, user.Token);\n    if (!isMatch) {\n      throw new BadRequestException('Invalid token');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoQueryGuard.html":{"url":"guards/AutoQueryGuard.html","title":"guard - AutoQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autoquery permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoRoutingGuard.html":{"url":"guards/AutoRoutingGuard.html","title":"guard - AutoRoutingGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoRoutingGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autorouting permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autorouting.html":{"url":"entities/Autorouting.html","title":"entity - Autorouting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autorouting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Activated\n                            \n                            \n                                    \n                                    \n                                    \n                                EventType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Activated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        EventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'event_type'})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'router', type: 'jsonb'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingHandler.html":{"url":"injectables/AutoroutingHandler.html","title":"injectable - AutoroutingHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler service to execute autorouting rules\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoroutingConfigs\n                            \n                            \n                                levelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleAutoroutingUpdated\n                            \n                            \n                                    \n                                    Async\n                                handleEvent\n                            \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Private\n                                isGreaterThan\n                            \n                            \n                                    Private\n                                isIn\n                            \n                            \n                                    Private\n                                isLessThan\n                            \n                            \n                                    Private\n                                isNotIn\n                            \n                            \n                                    Private\n                                isSendable\n                            \n                            \n                                    Async\n                                processEvent\n                            \n                            \n                                    Private\n                                ruleToBoolean\n                            \n                            \n                                    Private\n                                    Async\n                                sendToDestination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingService: AutoroutingsService, processingQueueService: ProcessingQueueService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autorouting.handler.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingService\n                                                  \n                                                        \n                                                                        AutoroutingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingQueueService\n                                                  \n                                                        \n                                                                        ProcessingQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleAutoroutingUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoroutingUpdated()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('autorouting.updated')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(payload: OrthancEventPayloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('orthanc.*')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEqual\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEqual(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGreaterThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGreaterThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLessThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLessThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNotIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNotIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSendable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSendable(router: Router, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(autorouting: Autorouting, payload: OrthancEventPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ruleToBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    ruleToBoolean(rule: Rule, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendToDestination\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToDestination(destination: Destination, level: LevelType, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            Destination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            LevelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoroutingConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { Injectable } from '@nestjs/common';\nimport { OrthancEventPayloadDto } from './dto/orthanc-event-payload.dto';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { Autorouting, Destination, Router, Rule } from './autorouting.entity';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  LevelType,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport OrthancClient from '../utils/orthanc-client';\nimport * as moment from 'moment';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\n/**\n * Handler service to execute autorouting rules\n */\n@Injectable()\nexport class AutoroutingHandler {\n  autoroutingConfigs: Array = [];\n\n  levelMapping = {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  };\n\n  constructor(\n    private autoroutingService: AutoroutingsService,\n    private processingQueueService: ProcessingQueueService,\n    private orthancClient: OrthancClient,\n  ) {\n    this.handleAutoroutingUpdated();\n  }\n\n  @OnEvent('autorouting.updated')\n  async handleAutoroutingUpdated() {\n    this.autoroutingConfigs = await this.autoroutingService.findAll();\n  }\n\n  private isEqual(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return value === Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return value === rule.Value.toString();\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isSame(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isNotIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return !rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isGreaterThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value) > Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isAfter(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isLessThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value)  {\n            console.error(\"can't send to aet: \", e);\n          });\n        break;\n      case DestinationType.TMTVJOB:\n        if (level !== LevelType.STUDIES) {\n          console.error('TMTVJob can only be sent to series');\n          return;\n        }\n\n        const seriesDetails =\n          await this.orthancClient.getSeriesDetailsOfStudy(orthancID);\n\n        const allModalities = seriesDetails.map(\n          (series: any) => series.MainDicomTags.Modality,\n        );\n\n        if (\n          allModalities.length !== 2 ||\n          !allModalities.includes('PT') ||\n          !allModalities.includes('CT')\n        ) {\n          console.error('Invalid series modalities: ', allModalities);\n          return;\n        }\n\n        const ctSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'CT',\n        ).ID;\n\n        const ptSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'PT',\n        ).ID;\n\n        const jobId = await this.processingQueueService.addJob(null, {\n          JobType: ProcessingJobType.TMTV,\n          TmtvJob: {\n            PtOrthancSeriesId: ptSeriesID,\n            CtOrthancSeriesId: ctSeriesID,\n            SendMaskToOrthancAs: [ProcessingMask.RTSS, ProcessingMask.SEG],\n            WithFragmentedMask: true,\n          },\n        });\n        break;\n      case DestinationType.PEER:\n        this.orthancClient\n          .sendToPeer(destination.Name, [orthancID])\n          .catch((e) => {\n            console.error(\"can't send to peer: \", e);\n          });\n        break;\n    }\n  }\n\n  async processEvent(\n    autorouting: Autorouting,\n    payload: OrthancEventPayloadDto,\n  ) {\n    const level = this.levelMapping[payload.ChangeType];\n    const data = await this.orthancClient.getOrthancDetails(level, payload.ID);\n    const isSendable = this.isSendable(autorouting.Router, data);\n\n    if (isSendable) {\n      for (const destination of autorouting.Router.Destinations) {\n        this.sendToDestination(destination, level, payload.ID);\n      }\n    }\n  }\n\n  @OnEvent('orthanc.*')\n  async handleEvent(payload: OrthancEventPayloadDto) {\n    const autoroutingMatches = this.autoroutingConfigs.filter(\n      (autorouting) =>\n        autorouting.EventType === payload.ChangeType && autorouting.Activated,\n    );\n\n    autoroutingMatches.forEach((autorouting: Autorouting) => {\n      this.processEvent(autorouting, payload);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoroutingsController.html":{"url":"controllers/AutoroutingsController.html","title":"controller - AutoroutingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoroutingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /autorouting\n            \n\n\n            \n                Description\n            \n            \n                API controllers for autorouting related routes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAutorouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAutorouting(createAutoroutingDto: CreateAutoroutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'create autorouting'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@UsePipes(new ValidationPipe())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAutoroutingDto\n                                            \n                                                            CreateAutoroutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'delete autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'disable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/disable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'enable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/enable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAutorouting()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all autorouting', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Body,\n  Post,\n  Delete,\n  Param,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AutoRoutingGuard } from '../guards/roles.guard';\nimport { CreateAutoroutingDto } from './dto/create-autorouting.dto';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\n\n/**\n * API controllers for autorouting related routes\n */\n@ApiTags('autorouting')\n@Controller('/autorouting')\nexport class AutoroutingsController {\n  constructor(private autoroutingService: AutoroutingsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'create autorouting',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post()\n  async createAutorouting(\n    @Body() createAutoroutingDto: CreateAutoroutingDto,\n  ): Promise {\n    return await this.autoroutingService.create(createAutoroutingDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all autorouting',\n    type: [Autorouting],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @Get()\n  async getAutorouting(): Promise {\n    return await this.autoroutingService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'delete autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Delete('/:id')\n  async deleteAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.findOneOrFail(id);\n    return await this.autoroutingService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'enable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/enable')\n  async enableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.enable(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'disable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/disable')\n  async disableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoroutingsModule.html":{"url":"modules/AutoroutingsModule.html","title":"module - AutoroutingsModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoroutingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/autorouting/autoroutings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoroutingHandler\n                        \n                        \n                            AutoroutingsService\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoroutingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { AutoroutingsController } from './autoroutings.controller';\nimport { AutoroutingHandler } from './autorouting.handler';\nimport OrthancClient from '../utils/orthanc-client';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Autorouting])],\n  providers: [\n    AutoroutingsService,\n    AutoroutingHandler,\n    OrthancClient,\n    ProcessingQueueService,\n  ],\n  controllers: [AutoroutingsController],\n})\nexport class AutoroutingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingsService.html":{"url":"injectables/AutoroutingsService.html","title":"injectable - AutoroutingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to autorouting data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEventType\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingsRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autoroutings.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEventType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEventType(eventType: AutoroutingEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventType\n                                            \n                                                            AutoroutingEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrFail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Autorouting } from './autorouting.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { AutoroutingEventType } from './autorouting.enum';\n\n/**\n * Database access to autorouting data\n */\n@Injectable()\nexport class AutoroutingsService {\n  constructor(\n    @InjectRepository(Autorouting)\n    private autoroutingsRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.autoroutingsRepository.find();\n  }\n\n  async findOneByEventType(\n    eventType: AutoroutingEventType,\n  ): Promise {\n    return await this.autoroutingsRepository.find({\n      where: { EventType: eventType, Activated: true },\n    });\n  }\n\n  async findOneOrFail(id: number): Promise {\n    return await this.autoroutingsRepository.findOneOrFail({\n      where: { Id: id },\n    });\n  }\n\n  async create(autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.save(autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async update(id: number, autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.update(id, autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async remove(id: number): Promise {\n    await this.autoroutingsRepository.delete(id);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async enable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = true;\n    await this.update(id, autorouting);\n  }\n\n  async disable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = false;\n    await this.update(id, autorouting);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CdBurnerGuard.html":{"url":"guards/CdBurnerGuard.html","title":"guard - CdBurnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CdBurnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has cdBurner permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ConfirmationPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                Token\n                            \n                            \n                                    \n                                    \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ConfirmationPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()@MinLength(12)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {message: 'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(12)\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {\n    message:\n      'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character',\n  })\n  NewPassword: string;\n\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  ConfirmationPassword: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  Token: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  UserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckLabelInRole.html":{"url":"guards/CheckLabelInRole.html","title":"guard - CheckLabelInRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckLabelInRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-label-in-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested label belongs to user's role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-label-in-role.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-label-in-role.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\n/**\n * Guard checking requested label belongs to user's role\n */\n@Injectable()\nexport class CheckLabelInRole implements CanActivate {\n  constructor(private rolesService: RolesService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const labelName = request.params.labelName;\n    const userRole = request.user.role.Name;\n    const labelsOfRole = (await this.rolesService.getRoleLabels(userRole)).map(\n      (label) => label.Name,\n    );\n\n    return labelsOfRole.includes(labelName);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdParamsGuard.html":{"url":"guards/CheckUserIdParamsGuard.html","title":"guard - CheckUserIdParamsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdParamsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-params.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in param is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-params.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-params.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in param is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdParamsGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.id;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdQueryGuard.html":{"url":"guards/CheckUserIdQueryGuard.html","title":"guard - CheckUserIdQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-query.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in query is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-query.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-query.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in query is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdQueryGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.query.userId;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserRoleGuard.html":{"url":"guards/CheckUserRoleGuard.html","title":"guard - CheckUserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking role name in param is the same as user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-role.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-role.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking role name in param is the same as user calling role\n */\n@Injectable()\nexport class CheckUserRoleGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.roleName;\n    const userRole = request.user.role.Name;\n\n    return value == userRole && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoroutingDto.html":{"url":"classes/CreateAutoroutingDto.html","title":"class - CreateAutoroutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoroutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/create-autorouting.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Autorouting, [\n  'Id',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Autorouting } from '../autorouting.entity';\n\nexport class CreateAutoroutingDto extends OmitType(Autorouting, [\n  'Id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOptionDto.html":{"url":"classes/CreateOptionDto.html","title":"class - CreateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/create-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: false, default: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false, default: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean, IsNumber } from 'class-validator';\n\nexport class CreateOptionDto {\n  @ApiProperty({ example: 22 })\n  @IsNumber()\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @IsNumber()\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false, default: 10 })\n  @IsNumber()\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: true, required: false, default: true })\n  @IsBoolean()\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @IsString()\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @IsString()\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @IsString()\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @IsString()\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Import: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Export: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Query: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Delete: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Admin: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Modify: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  ReadAll: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd1234!'})@IsString()@Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty({ example: 'myPassw0rd1234!' })\n  @IsString()\n  @Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {\n    message: 'Password too weak',\n  })\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DeleteGuard.html":{"url":"guards/DeleteGuard.html","title":"guard - DeleteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DeleteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has delete permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Destination.html":{"url":"classes/Destination.html","title":"class - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Destination\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DestinationType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'type'})@IsEnum(DestinationType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DicomWebGuard.html":{"url":"guards/DicomWebGuard.html","title":"guard - DicomWebGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DicomWebGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/dicom-web.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                level\n                            \n                            \n                                    Private\n                                pathname\n                            \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getPatientID\n                            \n                            \n                                    Private\n                                getSeriesInstanceUID\n                            \n                            \n                                    Private\n                                getStudyInstanceUID\n                            \n                            \n                                    Private\n                                getUID\n                            \n                            \n                                    Private\n                                setLevel\n                            \n                            \n                                    Private\n                                strstr\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/dicom-web.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPatientID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatientID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSeriesInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeriesInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStudyInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudyInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUID($requestedURI: string, level: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:61\n                        \n                    \n\n\n            \n                \n                        Isolate the called Study or Series Instance UID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $requestedURI\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLevel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        strstr\n                        \n                    \n                \n            \n            \n                \n                        \n                    strstr(haystack, needle, bool)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                haystack\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                needle\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bool\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\nimport OrthancClient from '../utils/orthanc-client';\n/**\n * Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n */\n@Injectable()\nexport class DicomWebGuard implements CanActivate {\n  private level: string;\n  private pathname: string;\n  private query: Record = {};\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly rolesService: RolesService,\n  ) {}\n\n  private setLevel(): void {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query['00100020']) {\n        this.level = 'patients';\n        return;\n      }\n\n      if (this.query['0020000D'] || this.query['StudyInstanceUID']) {\n        this.level = 'studies';\n        return;\n      }\n    }\n\n    if (this.pathname.endsWith('/studies')) this.level = 'patients';\n    else if (this.pathname.endsWith('/series')) this.level = 'studies';\n    else this.level = 'series';\n  }\n\n  private getPatientID(): string {\n    if (this.query['00100020']) return this.query['00100020'].replace('*', '');\n    else {\n      throw new Error('No Patient ID Found');\n    }\n  }\n\n  private getStudyInstanceUID(): string {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query?.['0020000D']) return this.query?.['0020000D'];\n      if (this.query?.['StudyInstanceUID'])\n        return this.query?.['StudyInstanceUID'];\n    }\n    return this.getUID(this.pathname, 'studies');\n  }\n\n  private getSeriesInstanceUID(): string {\n    return this.getUID(this.pathname, 'series');\n  }\n\n  /**\n   * Isolate the called Study or Series Instance UID\n   * @return string\n   */\n  private getUID($requestedURI: string, level: string): string {\n    let studySubString = this.strstr($requestedURI, '/' + level + '/', false);\n    studySubString = studySubString.replace('/' + level + '/', '');\n\n    const endStudyUIDPosition = studySubString.indexOf('/');\n\n    let studyUID: string;\n    if (endStudyUIDPosition) {\n      studyUID = studySubString.substr(0, endStudyUIDPosition);\n    } else {\n      studyUID = studySubString;\n    }\n\n    return studyUID;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const url = new URL('http://localhost:3000' + request.url);\n    const params = Object.fromEntries(url.searchParams.entries());\n    const userRole = request.user.role.Name;\n\n    this.pathname = url.pathname;\n    this.query = params;\n    this.setLevel();\n\n    let orthancStudyId = null;\n    if (this.level === 'patients') {\n      //Patient Level cannot be associated to a label, so we check that the client asked for a specific patient for the qido request\n      //Metadata and image retrieve will use anyway the studies/series which are protected\n      if (this.getPatientID()) return true;\n    } else if (this.level === 'series') {\n      const getSeriesInstanceUID = this.getSeriesInstanceUID();\n      const series = await this.orthancClient.lookup(getSeriesInstanceUID);\n      if (series.length == 1) {\n        const orthancSeriesId = series[0].ID;\n        const parentStudy = await this.orthancClient\n          .getParentStudy('series', orthancSeriesId)\n          .catch(() => null);\n\n        if (parentStudy?.ID) {\n          orthancStudyId = parentStudy.ID;\n        }\n      }\n    } else if (this.level === 'studies') {\n      const getStudyInstanceUID = this.getStudyInstanceUID();\n      const parentStudies =\n        await this.orthancClient.lookup(getStudyInstanceUID);\n      if (parentStudies.length == 1) {\n        orthancStudyId = parentStudies[0].ID;\n      }\n    }\n\n    if (orthancStudyId)\n      return await checkLabelRoleStudy(\n        orthancStudyId,\n        userRole,\n        this.rolesService,\n        this.orthancClient,\n      );\n    return false;\n  }\n\n  private strstr(haystack, needle, bool) {\n    // Finds first occurrence of a string within another\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/strstr\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: strstr(‘Kevin van Zonneveld’, ‘van’);\n    // *     returns 1: ‘van Zonneveld’\n    // *     example 2: strstr(‘Kevin van Zonneveld’, ‘van’, true);\n    // *     returns 2: ‘Kevin ‘\n    // *     example 3: strstr(‘name@example.com’, ‘@’);\n    // *     returns 3: ‘@example.com’\n    // *     example 4: strstr(‘name@example.com’, ‘@’, true);\n    // *     returns 4: ‘name’\n    let pos = 0;\n\n    haystack += '';\n    pos = haystack.indexOf(needle);\n    if (pos == -1) {\n      return false;\n    } else {\n      if (bool) {\n        return haystack.substr(0, pos);\n      } else {\n        return haystack.slice(pos);\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExportGuard.html":{"url":"guards/ExportGuard.html","title":"guard - ExportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has export permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOptionDto.html":{"url":"classes/GetOptionDto.html","title":"class - GetOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/get-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancAddress\n                            \n                            \n                                    \n                                    \n                                OrthancPassword\n                            \n                            \n                                    \n                                    \n                                OrthancPort\n                            \n                            \n                                    \n                                    \n                                OrthancUsername\n                            \n                            \n                                    \n                                    \n                                RedisAddress\n                            \n                            \n                                    \n                                    \n                                RedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\nimport { IsString } from 'class-validator';\n\nexport class GetOptionDto extends PartialType(CreateOptionDto) {\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPort: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancUsername: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPassword: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisPort: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleDto.html":{"url":"classes/GetRoleDto.html","title":"class - GetRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/get-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/get-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { Label } from '../../labels/label.entity';\n\nexport class GetRoleDto extends PartialType(CreateRoleDto) {\n  @ApiProperty({ required: false, default: null })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInstance(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsInstance, IsNumber, IsString } from 'class-validator';\nimport { Role } from '../../roles/role.entity';\n\nexport class GetUserDto {\n  @ApiProperty()\n  @IsNumber()\n  Id: number;\n\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty()\n  @IsInstance(Role)\n  Role?: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_imports\n\n\n\ncluster_GuardsModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nGuardsModule\n\nGuardsModule\n\nGuardsModule -->\n\nRolesModule->GuardsModule\n\n\n\n\n\nInstanceGuard\n\nInstanceGuard\n\nGuardsModule -->\n\nInstanceGuard->GuardsModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nGuardsModule -->\n\nJwtAuthGuard->GuardsModule\n\n\n\n\n\nJwtOAuthGuard\n\nJwtOAuthGuard\n\nGuardsModule -->\n\nJwtOAuthGuard->GuardsModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nGuardsModule -->\n\nLocalAuthGuard->GuardsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nGuardsModule -->\n\nOrthancClient->GuardsModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nGuardsModule -->\n\nSeriesGuard->GuardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/guards/guards.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InstanceGuard\n                        \n                        \n                            JwtAuthGuard\n                        \n                        \n                            JwtOAuthGuard\n                        \n                        \n                            LocalAuthGuard\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            SeriesGuard\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Query } from '@nestjs/common';\nimport { CheckLabelInRole } from './check-label-in-role.guard';\nimport { CheckUserIdParamsGuard } from './check-user-id-params.guard';\nimport { CheckUserRoleGuard } from './check-user-role.guard';\nimport { DicomWebGuard } from './dicom-web.guard';\nimport { InstanceGuard } from './instance.guard';\nimport { JwtOAuthGuard } from './jwt-oauth.guard';\nimport { JwtAuthGuard } from './jwt.guard';\nimport { LocalAuthGuard } from './local.guard';\nimport {\n  AdminGuard,\n  AnonymizeGuard,\n  AutoQueryGuard,\n  AutoRoutingGuard,\n  CdBurnerGuard,\n  DeleteGuard,\n  ExportGuard,\n  ImportGuard,\n  ModifyGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from './roles.guard';\nimport { SeriesGuard } from './series.guard';\nimport { StudyGuard } from './study.guard';\nimport { RolesModule } from 'src/roles/roles.module';\nimport OrthancClient from 'src/utils/orthanc-client';\n\n@Module({\n  imports: [RolesModule],\n  providers: [\n    OrthancClient,\n    CheckLabelInRole,\n    CheckUserIdParamsGuard,\n    CheckUserRoleGuard,\n    DicomWebGuard,\n    InstanceGuard,\n    JwtOAuthGuard,\n    JwtAuthGuard,\n    LocalAuthGuard,\n    ImportGuard,\n    AnonymizeGuard,\n    ExportGuard,\n    QueryGuard,\n    AutoQueryGuard,\n    DeleteGuard,\n    AdminGuard,\n    ModifyGuard,\n    CdBurnerGuard,\n    AutoRoutingGuard,\n    ReadAllGuard,\n    SeriesGuard,\n    StudyGuard,\n  ],\n  controllers: [],\n})\nexport class GuardsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClient.html":{"url":"classes/HttpClient.html","title":"class - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/http.client.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardedAddress\n                            \n                            \n                                    Protected\n                                forwardedProtocol\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Protected\n                                password\n                            \n                            \n                                request\n                            \n                            \n                                requestBuffer\n                            \n                            \n                                requestStream\n                            \n                            \n                                streamAnswerToRes\n                            \n                            \n                                    Protected\n                                url\n                            \n                            \n                                    Protected\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getResponseAsBuffer\n                            \n                            \n                                    Async\n                                getResponseAsStream\n                            \n                            \n                                setForwardedAdress\n                            \n                            \n                                setForwardedProtocol\n                            \n                            \n                                setPassword\n                            \n                            \n                                setUrl\n                            \n                            \n                                setUsername\n                            \n                            \n                                    Async\n                                streamToWriteAnswerWithCallBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedProtocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamAnswerToRes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsBuffer(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsStream(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedAdress\n                        \n                    \n                \n            \n            \n                \nsetForwardedAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedProtocol\n                        \n                    \n                \n            \n            \n                \nsetForwardedProtocol(protocol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                protocol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUsername\n                        \n                    \n                \n            \n            \n                \nsetUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        streamToWriteAnswerWithCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToWriteAnswerWithCallBack(url: string, method: string, body: object, streamWriter: any, finishCallBack: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamWriter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finishCallBack\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { Response } from 'express';\n\nexport class HttpClient {\n  protected url: string;\n  protected username: string;\n  protected password: string;\n  protected forwardedAddress: string;\n  protected forwardedProtocol: string;\n\n  getOptions = (\n    url: string,\n    method: string,\n    headers: object,\n    data: object | string | Buffer | any,\n    responseType: string | undefined = undefined,\n  ): object => {\n    return {\n      method: method,\n      baseURL: this.url,\n      url: url,\n      auth: {\n        username: this.username,\n        password: this.password,\n      },\n      headers: {\n        Forwarded:\n          'by=localhost;for=localhost;host=' +\n          this.forwardedAddress +\n          '/api;proto=' +\n          this.forwardedProtocol,\n        ...headers,\n      },\n      data: data ?? undefined,\n      responseType: responseType,\n    };\n  };\n\n  setForwardedAdress(address: string): void {\n    this.forwardedAddress = address;\n  }\n\n  setForwardedProtocol(protocol: string): void {\n    this.forwardedProtocol = protocol;\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  request = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body);\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestBuffer = (\n    url: string,\n    method: string,\n    body: object | string | null | any = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'arraybuffer');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestStream = (\n    url: string,\n    method: string,\n    body: object | string | null = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  streamAnswerToRes = (\n    url: string,\n    method: string,\n    body: object,\n    res: Response,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios\n      .request(option)\n      .then((response) => {\n        res.setHeader('content-type', response.headers['content-type']);\n        response.data.pipe(res);\n      })\n      .catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            res.status(500).send('Bad credentials');\n          } else {\n            res\n              .status(error.response.status)\n              .send(error.response.statusMessage);\n          }\n        }\n      });\n  };\n\n  async streamToWriteAnswerWithCallBack(\n    url: string,\n    method: string,\n    body: object,\n    streamWriter: any,\n    finishCallBack: any,\n  ) {\n    const config = this.getOptions(url, method, {}, body, 'stream');\n    return axios\n      .request(config)\n      .then((response) => {\n        response.data.pipe(streamWriter).on('finish', () => {\n          finishCallBack();\n        });\n      })\n      .catch(function (error) {\n        throw new Error(error);\n      });\n  }\n\n  async getResponseAsStream(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestStream(url, method, body);\n    return response.data;\n  }\n\n  async getResponseAsBuffer(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestBuffer(url, method, body);\n    return Buffer.from(response.data, 'binary');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ImportGuard.html":{"url":"guards/ImportGuard.html","title":"guard - ImportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ImportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has import permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstanceGuard.html":{"url":"injectables/InstanceGuard.html","title":"injectable - InstanceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstanceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/instance.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/instance.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n */\n@Injectable()\nexport class InstanceGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('instances', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNumberOrString.html":{"url":"classes/IsNumberOrString.html","title":"class - IsNumberOrString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNumberOrString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/string-or-number.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(text: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'string-or-number', async: false })\nexport class IsNumberOrString implements ValidatorConstraintInterface {\n  validate(text: any, args: ValidationArguments) {\n    return typeof text === 'number' || typeof text === 'string';\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return '($value) must be number or string';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Global guard for all non public routes\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/jwt.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/jwt.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../constants/constants';\n\n/**\n * Global guard for all non public routes\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOAuthGuard.html":{"url":"injectables/JwtOAuthGuard.html","title":"injectable - JwtOAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt-oauth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding JWT Strategy (validation of token to a third oauth)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('bearer')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * Guard extanding JWT Strategy (validation of token to a third oauth)\n */\n@Injectable()\nexport class JwtOAuthGuard extends AuthGuard('bearer') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOauthStrategy.html":{"url":"injectables/JwtOauthStrategy.html","title":"injectable - JwtOauthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOauthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserInfoUrl\n                            \n                            \n                                    Async\n                                getWellKnown\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateIssuer\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, httpService: HttpService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-oauth.strategy.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserInfoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfoUrl(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWellKnown\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWellKnown(iss: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iss\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIssuer\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIssuer(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      email: payload.email,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Label.html":{"url":"entities/Label.html","title":"entity - Label","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/label.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Label {\n  @ApiProperty({ example: 'name' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelDto.html":{"url":"classes/LabelDto.html","title":"class - LabelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/labels.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class LabelDto {\n  @ApiProperty({ example: 'name' })\n  @IsString()\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LabelsController.html":{"url":"controllers/LabelsController.html","title":"controller - LabelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LabelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /labels\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'remove label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:labelName')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  ConflictException,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LabelsService } from './labels.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { LabelDto } from './labels.dto';\n\n@ApiTags('labels')\n@Controller('/labels')\nexport class LabelsController {\n  constructor(private readonly LabelsService: LabelsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(): Promise {\n    const allLabels = await this.LabelsService.findAll();\n    return allLabels.map((label) => label.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'remove label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:labelName')\n  async remove(@Param('labelName') labelName: string): Promise {\n    await this.LabelsService.findOneByOrFail(labelName);\n    return this.LabelsService.remove(labelName);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async create(@Body() labelDto: LabelDto): Promise {\n    if (await this.LabelsService.isLabelExist(labelDto.Name))\n      throw new ConflictException('Label with this name already exists');\n    return this.LabelsService.create(labelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabelsModule.html":{"url":"modules/LabelsModule.html","title":"module - LabelsModule","body":"\n                   \n\n\n\n\n    Modules\n    LabelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nLabelsModule\n\nLabelsModule\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/labels/labels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LabelsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LabelsService } from './labels.service';\nimport { LabelsController } from './labels.controller';\nimport { Label } from './label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Label])],\n  providers: [LabelsService],\n  controllers: [LabelsController],\n})\nexport class LabelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                isLabelExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/labels/labels.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(label: Label)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            Label\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isLabelExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLabelExist(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Label } from './label.entity';\n\n@Injectable()\nexport class LabelsService {\n  constructor(\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.labelsRepository.find();\n  }\n\n  async findOneByOrFail(labelName: string): Promise {\n    return await this.labelsRepository.findOneByOrFail({ Name: labelName });\n  }\n\n  async isLabelExist(labelName: string): Promise {\n    const answser = await this.labelsRepository.findOneBy({ Name: labelName });\n    return answser !== null;\n  }\n\n  async remove(labelName: string): Promise {\n    await this.labelsRepository.delete(labelName);\n  }\n\n  async create(label: Label): Promise {\n    await this.labelsRepository.save(label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/local.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding looal Strategy (validation of password in the database)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * Guard extanding looal Strategy (validation of password in the database)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'Email',\n      passwordField: 'Password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'email@gaelo.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'email@gaelo.com' })\n  @IsNotEmpty()\n  Email: string;\n\n  @ApiProperty({ example: 'myPassw0rd' })\n  @IsNotEmpty()\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LostPassworDto.html":{"url":"classes/LostPassworDto.html","title":"class - LostPassworDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LostPassworDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/lost-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/lost-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LostPassworDto {\n  @ApiProperty({ example: 'user1@mail.com' })\n  @IsNotEmpty()\n  Email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\n\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: config.get('MAIL_ENCRYPTION', false) === 'tls',\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: join(__dirname, './templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  exports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendChangePasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendChangePasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChangePasswordEmail(email: string, token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    private configService: ConfigService,\n  ) {}\n\n  async sendChangePasswordEmail(\n    email: string,\n    token: string,\n    userId: number,\n  ): Promise {\n    const changePasswordUrl = `${this.configService.get('APP_URL')}:${this.configService.get('PORT_CLIENT')}/change-password?token=${token}&userId=${userId}`;\n    await this.mailerService.sendMail({\n      from: '\"GaelO-Flow\" ',\n      to: email,\n      subject: 'Change your password',\n      html: `Follow this link to set your password : ${changePasswordUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaskProcessingService.html":{"url":"injectables/MaskProcessingService.html","title":"injectable - MaskProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaskProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/mask-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskId\n                            \n                            \n                                    Private\n                                petId\n                            \n                            \n                                    Private\n                                petSeriesOrthancId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fragmentMask\n                            \n                            \n                                    Async\n                                getMaskAs\n                            \n                            \n                                getMaskId\n                            \n                            \n                                    Async\n                                getStatOfMask\n                            \n                            \n                                setMaskId\n                            \n                            \n                                setPetId\n                            \n                            \n                                    Async\n                                thresholdMaskTo41\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processingService: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/mask-processing.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processingService\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fragmentMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    fragmentMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaskAs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaskAs(type: ProcessingMask, orientation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ProcessingMask\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orientation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaskId\n                        \n                    \n                \n            \n            \n                \ngetMaskId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatOfMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatOfMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaskId\n                        \n                    \n                \n            \n            \n                \nsetMaskId(maskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPetId\n                        \n                    \n                \n            \n            \n                \nsetPetId(petId: string, petSeriesOrthancId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                petId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                petSeriesOrthancId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        thresholdMaskTo41\n                        \n                    \n                \n            \n            \n                \n                        \n                    thresholdMaskTo41()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petSeriesOrthancId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProcessingMask } from '../constants/enums';\nimport ProcessingClient from '../utils/processing.client';\n\n@Injectable()\nexport class MaskProcessingService {\n  private maskId: string;\n  private petId: string;\n  private petSeriesOrthancId: string;\n\n  constructor(private readonly processingService: ProcessingClient) {}\n\n  setMaskId(maskId: string): void {\n    this.maskId = maskId;\n  }\n\n  getMaskId(): string {\n    return this.maskId;\n  }\n\n  setPetId(petId: string, petSeriesOrthancId: string): void {\n    this.petId = petId;\n    this.petSeriesOrthancId = petSeriesOrthancId;\n  }\n\n  async getMaskAs(\n    type: ProcessingMask,\n    orientation: string = null,\n  ): Promise {\n    switch (type) {\n      case ProcessingMask.NIFTI:\n        return await this.processingService.getMaskDicomOrientation(\n          this.maskId,\n          orientation,\n          true,\n        );\n      case ProcessingMask.RTSS:\n        const rtssId = await this.processingService.createRtssFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const rtssBuffer = await this.processingService.getRtss(rtssId);\n        await this.processingService.deleteRessource('rtss', rtssId);\n        return rtssBuffer;\n      case ProcessingMask.SEG:\n        const segId = await this.processingService.createSegFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const segBuffer = await this.processingService.getSeg(segId);\n        await this.processingService.deleteRessource('seg', segId);\n        return segBuffer;\n      default:\n        throw new Error('Invalid mask type');\n    }\n  }\n\n  async getStatOfMask(): Promise {\n    return await this.processingService.getStatsMaskSeries(\n      this.maskId,\n      this.petId,\n    );\n  }\n\n  async fragmentMask(): Promise {\n    const fragmentedMaskId = await this.processingService.fragmentMask(\n      this.petId,\n      this.maskId,\n      true,\n    );\n    const fragmentedMask = new MaskProcessingService(this.processingService);\n    fragmentedMask.setMaskId(fragmentedMaskId);\n    fragmentedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return fragmentedMask;\n  }\n\n  async thresholdMaskTo41(): Promise {\n    const thresholdedMaskId = await this.processingService.thresholdMask(\n      this.maskId,\n      this.petId,\n      '41%',\n    );\n    const thresholdedMask = new MaskProcessingService(this.processingService);\n    thresholdedMask.setMaskId(thresholdedMaskId);\n    thresholdedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return thresholdedMask;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ModifyGuard.html":{"url":"guards/ModifyGuard.html","title":"guard - ModifyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ModifyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has modify permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundInterceptor.html":{"url":"injectables/NotFoundInterceptor.html","title":"injectable - NotFoundInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/not-found.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/not-found.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NotFoundException,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, catchError } from 'rxjs';\nimport { EntityNotFoundError } from 'typeorm';\n\n@Injectable()\nexport class NotFoundInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof EntityNotFoundError) {\n          throw new NotFoundException(error.message);\n        } else {\n          throw error;\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OauthConfig.html":{"url":"entities/OauthConfig.html","title":"entity - OauthConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OauthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'back-end'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@PrimaryColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class OauthConfig {\n  @ApiProperty({ example: 'keycloak' })\n  @PrimaryColumn({ name: 'id' })\n  Name: string;\n\n  @ApiProperty({ example: 'keycloak' })\n  @Column()\n  Provider: string;\n\n  @ApiProperty({\n    example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n  })\n  @Column()\n  AuthorizationUrl: string;\n\n  @ApiProperty({ example: 'back-end' })\n  @Column()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OauthConfigController.html":{"url":"controllers/OauthConfigController.html","title":"controller - OauthConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OauthConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth-config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOauthConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Oauth config added'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Oauth config already exists'})@ApiBearerAuth('access-token')@ApiBody({type: OauthConfigDto})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config deleted'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 404, description: 'Oauth config not found'})@ApiBearerAuth('access-token')@ApiParam({name: 'name', required: true})@UseGuards(AdminGuard)@Delete(':name')\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config returned', type: OauthConfigDto, isArray: true})@Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Public } from '../interceptors/public';\nimport { OauthConfigService } from './oauth-configs.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@ApiTags('oauth-config')\n@Controller('oauth-config')\nexport class OauthConfigController {\n  constructor(private readonly oauthConfigService: OauthConfigService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Oauth config returned',\n    type: OauthConfigDto,\n    isArray: true,\n  })\n  @Public()\n  @Get()\n  async getOauthConfig(): Promise {\n    return await this.oauthConfigService.getOauthConfig();\n  }\n\n  @ApiResponse({ status: 200, description: 'Oauth config deleted' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 404, description: 'Oauth config not found' })\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'name', required: true })\n  @UseGuards(AdminGuard)\n  @Delete(':name')\n  async deleteOauthConfig(@Param('name') name: string) {\n    const config = await this.oauthConfigService.findOneByName(name);\n    if (!config) throw new NotFoundException('Oauth config not found');\n\n    return this.oauthConfigService.deleteOauthConfig(name);\n  }\n\n  @ApiResponse({ status: 201, description: 'Oauth config added' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Oauth config already exists' })\n  @ApiBearerAuth('access-token')\n  @ApiBody({ type: OauthConfigDto })\n  @UseGuards(AdminGuard)\n  @Post()\n  async addOauthConfig(@Body() oauthConfigDto: OauthConfigDto) {\n    const exists = await this.oauthConfigService.findOneByName(\n      oauthConfigDto.Name,\n    );\n    if (exists) throw new ConflictException('Oauth config already exists');\n\n    return this.oauthConfigService.addOauthConfig(oauthConfigDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthConfigDto.html":{"url":"classes/OauthConfigDto.html","title":"class - OauthConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class OauthConfigDto {\n  @ApiProperty()\n  @IsString()\n  Name: string;\n\n  @ApiProperty()\n  @IsString()\n  Provider: string;\n\n  @ApiProperty()\n  @IsString()\n  AuthorizationUrl: string;\n\n  @ApiProperty()\n  @IsString()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OauthConfigModule.html":{"url":"modules/OauthConfigModule.html","title":"module - OauthConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    OauthConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OauthConfigModule\n\n\n\ncluster_OauthConfigModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OauthConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OauthConfigService } from './oauth-configs.service';\nimport { OauthConfigController } from './oauth-configs.controller';\nimport { OauthConfig } from './oauth-config.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([OauthConfig])],\n  providers: [OauthConfigService],\n  controllers: [OauthConfigController],\n})\nexport class OauthConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OauthConfigService.html":{"url":"injectables/OauthConfigService.html","title":"injectable - OauthConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OauthConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByAuthorizationUrl\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByName\n                            \n                            \n                                    Public\n                                    Async\n                                getOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthConfigsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth-configs/oauth-configs.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthConfigsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByAuthorizationUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuthorizationUrl(AuthorizationUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AuthorizationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { OauthConfig } from './oauth-config.entity';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@Injectable()\nexport class OauthConfigService {\n  constructor(\n    @InjectRepository(OauthConfig)\n    private oauthConfigsRepository: Repository,\n  ) {}\n\n  public async findOneByName(Name: string): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { Name },\n    });\n    return config;\n  }\n\n  public async findOneByAuthorizationUrl(\n    AuthorizationUrl: string,\n  ): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { AuthorizationUrl },\n    });\n    return config;\n  }\n\n  public async getOauthConfig(): Promise {\n    return await this.oauthConfigsRepository.find();\n  }\n\n  public async deleteOauthConfig(Name: string) {\n    await this.oauthConfigsRepository.delete({ Name });\n  }\n\n  public async addOauthConfig(oauthConfigDto: OauthConfigDto) {\n    const config = this.oauthConfigsRepository.create(oauthConfigDto);\n\n    await this.oauthConfigsRepository.insert(config);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.oauthConfigsRepository.create({\n      Name: 'keycloak',\n      Provider: 'keycloak',\n      AuthorizationUrl:\n        'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n      ClientId: 'back-end',\n    });\n    await this.oauthConfigsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Option.html":{"url":"entities/Option.html","title":"entity - Option","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/option.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@Column({name: 'auto_query_hour_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@Column({name: 'auto_query_hour_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'autorouter_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@Column({default: 'uk', name: 'burner_date_format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'burner_delete_study_after_sent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_label_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@Column({default: 'Epson', name: 'burner_manifacturer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_monitored_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@Column({default: 'Study', name: 'burner_monitoring_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false})@Column({default: false, name: 'burner_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@Column({default: 'Auto', name: 'burner_support_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transcoding'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transfer_syntax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_viewer_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn({name: 'id'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false})@Column({default: 10, name: 'orthanc_monitoring_rate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Option {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn({ name: 'id' })\n  @Exclude()\n  Id: number;\n\n  @ApiProperty({ example: 22 })\n  @Column({ name: 'auto_query_hour_start' })\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_start' })\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @Column({ name: 'auto_query_hour_stop' })\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_stop' })\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false })\n  @Column({ default: 10, name: 'orthanc_monitoring_rate' })\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: false, required: false })\n  @Column({ default: false, name: 'burner_started' })\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_label_path' })\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @Column({ default: 'Study', name: 'burner_monitoring_level' })\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @Column({ default: 'Epson', name: 'burner_manifacturer' })\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_monitored_path' })\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'burner_delete_study_after_sent' })\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @Column({ default: 'Auto', name: 'burner_support_type' })\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_viewer_path' })\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transfer_syntax' })\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @Column({ default: 'uk', name: 'burner_date_format' })\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transcoding' })\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'autorouter_started' })\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OptionsController.html":{"url":"controllers/OptionsController.html","title":"controller - OptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /options\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all options', type: GetOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(options: UpdateOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update options', type: UpdateOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nimport { OptionsService } from './options.service';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { GetOptionDto } from './dto/get-option.dto';\n\n@ApiTags('options')\n@Controller('/options')\nexport class OptionsController {\n  constructor(\n    private readonly optionService: OptionsService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all options',\n    type: GetOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getOptions(): Promise {\n    const { Id, ...options } = await this.optionService.getOptions();\n    const getOptionDto: GetOptionDto = {\n      ...options,\n      OrthancAddress: this.configService.get('ORTHANC_ADDRESS'),\n      OrthancPort: this.configService.get('ORTHANC_PORT'),\n      OrthancUsername: this.configService.get('ORTHANC_USERNAME'),\n      OrthancPassword: this.configService.get('ORTHANC_PASSWORD'),\n      RedisAddress: this.configService.get('REDIS_ADDRESS'),\n      RedisPort: this.configService.get('REDIS_PORT'),\n    };\n\n    return getOptionDto;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Update options',\n    type: UpdateOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Patch()\n  async update(@Body() options: UpdateOptionDto): Promise {\n    return await this.optionService.update(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsModule.html":{"url":"modules/OptionsModule.html","title":"module - OptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\n\nOptionsService\n\nOptionsService\n\n\n\nOptionsModule\n\nOptionsModule\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OptionsService } from './options.service';\nimport { OptionsController } from './options.controller';\nimport { Option } from './option.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [OptionsService, ConfigService],\n  controllers: [OptionsController],\n})\nexport class OptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOptions\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/options/options.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(option: UpdateOptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Option } from './option.entity';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\n@Injectable()\nexport class OptionsService {\n  constructor(\n    @InjectRepository(Option)\n    private optionsRepository: Repository,\n  ) {}\n\n  async getOptions(): Promise {\n    return await this.optionsRepository.findOneByOrFail({ Id: 1 });\n  }\n\n  async update(option: UpdateOptionDto): Promise {\n    await this.optionsRepository.update(1, option);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.optionsRepository.create({\n      AutoQueryHourStart: 22,\n      AutoQueryMinuteStart: 0,\n      AutoQueryHourStop: 6,\n      AutoQueryMinuteStop: 0,\n    });\n    await this.optionsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrGuardOptions.html":{"url":"interfaces/OrGuardOptions.html","title":"interface - OrGuardOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrGuardOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/or.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            throwOnFirstError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnFirstError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throwOnFirstError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  InjectionToken,\n  mixin,\n  Type,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport {\n  defer,\n  from,\n  Observable,\n  of,\n  OperatorFunction,\n  throwError,\n} from 'rxjs';\nimport { catchError, last, mergeMap, takeWhile } from 'rxjs/operators';\n\ninterface OrGuardOptions {\n  throwOnFirstError?: boolean;\n}\n\n/**\n * Guard testing an array of guards, activate at the first guard activation granted\n * @param guards Array of guards to be tested\n * @param orGuardOptions {throwOnFirstError : optional}\n * @returns Guard\n */\nexport function OrGuard(\n  guards: Array | InjectionToken>,\n  orGuardOptions?: OrGuardOptions,\n) {\n  class OrMixinGuard implements CanActivate {\n    public guards: CanActivate[] = [];\n    constructor(@Inject(ModuleRef) private readonly modRef: ModuleRef) {}\n\n    //For testing purposes only\n    __getGuards = () => guards;\n\n    canActivate(context: ExecutionContext): Observable {\n      this.guards = guards.map((guard) =>\n        this.modRef.get(guard, { strict: false }),\n      );\n      const canActivateReturns: Array> = this.guards.map(\n        (guard) => this.deferGuard(guard, context),\n      );\n      return from(canActivateReturns).pipe(\n        mergeMap((obs) => {\n          return obs.pipe(this.handleError());\n        }),\n        takeWhile((val) => val === false, true),\n        last(),\n      );\n    }\n\n    private deferGuard(\n      guard: CanActivate,\n      context: ExecutionContext,\n    ): Observable {\n      return defer(() => {\n        const guardVal = guard.canActivate(context);\n        if (this.guardIsPromise(guardVal)) {\n          return from(guardVal);\n        }\n        if (this.guardIsObservable(guardVal)) {\n          return guardVal;\n        }\n        return of(guardVal);\n      });\n    }\n\n    private handleError(): OperatorFunction {\n      return catchError((err) => {\n        if (orGuardOptions?.throwOnFirstError) {\n          return throwError(() => err);\n        }\n        return of(false);\n      });\n    }\n\n    private guardIsPromise(\n      guard: boolean | Promise | Observable,\n    ): guard is Promise {\n      return !!(guard as Promise).then;\n    }\n\n    private guardIsObservable(\n      guard: boolean | Observable,\n    ): guard is Observable {\n      return !!(guard as Observable).pipe;\n    }\n  }\n\n  const Guard = mixin(OrMixinGuard);\n  return Guard as Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancAdminController.html":{"url":"controllers/OrthancAdminController.html","title":"controller - OrthancAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-admin.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createEcho\n                            \n                            \n                                    \n                                    \n                                    \n                                createJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteModality\n                            \n                            \n                                    \n                                    \n                                    \n                                deletePeer\n                            \n                            \n                                    \n                                    \n                                    \n                                editModality\n                            \n                            \n                                    \n                                    \n                                    \n                                editPeer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                getLogLevel\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeerSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                getPlugins\n                            \n                            \n                                    \n                                    \n                                    \n                                getSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                resetOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                shutdownOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createEcho\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEcho(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/echo')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/jobs/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/peers/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    editModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editPeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    editPeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/peers/*/')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: false, description: 'Gets the job id', allowEmptyValue: true})@Get('/jobs/:id?')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeerSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeerSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers/*/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPlugins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlugins(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/plugins')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        resetOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/reset')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        shutdownOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    shutdownOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/shutdown')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiParam } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancAdminController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/system')\n  @UseGuards(AdminGuard)\n  getSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/reset')\n  @UseGuards(AdminGuard)\n  resetOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/shutdown')\n  @UseGuards(AdminGuard)\n  shutdownOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/tools/log-level')\n  @UseGuards(AdminGuard)\n  getLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/tools/log-level')\n  @UseGuards(AdminGuard)\n  updateLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/plugins')\n  @UseGuards(AdminGuard)\n  getPlugins(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/jobs/*')\n  @UseGuards(AdminGuard)\n  createJobs(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({\n    name: 'id',\n    required: false,\n    description: 'Gets the job id',\n    allowEmptyValue: true,\n  })\n  @Get('/jobs/:id?')\n  @UseGuards(AdminGuard)\n  getJobs(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/modalities/*')\n  @UseGuards(AdminGuard)\n  deleteModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/echo')\n  @UseGuards(AdminGuard)\n  createEcho(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/modalities/*')\n  @UseGuards(AdminGuard)\n  editModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/peers/*')\n  @UseGuards(AdminGuard)\n  deletePeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers/*/system')\n  @UseGuards(AdminGuard)\n  getPeerSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/peers/*/')\n  @UseGuards(AdminGuard)\n  editPeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancController.html":{"url":"controllers/OrthancController.html","title":"controller - OrthancController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getDicomWeb\n                            \n                            \n                                    \n                                    \n                                    \n                                getInstances\n                            \n                            \n                                    \n                                    \n                                    \n                                getModalities\n                            \n                            \n                                    \n                                    \n                                    \n                                getSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                getStudies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getStudiesWithLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getDicomWeb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDicomWeb(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/dicom-web/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/instances/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getModalities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModalities(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/modalities*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/series/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/studies/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getStudiesWithLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudiesWithLabel(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/labels/:labelName/studies')@UseGuards(CheckLabelInRole)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Param,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { OrGuard } from '../guards/or.guard';\nimport {\n  AdminGuard,\n  AutoQueryGuard,\n  ExportGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from '../guards/roles.guard';\nimport { StudyGuard } from '../guards/study.guard';\nimport { DicomWebGuard } from '../guards/dicom-web.guard';\nimport { SeriesGuard } from '../guards/series.guard';\nimport { InstanceGuard } from '../guards/instance.guard';\nimport { CheckLabelInRole } from '../guards/check-label-in-role.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/labels/:labelName/studies')\n  @UseGuards(CheckLabelInRole)\n  async getStudiesWithLabel(@Param('labelName') labelName: string) {\n    const answer = await this.orthancClient.findInOrthanc(\n      'Study',\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      [labelName],\n    );\n    return answer;\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/studies/*')\n  @UseGuards(OrGuard([ReadAllGuard, StudyGuard]))\n  getStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/series/*')\n  @UseGuards(OrGuard([ReadAllGuard, SeriesGuard]))\n  getSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/instances/*')\n  @UseGuards(OrGuard([ReadAllGuard, InstanceGuard]))\n  getInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/dicom-web/*')\n  @UseGuards(OrGuard([ReadAllGuard, DicomWebGuard]))\n  getDicomWeb(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/modalities*')\n  @UseGuards(OrGuard([AdminGuard, QueryGuard, AutoQueryGuard, ExportGuard]))\n  getModalities(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancDeleteController.html":{"url":"controllers/OrthancDeleteController.html","title":"controller - OrthancDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-delete.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deletePatients\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteStudies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/patients/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/series/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  Request,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { DeleteGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancDeleteController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Delete('/patients/*')\n  @UseGuards(DeleteGuard)\n  deletePatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*')\n  @UseGuards(DeleteGuard)\n  deleteStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/series/*')\n  @UseGuards(DeleteGuard)\n  deleteSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthancEventPayloadDto.html":{"url":"classes/OrthancEventPayloadDto.html","title":"class - OrthancEventPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthancEventPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/orthanc-event-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ChangeType\n                            \n                            \n                                    \n                                    \n                                Date\n                            \n                            \n                                    \n                                    \n                                ID\n                            \n                            \n                                    \n                                    \n                                Path\n                            \n                            \n                                    \n                                    \n                                ResourceType\n                            \n                            \n                                    \n                                    \n                                Seq\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ChangeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NewInstance', required: true})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'YYYYMMDDTHHMMSS', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Seq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { AutoroutingEventType } from '../autorouting.enum';\n\nexport class OrthancEventPayloadDto {\n  @ApiProperty({ example: 'NewInstance', required: true })\n  @IsEnum(AutoroutingEventType)\n  ChangeType: AutoroutingEventType;\n\n  @ApiProperty({ example: 'YYYYMMDDTHHMMSS', required: true })\n  @IsString()\n  Date: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ID: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  Path: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ResourceType: string;\n\n  @ApiProperty({ example: 0, required: true })\n  @IsNumber()\n  Seq: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancExportController.html":{"url":"controllers/OrthancExportController.html","title":"controller - OrthancExportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancExportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-export.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                createMedia\n                            \n                            \n                                    \n                                    \n                                    \n                                createMediaExtended\n                            \n                            \n                                    \n                                    \n                                    \n                                createModalitiesExport\n                            \n                            \n                                    \n                                    \n                                    \n                                createPeersStore\n                            \n                            \n                                    \n                                    \n                                    \n                                createTasksUserExport\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-archive')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMediaExtended\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMediaExtended(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media-extended')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPeersStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPeersStore(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/peers/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createTasksUserExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTasksUserExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tasks/:user/export')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers*')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ExportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancExportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/store')\n  @UseGuards(ExportGuard)\n  createModalitiesExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-archive')\n  @UseGuards(ExportGuard)\n  createArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media')\n  @UseGuards(ExportGuard)\n  createMedia(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media-extended')\n  @UseGuards(ExportGuard)\n  createMediaExtended(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers*')\n  @UseGuards(ExportGuard)\n  getPeers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/peers/*/store')\n  @UseGuards(ExportGuard)\n  createPeersStore(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tasks/:user/export')\n  @UseGuards(ExportGuard)\n  createTasksUserExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancImportController.html":{"url":"controllers/OrthancImportController.html","title":"controller - OrthancImportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancImportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-import.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createDicom\n                            \n                            \n                                    \n                                    \n                                    \n                                createInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createDicom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDicom(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-dicom')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/instances')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ImportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancImportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/instances')\n  @UseGuards(ImportGuard)\n  createInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-dicom')\n  @UseGuards(ImportGuard)\n  createDicom(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancModifyController.html":{"url":"controllers/OrthancModifyController.html","title":"controller - OrthancModifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancModifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-modify.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createSeriesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createStudiesModify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createSeriesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeriesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createStudiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStudiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ModifyGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancModifyController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/modify')\n  @UseGuards(ModifyGuard)\n  createModalitiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/*/modify')\n  @UseGuards(ModifyGuard)\n  createStudiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/*/modify')\n  @UseGuards(ModifyGuard)\n  createSeriesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrthancModule.html":{"url":"modules/OrthancModule.html","title":"module - OrthancModule","body":"\n                   \n\n\n\n\n    Modules\n    OrthancModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\ncluster_OrthancModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nOrthancModule\n\nOrthancModule\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orthanc/orthanc.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrthancController\n                        \n                        \n                            OrthancAdminController\n                        \n                        \n                            OrthancDeleteController\n                        \n                        \n                            OrthancExportController\n                        \n                        \n                            OrthancImportController\n                        \n                        \n                            OrthancModifyController\n                        \n                        \n                            OrthancQueryController\n                        \n                        \n                            OrthancReadAllController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrthancAdminController } from './orthanc-admin.controller';\nimport { OrthancController } from './orthanc.controller';\nimport { OrthancDeleteController } from './orthanc-delete.controller';\nimport { OrthancExportController } from './orthanc-export.controller';\nimport { OrthancImportController } from './orthanc-import.controller';\nimport { OrthancModifyController } from './orthanc-modify.controller';\nimport { OrthancQueryController } from './orthanc-query.controller';\nimport OrthancClient from '../utils/orthanc-client';\nimport { RolesModule } from '../roles/roles.module';\nimport { OrthancReadAllController } from './orthanc-read-all.controller';\n\n@Module({\n  imports: [RolesModule],\n  providers: [OrthancClient],\n  controllers: [\n    OrthancController,\n    OrthancAdminController,\n    OrthancDeleteController,\n    OrthancExportController,\n    OrthancImportController,\n    OrthancModifyController,\n    OrthancQueryController,\n    OrthancReadAllController,\n  ],\n})\nexport class OrthancModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrthancMonitoringTask.html":{"url":"injectables/OrthancMonitoringTask.html","title":"injectable - OrthancMonitoringTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrthancMonitoringTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/orthanc-monitoring.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                orthancMonitoringCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        orthancMonitoringCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    orthancMonitoringCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/orthanc-monitoring.task.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport OrthancClient from '../utils/orthanc-client';\n\n@Injectable()\nexport class OrthancMonitoringTask {\n  private lastChanges: number = null;\n\n  constructor(\n    private orthancClient: OrthancClient,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  async orthancMonitoringCron() {\n    if (this.lastChanges === null) {\n      this.lastChanges = (await this.orthancClient.getLastChanges()).Last;\n    }\n\n    const changes = await this.orthancClient.getChangesSince(\n      this.lastChanges.toString(),\n    );\n\n    this.lastChanges = changes.Last;\n    changes.Changes.forEach((element: any) => {\n      this.eventEmitter.emit('orthanc.' + element.ChangeType, element);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancQueryController.html":{"url":"controllers/OrthancQueryController.html","title":"controller - OrthancQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-query.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                getQueryAnswers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryParsedAnswer\n                            \n                            \n                                    \n                                    \n                                retrieve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesQuery(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/query')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQueryAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryAnswers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/queries/*/answers*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryParsedAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryParsedAnswer(id: string, queryParsedAnswer: QueryParsedAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/:id/parsed-query')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParsedAnswer\n                                            \n                                                            QueryParsedAnswerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/queries/:id/answers/:index/retrieve')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Param,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AutoQueryGuard, QueryGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\nimport {\n  QueryParsedAnswerDto,\n  QuerySeriesDto,\n  QueryStudyDto,\n} from './dto/query-parsed-answer.dto';\nimport { QueryAnswerType } from '../constants/enums';\nimport { OrGuard } from 'src/guards/or.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancQueryController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/query')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  createModalitiesQuery(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/queries/*/answers*')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  getQueryAnswers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @Post('/queries/:id/answers/:index/retrieve')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  retrieve(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/:id/parsed-query')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  async getQueryParsedAnswer(\n    @Param('id') id: string,\n    @Body() queryParsedAnswer: QueryParsedAnswerDto,\n  ) {\n    if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_SERIES) {\n      const seriesDto = queryParsedAnswer.Query as QuerySeriesDto;\n      const seriesDetails = await this.orthancClient.querySeriesInAet(\n        seriesDto.StudyUID,\n        seriesDto.Modality,\n        seriesDto.ProtocolName,\n        seriesDto.SeriesDescription,\n        seriesDto.SeriesNumber,\n        seriesDto.SeriesInstanceUID,\n        id,\n      );\n      return seriesDetails;\n    } else if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_STUDY) {\n      const studyDto = queryParsedAnswer.Query as QueryStudyDto;\n      const studyDetails = await this.orthancClient.queryStudiesInAet(\n        studyDto.PatientName,\n        studyDto.PatientID,\n        studyDto.StudyDate,\n        studyDto.Modality,\n        studyDto.StudyDescription,\n        studyDto.AccessionNb,\n        studyDto.StudyInstanceUID,\n        id,\n      );\n      return studyDetails;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancReadAllController.html":{"url":"controllers/OrthancReadAllController.html","title":"controller - OrthancReadAllController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancReadAllController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-read-all.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deleteLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                getPatients\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/find')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/patients/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { ReadAllGuard } from '../guards/roles.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancReadAllController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Put('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  updateLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  deleteLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/find')\n  @UseGuards(ReadAllGuard)\n  find(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/patients/*')\n  @UseGuards(ReadAllGuard)\n  getPatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessingController.html":{"url":"controllers/ProcessingController.html","title":"controller - ProcessingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /processing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(request: Request, processingJobDto: ProcessingJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Add job and returns the JobId', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(ReadAllGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@UseGuards(AdminGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Job } from 'bullmq';\n\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { ProcessingQueueService } from './processing-queue.service';\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdQueryGuard } from '../guards/check-user-id-query.guard';\n\n@ApiTags('processing')\n@Controller('/processing')\nexport class ProcessingController {\n  constructor(\n    private readonly processingQueueService: ProcessingQueueService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.processingQueueService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdQueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.processingQueueService.getAllUuids();\n    } else {\n      return await this.processingQueueService.getUuidsOfUser(userId);\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidsOfUser = await this.processingQueueService.getUuidsOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidsOfUser.includes(uuid)) {\n      const jobs = await this.processingQueueService.getJobs(undefined, uuid);\n      const results = [];\n      jobs.forEach((job: Job) => {\n        results.push({\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n        });\n      });\n      return results;\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'Add job and returns the JobId',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(ReadAllGuard)\n  @Post()\n  async addJob(\n    @Req() request: Request,\n    @Body() processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const user = request['user'];\n\n    return {\n      JobId: await this.processingQueueService.addJob(\n        user.userId,\n        processingJobDto,\n      ),\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @UseGuards(AdminGuard)\n  @Delete(':uuid')\n  async removeJob(@Param('uuid') uuid: string): Promise {\n    this.processingQueueService.removeJob(uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingFile.html":{"url":"classes/ProcessingFile.html","title":"class - ProcessingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing.file.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessingFile {\n  private id: string;\n  private type: string;\n\n  constructor(id: string, type: string) {\n    this.id = id;\n    this.type = type;\n  }\n\n  public getType(): string {\n    return this.type;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingJobDto.html":{"url":"classes/ProcessingJobDto.html","title":"class - ProcessingJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                JobType\n                            \n                            \n                                    \n                                    \n                                TmtvJob\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JobType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingJobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: ProcessingJobType})@IsEnum(ProcessingJobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        TmtvJob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TmtvJobDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessingModule.html":{"url":"modules/ProcessingModule.html","title":"module - ProcessingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessingModule\n\n\n\ncluster_ProcessingModule_providers\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\n\n\nProcessingModule\n\nProcessingModule\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/processing/processing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProcessingController } from './processing.controller';\nimport { ProcessingQueueService } from './processing-queue.service';\n\n@Module({\n  imports: [],\n  providers: [ProcessingQueueService],\n  controllers: [ProcessingController],\n})\nexport class ProcessingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessingQueueService.html":{"url":"injectables/ProcessingQueueService.html","title":"injectable - ProcessingQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessingQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processingQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getUuidsOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing-queue.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(userId: number, processingJobDto: ProcessingJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(userId: number, jobId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidsOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidsOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processingQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-queue.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Job, Queue } from 'bullmq';\n\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { generateRandomUUID } from '../utils/passwords';\n\n@Injectable()\nexport class ProcessingQueueService {\n  private processingQueue: Queue;\n\n  constructor(private readonly configService: ConfigService) {\n    this.processingQueue = new Queue('processing', {\n      connection: {\n        host: this.configService.get('REDIS_ADDRESS', 'localhost'),\n        port: this.configService.get('REDIS_PORT', 6379),\n      },\n    });\n    this.processingQueue.resume();\n  }\n\n  async flush(): Promise {\n    await this.processingQueue.obliterate({ force: true });\n  }\n\n  async removeJob(uuid: string): Promise {\n    await this.processingQueue.remove(uuid);\n  }\n\n  async addJob(\n    userId: number,\n    processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const jobId = generateRandomUUID();\n    const data = {\n      ...processingJobDto,\n      userId,\n    };\n\n    this.processingQueue.add(jobId, data, {\n      jobId: jobId,\n    });\n\n    return jobId;\n  }\n\n  async getJobs(\n    userId: number = undefined,\n    jobId: string = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.processingQueue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return (\n        (job.data.userId == userId || userId == undefined) &&\n        (job.id == jobId || jobId == undefined)\n      );\n    });\n\n    return filteredJob;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs.map((job) => job.id);\n\n    return uuids;\n  }\n\n  async getUuidsOfUser(userId: number): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs\n      .filter((job) => job.data.userId == userId)\n      .map((job) => job.id);\n\n    return uuids;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryAnswer.html":{"url":"classes/QueryAnswer.html","title":"class - QueryAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query.answer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: QueryAnswerType, answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        QueryAnswerType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\n\nexport default abstract class QueryAnswer {\n  AnswerId: string;\n  AnswerNumber: number;\n  OriginAET: string;\n  PatientName: string | null;\n  PatientID: string;\n  AccessionNumber: string | null;\n  StudyDescription: string | null;\n  StudyDate: string | null;\n  RequestedProcedureDescription: string | null;\n\n  Level: QueryAnswerType;\n\n  constructor(\n    level: QueryAnswerType,\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    accessionNumber: string | null,\n    studyDescription: string | null,\n    studyDate: string | null,\n    requestedProcedureDescription: string | null,\n  ) {\n    this.AnswerId = answerId;\n    this.AnswerNumber = answerNumber;\n    this.Level = level;\n    this.OriginAET = originAET;\n    this.PatientName = patientName;\n    this.PatientID = patientID;\n    this.AccessionNumber = accessionNumber;\n    this.StudyDescription = studyDescription;\n    this.StudyDate = studyDate;\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  }\n\n  setAnswerId = (answerId: string): void => {\n    this.AnswerId = answerId;\n  };\n\n  setAnswerNumber = (answerNumber: number): void => {\n    this.AnswerNumber = answerNumber;\n  };\n\n  setLevel = (level: QueryAnswerType): void => {\n    this.Level = level;\n  };\n\n  setOriginAET = (originAET: string): void => {\n    this.OriginAET = originAET;\n  };\n\n  setPatientName = (patientName: string): void => {\n    this.PatientName = patientName;\n  };\n\n  setPatientID = (patientID: string): void => {\n    this.PatientID = patientID;\n  };\n\n  setAccessionNumber = (accessionNumber: string | null): void => {\n    this.AccessionNumber = accessionNumber;\n  };\n\n  setStudyDescription = (studyDescription: string | null): void => {\n    this.StudyDescription = studyDescription;\n  };\n\n  setStudyDate = (studyDate: string | null): void => {\n    this.StudyDate = studyDate;\n  };\n\n  setRequestedProcedureDescription = (\n    requestedProcedureDescription: string | null,\n  ): void => {\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryGuard.html":{"url":"guards/QueryGuard.html","title":"guard - QueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has query permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParsedAnswerDto.html":{"url":"classes/QueryParsedAnswerDto.html","title":"class - QueryParsedAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParsedAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Level\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, enum: QueryAnswerType})@IsEnum(QueryAnswerType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QuerySeriesDto | QueryStudyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryQueueTask.html":{"url":"injectables/QueryQueueTask.html","title":"injectable - QueryQueueTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryQueueTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/query-queue.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                queryQueueCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionRepository: Repository, queueQueryService: QueuesQueryService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/query-queue.task.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueQueryService\n                                                  \n                                                        \n                                                                        QueuesQueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        queryQueueCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryQueueCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/query-queue.task.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Repository } from 'typeorm';\n\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport { Option } from '../options/option.entity';\n\nimport { isTimeBetween } from '../utils/is-time-between';\n\n@Injectable()\nexport class QueryQueueTask {\n  constructor(\n    @InjectRepository(Option)\n    private optionRepository: Repository,\n    private queueQueryService: QueuesQueryService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async queryQueueCron() {\n    const options: Option = (await this.optionRepository.find())[0];\n    const currentHour = new Date().getHours();\n    const currentMinute = new Date().getMinutes();\n    const isBetween = isTimeBetween(\n      options.AutoQueryHourStart,\n      options.AutoQueryMinuteStart,\n      options.AutoQueryHourStop,\n      options.AutoQueryMinuteStop,\n      currentHour,\n      currentMinute,\n    );\n    const queueState = await this.queueQueryService.isPaused();\n\n    if (queueState && isBetween) {\n      await this.queueQueryService.resume();\n    } else if (!queueState && !isBetween) {\n      await this.queueQueryService.pause();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesAnswer.html":{"url":"classes/QuerySeriesAnswer.html","title":"class - QuerySeriesAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-series.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Modality\n                            \n                            \n                                NumberOfSeriesRelatedInstances\n                            \n                            \n                                SeriesDescription\n                            \n                            \n                                SeriesInstanceUID\n                            \n                            \n                                SeriesNumber\n                            \n                            \n                                setModality\n                            \n                            \n                                setNumberOfSeriesRelatedInstances\n                            \n                            \n                                setSeriesDescription\n                            \n                            \n                                setSeriesInstanceUID\n                            \n                            \n                                setSeriesNumber\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyUID: string, seriesUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modality: string | null, seriesDescription: string | null, seriesNumber: number | null, numberOfSeriesRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modality\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesNumber\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfSeriesRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModality\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QuerySeriesAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  SeriesInstanceUID: string;\n  Modality: string | null = null;\n  SeriesDescription: string | null = null;\n  SeriesNumber: number | null = null;\n  NumberOfSeriesRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string|null,\n    patientID: string,\n    studyUID: string,\n    seriesUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modality: string | null = null,\n    seriesDescription: string | null = null,\n    seriesNumber: number | null = null,\n    numberOfSeriesRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_SERIES,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.StudyInstanceUID = studyUID;\n    this.SeriesInstanceUID = seriesUID;\n    this.Modality = modality;\n    this.SeriesDescription = seriesDescription;\n    this.SeriesNumber = seriesNumber;\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  }\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setSeriesInstanceUID = (seriesInstanceUID: string): void => {\n    this.SeriesInstanceUID = seriesInstanceUID;\n  };\n\n  setModality = (modality: string | null): void => {\n    this.Modality = modality;\n  };\n\n  setSeriesDescription = (seriesDescription: string | null): void => {\n    this.SeriesDescription = seriesDescription;\n  };\n\n  setSeriesNumber = (seriesNumber: number | null): void => {\n    this.SeriesNumber = seriesNumber;\n  };\n\n  setNumberOfSeriesRelatedInstances = (\n    numberOfSeriesRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesDto.html":{"url":"classes/QuerySeriesDto.html","title":"class - QuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyAnswer.html":{"url":"classes/QueryStudyAnswer.html","title":"class - QueryStudyAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-study.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ModalitiesInStudy\n                            \n                            \n                                NumberOfStudyRelatedInstances\n                            \n                            \n                                NumberOfStudyRelatedSeries\n                            \n                            \n                                setModalitiesInStudy\n                            \n                            \n                                setNumberOfStudyRelatedInstances\n                            \n                            \n                                setNumberOfStudyRelatedSeries\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modalitiesInStudy: string | null, numberOfStudyRelatedSeries: number | null, numberOfStudyRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalitiesInStudy\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedSeries\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QueryStudyAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  ModalitiesInStudy: string | null = null;\n  NumberOfStudyRelatedSeries: number | null = null;\n  NumberOfStudyRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    studyInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modalitiesInStudy: string | null = null,\n    numberOfStudyRelatedSeries: number | null = null,\n    numberOfStudyRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_STUDY,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.ModalitiesInStudy = modalitiesInStudy;\n    this.StudyInstanceUID = studyInstanceUID;\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  }\n\n  setModalitiesInStudy = (modalitiesInStudy: string | null): void => {\n    this.ModalitiesInStudy = modalitiesInStudy;\n  };\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setNumberOfStudyRelatedSeries = (\n    numberOfStudyRelatedSeries: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n  };\n\n  setNumberOfStudyRelatedInstances = (\n    numberOfStudyRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyDto.html":{"url":"classes/QueryStudyDto.html","title":"class - QueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queues/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueuesAnonService\n                        \n                        \n                            QueuesDeleteService\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueuesAnonController\n                        \n                        \n                            QueuesDeleteController\n                        \n                        \n                            QueuesQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QueuesAnonController } from './anon/queue-anons.controller';\nimport { QueuesDeleteController } from './delete/queue-deletes.controller';\nimport { QueuesQueryController } from './query/queue-query.controller';\nimport { QueuesAnonService } from './anon/queue-anons.service';\nimport { QueuesDeleteService } from './delete/queue-deletes.service';\nimport { QueuesQueryService } from './query/queue-query.service';\n\n@Module({\n  imports: [],\n  providers: [QueuesAnonService, QueuesDeleteService, QueuesQueryService],\n  controllers: [\n    QueuesAnonController,\n    QueuesDeleteController,\n    QueuesQueryController,\n  ],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesAnonController.html":{"url":"controllers/QueuesAnonController.html","title":"controller - QueuesAnonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesAnonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/anon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addAnonJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeAnonJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAnonJob(queuesAnonsDto: QueuesAnonsDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(AnonymizeGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesAnonsDto\n                                            \n                                                            QueuesAnonsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAnonJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AnonymizeGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesAnonService } from './queue-anons.service';\nimport { QueuesAnonsDto } from './queue-anons.dto';\n\nimport { AdminGuard, AnonymizeGuard } from '../../guards/roles.guard';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/anon')\n@Controller('/queues/anon')\nexport class QueuesAnonController {\n  constructor(private readonly QueuesAnonService: QueuesAnonService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesAnonService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesAnonService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesAnonService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesAnonService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesAnonService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(AnonymizeGuard)\n  @Post()\n  async addAnonJob(\n    @Body() queuesAnonsDto: QueuesAnonsDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesAnonService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const anonymizes = queuesAnonsDto.Anonymizes;\n    const uuid = generateRandomUUID();\n    anonymizes.forEach((anonymize) => {\n      this.QueuesAnonService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        anonymize: anonymize,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AnonymizeGuard)\n  @Delete(':uuid')\n  async removeAnonJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesAnonService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonDto.html":{"url":"classes/QueuesAnonDto.html","title":"class - QueuesAnonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewAccessionNumber\n                            \n                            \n                                    \n                                    \n                                NewPatientID\n                            \n                            \n                                    \n                                    \n                                NewPatientName\n                            \n                            \n                                    \n                                    \n                                NewStudyDescription\n                            \n                            \n                                    \n                                    \n                                OrthancStudyID\n                            \n                            \n                                    \n                                    \n                                Profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_accession_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancStudyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'orthanc_study_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'profile'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesAnonService.html":{"url":"injectables/QueuesAnonService.html","title":"injectable - QueuesAnonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesAnonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/anon/queue-anons.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Queue } from 'bullmq';\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesAnonService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const anonQueue = new Queue('anon', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(anonQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonsDto.html":{"url":"classes/QueuesAnonsDto.html","title":"class - QueuesAnonsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Anonymizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Anonymizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueuesAnonDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesDeleteController.html":{"url":"controllers/QueuesDeleteController.html","title":"controller - QueuesDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/delete\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addDeleteJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeDeleteJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDeleteJob(queuesDeleteDto: QueuesDeleteDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(DeleteGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesDeleteDto\n                                            \n                                                            QueuesDeleteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDeleteJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(DeleteGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesDeleteService } from './queue-deletes.service';\nimport { AdminGuard, DeleteGuard } from '../../guards/roles.guard';\nimport { QueuesDeleteDto } from './queue-deletes.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/delete')\n@Controller('/queues/delete')\nexport class QueuesDeleteController {\n  constructor(private readonly QueuesDeleteService: QueuesDeleteService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesDeleteService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesDeleteService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesDeleteService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesDeleteService.getUuidOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesDeleteService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(DeleteGuard)\n  @Post()\n  async addDeleteJob(\n    @Body() queuesDeleteDto: QueuesDeleteDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesDeleteService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const orthancSeriesIds = queuesDeleteDto.OrthancSeriesIds;\n    const uuid = generateRandomUUID();\n    orthancSeriesIds.forEach((orthancSeriesId) => {\n      this.QueuesDeleteService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        orthancSeriesId: orthancSeriesId,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(DeleteGuard)\n  @Delete(':uuid')\n  async removeDeleteJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesDeleteService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesDeleteDto.html":{"url":"classes/QueuesDeleteDto.html","title":"class - QueuesDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancSeriesIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancSeriesIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/delete/queue-deletes.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nexport class QueuesDeleteDto {\n  @ApiProperty({ example: ['series_id_1', 'series_id_2'] })\n  @IsArray()\n  OrthancSeriesIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesDeleteService.html":{"url":"injectables/QueuesDeleteService.html","title":"injectable - QueuesDeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesDeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/delete/queue-deletes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesDeleteService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const deleteQueue = new Queue('delete', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(deleteQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesQueryController.html":{"url":"controllers/QueuesQueryController.html","title":"controller - QueuesQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/query\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addQueryJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeQueryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addQueryJob(queuesQueryDto: QueuesQueryDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(QueryGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesQueryDto\n                                            \n                                                            QueuesQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeQueryJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(QueryGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesQueryService } from './queue-query.service';\nimport { AdminGuard, QueryGuard } from '../../guards/roles.guard';\nimport {\n  QueuesQueryDto,\n  QueuesQueryStudyDto,\n  QueuesQuerySeriesDto,\n} from './queue-query.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/query')\n@Controller('/queues/query')\nexport class QueuesQueryController {\n  constructor(private readonly QueuesQueryService: QueuesQueryService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesQueryService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesQueryService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesQueryService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesQueryService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesQueryService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(QueryGuard)\n  @Post()\n  async addQueryJob(\n    @Body() queuesQueryDto: QueuesQueryDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesQueryService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const queuesQueryStudy: QueuesQueryStudyDto[] = queuesQueryDto.Studies;\n    const queuesQuerySeries: QueuesQuerySeriesDto[] = queuesQueryDto.Series;\n\n    if (queuesQuerySeries.length === 0 && queuesQueryStudy.length === 0)\n      throw new BadRequestException('No studies or series found');\n\n    const uuid = generateRandomUUID();\n    queuesQueryStudy.forEach((study) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        study: study,\n        results: null,\n      });\n    });\n    queuesQuerySeries.forEach((series) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        series: series,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(QueryGuard)\n  @Delete(':uuid')\n  async removeQueryJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesQueryService.removeJob({ uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryDto.html":{"url":"classes/QueuesQueryDto.html","title":"class - QueuesQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Series\n                            \n                            \n                                    \n                                    \n                                    \n                                Studies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQuerySeriesDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Studies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQueryStudyDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQuerySeriesDto.html":{"url":"classes/QueuesQuerySeriesDto.html","title":"class - QueuesQuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesQueryService.html":{"url":"injectables/QueuesQueryService.html","title":"injectable - QueuesQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isPaused\n                            \n                            \n                                    Async\n                                pause\n                            \n                            \n                                    Async\n                                resume\n                            \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/query/queue-query.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isPaused\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPaused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesQueryService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const queryQueue = new Queue('query', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    queryQueue.pause();\n    super(queryQueue);\n  }\n\n  async pause(): Promise {\n    await this.queue.pause();\n  }\n\n  async resume(): Promise {\n    await this.queue.resume();\n  }\n\n  async isPaused(): Promise {\n    return await this.queue.isPaused();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryStudyDto.html":{"url":"classes/QueuesQueryStudyDto.html","title":"class - QueuesQueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReadAllGuard.html":{"url":"guards/ReadAllGuard.html","title":"guard - ReadAllGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReadAllGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has readall permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mail@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'firstname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lastname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'mail@example.com' })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'firstname' })\n  @IsNotEmpty()\n  Firstname: string;\n\n  @ApiProperty({ example: 'lastname' })\n  @IsNotEmpty()\n  Lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Labels\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'anonymize'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_routing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'cd_burner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'export'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'import'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, label => label.Name)@JoinTable({name: 'role_label'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'modify'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'read_all'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Label } from '../labels/label.entity';\nimport { Entity, Column, PrimaryColumn, ManyToMany, JoinTable } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @ApiProperty({ example: 'admin' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'import' })\n  Import: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'anonymize' })\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'export' })\n  Export: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'query' })\n  Query: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_query' })\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'delete' })\n  Delete: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'admin' })\n  Admin: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'modify' })\n  Modify: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'cd_burner' })\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_routing' })\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'read_all' })\n  ReadAll: boolean;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Label, (label) => label.Name)\n  @JoinTable({ name: 'role_label' })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addLabelToRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeLabelFromRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addLabelToRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLabelToRole(roleName: string, labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add label to role'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({schema: undefined})@UseGuards(undefined)@Post('/:roleName/label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@ApiBody({type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(withLabels: WithLabels)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all roles', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                withLabels\n                                            \n                                                            WithLabels\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get role by name', type: Role})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels from role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeLabelFromRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLabelFromRole(roleName: string, label: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove label from role'})@ApiResponse({status: 400, description: 'Label does not exist for this role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:roleName/label/:label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Put('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Delete,\n  Put,\n  ForbiddenException,\n  ConflictException,\n  BadRequestException,\n  UseGuards,\n  Query,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from '../users/users.service';\nimport { LabelsService } from '../labels/labels.service';\nimport { RolesService } from './roles.service';\n\nimport { Role } from './role.entity';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserRoleGuard } from '../guards/check-user-role.guard';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { GetRoleDto } from './dto/get-role.dto';\nimport { WithLabels } from './dto/with-labels.dto';\nimport { LabelDto } from '../labels/labels.dto';\n\n@ApiTags('roles')\n@Controller('/roles')\nexport class RolesController {\n  constructor(\n    private readonly roleService: RolesService,\n    private readonly labelService: LabelsService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all roles',\n    type: [GetRoleDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(@Query() withLabels: WithLabels): Promise {\n    if (withLabels.WithLabels)\n      return await this.roleService.findAllWithLabels();\n    return await this.roleService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get role by name', type: Role })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get('/:name')\n  async findOne(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n    return role;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @ApiBody({ type: CreateRoleDto })\n  @Post()\n  async createRole(@Body() createRoleDto: CreateRoleDto): Promise {\n    if (createRoleDto.Name == undefined)\n      throw new BadRequestException(\"Missing Primary Key 'name'\");\n\n    if (await this.roleService.isRoleExist(createRoleDto.Name))\n      throw new ConflictException('Role with this name already exists');\n\n    await this.roleService.create(createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:name')\n  async delete(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n\n    if (await this.userService.isRoleUsed(role.Name))\n      throw new ForbiddenException('Role is used');\n\n    return this.roleService.remove(name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Put('/:name')\n  async update(\n    @Param('name') name: string,\n    @Body() createRoleDto: CreateRoleDto,\n  ): Promise {\n    if ((await this.roleService.isRoleExist(name)) == false)\n      throw new NotFoundException('Role not found');\n\n    await this.roleService.update(name, createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add label to role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ schema: { example: { Name: 'label' } } })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Post('/:roleName/label')\n  async addLabelToRole(\n    @Param('roleName') roleName: string,\n    @Body() labelDto: LabelDto,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    if ((await this.labelService.isLabelExist(labelDto.Name)) == false)\n      throw new NotFoundException('Label not found');\n\n    await this.roleService.addRoleLabel(roleName, labelDto.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels from role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Get('/:roleName/labels')\n  async getRoleLabels(@Param('roleName') roleName: string): Promise {\n    return (await this.roleService.getRoleLabels(roleName)).map(\n      (label) => label.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove label from role' })\n  @ApiResponse({\n    status: 400,\n    description: 'Label does not exist for this role',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Delete('/:roleName/label/:label')\n  async removeLabelFromRole(\n    @Param('roleName') roleName: string,\n    @Param('label') label: string,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    await this.labelService.findOneByOrFail(label);\n\n    await this.roleService.removeRoleLabel(roleName, label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nLabelsService\n\nLabelsService\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\nimport { LabelsService } from '../labels/labels.service';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role, Label, User])],\n  providers: [RolesService, LabelsService, UsersService],\n  controllers: [RolesController],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRoleLabel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithLabels\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    Async\n                                isRoleExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRoleLabel\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesRepository: Repository, labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectRepository(Role)\n    private rolesRepository: Repository,\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.rolesRepository.find();\n  }\n\n  async findAllWithLabels(): Promise {\n    const allRoles = await this.rolesRepository.find({\n      relations: ['Labels'],\n    });\n    return allRoles;\n  }\n\n  async findOneByOrFail(name: string): Promise {\n    return await this.rolesRepository.findOneByOrFail({ Name: name });\n  }\n\n  async isRoleExist(name: string): Promise {\n    return (await this.rolesRepository.findOneBy({ Name: name })) != null;\n  }\n\n  async create(role: Role): Promise {\n    await this.rolesRepository.save(role);\n  }\n\n  async remove(name: string): Promise {\n    await this.rolesRepository.delete(name);\n  }\n\n  async update(name: string, role: Role): Promise {\n    await this.rolesRepository.update(name, role);\n  }\n\n  async addRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    const label = await this.labelsRepository.findOneOrFail({\n      where: { Name: labelName },\n    });\n    if (role.Labels.find((label) => label.Name == labelName))\n      throw new ConflictException('Label already exists for role');\n\n    role.Labels.push(label);\n    await this.rolesRepository.save(role);\n  }\n\n  async getRoleLabels(roleName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    return role.Labels;\n  }\n\n  async removeRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n\n    role.Labels = role.Labels.filter((label) => label.Name != labelName);\n    await this.rolesRepository.save(role);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const admin = this.rolesRepository.create({\n      Name: 'Admin',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: true,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    const user = this.rolesRepository.create({\n      Name: 'User',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: false,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    await this.rolesRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Router.html":{"url":"classes/Router.html","title":"class - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                Destinations\n                            \n                            \n                                    \n                                    \n                                    \n                                RuleCondition\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Destination[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'destinations', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RuleCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleCondition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rule_condition'})@IsEnum(RuleCondition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rules', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Condition\n                            \n                            \n                                    \n                                    \n                                    \n                                DicomTag\n                            \n                            \n                                    \n                                    \n                                    \n                                Value\n                            \n                            \n                                    \n                                    \n                                    \n                                ValueRepresentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'condition'})@IsEnum(Condition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DicomTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DicomTag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'dicom_tag'})@IsEnum(DicomTag)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'value'})@Validate(IsNumberOrString)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ValueRepresentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValueRepresentation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'value_representation'})@IsEnum(ValueRepresentation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                        \n                            OptionsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            SeederService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './seeder.service';\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { Autorouting } from '../autorouting/autorouting.entity';\nimport { Option } from '../options/option.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User,\n      Role,\n      Option,\n      Label,\n      OauthConfig,\n      Autorouting,\n    ]),\n  ],\n  providers: [\n    SeederService,\n    RolesService,\n    UsersService,\n    OptionsService,\n    OauthConfigService,\n  ],\n  controllers: [],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(rolesService: RolesService, usersService: UsersService, optionService: OptionsService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/seeder/seeder.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionService\n                                                  \n                                                        \n                                                                        OptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Injectable()\nexport class SeederService {\n  public constructor(\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService,\n    private readonly optionService: OptionsService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {}\n\n  public async seed() {\n    await this.rolesService.seed();\n    await this.usersService.seed();\n    await this.optionService.seed();\n    await this.oauthConfigService.seed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesGuard.html":{"url":"injectables/SeriesGuard.html","title":"injectable - SeriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/series.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard checking parent study of a dicom series has a label belonging to the user calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/series.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n\n/**\n * Guard checking parent study of a dicom series has a label belonging to the user calling role\n */\n@Injectable()\nexport class SeriesGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('series', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StudyGuard.html":{"url":"guards/StudyGuard.html","title":"guard - StudyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    StudyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/study.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard a dicomstudy has a label belonging to the user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/guards/study.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guard a dicomstudy has a label belonging to the user calling role\n */\n@Injectable()\nexport class StudyGuard implements CanActivate {\n  constructor(\n    protected rolesService: RolesService,\n    protected orthancClient: OrthancClient,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    return checkLabelRoleStudy(\n      orthancID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagAnon.html":{"url":"classes/TagAnon.html","title":"class - TagAnon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagAnon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/tag-anon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replaceValue\n                            \n                            \n                                tag\n                            \n                            \n                                tagPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: string, tagPolicy: TagPolicies, replaceValue: string | number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/tag-anon.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagPolicy\n                                                  \n                                                        \n                                                                        TagPolicies\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        replaceValue\n                                                  \n                                                        \n                                                                    string | number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        replaceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagPolicies\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagPolicies } from '../constants/enums';\n\nexport default class TagAnon {\n  tagPolicy: TagPolicies;\n  tag: string;\n  replaceValue: string | number | undefined;\n\n  constructor(\n    tag: string,\n    tagPolicy: TagPolicies,\n    replaceValue: string | number | undefined = undefined,\n  ) {\n    this.tagPolicy = tagPolicy;\n    this.tag = tag;\n    this.replaceValue = replaceValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\n\n\nTasksModule\n\nTasksModule\n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Option } from '../options/option.entity';\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryQueueTask } from './query-queue.task';\nimport { OrthancMonitoringTask } from './orthanc-monitoring.task';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [\n    QueuesQueryService,\n    OrthancClient,\n    QueryQueueTask,\n    OrthancMonitoringTask,\n  ],\n  exports: [QueryQueueTask, OrthancMonitoringTask],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvJobDto.html":{"url":"classes/TmtvJobDto.html","title":"class - TmtvJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                CtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                PtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                SendMaskToOrthancAs\n                            \n                            \n                                    \n                                    \n                                WithFragmentedMask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SendMaskToOrthancAs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingMask[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEnum(ProcessingMask)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WithFragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvService.html":{"url":"classes/TmtvService.html","title":"class - TmtvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/tmtv.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createdFiles\n                            \n                            \n                                    Private\n                                ctOrthancSeriesId\n                            \n                            \n                                    Private\n                                ctSeriesId\n                            \n                            \n                                    Private\n                                fragmentedMask\n                            \n                            \n                                    Private\n                                ptOrthancSeriesId\n                            \n                            \n                                    Private\n                                ptSeriesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeries\n                            \n                            \n                                    Async\n                                deleteAllRessources\n                            \n                            \n                                getCreatedFiles\n                            \n                            \n                                    Async\n                                runInference\n                            \n                            \n                                    Async\n                                sendDicomToProcessing\n                            \n                            \n                                    Async\n                                sendMaskAsRtssToOrthanc\n                            \n                            \n                                    Async\n                                sendMaskAsSegToOrthanc\n                            \n                            \n                                setCtOrthancSeriesId\n                            \n                            \n                                setPtOrthancSeriesId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, processingClient: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/tmtv.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingClient\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllRessources\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllRessources()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedFiles\n                        \n                    \n                \n            \n            \n                \ngetCreatedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProcessingFile[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInference\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInference(fragmented: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fragmented\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendDicomToProcessing\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDicomToProcessing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsRtssToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsRtssToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsSegToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsSegToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetCtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetPtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import OrthancClient from '../utils/orthanc-client';\nimport ProcessingClient from '../utils/processing.client';\nimport { ProcessingFile } from './processing.file';\nimport { MaskProcessingService } from './mask-processing.service';\nimport { ProcessingMask } from '../constants/enums';\nimport { ReadableStream } from 'node:stream/web';\nimport { createWriteStream } from 'node:fs';\n\nexport class TmtvService {\n  private ptOrthancSeriesId: string;\n  private ctOrthancSeriesId: string;\n  private ptSeriesId: string;\n  private ctSeriesId: string;\n\n  private fragmentedMask: MaskProcessingService;\n\n  private createdFiles: ProcessingFile[] = [];\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly processingClient: ProcessingClient,\n  ) {}\n\n  setPtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ptOrthancSeriesId = orthancSeriesId;\n  }\n\n  setCtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ctOrthancSeriesId = orthancSeriesId;\n  }\n\n  getCreatedFiles(): ProcessingFile[] {\n    return this.createdFiles;\n  }\n\n  async sendDicomToProcessing() {\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ptOrthancSeriesId])\n      .then(async (result) => {\n        const ptResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ptResponse, 'dicoms'));\n      });\n\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ctOrthancSeriesId])\n      .then(async (result) => {\n        const ctResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ctResponse, 'dicoms'));\n      });\n  }\n\n  async createSeries() {\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ctOrthancSeriesId, false, false)\n      .then((ctSeriesId) => {\n        this.ctSeriesId = ctSeriesId;\n\n        this.createdFiles.push(new ProcessingFile(this.ctSeriesId, 'series'));\n      });\n\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ptOrthancSeriesId, true, true)\n      .then((ptSeriesId) => {\n        this.ptSeriesId = ptSeriesId;\n        this.createdFiles.push(new ProcessingFile(this.ptSeriesId, 'series'));\n      });\n  }\n\n  async runInference(fragmented: boolean = false) {\n    const maskId = (\n      await this.processingClient.executeInference('pt_seg_attentionunet', {\n        idCT: this.ctSeriesId,\n        idPT: this.ptSeriesId,\n      })\n    )['id_mask'];\n    const mask = new MaskProcessingService(this.processingClient);\n\n    mask.setMaskId(maskId);\n    mask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n    this.createdFiles.push(new ProcessingFile(maskId, 'masks'));\n\n    if (fragmented) {\n      const fragmentedMaskId = await this.processingClient.fragmentMask(\n        this.ptSeriesId,\n        maskId,\n        true,\n      );\n      const fragmentedMask = new MaskProcessingService(this.processingClient);\n\n      this.createdFiles.push(new ProcessingFile(fragmentedMaskId, 'masks'));\n      fragmentedMask.setMaskId(fragmentedMaskId);\n      fragmentedMask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n      this.fragmentedMask = fragmentedMask;\n    }\n  }\n\n  async sendMaskAsRtssToOrthanc(): Promise {\n    const rtssData = await this.fragmentedMask.getMaskAs(ProcessingMask.RTSS);\n\n    return await this.orthancClient.sendDicomToOrthanc(rtssData);\n  }\n\n  async sendMaskAsSegToOrthanc(): Promise {\n    const segData = await this.fragmentedMask.getMaskAs(ProcessingMask.SEG);\n\n    return await this.orthancClient.sendDicomToOrthanc(segData);\n  }\n\n  async deleteAllRessources() {\n    this.createdFiles.forEach((file) => {\n      this.processingClient.deleteRessource(file.getType(), file.getId());\n    });\n    this.createdFiles = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOptionDto.html":{"url":"classes/UpdateOptionDto.html","title":"class - UpdateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/update-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\n\nexport class UpdateOptionDto extends PartialType(CreateOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gaelo.fr', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gaelo.fr', required: true })\n  @IsString()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                TokenExpiration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com'})@Column({unique: true, name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@Column({name: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@Column({name: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@ManyToOne(undefined, role => role.Name)@JoinColumn({name: 'role_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@Column({name: 'role_name', unique: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        TokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { Role } from '../roles/role.entity';\n\n@Entity()\nexport class User {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty({ example: 'John' })\n  @Column({\n    name: 'firstname',\n  })\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @Column({\n    name: 'lastname',\n  })\n  Lastname: string;\n\n  @Column({\n    nullable: true,\n    name: 'password',\n  })\n  @Exclude()\n  Password: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com' })\n  @Column({\n    unique: true,\n    name: 'email',\n  })\n  Email: string;\n\n  @ApiProperty({ example: 'admin' })\n  @Column({\n    name: 'role_name',\n    unique: false,\n    nullable: true,\n  })\n  RoleName: string;\n\n  @ApiProperty()\n  @ManyToOne(() => Role, (role) => role.Name)\n  @JoinColumn({ name: 'role_name' })\n  Role?: Role;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  Token?: string;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  TokenExpiration?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoResponse.html":{"url":"interfaces/UserInfoResponse.html","title":"interface - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            preferred_username\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferred_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferred_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsersId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Conflict'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all users', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsersId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get user by id', type: GetUserDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, userDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update user'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Delete,\n  UseGuards,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { User } from './user.entity';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdParamsGuard } from '../guards/check-user-id-params.guard';\n\nimport { hashPassword } from '../utils/passwords';\n\n@ApiTags('users')\n@Controller('/users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users',\n    type: [GetUserDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getUsers(): Promise {\n    const allUsers = await this.userService.findAll();\n    return allUsers.map((user) => {\n      return {\n        Id: user.Id,\n        Firstname: user.Firstname,\n        Lastname: user.Lastname,\n        Email: user.Email,\n        RoleName: user.RoleName,\n        Role: user.Role,\n      };\n    });\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get user by id', type: GetUserDto })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Get('/:id')\n  async getUsersId(@Param('id') id: number): Promise {\n    const user = await this.userService.findOne(id);\n    return {\n      Id: user.Id,\n      Firstname: user.Firstname,\n      Lastname: user.Lastname,\n      Email: user.Email,\n      RoleName: user.RoleName,\n      Role: user.Role,\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update user' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Put('/:id')\n  async update(\n    @Param('id') id: number,\n    @Body() userDto: UpdateUserDto,\n  ): Promise {\n    const user = await this.userService.findOne(id);\n\n    if (!user) throw new NotFoundException('User not found');\n\n    user.Firstname = userDto.Firstname;\n    user.Lastname = userDto.Lastname;\n    user.Role = await this.roleService.findOneByOrFail(userDto.RoleName);\n\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    if (existingUser && existingUser.Id != id)\n      throw new ConflictException('Email already used');\n    user.Email = userDto.Email;\n\n    await this.userService.update(id, user);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Delete('/:id')\n  async delete(@Param('id') id: number): Promise {\n    const existingUser = await this.userService.isExistingUser(id);\n\n    if (!existingUser) throw new NotFoundException('User not found');\n    return await this.userService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async createUser(@Body() userDto: CreateUserDto): Promise {\n    let user = new User();\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    const role = await this.roleService.isRoleExist(userDto.RoleName);\n\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    if (existingUser) {\n      throw new ConflictException('Email already used');\n    }\n    user = { ...userDto, Password: await hashPassword(userDto.Password) };\n    return (await this.userService.create(user)).Id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { UsersController } from './users.controller';\n\nimport { User } from './user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Role, Label])],\n  providers: [UsersService, RolesService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                isExistingUser\n                            \n                            \n                                    Async\n                                isRoleUsed\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isExistingUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isExistingUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleUsed(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPassword(id: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { hashPassword } from '../utils/passwords';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async isRoleUsed(roleName: string): Promise {\n    const roleCount = await this.usersRepository.findAndCount({\n      where: {\n        RoleName: roleName,\n      },\n    });\n    return roleCount[1] > 0;\n  }\n\n  async findAll(): Promise {\n    return await this.usersRepository.find({\n      relations: { Role: true },\n    });\n  }\n\n  async findOne(id: number, withRole: boolean = true): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n      relations: {\n        Role: withRole,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  async isExistingUser(id: number): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n    });\n    return user ? true : false;\n  }\n\n  async findOneByEmail(\n    email: string,\n    withRole: boolean = true,\n  ): Promise | undefined {\n    if (email === undefined) return undefined;\n    const user = await this.usersRepository.findOne({\n      where: { Email: email },\n      relations: {\n        Role: withRole,\n      },\n    });\n    return user;\n  }\n\n  async update(id: number, user: User): Promise {\n    await this.usersRepository.update(id, user);\n  }\n\n  async updateUserPassword(id: number, newPassword: string): Promise {\n    const hashedPassword = await hashPassword(newPassword);\n    const findUser = await this.findOne(id);\n    const userWithPasswordUpdated = { ...findUser, Password: hashedPassword };\n    await this.update(id, userWithPasswordUpdated);\n  }\n\n  async create(user: User): Promise {\n    return await this.usersRepository.save(user);\n  }\n\n  async remove(id: number): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const hashAdmin = await hashPassword('passwordadmin');\n\n    const hashUser = await hashPassword('passworduser');\n\n    const admin = this.usersRepository.create({\n      Firstname: 'Admin',\n      Lastname: 'Admin',\n      Email: 'admin@gaelo.com',\n      Password: hashAdmin,\n      RoleName: 'Admin',\n    });\n\n    const user = this.usersRepository.create({\n      Firstname: 'User',\n      Lastname: 'User',\n      Email: 'user@gaelo.com',\n      Password: hashUser,\n      RoleName: 'User',\n    });\n\n    await this.usersRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithLabels.html":{"url":"classes/WithLabels.html","title":"class - WithLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/with-labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                WithLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        WithLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({example: true})@Transform( => , {toClassOnly: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/with-labels.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\n\nexport class WithLabels {\n  @IsOptional()\n  @ApiProperty({ example: true })\n  @Transform(\n    ({ value }) => {\n      return value === 'true' || value === '';\n    },\n    { toClassOnly: true },\n  )\n  @IsBoolean()\n  WithLabels: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/lost-password.dto.ts\n            \n            class\n            LostPassworDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            injectable\n            JwtOauthStrategy\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            interface\n            UserInfoResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            entity\n            Autorouting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Router\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.handler.ts\n            \n            injectable\n            AutoroutingHandler\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.controller.ts\n            \n            controller\n            AutoroutingsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.service.ts\n            \n            injectable\n            AutoroutingsService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/autorouting/dto/create-autorouting.dto.ts\n            \n            class\n            CreateAutoroutingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/dto/orthanc-event-payload.dto.ts\n            \n            class\n            OrthancEventPayloadDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/build_docs.ts\n            \n            variable\n            buildDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/check-label-in-role.guard.ts\n            \n            guard\n            CheckLabelInRole\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-params.guard.ts\n            \n            guard\n            CheckUserIdParamsGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-query.guard.ts\n            \n            guard\n            CheckUserIdQueryGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-role.guard.ts\n            \n            guard\n            CheckUserRoleGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/dicom-web.guard.ts\n            \n            guard\n            DicomWebGuard\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/guards/instance.guard.ts\n            \n            injectable\n            InstanceGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/jwt-oauth.guard.ts\n            \n            injectable\n            JwtOAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            interface\n            OrGuardOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            function\n            OrGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AdminGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AnonymizeGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoQueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoRoutingGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            CdBurnerGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            DeleteGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ExportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ImportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ModifyGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            QueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ReadAllGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/series.guard.ts\n            \n            injectable\n            SeriesGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/study.guard.ts\n            \n            guard\n            StudyGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interceptors/not-found.interceptor.ts\n            \n            injectable\n            NotFoundInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/label.entity.ts\n            \n            entity\n            Label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/labels.controller.ts\n            \n            controller\n            LabelsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/labels/labels.dto.ts\n            \n            class\n            LabelDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/labels/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupWorkers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.dto.ts\n            \n            class\n            OauthConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.entity.ts\n            \n            entity\n            OauthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.controller.ts\n            \n            controller\n            OauthConfigController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.service.ts\n            \n            injectable\n            OauthConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/options/dto/create-option.dto.ts\n            \n            class\n            CreateOptionDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/options/dto/get-option.dto.ts\n            \n            class\n            GetOptionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/options/dto/update-option.dto.ts\n            \n            class\n            UpdateOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/option.entity.ts\n            \n            entity\n            Option\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/options.controller.ts\n            \n            controller\n            OptionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/options.service.ts\n            \n            injectable\n            OptionsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryParsedAnswerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QuerySeriesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryStudyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-admin.controller.ts\n            \n            controller\n            OrthancAdminController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-delete.controller.ts\n            \n            controller\n            OrthancDeleteController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-export.controller.ts\n            \n            controller\n            OrthancExportController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-import.controller.ts\n            \n            controller\n            OrthancImportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-modify.controller.ts\n            \n            controller\n            OrthancModifyController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-query.controller.ts\n            \n            controller\n            OrthancQueryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-read-all.controller.ts\n            \n            controller\n            OrthancReadAllController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc.controller.ts\n            \n            controller\n            OrthancController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-series.answer.ts\n            \n            class\n            QuerySeriesAnswer\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-study.answer.ts\n            \n            class\n            QueryStudyAnswer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query.answer.ts\n            \n            class\n            QueryAnswer\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/orthanc/tag-anon.ts\n            \n            class\n            TagAnon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/utils.ts\n            \n            variable\n            doReverseProxy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/mask-processing.service.ts\n            \n            injectable\n            MaskProcessingService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            ProcessingJobDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            TmtvJobDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/processing/processing-queue.service.ts\n            \n            injectable\n            ProcessingQueueService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/processing/processing.controller.ts\n            \n            controller\n            ProcessingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.file.ts\n            \n            class\n            ProcessingFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            setupProcessingWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            tmtvJob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/tmtv.service.ts\n            \n            class\n            TmtvService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            isSecondaryCapture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            setupAnonWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.controller.ts\n            \n            controller\n            QueuesAnonController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.service.ts\n            \n            injectable\n            QueuesAnonService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/delete/delete.worker.ts\n            \n            function\n            setupDeleteWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.controller.ts\n            \n            controller\n            QueuesDeleteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.dto.ts\n            \n            class\n            QueuesDeleteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.service.ts\n            \n            injectable\n            QueuesDeleteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processSeries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            setupQueryWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.controller.ts\n            \n            controller\n            QueuesQueryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQuerySeriesDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryStudyDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.service.ts\n            \n            injectable\n            QueuesQueryService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/queues/queue.service.ts\n            \n            injectable\n            AbstractQueueService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/dto/get-role.dto.ts\n            \n            class\n            GetRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/dto/with-labels.dto.ts\n            \n            class\n            WithLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/seeder/seed.ts\n            \n            variable\n            seeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/orthanc-monitoring.task.ts\n            \n            injectable\n            OrthancMonitoringTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/query-queue.task.ts\n            \n            injectable\n            QueryQueueTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils/check-label-role-study.ts\n            \n            variable\n            checkLabelRoleStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/http.client.ts\n            \n            class\n            HttpClient\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/utils/is-time-between.ts\n            \n            function\n            isTimeBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/orthanc-client.ts\n            \n            injectable\n            OrthancClient\n            \n                0 %\n                (0/50)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateRandomUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            getTokenExpiration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/processing.client.ts\n            \n            injectable\n            ProcessingClient\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/validators/string-or-number.ts\n            \n            class\n            IsNumberOrString\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.11.0\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.3.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.7\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.7\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            axios : ^1.6.0\n        \n            bcryptjs : ^2.4.3\n        \n            bullmq : ^5.5.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            css-inline : ^0.11.2\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.30.1\n        \n            nodemailer : ^6.9.7\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            pg : ^8.11.4\n        \n            postgres : ^3.3.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sqlite : ^5.0.1\n        \n            sqlite3 : ^5.1.6\n        \n            tmp : ^0.2.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoroutingEventType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            Condition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DestinationType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DicomTag   (src/.../autorouting.enum.ts)\n                        \n                        \n                            LevelType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            ProcessingJobType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingMask   (src/.../enums.ts)\n                        \n                        \n                            QueryAnswerType   (src/.../enums.ts)\n                        \n                        \n                            RuleCondition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            TagPolicies   (src/.../enums.ts)\n                        \n                        \n                            ValueRepresentation   (src/.../autorouting.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/autorouting/autorouting.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AutoroutingEventType\n                    \n                \n                        \n                            \n                                 NEW_INSTANCE\n                            \n                        \n                        \n                            \n                                Value : NewInstance\n                            \n                        \n                        \n                            \n                                 NEW_SERIES\n                            \n                        \n                        \n                            \n                                Value : NewSeries\n                            \n                        \n                        \n                            \n                                 NEW_STUDY\n                            \n                        \n                        \n                            \n                                Value : NewStudy\n                            \n                        \n                        \n                            \n                                 NEW_PATIENT\n                            \n                        \n                        \n                            \n                                Value : NewPatient\n                            \n                        \n                        \n                            \n                                 STABLE_SERIES\n                            \n                        \n                        \n                            \n                                Value : StableSeries\n                            \n                        \n                        \n                            \n                                 STABLE_STUDY\n                            \n                        \n                        \n                            \n                                Value : StableStudy\n                            \n                        \n                        \n                            \n                                 STABLE_PATIENT\n                            \n                        \n                        \n                            \n                                Value : StablePatient\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : EQUALS\n                            \n                        \n                        \n                            \n                                 DIFFERENT\n                            \n                        \n                        \n                            \n                                Value : DIFFERENT\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : NOT_IN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DestinationType\n                    \n                \n                        \n                            \n                                 AET\n                            \n                        \n                        \n                            \n                                Value : AET\n                            \n                        \n                        \n                            \n                                 TMTVJOB\n                            \n                        \n                        \n                            \n                                Value : TMTVJob\n                            \n                        \n                        \n                            \n                                 PEER\n                            \n                        \n                        \n                            \n                                Value : Peer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DicomTag\n                    \n                \n                        \n                            \n                                 PATIENT_NAME\n                            \n                        \n                        \n                            \n                                Value : PatientName\n                            \n                        \n                        \n                            \n                                 PATIENT_ID\n                            \n                        \n                        \n                            \n                                Value : PatientID\n                            \n                        \n                        \n                            \n                                 PATIENT_BIRTHDATE\n                            \n                        \n                        \n                            \n                                Value : PatientBirthDate\n                            \n                        \n                        \n                            \n                                 PATIENT_SEX\n                            \n                        \n                        \n                            \n                                Value : PatientSex\n                            \n                        \n                        \n                            \n                                 OTHER_PATIENT_IDS\n                            \n                        \n                        \n                            \n                                Value : OtherPatientIDs\n                            \n                        \n                        \n                            \n                                 STUDY_DATE\n                            \n                        \n                        \n                            \n                                Value : StudyDate\n                            \n                        \n                        \n                            \n                                 STUDY_TIME\n                            \n                        \n                        \n                            \n                                Value : StudyTime\n                            \n                        \n                        \n                            \n                                 STUDY_ID\n                            \n                        \n                        \n                            \n                                Value : StudyID\n                            \n                        \n                        \n                            \n                                 STUDY_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : StudyDescription\n                            \n                        \n                        \n                            \n                                 ACCESSION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AccessionNumber\n                            \n                        \n                        \n                            \n                                 STUDY_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : StudyInstanceUID\n                            \n                        \n                        \n                            \n                                 REQUESTED_PROCEDURE_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : RequestedProcedureDescription\n                            \n                        \n                        \n                            \n                                 INSTITUTION_NAME\n                            \n                        \n                        \n                            \n                                Value : InstitutionName\n                            \n                        \n                        \n                            \n                                 REQUESTING_PHYSICIAN\n                            \n                        \n                        \n                            \n                                Value : RequestingPhysician\n                            \n                        \n                        \n                            \n                                 REFERRING_PHYSICIAN_NAME\n                            \n                        \n                        \n                            \n                                Value : ReferringPhysicianName\n                            \n                        \n                        \n                            \n                                 SERIES_DATE\n                            \n                        \n                        \n                            \n                                Value : SeriesDate\n                            \n                        \n                        \n                            \n                                 SERIES_TIME\n                            \n                        \n                        \n                            \n                                Value : SeriesTime\n                            \n                        \n                        \n                            \n                                 MODALITY\n                            \n                        \n                        \n                            \n                                Value : Modality\n                            \n                        \n                        \n                            \n                                 MANUFACTURER\n                            \n                        \n                        \n                            \n                                Value : Manufacturer\n                            \n                        \n                        \n                            \n                                 STATION_NAME\n                            \n                        \n                        \n                            \n                                Value : StationName\n                            \n                        \n                        \n                            \n                                 SERIES_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : SeriesDescription\n                            \n                        \n                        \n                            \n                                 BODY_PART_EXAMINED\n                            \n                        \n                        \n                            \n                                Value : BodyPartExamined\n                            \n                        \n                        \n                            \n                                 SEQUENCE_NAME\n                            \n                        \n                        \n                            \n                                Value : SequenceName\n                            \n                        \n                        \n                            \n                                 PROTOCOL_NAME\n                            \n                        \n                        \n                            \n                                Value : ProtocolName\n                            \n                        \n                        \n                            \n                                 SERIES_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SeriesNumber\n                            \n                        \n                        \n                            \n                                 CARDIAC_NUMBER_OF_IMAGES\n                            \n                        \n                        \n                            \n                                Value : CardiacNumberOfImages\n                            \n                        \n                        \n                            \n                                 IMAGES_IN_ACQUISITION\n                            \n                        \n                        \n                            \n                                Value : ImagesInAcquisition\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TEMPORAL_POSITIONS\n                            \n                        \n                        \n                            \n                                Value : NumberOfTemporalPositions\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfSlices\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TIME_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfTimeSlices\n                            \n                        \n                        \n                            \n                                 SERIES_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SeriesInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_ORIENTATION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImageOrientationPatient\n                            \n                        \n                        \n                            \n                                 SERIES_TYPE\n                            \n                        \n                        \n                            \n                                Value : SeriesType\n                            \n                        \n                        \n                            \n                                 OPERATORS_NAME\n                            \n                        \n                        \n                            \n                                Value : OperatorsName\n                            \n                        \n                        \n                            \n                                 PERFORMED_PROCEDURE_STEP_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : PerformedProcedureStepDescription\n                            \n                        \n                        \n                            \n                                 ACQUISITION_DEVICE_PROCESSING_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : AcquisitionDeviceProcessingDescription\n                            \n                        \n                        \n                            \n                                 CONTRAST_BOLUS_AGENT\n                            \n                        \n                        \n                            \n                                Value : ContrastBolusAgent\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_DATE\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationDate\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_TIME\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationTime\n                            \n                        \n                        \n                            \n                                 ACQUISITION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AcquisitionNumber\n                            \n                        \n                        \n                            \n                                 IMAGE_INDEX\n                            \n                        \n                        \n                            \n                                Value : ImageIndex\n                            \n                        \n                        \n                            \n                                 INSTANCE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : InstanceNumber\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_FRAMES\n                            \n                        \n                        \n                            \n                                Value : NumberOfFrames\n                            \n                        \n                        \n                            \n                                 TEMPORAL_POSITION_IDENTIFIER\n                            \n                        \n                        \n                            \n                                Value : TemporalPositionIdentifier\n                            \n                        \n                        \n                            \n                                 SOP_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SOPInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_POSITION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImagePositionPatient\n                            \n                        \n                        \n                            \n                                 IMAGE_COMMENTS\n                            \n                        \n                        \n                            \n                                Value : ImageComments\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LevelType\n                    \n                \n                        \n                            \n                                 INSTANCES\n                            \n                        \n                        \n                            \n                                Value : instances\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 STUDIES\n                            \n                        \n                        \n                            \n                                Value : studies\n                            \n                        \n                        \n                            \n                                 PATIENTS\n                            \n                        \n                        \n                            \n                                Value : patients\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RuleCondition\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : AND\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueRepresentation\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n            \n        \n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProcessingJobType\n                    \n                \n                        \n                            \n                                 TMTV\n                            \n                        \n                        \n                            \n                                Value : tmtv\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingMask\n                    \n                \n                        \n                            \n                                 RTSS\n                            \n                        \n                        \n                            \n                                Value : rtss\n                            \n                        \n                        \n                            \n                                 SEG\n                            \n                        \n                        \n                            \n                                Value : seg\n                            \n                        \n                        \n                            \n                                 NIFTI\n                            \n                        \n                        \n                            \n                                Value : nifti\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryAnswerType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TagPolicies\n                    \n                \n                        \n                            \n                                 KEEP\n                            \n                        \n                        \n                            \n                                Value : Keep\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : Replace\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : Remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildSwagger   (src/.../main.ts)\n                        \n                        \n                            isSecondaryCapture   (src/.../anon.worker.ts)\n                        \n                        \n                            isTimeBetween   (src/.../is-time-between.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            OrGuard   (src/.../or.guard.ts)\n                        \n                        \n                            processSeries   (src/.../query.worker.ts)\n                        \n                        \n                            processStudy   (src/.../query.worker.ts)\n                        \n                        \n                            setupAnonWorker   (src/.../anon.worker.ts)\n                        \n                        \n                            setupDeleteWorker   (src/.../delete.worker.ts)\n                        \n                        \n                            setupProcessingWorker   (src/.../processing.worker.ts)\n                        \n                        \n                            setupQueryWorker   (src/.../query.worker.ts)\n                        \n                        \n                            setupWorkers   (src/.../main.ts)\n                        \n                        \n                            tmtvJob   (src/.../processing.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildSwagger\n                        \n                    \n                \n            \n            \n                \nbuildSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupWorkers\n                        \n                    \n                \n            \n            \n                \nsetupWorkers(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/anon/anon.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSecondaryCapture\n                        \n                    \n                \n            \n            \n                \nisSecondaryCapture(sopClassUid: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sopClassUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupAnonWorker\n                        \n                    \n                \n            \n            \n                \nsetupAnonWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/is-time-between.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTimeBetween\n                        \n                    \n                \n            \n            \n                \nisTimeBetween(startHour: number, startMinute: number, endHour: number, endMinute: number, currentHour: number, currentMinute: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/guards/or.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrGuard\n                        \n                    \n                \n            \n            \n                \nOrGuard(guards: Array, orGuardOptions?: OrGuardOptions)\n                \n            \n\n\n\n\n            \n                \n                        Guard testing an array of guards, activate at the first guard activation granted\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                guards\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of guards to be tested\n\n                                            \n                                        \n                                        \n                                                orGuardOptions\n                                            \n                                                            OrGuardOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    : optional}\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/query/query.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSeries\n                        \n                    \n                \n            \n            \n                \nprocessSeries(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processStudy\n                        \n                    \n                \n            \n            \n                \nprocessStudy(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupQueryWorker\n                        \n                    \n                \n            \n            \n                \nsetupQueryWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/delete/delete.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDeleteWorker\n                        \n                    \n                \n            \n            \n                \nsetupDeleteWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/processing/processing.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupProcessingWorker\n                        \n                    \n                \n            \n            \n                \nsetupProcessingWorker(orthancClient: OrthancClient, configService: ConfigService, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmtvJob\n                        \n                    \n                \n            \n            \n                \ntmtvJob(job: Job, orthancClient: OrthancClient, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoroutingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OauthConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrthancModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_providers\n\n\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nGuardsModule -->\n\nRolesModule->GuardsModule\n\n\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\nGuardsModule -->\n\nOrthancClient->GuardsModule\n\n\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\nInstanceGuard\n\nInstanceGuard\n\nGuardsModule -->\n\nInstanceGuard->GuardsModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nGuardsModule -->\n\nJwtAuthGuard->GuardsModule\n\n\n\n\n\nJwtOAuthGuard\n\nJwtOAuthGuard\n\nGuardsModule -->\n\nJwtOAuthGuard->GuardsModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nGuardsModule -->\n\nLocalAuthGuard->GuardsModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nGuardsModule -->\n\nSeriesGuard->GuardsModule\n\n\n\n\n\nLabelsService\n\nLabelsService\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : AGPLv3\n        \n            Author : Pixilib SAS\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildDocs   (src/.../build_docs.ts)\n                        \n                        \n                            checkLabelRoleStudy   (src/.../check-label-role-study.ts)\n                        \n                        \n                            comparePasswords   (src/.../passwords.ts)\n                        \n                        \n                            doReverseProxy   (src/.../utils.ts)\n                        \n                        \n                            generateRandomUUID   (src/.../passwords.ts)\n                        \n                        \n                            generateToken   (src/.../passwords.ts)\n                        \n                        \n                            getTokenExpiration   (src/.../passwords.ts)\n                        \n                        \n                            hashPassword   (src/.../passwords.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                        \n                            seeder   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/build_docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix('api');\n  const config = new DocumentBuilder()\n    .setTitle('GaelO Flow API')\n    .setDescription('The GaelO Flow API description')\n    .setVersion('2.0')\n    .addBearerAuth(\n      { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n      'access-token',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  writeFileSync('../openapi.json', JSON.stringify(document));\n  await app.close();\n  console.log('Documentation built -> openapi.json');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/check-label-role-study.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkLabelRoleStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  studyID: string,\n  role: string,\n  rolesService: RolesService,\n  orthancClient: OrthancClient,\n) => {\n  const labelsOfRole = (await rolesService.getRoleLabels(role)).map(\n    (label) => label.Name,\n  );\n  const labelsOfStudy = await orthancClient\n    .listLabels('studies', studyID)\n    .catch(() => {\n      return [];\n    });\n\n  return (\n    labelsOfRole.filter((value: string) => labelsOfStudy.includes(value))\n      .length > 0\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/passwords.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string, hash: string) => {\n  return bcryptjs.compare(password, hash);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomUUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const jobId = randomUUID();\n  return jobId;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const token = crypto.randomBytes(32).toString('hex');\n  const hash = await hashPassword(token);\n  return { token, hash };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (hours = 24): Date => {\n  return new Date(Date.now() + hours * 60 * 60 * 1000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const saltTest = await bcryptjs.genSalt();\n  const hash = await bcryptjs.hash(password, saltTest);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n\n    src/orthanc/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doReverseProxy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: Request,\n  response: Response,\n  orthancClient: OrthancClient,\n) => {\n  const url = request.url;\n  const orthancCalledApi = url.replace('/api', '');\n  const method = request.method;\n  const body = request.body;\n  orthancClient.streamAnswerToRes(orthancCalledApi, method, body, response, {\n    accept: request.headers.accept,\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n\n    src/interceptors/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/seeder/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  const seedservice = app.get(SeederService);\n\n  await seedservice.seed();\n  await app.close();\n\n  console.log('Seeding complete');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
