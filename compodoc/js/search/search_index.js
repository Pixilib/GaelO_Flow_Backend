var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractQueueService.html",[0,0.676,1,3.009]],["body/injectables/AbstractQueueService.html",[0,0.709,1,3.152,2,1.096,3,0.054,4,0.048,5,0.048,6,2.739,7,0.141,8,0.884,9,3.811,10,4.782,11,0.775,12,2.294,13,3.152,14,3.54,15,4.782,16,4.496,17,4.496,18,3.198,19,3.54,20,3.54,21,3.152,22,0.836,23,4.702,24,0.445,25,4.702,26,1.126,27,0.008,28,0.822,29,0.368,30,1.003,31,3.54,32,3.763,33,3.095,34,3.874,35,1.272,36,2.754,37,3.54,38,2.121,39,3.095,40,3.243,41,3.095,42,3.095,43,3.095,44,1.888,45,1.003,46,4.147,47,3.095,48,2.063,49,2.063,50,4.705,51,3.54,52,3.095,53,3.54,54,3.095,55,3.54,56,3.095,57,0.091,58,0.377,59,4.811,60,1.975,61,0.054,62,2.739,63,0.125,64,3.095,65,2.32,66,3.095,67,3.095,68,4.702,69,4.702,70,3.095,71,2.739,72,1.788,73,5.162,74,6.351,75,2.739,76,6.351,77,4.702,78,5.622,79,4.702,80,3.095,81,4.702,82,3.095,83,3.095,84,1.44,85,4.162,86,2.739,87,2.739,88,2.739,89,2.739,90,2.739,91,2.739,92,2.739,93,2.739,94,2.739,95,2.739,96,4.603,97,2.739,98,3.095,99,2.739,100,3.806,101,2.739,102,2.739,103,2.739,104,1.531,105,4.162,106,2.739,107,4.162,108,3.243,109,4.702,110,1.046,111,3.095,112,2.074,113,2.739,114,3.095,115,3.095,116,3.095,117,3.095,118,2.739,119,3.095,120,0.006,121,2.739,122,3.095,123,1.838,124,3.806,125,5.033,126,2.739,127,2.739,128,3.095,129,0.004]],["title/guards/AdminGuard.html",[130,2.068,131,1.711]],["body/guards/AdminGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,2.198,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,137,4.088,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216]],["title/guards/AnonymizeGuard.html",[130,2.068,147,2.199]],["body/guards/AnonymizeGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.825,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,166,4.088]],["title/controllers/AppController.html",[167,1.187,168,3.38]],["body/controllers/AppController.html",[3,0.109,4,0.097,5,0.097,7,0.288,11,1.264,12,2.093,22,1.704,24,0.343,27,0.008,35,1.017,57,0.159,58,0.768,61,0.109,63,0.256,104,1.291,120,0.007,129,0.007,167,2.028,168,5.774,169,1.944,170,5.581,171,8.597,172,1.135,173,6.306,174,6.306,175,8.597,176,6.306,177,6.306,178,4.023,179,6.306,180,4.156,181,5.104,182,7.668,183,1.135,184,6.306,185,6.306,186,6.306,187,4.463,188,6.306]],["title/modules/AppModule.html",[189,1.482,190,3.38]],["body/modules/AppModule.html",[3,0.065,4,0.058,5,0.058,11,0.621,24,0.205,26,0.568,27,0.008,28,0.414,29,0.26,30,0.506,35,0.608,48,1.368,57,0.176,58,0.459,61,0.065,63,0.153,84,1.771,120,0.005,129,0.005,141,1.687,168,4.809,169,1.969,189,2.108,190,7.016,191,2.435,192,1.737,193,1.846,194,1.846,195,1.846,196,3.128,197,1.79,198,3.336,199,3.336,200,3.336,201,5.47,202,5.47,203,5.47,204,5.47,205,5.47,206,5.47,207,5.47,208,5.47,209,5.47,210,5.47,211,5.47,212,5.47,213,5.179,214,5.179,215,2.665,216,1.846,217,1.846,218,3.769,219,3.128,220,3.769,221,5.442,222,6.993,223,3.769,224,3.769,225,1.846,226,5.442,227,3.769,228,2.12,229,1.64,230,4.817,231,3.659,232,1.972,233,3.051,234,3.769,235,5.442,236,2.838,237,4.097,238,3.769,239,3.769,240,3.051,241,3.769,242,3.769,243,3.769,244,2.838,245,3.769,246,2.205,247,1.972,248,3.769,249,3.769,250,2.668,251,2.668,252,3.769,253,3.336,254,3.769,255,3.769,256,3.769,257,3.769,258,3.769,259,3.769,260,3.769,261,3.769,262,3.769,263,3.769,264,3.769,265,3.769,266,3.769,267,3.769,268,3.769,269,3.769,270,3.769,271,3.051,272,3.051,273,3.769,274,3.769,275,6.564,276,2.526,277,3.769,278,2.668,279,2.668,280,3.769,281,3.769,282,3.336,283,3.769,284,1.972,285,3.769,286,3.769,287,3.769,288,3.051,289,3.051,290,3.769,291,3.769,292,3.336,293,3.336,294,3.769,295,3.051,296,3.051,297,3.769]],["title/controllers/AuthController.html",[167,1.187,298,3.38]],["body/controllers/AuthController.html",[3,0.053,4,0.047,5,0.047,7,0.139,11,0.766,12,2.16,22,0.823,24,0.369,26,1.022,27,0.008,28,0.746,29,0.375,30,0.91,35,1.094,36,1.465,40,2.207,57,0.159,58,0.371,61,0.053,63,0.124,65,2.459,72,1.676,104,0.952,108,2.207,110,1.57,120,0.004,129,0.004,142,2.592,144,2.091,167,1.89,169,0.94,172,1.221,178,2.965,180,3.874,181,2.467,183,0.549,284,4.109,298,3.499,299,2.698,300,4.202,301,4.648,302,4.648,303,4.648,304,5.633,305,6.785,306,4.648,307,4.648,308,6.302,309,3.048,310,5.771,311,6.005,312,4.021,313,3.048,314,5.101,315,5.578,316,4.648,317,3.048,318,3.048,319,3.048,320,3.874,321,5.633,322,3.297,323,3.048,324,3.048,325,3.048,326,4.223,327,3.048,328,5.108,329,3.294,330,3.048,331,3.048,332,3.048,333,3.323,334,3.048,335,3.048,336,3.048,337,3.048,338,3.048,339,5.598,340,3.762,341,3.048,342,3.048,343,3.048,344,1.404,345,3.048,346,3.048,347,2.295,348,1.859,349,2.043,350,1.326,351,5.492,352,3.048,353,4.415,354,1.326,355,2.295,356,3.048,357,2.295,358,3.048,359,3.048,360,3.594,361,2.467,362,2.85,363,1.945,364,3.499,365,3.048,366,3.048,367,4.648,368,3.776,369,2.698,370,3.048,371,3.048,372,3.048,373,2.147,374,4.342,375,5.633,376,2.519,377,4.648,378,3.048,379,3.048,380,3.048,381,3.048,382,3.048,383,2.698,384,3.048,385,3.048,386,3.048,387,3.762,388,3.048,389,3.762,390,2.45,391,1.995,392,2.467,393,2.286,394,6.302,395,4.648,396,4.648,397,2.614,398,3.048,399,2.614,400,3.048,401,2.718,402,3.048,403,2.698,404,3.048,405,3.048,406,3.048,407,4.648,408,3.048,409,1.783,410,2.698,411,3.048,412,3.048,413,3.048,414,4.114,415,3.048,416,3.048,417,3.048,418,3.048,419,3.048,420,3.048,421,4.56,422,4.114,423,3.048,424,3.048,425,2.698,426,3.048,427,3.048,428,2.698,429,3.048,430,3.048,431,2.698,432,3.048,433,3.048,434,2.467]],["title/modules/AuthModule.html",[189,1.482,201,3.177]],["body/modules/AuthModule.html",[3,0.079,4,0.07,5,0.07,27,0.008,57,0.177,58,0.555,61,0.079,63,0.185,120,0.005,129,0.005,144,1.406,169,1.918,189,2.337,191,2.041,192,2.101,193,2.234,194,2.234,195,2.234,196,3.468,197,3.362,201,6.566,213,5.506,215,3.047,216,2.234,217,2.234,219,3.047,228,2.565,229,1.984,231,3.704,232,2.386,236,3.434,246,3.639,247,3.255,253,4.037,271,3.692,272,3.692,292,4.037,293,4.037,298,5.331,360,5.698,361,3.692,362,4.156,363,2.91,368,5.506,369,4.037,435,4.037,436,4.561,437,4.037,438,4.037,439,5.506,440,5.815,441,5.815,442,4.452,443,4.561,444,6.221,445,4.561,446,3.228,447,6.221,448,3.434,449,4.561,450,3.434,451,4.561,452,4.561,453,4.684,454,4.561,455,3.969,456,3.434,457,3.434,458,4.561,459,2.91,460,4.561,461,2.782,462,4.561,463,4.561,464,4.561,465,4.561,466,4.561,467,4.037]],["title/injectables/AuthService.html",[0,0.676,360,2.864]],["body/injectables/AuthService.html",[0,0.904,2,1.533,3,0.075,4,0.067,5,0.067,7,0.197,11,0.989,12,2.242,22,1.621,24,0.425,26,1.177,27,0.008,28,0.859,29,0.373,30,1.048,35,1.199,36,2.549,38,2.031,40,3.71,45,1.151,57,0.15,58,0.527,61,0.075,63,0.175,65,2.391,72,1.634,84,1.096,104,1.6,108,2.849,120,0.005,129,0.005,144,2.767,178,2.762,305,5.312,329,2.765,348,2.64,360,3.829,362,4.09,363,2.762,373,2.288,390,2.611,391,2.44,393,2.699,414,5.312,425,3.831,431,3.831,434,5.576,446,3.064,450,3.259,468,3.831,469,6.001,470,6.001,471,6.889,472,4.328,473,6.71,474,4.328,475,6.001,476,4.328,477,6.001,478,4.328,479,6.001,480,6.098,481,4.328,482,4.328,483,4.328,484,3.504,485,4.858,486,4.858,487,2.762,488,4.328,489,6.889,490,1.994,491,3.504,492,3.504,493,3.831,494,2.055,495,3.831,496,4.328,497,4.328,498,5.312,499,6.001,500,6.001,501,4.328,502,3.064,503,4.328,504,4.328,505,6.001,506,4.328,507,4.328]],["title/guards/AutoQueryGuard.html",[130,2.068,153,2.271]],["body/guards/AutoQueryGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.917,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,508,4.088]],["title/guards/AutoRoutingGuard.html",[130,2.068,162,2.199]],["body/guards/AutoRoutingGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.825,163,2.216,164,2.002,165,2.216,509,4.088]],["title/entities/Autorouting.html",[510,2.068,511,2.131]],["body/entities/Autorouting.html",[3,0.071,4,0.063,5,0.063,7,0.186,8,1.08,24,0.416,27,0.008,28,1.008,29,0.425,30,0.771,38,2.135,45,0.971,49,2.772,57,0.153,61,0.126,63,0.321,84,1.456,120,0.005,123,2.987,129,0.005,139,1.813,172,1.375,183,0.733,510,2.649,511,2.73,512,2.597,513,2.881,514,5.126,515,4.718,516,5.4,517,5.395,518,4.071,519,4.071,520,4.065,521,1.313,522,3.065,523,4.071,524,4.071,525,3.603,526,4.071,527,3.295,528,4.071,529,4.071,530,4.071,531,5.423,532,3.853,533,1.771,534,2.58,535,3.116,536,2.289,537,2.478,538,2.483,539,5.453,540,1.284,541,5.12,542,3.853,543,5.126,544,4.467,545,4.854,546,2.597,547,2.483,548,2.597,549,3.065,550,4.253,551,2.509,552,4.329,553,3.065,554,3.065,555,4.069,556,3.065,557,3.065,558,3.065,559,4.329,560,3.065,561,4.874,562,4.329,563,3.065,564,3.065,565,3.065,566,3.065,567,4.329,568,5.018,569,3.363,570,4.329,571,2.881,572,3.065,573,2.881]],["title/injectables/AutoroutingHandler.html",[0,0.676,574,3.177]],["body/injectables/AutoroutingHandler.html",[0,0.602,2,0.89,3,0.044,4,0.039,5,0.039,7,0.115,8,0.751,11,0.659,12,1.962,22,1.08,24,0.441,26,1.167,27,0.008,28,0.852,29,0.382,30,1.039,32,1.314,34,4.221,35,1.249,38,2.418,45,1.121,48,1.451,49,2.686,57,0.146,58,0.306,61,0.044,63,0.102,65,1.637,72,1.587,84,0.636,104,1.696,110,1.917,120,0.004,123,1.563,129,0.004,139,2.485,172,0.719,250,1.778,251,1.778,373,3.328,428,2.224,491,5.016,511,3.411,516,3.622,520,1.532,541,1.684,542,1.684,544,1.684,545,1.684,546,1.603,550,5.752,555,3.524,561,4.211,571,2.83,574,2.83,575,2.224,576,4.979,577,4.979,578,5.676,579,3.998,580,3.998,581,3.998,582,3.998,583,3.998,584,3.998,585,5.676,586,4.979,587,3.998,588,3.998,589,2.512,590,3.622,591,4.221,592,3.097,593,2.512,594,3.539,595,3.998,596,2.512,597,3.998,598,5.211,599,3.998,600,2.512,601,3.998,602,2.512,603,3.998,604,2.512,605,3.998,606,2.512,607,3.998,608,2.512,609,3.998,610,2.512,611,2.512,612,2.512,613,2.512,614,2.512,615,2.512,616,2.512,617,2.512,618,3.779,619,4.407,620,5.676,621,2.512,622,3.998,623,2.512,624,3.998,625,3.998,626,5.676,627,3.998,628,6.196,629,3.998,630,5.676,631,3.998,632,3.998,633,3.998,634,2.512,635,2.512,636,2.512,637,2.034,638,2.512,639,2.034,640,1.778,641,1.271,642,1.271,643,3.539,644,2.224,645,1.603,646,1.892,647,1.684,648,1.271,649,2.512,650,2.512,651,2.224,652,7.184,653,4.979,654,3.998,655,2.512,656,3.998,657,2.512,658,3.998,659,3.998,660,2.512,661,3.998,662,3.998,663,1.778,664,3.998,665,4.979,666,3.539,667,2.512,668,2.512,669,3.954,670,2.224,671,2.338,672,2.512,673,2.512,674,2.512,675,2.034,676,3.998,677,2.512,678,4.979,679,2.512,680,2.512,681,2.512,682,2.512,683,2.512,684,2.512,685,3.539,686,3.998,687,2.512,688,3.539,689,2.512,690,3.749,691,2.512,692,2.034,693,2.512,694,1.684,695,1.892,696,1.892,697,2.034,698,2.224,699,2.224,700,2.034,701,2.512,702,2.512,703,2.512,704,3.539,705,2.512,706,2.512,707,2.512,708,2.512,709,3.998,710,2.512,711,2.512,712,2.512,713,2.512,714,2.512,715,2.512,716,2.512,717,2.224,718,2.512,719,2.512]],["title/controllers/AutoroutingsController.html",[167,1.187,720,3.38]],["body/controllers/AutoroutingsController.html",[3,0.063,4,0.057,5,0.057,7,0.167,11,0.878,12,2.229,24,0.399,26,1.039,27,0.008,28,0.868,29,0.41,30,0.925,35,1.182,36,2.643,38,2.532,57,0.147,58,0.446,61,0.063,63,0.148,65,2.207,84,2,104,1.286,120,0.005,123,3.441,129,0.005,162,1.793,167,0.968,169,1.129,172,1.319,183,0.659,300,4.286,312,3.4,320,4.385,322,4.385,333,2.61,344,2.455,350,1.593,353,4.602,354,1.593,374,4.542,376,3.973,393,2.66,490,2.894,511,4.077,590,3.4,594,3.241,639,2.963,640,2.591,651,3.241,720,4.012,721,3.241,722,2.059,723,6.282,724,5.328,725,5.328,726,5.328,727,6.899,728,3.661,729,5.76,730,3.751,731,4.288,732,2.887,733,3.661,734,3.661,735,3.661,736,3.661,737,3.661,738,6.282,739,6.282,740,3.069,741,3.661,742,3.661,743,3.661,744,4.716,745,3.661,746,3.661,747,3.661,748,4.716,749,3.661,750,3.661,751,2.233,752,3.661,753,3.661,754,2.059,755,3.661,756,5.328,757,1.638,758,4.402,759,1.687,760,2.963,761,3.661,762,3.661,763,3.661,764,1.469,765,7.331,766,3.661,767,3.241,768,3.661,769,3.241,770,3.661,771,3.661,772,3.661,773,3.661,774,3.661,775,3.661,776,3.661,777,3.661,778,3.661]],["title/modules/AutoroutingsModule.html",[189,1.482,202,3.177]],["body/modules/AutoroutingsModule.html",[3,0.1,4,0.089,5,0.089,27,0.008,57,0.173,58,0.7,61,0.1,63,0.233,120,0.006,129,0.006,169,2.233,189,2.617,191,2.573,192,2.649,193,2.816,194,2.816,195,2.816,196,3.883,197,2.73,202,6.542,215,3.547,216,2.816,217,2.816,219,2.816,228,3.233,229,2.501,511,2.73,574,6.199,590,5.588,591,5.342,592,3.919,639,4.654,640,4.069,641,2.908,642,2.908,644,5.089,645,3.668,720,5.97,779,5.089,780,5.089,781,5.749,782,5.749,783,5.749,784,5.749]],["title/injectables/AutoroutingsService.html",[0,0.676,590,2.864]],["body/injectables/AutoroutingsService.html",[0,0.861,2,1.429,3,0.07,4,0.062,5,0.062,7,0.184,11,0.942,12,2.339,22,1.544,24,0.459,26,1.251,27,0.008,28,0.913,29,0.397,30,1.114,35,1.339,36,2.832,38,2.634,57,0.152,58,0.491,61,0.07,63,0.164,65,2.47,72,1.195,84,1.447,104,1.358,110,1.363,120,0.005,123,3.178,129,0.005,229,1.755,250,2.856,251,2.856,373,2.178,511,4.265,514,2.856,515,5.106,520,4.4,533,1.755,546,2.575,590,3.646,640,2.856,717,5.057,732,3.096,744,5.057,748,5.057,785,3.572,786,4.835,787,6.633,788,5.714,789,3.096,790,3.646,791,4.035,792,4.4,793,5.871,794,6.385,795,4.035,796,5.714,797,5.714,798,4.035,799,5.714,800,4.035,801,5.714,802,4.035,803,4.035,804,4.035,805,4.035,806,5.714,807,4.035,808,5.057,809,4.035,810,4.625,811,4.035,812,2.575,813,4.035,814,5.714,815,4.035,816,4.035,817,6.633,818,4.035,819,4.035,820,5.714,821,5.057]],["title/guards/CdBurnerGuard.html",[130,2.068,160,2.271]],["body/guards/CdBurnerGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.917,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,822,4.088]],["title/classes/ChangePasswordDto.html",[63,0.182,310,3.38]],["body/classes/ChangePasswordDto.html",[3,0.093,4,0.083,5,0.083,7,0.246,8,1.305,24,0.442,27,0.008,29,0.388,38,2.048,40,3.651,45,1.155,57,0.134,61,0.093,63,0.282,120,0.006,129,0.006,172,1.462,183,0.969,284,3.634,310,5.23,393,2.79,421,6.224,422,6.806,521,2.241,534,2.425,537,3.021,540,1.698,551,2.094,823,1.394,824,7.443,825,4.359,826,5.385,827,5.385,828,5.385,829,6.946,830,6.946,831,6.946,832,6.946,833,6.148,834,6.946,835,8.876,836,6.946,837,8.124,838,6.946,839,6.946,840,6.946,841,6.946,842,5.385,843,5.385,844,5.385,845,5.385,846,5.385,847,6.331,848,5.23,849,4.766,850,5.385,851,6.946,852,5.385,853,5.385]],["title/guards/CheckUserIdGuard.html",[130,2.068,854,3.177]],["body/guards/CheckUserIdGuard.html",[0,1.079,3,0.098,4,0.087,5,0.087,7,0.258,8,1.061,11,1.18,22,1.525,24,0.389,26,1.079,27,0.008,28,0.787,29,0.342,30,0.96,35,0.91,40,3.399,45,1.109,46,3.925,49,2.853,57,0.109,58,0.687,61,0.098,63,0.229,72,1.644,104,1.61,120,0.006,129,0.006,132,2.68,134,3.925,135,3.399,136,3.809,138,2.601,139,2.257,141,2.526,142,1.863,143,2.856,144,2.424,764,2.265,854,5.067,855,6.364,856,4.997,857,6.337,858,4.997,859,5.645,860,6.337,861,5.645,862,2.389,863,6.959,864,4.997,865,4.997,866,6.337,867,4.569,868,6.337,869,4.997,870,4.997,871,5.645]],["title/guards/CheckUserRoleGuard.html",[130,2.068,872,3.38]],["body/guards/CheckUserRoleGuard.html",[0,1.079,3,0.098,4,0.087,5,0.087,7,0.258,8,1.061,11,1.18,22,1.525,24,0.389,26,1.079,27,0.008,28,0.787,29,0.342,30,0.96,35,0.91,45,1.109,46,3.925,49,2.853,57,0.109,58,0.687,61,0.098,63,0.229,72,1.644,104,1.61,120,0.006,129,0.006,132,2.68,134,3.925,135,3.399,136,3.809,138,2.601,139,2.257,141,2.526,142,1.863,143,2.856,144,2.424,764,2.265,855,6.364,857,6.337,858,4.997,860,6.337,862,2.389,863,6.959,864,4.997,865,4.997,866,6.337,867,4.569,868,6.337,869,4.997,870,4.997,872,5.39,873,4.997,874,5.645,875,5.645,876,7.159,877,5.645]],["title/classes/CreateAutoroutingDto.html",[63,0.182,729,3.38]],["body/classes/CreateAutoroutingDto.html",[3,0.118,4,0.105,5,0.105,27,0.008,57,0.155,61,0.118,63,0.276,72,1.68,120,0.007,123,3.14,129,0.007,183,1.226,511,3.234,640,4.821,729,6.047,823,1.763,878,6.029,879,6.029,880,3.7,881,8.031,882,6.812]],["title/classes/CreateOptionDto.html",[63,0.182,883,3.177]],["body/classes/CreateOptionDto.html",[3,0.058,4,0.052,5,0.052,7,0.153,8,0.941,24,0.478,27,0.008,29,0.42,38,2.422,45,1.186,48,3.307,57,0.096,61,0.058,63,0.203,84,1.514,110,3.119,120,0.004,129,0.004,139,2.34,172,1.583,183,0.605,521,2.837,534,2.551,535,3.588,537,3.172,540,1.06,551,2.651,740,3.656,823,0.87,848,5.587,883,3.542,884,7.828,885,2.532,886,4.839,887,4.839,888,4.839,889,4.839,890,5.291,891,5.291,892,5.291,893,5.291,894,5.291,895,5.291,896,5.291,897,5.291,898,5.291,899,5.291,900,5.291,901,5.291,902,5.291,903,3.362,904,3.362,905,3.362,906,3.362,907,5.005,908,3.362,909,3.362,910,4.43,911,3.362,912,5.291,913,3.362,914,3.362,915,3.362,916,3.362,917,5.291,918,3.362,919,3.362,920,3.362,921,4.501,922,3.362,923,3.362,924,2.722,925,3.362,926,5.291,927,3.362,928,3.362,929,6.568,930,5.005,931,3.362,932,3.362,933,3.362,934,5.291,935,3.362,936,3.362,937,2.722,938,3.193,939,2.532]],["title/classes/CreateRoleDto.html",[63,0.182,940,3.177]],["body/classes/CreateRoleDto.html",[3,0.071,4,0.064,5,0.064,7,0.188,8,1.088,24,0.477,27,0.008,28,0.737,29,0.419,45,0.777,57,0.148,61,0.126,63,0.235,84,2.381,120,0.005,129,0.005,139,2.903,172,1.579,183,0.74,490,3.088,511,3.182,521,2.83,534,2.551,535,4.755,537,2.153,540,1.297,551,2.645,740,3.712,823,1.064,924,7.036,940,4.099,941,7.828,942,3.329,943,4.677,944,5.046,945,5.425,946,5.425,947,5.425,948,3.39,949,5.425,950,4.112,951,4.112,952,4.112,953,4.112,954,4.112,955,4.112,956,4.112,957,4.112,958,4.112,959,2.756,960,3.64,961,4.112,962,4.112]],["title/classes/CreateUserDto.html",[63,0.182,963,3.38]],["body/classes/CreateUserDto.html",[3,0.09,4,0.081,5,0.081,7,0.238,8,1.278,24,0.453,27,0.008,29,0.398,45,1.206,57,0.131,61,0.09,63,0.276,84,2.033,120,0.006,129,0.006,172,1.498,183,0.938,284,4.355,329,3.488,397,4.258,399,4.258,401,4.428,521,2.685,534,2.462,535,2.826,537,3.095,540,1.644,551,2.509,740,3.537,823,1.349,833,6.021,849,4.615,943,4.149,959,5.075,963,5.122,964,7.555,965,3.926,966,5.506,967,4.615,968,4.615,969,5.122,970,4.615,971,5.122,972,4.615,973,5.214,974,6.803,975,6.803,976,6.803,977,6.803,978,6.803,979,4.615,980,4.615,981,5.506,982,5.214,983,5.214]],["title/guards/DeleteGuard.html",[130,2.068,155,2.131]],["body/guards/DeleteGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,2.738,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,984,4.088]],["title/classes/Destination.html",[63,0.182,561,2.864]],["body/classes/Destination.html",[3,0.075,4,0.066,5,0.066,7,0.196,8,1.123,24,0.325,27,0.008,28,1.014,29,0.415,38,2.025,45,0.995,49,2.829,57,0.155,61,0.129,63,0.327,84,1.514,120,0.005,123,2.336,129,0.005,139,1.356,172,1.075,183,0.774,510,2.753,511,2.042,513,3.045,514,4.23,515,3.045,516,4.974,517,3.482,520,3.645,521,1.388,522,3.239,527,3.482,531,5.469,532,4.005,533,1.871,534,2.601,535,3.238,536,2.419,537,2.553,538,2.624,539,5.586,540,1.356,541,5.225,542,4.602,543,5.251,544,4.602,545,4.973,546,2.745,547,2.624,548,2.745,549,3.239,550,4.381,551,2.544,552,4.499,553,3.239,554,3.239,555,4.23,556,3.239,557,3.239,558,3.239,559,4.499,560,3.239,561,5.384,562,4.499,563,3.239,564,3.239,565,3.239,566,3.239,567,4.499,568,5.17,569,3.495,570,4.499,571,3.045,572,3.239,573,3.045,823,1.113,985,4.302,986,4.302,987,4.302]],["title/guards/ExportGuard.html",[130,2.068,149,2.199]],["body/guards/ExportGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.825,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,988,4.088]],["title/classes/GetOptionDto.html",[63,0.182,989,3.38]],["body/classes/GetOptionDto.html",[3,0.092,4,0.082,5,0.082,7,0.241,8,1.291,24,0.466,27,0.008,29,0.41,45,1.226,57,0.147,61,0.092,63,0.278,120,0.006,129,0.006,172,1.543,183,0.953,521,2.765,534,2.517,537,3.415,540,1.669,551,2.584,732,2.869,823,1.37,880,3.165,883,3.747,885,3.985,989,5.172,990,7.723,991,6.08,992,6.75,993,6.75,994,6.75,995,6.75,996,6.75,997,6.75,998,5.293,999,5.293,1000,5.293,1001,5.293,1002,5.293,1003,5.293,1004,4.285,1005,3.985]],["title/classes/GetRoleDto.html",[63,0.182,1006,3.38]],["body/classes/GetRoleDto.html",[3,0.111,4,0.099,5,0.099,7,0.292,8,1.453,24,0.348,27,0.008,29,0.305,30,1.037,46,3.035,48,2.805,57,0.16,61,0.111,63,0.259,108,3.035,110,2.612,120,0.007,129,0.007,172,1.15,183,1.15,534,2.23,732,3.464,740,2.565,823,1.654,880,3.562,940,4.524,942,5.174,960,5.658,1004,5.174,1006,5.822,1007,6.844,1008,7.732,1009,5.571,1010,4.205,1011,5.174,1012,5.658,1013,4.284]],["title/classes/GetUserDto.html",[63,0.182,1014,3.38]],["body/classes/GetUserDto.html",[3,0.09,4,0.081,5,0.081,7,0.238,8,1.278,24,0.464,27,0.008,29,0.408,30,0.912,38,2.006,45,1.183,57,0.146,61,0.09,63,0.276,84,2.033,120,0.006,123,2.96,129,0.006,172,1.536,183,0.938,329,3.488,397,4.258,399,4.258,401,4.428,494,4.053,521,2.589,534,2.508,535,2.826,537,2.984,540,1.644,551,2.419,740,3.537,823,1.349,848,5.122,943,4.149,959,5.075,965,3.926,966,5.506,967,4.615,969,5.122,971,5.122,979,4.615,981,5.506,1014,5.122,1015,7.696,1016,5.214,1017,5.214,1018,5.214,1019,5.214,1020,5.214,1021,5.214,1022,5.214,1023,5.214,1024,3.926,1025,5.214]],["title/classes/HttpClient.html",[63,0.182,1026,3.634]],["body/classes/HttpClient.html",[3,0.046,4,0.041,5,0.041,7,0.122,8,0.791,9,5.572,11,0.694,12,1.914,24,0.464,26,1.107,27,0.008,28,0.808,29,0.397,30,0.986,32,4.519,34,3.168,35,1.185,36,1.855,45,1.26,46,2.466,48,2.575,49,2.575,57,0.081,61,0.046,63,0.109,65,1.214,72,1.484,104,1.505,108,2.466,120,0.004,129,0.004,142,1.715,178,1.71,187,6.036,225,3.476,282,6.006,284,3.55,296,7.1,322,1.402,333,4.231,390,2.56,461,1.635,823,0.694,1026,3.406,1027,2.373,1028,5.195,1029,5.195,1030,4.205,1031,5.195,1032,5.195,1033,5.195,1034,5.195,1035,5.195,1036,4.208,1037,4.208,1038,4.208,1039,4.208,1040,4.208,1041,5.195,1042,2.681,1043,2.681,1044,2.681,1045,2.681,1046,2.681,1047,2.681,1048,2.681,1049,2.681,1050,2.681,1051,2.681,1052,2.681,1053,2.681,1054,2.681,1055,2.681,1056,4.208,1057,2.681,1058,4.208,1059,4.208,1060,2.681,1061,4.208,1062,4.208,1063,2.681,1064,4.208,1065,2.681,1066,4.208,1067,2.681,1068,2.681,1069,5.195,1070,5.885,1071,2.681,1072,5.209,1073,3.079,1074,1.568,1075,6.381,1076,2.681,1077,3.168,1078,2.681,1079,4.208,1080,2.373,1081,4.208,1082,4.208,1083,2.681,1084,2.681,1085,4.208,1086,2.681,1087,4.208,1088,3.309,1089,6.394,1090,5.195,1091,5.69,1092,2.681,1093,5.195,1094,3.725,1095,2.681,1096,4.208,1097,2.681,1098,2.681,1099,2.681,1100,4.208,1101,2.681,1102,2.681,1103,2.681,1104,2.681,1105,2.681,1106,2.681,1107,2.681,1108,2.681,1109,2.681,1110,2.681,1111,2.681,1112,2.681,1113,2.681,1114,2.681]],["title/guards/ImportGuard.html",[130,2.068,140,2.199]],["body/guards/ImportGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.825,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,1115,4.088]],["title/classes/IsNumberOrString.html",[63,0.182,548,2.864]],["body/classes/IsNumberOrString.html",[3,0.103,4,0.092,5,0.092,7,0.271,11,1.219,12,1.506,24,0.402,26,1.114,27,0.008,28,0.885,29,0.353,30,0.992,35,1.192,38,2.374,45,1.13,49,2.157,57,0.114,61,0.103,63,0.3,104,1.514,110,2.008,120,0.007,129,0.007,139,1.874,141,3.309,538,4.51,540,1.874,548,4.719,823,1.538,1116,7.125,1117,5.262,1118,8.05,1119,7.395,1120,7.395,1121,8.956,1122,5.945,1123,8.423,1124,7.395,1125,5.945,1126,8.05,1127,7.395,1128,7.395]],["title/injectables/JwtAuthGuard.html",[0,0.676,453,3.38]],["body/injectables/JwtAuthGuard.html",[0,1.116,2,2.11,3,0.103,4,0.092,5,0.092,7,0.272,11,1.221,22,1.61,24,0.403,26,1.116,27,0.008,28,0.814,29,0.354,30,0.993,35,0.96,57,0.162,58,0.725,61,0.103,63,0.241,72,1.246,84,1.509,104,1.516,120,0.007,129,0.007,134,3.516,135,3.516,136,3.884,138,2.745,236,4.485,453,5.575,764,2.39,880,3.412,1129,5.273,1130,7.405,1131,5.957,1132,8.837,1133,5.957,1134,5.957,1135,4.822,1136,3.633,1137,4.822,1138,5.957,1139,3.801,1140,6.554,1141,5.957,1142,5.957,1143,5.957,1144,5.957]],["title/injectables/JwtOAuthGuard.html",[0,0.676,357,3.38]],["body/injectables/JwtOAuthGuard.html",[0,1.222,2,2.454,3,0.12,4,0.107,5,0.107,27,0.008,57,0.156,58,0.843,61,0.12,63,0.281,120,0.007,129,0.007,357,6.108,880,3.738,1135,5.609,1136,4.226,1145,6.133,1146,6.133,1147,8.112]],["title/injectables/JwtOauthStrategy.html",[0,0.676,439,3.009]],["body/injectables/JwtOauthStrategy.html",[0,0.83,2,1.359,3,0.067,4,0.059,5,0.059,7,0.175,11,0.909,12,2.246,22,1.489,24,0.423,26,1.171,27,0.008,28,0.881,29,0.371,30,1.043,32,4.067,35,1.204,36,2.671,45,1.189,57,0.154,58,0.467,61,0.067,63,0.156,65,2.364,72,1.714,104,1.529,120,0.005,129,0.005,139,1.21,187,2.716,246,2.244,247,2.007,329,2.539,347,2.889,373,2.459,387,5.221,389,3.106,390,3.067,391,2.497,392,5.221,393,2.821,397,2.158,399,2.158,439,3.694,442,4.34,446,2.716,448,2.889,459,2.448,461,3.362,473,6.293,492,3.106,538,3.362,675,4.461,862,2.73,880,2.539,1073,2.007,1075,3.106,1091,4.15,1136,2.34,1139,2.448,1148,6.483,1149,3.106,1150,4.15,1151,5.512,1152,5.512,1153,5.512,1154,5.512,1155,3.837,1156,7.089,1157,3.837,1158,4.878,1159,3.837,1160,6.241,1161,4.878,1162,3.837,1163,3.837,1164,4.878,1165,3.837,1166,4.878,1167,3.837,1168,4.878,1169,3.837,1170,2.889,1171,2.889,1172,2.716,1173,2.889,1174,4.15,1175,5.709,1176,2.889,1177,2.716,1178,2.889,1179,3.396,1180,3.396,1181,3.396,1182,3.396,1183,4.878,1184,3.396,1185,3.396,1186,3.396,1187,3.396,1188,3.396,1189,2.716,1190,3.396,1191,3.396,1192,3.396,1193,3.396,1194,3.396,1195,3.396,1196,3.396,1197,3.396,1198,3.396,1199,3.396,1200,3.396,1201,3.396,1202,3.396,1203,3.396,1204,3.396,1205,3.396]],["title/injectables/JwtStrategy.html",[0,0.676,440,3.177]],["body/injectables/JwtStrategy.html",[0,1.11,2,2.092,3,0.102,4,0.091,5,0.091,7,0.269,11,1.214,12,2.033,22,1.596,24,0.401,26,1.11,27,0.008,28,0.81,29,0.352,30,0.988,35,0.952,40,2.805,57,0.162,58,0.719,61,0.102,63,0.239,104,1.209,110,1.995,120,0.006,129,0.006,178,3.769,231,4.613,232,3.09,329,2.722,440,5.214,457,4.448,491,4.781,494,2.805,538,4.493,764,2.37,862,2.5,880,3.394,1136,3.603,1139,3.769,1150,5.546,1170,4.448,1171,4.448,1172,4.181,1206,5.228,1207,4.181,1208,5.907,1209,7.366,1210,5.907,1211,5.907,1212,5.907,1213,5.907,1214,5.907,1215,5.907,1216,5.907,1217,5.907,1218,5.907,1219,5.907]],["title/entities/Label.html",[510,2.068,1010,2.271]],["body/entities/Label.html",[3,0.114,4,0.102,5,0.102,7,0.3,8,1.478,24,0.357,27,0.008,28,1.005,29,0.314,45,1.055,57,0.151,61,0.114,63,0.266,120,0.007,129,0.007,172,1.183,183,1.183,510,3.622,512,4.193,521,2.12,533,2.859,534,2.268,551,1.981,1010,3.977,1220,5.817,1221,6.572,1222,6.572,1223,6.364]],["title/classes/LabelDto.html",[63,0.182,1224,3.177]],["body/classes/LabelDto.html",[3,0.115,4,0.103,5,0.103,7,0.303,8,1.488,24,0.362,27,0.008,28,0.962,29,0.318,45,1.062,57,0.152,61,0.115,63,0.321,120,0.007,129,0.007,172,1.197,183,1.197,521,2.145,527,5.383,534,2.284,537,2.944,540,2.097,551,2.005,823,1.721,1224,5.604,1225,5.886,1226,6.65]],["title/controllers/LabelsController.html",[167,1.187,1227,3.38]],["body/controllers/LabelsController.html",[3,0.08,4,0.071,5,0.071,7,0.21,11,1.034,12,2.204,24,0.387,26,0.945,27,0.008,28,0.783,29,0.365,30,0.841,35,1.148,36,2.599,45,1.025,57,0.154,58,0.562,61,0.08,63,0.187,65,2.054,72,0.965,104,1.458,120,0.006,129,0.006,131,1.759,167,1.22,169,1.422,172,1.282,183,0.83,300,4.248,312,4.001,320,4.141,322,4.313,333,2.26,344,2.889,349,3.092,350,2.007,353,4.57,354,2.007,374,4.467,376,3.86,390,2.007,391,1.634,393,2.584,409,2.698,490,2.126,722,2.595,730,3.689,731,4.166,732,4.141,751,2.814,754,2.595,757,2.065,759,2.126,764,1.851,786,5.122,789,4.141,862,1.952,1009,4.774,1010,3.172,1224,5.835,1227,4.721,1228,4.084,1229,4.614,1230,6.27,1231,4.614,1232,4.614,1233,3.474,1234,4.614,1235,4.084,1236,4.614,1237,4.614,1238,5.075,1239,4.344,1240,4.084,1241,4.084,1242,4.614,1243,4.614,1244,4.006,1245,4.614,1246,4.614,1247,4.614,1248,3.474,1249,4.614,1250,4.614,1251,4.614,1252,4.614,1253,4.614,1254,4.614,1255,4.084,1256,3.474,1257,4.614]],["title/modules/LabelsModule.html",[189,1.482,203,3.177]],["body/modules/LabelsModule.html",[3,0.109,4,0.097,5,0.097,27,0.008,57,0.169,58,0.764,61,0.109,63,0.254,120,0.007,129,0.007,169,2.358,189,2.722,191,2.809,192,2.892,193,3.075,194,3.075,195,3.075,196,4.04,197,2.98,203,6.335,215,3.746,216,3.075,217,3.075,219,3.075,228,3.53,229,2.731,1010,3.176,1227,6.21,1239,5.458,1240,5.556,1258,5.556,1259,5.556,1260,6.277,1261,6.277,1262,5.556,1263,6.277]],["title/injectables/LabelsService.html",[0,0.676,1239,2.738]],["body/injectables/LabelsService.html",[0,0.989,2,1.749,3,0.086,4,0.076,5,0.076,7,0.225,11,1.082,12,2.326,22,1.773,24,0.457,26,1.232,27,0.008,28,0.943,29,0.391,30,1.097,35,1.318,36,2.809,45,1.183,57,0.151,58,0.601,61,0.086,63,0.2,65,2.266,72,1.033,104,1.51,108,2.345,120,0.006,129,0.006,229,2.148,373,1.883,533,2.148,732,3.557,786,5.265,789,3.557,792,4.792,812,3.151,1010,4.137,1235,5.81,1238,6.62,1239,4.003,1262,4.371,1264,4.371,1265,5.81,1266,6.564,1267,4.939,1268,4.939,1269,5.81,1270,6.564,1271,4.939,1272,4.939,1273,6.564,1274,4.939,1275,6.564,1276,4.939,1277,4.939,1278,4.371,1279,4.939,1280,4.939,1281,6.564,1282,4.939,1283,4.939,1284,4.939]],["title/injectables/LocalAuthGuard.html",[0,0.676,355,3.38]],["body/injectables/LocalAuthGuard.html",[0,1.224,2,2.46,3,0.12,4,0.107,5,0.107,27,0.008,57,0.156,58,0.846,61,0.12,63,0.282,120,0.007,129,0.007,355,6.117,880,3.743,1135,5.623,1136,4.237,1285,6.149,1286,8.124]],["title/injectables/LocalStrategy.html",[0,0.676,441,3.177]],["body/injectables/LocalStrategy.html",[0,1.093,2,2.041,3,0.1,4,0.089,5,0.089,7,0.263,11,1.195,12,2.01,22,1.557,24,0.394,26,1.093,27,0.008,28,0.797,29,0.346,30,0.973,35,0.929,36,2.287,45,1.175,57,0.16,58,0.701,61,0.1,63,0.234,65,1.662,72,1.205,104,1.18,120,0.006,129,0.006,144,2.447,284,4.491,329,3.341,347,5.46,360,5.591,361,4.663,390,2.506,391,2.041,441,5.133,538,4.423,764,2.311,880,3.341,1136,3.514,1139,3.676,1150,5.46,1170,4.338,1171,4.338,1172,4.078,1287,5.099,1288,5.761,1289,5.761,1290,7.252,1291,5.761,1292,5.099,1293,5.761,1294,5.761,1295,5.761]],["title/classes/LoginDto.html",[63,0.182,364,3.38]],["body/classes/LoginDto.html",[3,0.111,4,0.099,5,0.099,7,0.291,8,1.451,24,0.42,27,0.008,29,0.369,45,1.158,57,0.149,61,0.111,63,0.313,120,0.007,129,0.007,172,1.39,183,1.148,284,4.345,329,3.826,364,5.814,521,2.491,534,2.395,540,2.011,551,2.328,823,1.65,847,6.253,1296,5.645,1297,6.377,1298,6.377,1299,6.377,1300,6.377,1301,6.377,1302,6.377]],["title/classes/LostPassworDto.html",[63,0.182,328,3.38]],["body/classes/LostPassworDto.html",[3,0.115,4,0.102,5,0.102,7,0.302,8,1.484,24,0.36,27,0.008,29,0.316,45,1.059,57,0.152,61,0.115,63,0.32,120,0.007,129,0.007,172,1.191,183,1.191,328,5.945,329,3.888,521,2.135,534,2.277,540,2.087,551,1.995,823,1.713,825,5.357,847,5.945,1303,6.988,1304,6.619,1305,6.619,1306,6.619]],["title/modules/MailModule.html",[189,1.482,204,3.177]],["body/modules/MailModule.html",[3,0.102,4,0.091,5,0.091,12,1.496,27,0.008,57,0.166,58,0.719,61,0.102,63,0.239,84,1.496,110,1.995,120,0.006,129,0.006,144,1.821,189,2.431,191,2.643,197,2.805,204,5.214,219,3.608,230,6.52,231,4.199,232,3.09,271,4.781,272,4.781,276,3.959,295,4.781,391,2.092,461,3.603,480,5.228,1080,5.228,1307,5.907,1308,5.228,1309,7.366,1310,5.962,1311,4.781,1312,7.366,1313,5.907,1314,7.366,1315,5.907,1316,5.907,1317,5.907,1318,5.907,1319,5.907,1320,5.907,1321,5.907,1322,5.907,1323,5.907,1324,5.907,1325,5.907,1326,5.907,1327,5.907,1328,5.907,1329,5.907,1330,4.781,1331,5.907]],["title/injectables/MailService.html",[0,0.676,368,3.009]],["body/injectables/MailService.html",[0,1.081,2,2.007,3,0.098,4,0.088,5,0.088,7,0.259,11,1.183,12,1.995,22,1.939,24,0.39,26,1.081,27,0.008,28,0.789,29,0.343,30,0.963,35,0.914,36,2.263,38,2.322,40,3.74,45,1.171,57,0.152,58,0.69,61,0.098,63,0.23,65,1.635,72,1.186,120,0.006,129,0.006,231,4.637,232,2.965,284,3.755,288,4.588,289,4.588,329,3.629,368,4.811,373,2.736,393,2.858,1310,4.588,1311,4.588,1332,5.017,1333,7.877,1334,5.668,1335,8.727,1336,5.668,1337,5.668,1338,5.668,1339,7.177,1340,5.668,1341,5.668,1342,5.668,1343,5.668,1344,5.668,1345,5.668,1346,5.668,1347,5.668,1348,5.668]],["title/injectables/MaskProcessingService.html",[0,0.676,1349,3.38]],["body/injectables/MaskProcessingService.html",[0,0.831,2,1.361,3,0.067,4,0.059,5,0.059,7,0.175,8,1.037,11,0.909,12,2.195,22,1.038,24,0.467,26,1.063,27,0.008,28,0.776,29,0.41,30,0.946,35,1.292,36,2.585,45,1.218,48,2.002,49,1.394,57,0.124,58,0.468,61,0.067,63,0.156,65,2.444,72,1.715,84,1.397,104,1.641,108,2.619,120,0.005,129,0.005,214,4.729,225,3.456,240,3.11,373,3.182,390,1.671,391,2.286,647,4.729,648,1.943,666,5.714,698,3.4,699,3.4,764,1.541,862,1.626,1349,4.154,1350,7.67,1351,3.4,1352,6.613,1353,7.472,1354,8.012,1355,7.055,1356,6.455,1357,7.055,1358,7.055,1359,5.517,1360,5.517,1361,7.055,1362,3.842,1363,5.517,1364,5.517,1365,3.842,1366,3.842,1367,7.055,1368,3.842,1369,3.842,1370,3.842,1371,5.517,1372,3.842,1373,5.517,1374,3.842,1375,3.842,1376,3.842,1377,3.842,1378,8.198,1379,7.055,1380,7.472,1381,3.842,1382,3.842,1383,3.842,1384,5.517,1385,3.842,1386,4.883,1387,3.842,1388,3.842,1389,5.517,1390,3.842,1391,4.883,1392,3.842,1393,3.842,1394,3.842,1395,3.4,1396,3.842,1397,3.4,1398,3.842,1399,4.883,1400,5.517,1401,3.4,1402,3.842,1403,3.842,1404,3.842,1405,3.842,1406,5.517,1407,3.842,1408,3.842]],["title/guards/ModifyGuard.html",[130,2.068,158,2.199]],["body/guards/ModifyGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.825,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,1409,4.088]],["title/injectables/NotFoundInterceptor.html",[0,0.676,237,3.38]],["body/injectables/NotFoundInterceptor.html",[0,1.126,2,2.142,3,0.105,4,0.093,5,0.093,7,0.276,11,1.232,24,0.329,26,0.911,27,0.008,28,0.665,29,0.289,30,0.811,35,0.975,57,0.156,58,0.736,61,0.105,63,0.245,104,1.238,120,0.007,129,0.007,136,3.904,138,2.786,141,2.706,237,5.627,390,3.251,391,2.142,533,2.631,1091,5.627,1176,4.553,1410,6.615,1411,5.352,1412,7.474,1413,7.474,1414,5.437,1415,8.474,1416,6.047,1417,8.112,1418,4.28,1419,7.474,1420,6.047,1421,7.474,1422,6.047,1423,6.047,1424,6.047,1425,6.047]],["title/entities/OauthConfig.html",[455,2.864,510,2.068]],["body/entities/OauthConfig.html",[3,0.098,4,0.087,5,0.087,7,0.258,8,1.347,24,0.45,27,0.008,28,0.91,29,0.395,45,1.202,57,0.138,61,0.098,63,0.229,120,0.006,123,2.803,129,0.006,172,1.489,183,1.018,247,4.466,455,4.574,510,3.303,512,3.609,521,2.669,531,5.046,533,2.461,534,2.462,551,2.494,1189,5.57,1223,5.802,1426,5.722,1427,5.007,1428,6.37,1429,6.37,1430,6.345,1431,5.657,1432,5.657,1433,6.345,1434,5.657,1435,5.657,1436,5.657,1437,5.657,1438,5.657,1439,5.657,1440,6.345,1441,5.007,1442,5.007]],["title/controllers/OauthConfigController.html",[167,1.187,1443,3.38]],["body/controllers/OauthConfigController.html",[3,0.072,4,0.064,5,0.064,7,0.189,11,0.959,12,2.152,24,0.366,26,0.876,27,0.008,28,0.9,29,0.367,30,0.78,35,1.084,36,1.833,45,0.902,57,0.153,58,0.504,61,0.072,63,0.168,65,1.939,72,1.216,84,1.473,104,1.377,120,0.005,129,0.005,131,1.577,167,1.094,169,1.275,172,1.21,178,3.71,180,3.151,181,3.348,183,0.744,246,5.178,247,3.816,300,4.232,311,5.951,312,3.71,320,3.953,322,3.816,333,2.026,340,4.707,344,2.679,349,2.773,350,1.799,351,4.707,353,4.529,354,1.799,374,4.436,376,3.151,390,2.529,391,2.059,393,2.11,409,3.933,442,3.644,459,2.639,461,5.523,490,1.906,722,2.326,730,2.602,740,2.333,754,2.326,757,1.851,758,3.71,759,1.906,764,1.66,862,1.751,1244,3.27,1256,5.492,1418,2.928,1426,4.889,1443,4.378,1444,3.662,1445,5.147,1446,5.147,1447,6.456,1448,3.662,1449,6.012,1450,4.137,1451,3.897,1452,4.137,1453,4.137,1454,4.137,1455,4.137,1456,3.662,1457,4.137,1458,5.815,1459,4.137,1460,3.662,1461,4.137,1462,4.137,1463,5.815,1464,3.71,1465,4.137,1466,4.137,1467,3.662,1468,4.137,1469,4.137,1470,4.137,1471,4.137,1472,4.116,1473,4.137,1474,4.137,1475,4.137,1476,4.137,1477,4.137,1478,4.137,1479,4.137,1480,4.137,1481,4.137,1482,4.137,1483,4.137]],["title/classes/OauthConfigDto.html",[63,0.182,1449,3.177]],["body/classes/OauthConfigDto.html",[3,0.104,4,0.092,5,0.092,7,0.272,8,1.393,24,0.459,27,0.008,28,0.887,29,0.403,45,1.215,57,0.143,61,0.104,63,0.301,120,0.007,129,0.007,172,1.518,183,1.074,247,4.538,534,2.502,537,3.225,540,1.882,823,1.545,1189,5.709,1426,5.814,1428,6.529,1429,6.529,1449,5.248,1484,5.284,1485,8.436,1486,5.97,1487,5.97,1488,5.97,1489,5.97]],["title/modules/OauthConfigModule.html",[189,1.482,205,3.177]],["body/modules/OauthConfigModule.html",[3,0.108,4,0.096,5,0.096,27,0.008,57,0.169,58,0.756,61,0.108,63,0.252,120,0.007,129,0.007,169,2.342,189,2.709,191,2.778,192,2.86,193,3.041,194,3.041,195,3.041,196,4.02,197,2.947,205,6.318,215,3.72,216,3.041,217,3.041,219,3.041,228,3.491,229,2.7,246,4.8,247,3.248,442,4.837,455,3.961,456,4.674,459,3.961,1426,4.161,1443,6.179,1490,6.208,1491,6.208,1492,6.208,1493,6.208,1494,6.208]],["title/injectables/OauthConfigService.html",[0,0.676,442,2.433]],["body/injectables/OauthConfigService.html",[0,0.899,2,1.521,3,0.074,4,0.066,5,0.066,7,0.196,11,0.984,12,2.314,22,1.613,24,0.45,26,1.174,27,0.008,28,0.954,29,0.372,30,1.045,35,1.3,36,2.543,45,1.149,57,0.15,58,0.523,61,0.074,63,0.174,65,2.326,72,1.551,104,1.405,120,0.005,129,0.005,180,4.95,229,1.868,246,3.491,247,4.413,373,1.637,442,3.235,455,2.741,456,3.234,461,4.752,533,1.868,792,4.522,812,2.741,1088,2.416,1189,5.248,1414,2.879,1426,5.654,1428,3.477,1429,3.477,1430,3.802,1433,3.802,1440,5.284,1441,3.802,1442,3.802,1445,5.284,1446,5.284,1447,6.563,1448,5.284,1449,5.515,1456,5.284,1467,3.802,1495,3.802,1496,6.861,1497,5.969,1498,5.248,1499,4.295,1500,4.295,1501,5.969,1502,4.295,1503,4.295,1504,4.295,1505,4.295,1506,5.969,1507,4.295,1508,4.295,1509,4.295,1510,4.295,1511,5.969,1512,4.295,1513,4.295,1514,4.295,1515,4.295,1516,3.234,1517,3.234,1518,4.295,1519,4.295]],["title/entities/Option.html",[510,2.068,1088,2.524]],["body/entities/Option.html",[3,0.051,4,0.045,5,0.045,7,0.134,8,0.847,24,0.471,27,0.008,28,1,29,0.414,38,2.414,45,1.161,48,3.327,57,0.106,61,0.051,63,0.183,110,3.113,120,0.004,123,2.414,129,0.004,139,2.219,172,1.558,183,0.527,510,2.078,512,1.869,521,2.793,531,5.28,532,3.022,533,1.275,534,2.512,547,1.787,551,2.61,740,3.601,886,4.45,887,4.45,888,4.45,889,4.45,890,4.866,891,4.866,892,4.866,893,4.866,894,4.866,895,4.866,896,4.866,897,4.866,898,4.866,899,4.866,900,4.866,901,4.866,902,4.866,912,5.899,917,5.899,921,5.018,926,5.899,929,7.017,934,5.464,937,2.372,938,2.877,939,2.206,1088,2.536,1520,2.593,1521,2.93,1522,4.509,1523,2.93,1524,2.93,1525,4.509,1526,2.93,1527,4.509,1528,4.509,1529,2.93,1530,4.509,1531,2.93,1532,6.173,1533,4.509,1534,2.93,1535,2.93,1536,4.509,1537,2.93,1538,4.509,1539,2.93,1540,5.497,1541,4.509,1542,2.93,1543,2.93,1544,4.509,1545,2.93,1546,4.509,1547,2.93,1548,2.93,1549,4.509,1550,2.93,1551,4.509,1552,2.93,1553,2.93,1554,4.509,1555,2.93,1556,4.509,1557,4.509,1558,2.93,1559,4.509,1560,2.93,1561,4.509,1562,2.93,1563,2.93,1564,2.93,1565,2.93,1566,4.509,1567,2.93,1568,3.991,1569,2.372]],["title/controllers/OptionsController.html",[167,1.187,1570,3.38]],["body/controllers/OptionsController.html",[3,0.083,4,0.074,5,0.074,7,0.219,11,1.063,12,2.114,22,1.3,24,0.351,26,0.725,27,0.008,28,0.529,29,0.387,30,0.645,35,1.04,36,2.451,57,0.164,58,0.586,61,0.083,63,0.195,65,1.86,72,1.349,104,1.321,120,0.006,123,1.881,129,0.006,131,1.834,167,1.272,169,1.483,172,1.161,183,0.866,231,3.807,232,2.517,300,4.113,320,4.213,322,4.067,333,2.357,350,2.093,353,4.394,354,2.093,373,2.459,374,4.213,376,3.496,393,2.34,722,2.706,730,3.479,731,3.773,757,2.153,759,2.217,790,4.96,862,2.73,989,6.104,992,4.259,993,4.259,994,4.259,995,4.259,996,4.259,997,4.259,1005,4.857,1030,6.293,1233,3.623,1244,3.628,1330,7.103,1570,4.857,1571,4.259,1572,4.812,1573,4.812,1574,4.812,1575,5.738,1576,4.812,1577,4.812,1578,4.812,1579,6.45,1580,3.934,1581,4.259,1582,3.895,1583,3.895,1584,4.812,1585,4.812,1586,4.259,1587,4.812,1588,4.812,1589,4.812,1590,4.812,1591,4.812,1592,4.259,1593,4.259,1594,4.812,1595,4.812]],["title/modules/OptionsModule.html",[189,1.482,206,3.177]],["body/modules/OptionsModule.html",[3,0.107,4,0.096,5,0.096,27,0.008,57,0.172,58,0.754,61,0.107,63,0.251,120,0.007,129,0.007,169,2.338,189,2.706,191,2.772,192,2.854,193,3.034,194,3.034,195,3.034,196,4.016,197,2.941,206,6.314,215,3.715,216,3.034,217,3.034,219,3.034,228,3.484,229,2.694,231,3.968,232,3.241,1088,3.484,1570,6.173,1580,5.441,1581,5.483,1596,5.483,1597,5.483,1598,6.194,1599,6.194,1600,5.483,1601,5.483]],["title/injectables/OptionsService.html",[0,0.676,1580,2.738]],["body/injectables/OptionsService.html",[0,1.044,2,1.9,3,0.093,4,0.083,5,0.083,7,0.245,11,1.142,12,2.27,22,1.872,24,0.441,26,1.044,27,0.008,28,0.762,29,0.331,30,0.929,35,1.237,36,2.558,57,0.162,58,0.653,61,0.093,63,0.217,65,2.214,72,1.122,104,1.098,120,0.006,123,2.097,129,0.006,180,4.159,229,2.333,373,2.045,533,2.333,790,4.421,792,4.948,812,3.423,886,4.342,887,4.342,888,4.342,889,4.342,937,4.342,938,4.421,939,4.039,1005,4.039,1030,6.566,1088,4.562,1414,3.595,1498,5.742,1516,4.039,1517,4.039,1569,4.342,1575,5.742,1580,4.226,1582,4.342,1600,4.748,1602,4.748,1603,5.364,1604,5.364,1605,6.929,1606,5.364,1607,5.364,1608,6.929,1609,5.364,1610,4.748,1611,5.364,1612,5.364,1613,5.364,1614,5.364]],["title/guards/OrGuard.html",[130,2.068,1615,2.626]],["body/guards/OrGuard.html",[3,0.106,4,0.095,5,0.095,7,0.28,11,1.244,12,2.069,22,1.659,24,0.41,26,1.137,27,0.008,28,0.83,29,0.36,30,1.012,35,0.99,36,2.379,57,0.118,58,0.747,61,0.106,63,0.249,65,1.771,72,1.284,84,1.555,104,1.545,110,2.074,120,0.007,129,0.007,130,2.829,132,3.878,134,4.324,135,3.582,136,3.925,138,2.829,141,3.376,764,2.463,862,2.598,1615,4.413,1616,5.435,1617,6.14,1618,6.14,1619,6.14,1620,6.14,1621,6.14]],["title/controllers/OrthancAdminController.html",[167,1.187,1622,3.38]],["body/controllers/OrthancAdminController.html",[3,0.046,4,0.041,5,0.041,7,0.122,11,0.691,18,2.358,24,0.447,26,1.238,27,0.008,28,0.913,29,0.393,30,1.102,35,1.325,57,0.13,58,0.325,59,2.557,61,0.046,63,0.108,84,0.676,110,1.416,120,0.004,123,2.295,129,0.004,131,1.017,142,3.04,167,1.108,169,0.822,172,1.479,183,0.48,225,4.025,300,1.99,344,1.229,350,1.16,354,1.16,393,2.981,490,1.229,592,2.317,618,2.557,641,1.35,642,1.35,671,4.806,730,3.997,740,1.682,757,1.194,758,2.675,759,1.229,764,1.07,1073,4.935,1074,1.56,1077,5.618,1244,4.621,1460,2.361,1622,3.156,1623,5.299,1624,2.361,1625,5.179,1626,5.179,1627,5.179,1628,5.179,1629,5.179,1630,5.179,1631,5.179,1632,5.179,1633,5.179,1634,5.179,1635,5.179,1636,5.179,1637,5.179,1638,2.668,1639,5.877,1640,2.668,1641,2.668,1642,2.668,1643,2.668,1644,2.668,1645,2.668,1646,2.668,1647,2.668,1648,2.668,1649,2.668,1650,2.668,1651,2.668,1652,2.668,1653,2.668,1654,2.668,1655,2.668,1656,2.668,1657,2.668,1658,4.192,1659,4.192,1660,2.668,1661,2.668,1662,2.668,1663,2.668,1664,4.192,1665,2.668,1666,2.668,1667,2.668,1668,2.668,1669,2.668,1670,2.668,1671,2.668,1672,2.668,1673,2.668,1674,2.668,1675,2.668,1676,2.668,1677,2.668,1678,2.668,1679,2.668,1680,2.668,1681,2.668,1682,2.668,1683,2.668,1684,2.009,1685,1.56,1686,1.702,1687,1.702,1688,2.668,1689,5.243,1690,2.668,1691,2.668,1692,2.668,1693,2.668,1694,2.668,1695,2.668,1696,2.668,1697,2.668,1698,2.668,1699,2.668,1700,2.668,1701,2.668,1702,2.668,1703,2.668]],["title/controllers/OrthancController.html",[167,1.187,1704,3.38]],["body/controllers/OrthancController.html",[3,0.053,4,0.047,5,0.047,7,0.14,9,2.056,11,0.77,24,0.437,26,1.209,27,0.008,28,0.883,29,0.383,30,1.077,35,1.294,57,0.131,58,0.373,61,0.053,63,0.124,120,0.004,129,0.004,142,3.022,167,1.235,169,0.946,172,1.444,183,0.552,225,3.931,344,1.413,350,3.549,354,1.335,393,2.912,490,1.413,494,1.457,592,2.531,641,1.552,642,1.552,671,4.694,730,3.946,757,1.373,764,1.231,1009,3.131,1073,4.919,1074,1.794,1077,5.584,1639,5.842,1684,2.31,1685,1.794,1686,1.957,1687,1.957,1689,5.121,1704,3.517,1705,2.715,1706,5.656,1707,4.671,1708,5.656,1709,5.656,1710,5.656,1711,5.656,1712,5.656,1713,5.656,1714,4.671,1715,5.656,1716,3.068,1717,3.068,1718,3.068,1719,3.068,1720,3.068,1721,3.068,1722,3.068,1723,3.068,1724,4.671,1725,3.068,1726,3.068,1727,3.068,1728,3.068,1729,3.068,1730,3.068,1731,3.068,1732,3.068,1733,3.068,1734,3.068,1735,3.068,1736,3.068,1737,3.068,1738,3.068,1739,3.068,1740,3.068,1741,3.068,1742,3.068,1743,3.068,1744,3.068,1745,3.068,1746,3.068,1747,3.068,1748,3.068,1749,3.068,1750,3.068,1751,3.068,1752,4.671,1753,3.068,1754,3.068,1755,3.068,1756,3.068,1757,3.068,1758,3.068,1759,3.068,1760,2.715,1761,3.068,1762,3.068,1763,3.068,1764,3.068,1765,3.068,1766,3.068,1767,3.068,1768,2.483,1769,3.068,1770,3.068,1771,3.068,1772,3.068,1773,3.068,1774,3.068,1775,3.068,1776,3.068,1777,3.068,1778,3.068,1779,3.068,1780,3.068,1781,3.068,1782,3.068,1783,3.068,1784,3.068,1785,3.068,1786,3.068,1787,3.068]],["title/controllers/OrthancDeleteController.html",[167,1.187,1788,3.38]],["body/controllers/OrthancDeleteController.html",[3,0.086,4,0.077,5,0.077,7,0.227,11,1.088,24,0.403,26,1.116,27,0.008,28,0.814,29,0.354,30,0.993,35,1.194,57,0.162,58,0.606,61,0.086,63,0.202,120,0.006,129,0.006,142,2.969,155,2.366,167,1.746,169,1.536,172,1.333,183,0.897,225,3.627,350,2.167,354,2.167,393,2.687,490,2.296,592,3.314,641,2.521,642,2.521,671,4.331,730,3.772,757,2.23,759,2.296,764,1.999,1073,4.843,1074,2.914,1077,5.442,1623,5.03,1639,5.693,1685,2.914,1686,3.179,1687,3.179,1689,4.725,1788,4.971,1789,4.41,1790,7.405,1791,7.405,1792,7.405,1793,4.983,1794,4.983,1795,4.983,1796,4.983,1797,4.983,1798,4.983,1799,4.983,1800,4.983,1801,4.983,1802,4.983,1803,6.554,1804,4.983,1805,4.983]],["title/classes/OrthancEventPayloadDto.html",[63,0.182,598,3.38]],["body/classes/OrthancEventPayloadDto.html",[3,0.087,4,0.078,5,0.078,7,0.23,8,1.25,24,0.46,27,0.008,29,0.404,38,1.961,45,1.174,57,0.143,61,0.087,63,0.27,84,2.142,120,0.006,123,2.91,129,0.006,172,1.522,183,0.906,295,6.026,502,5.269,520,4.54,521,2.727,534,2.487,536,2.832,537,3.061,540,1.588,546,3.213,551,2.549,573,3.565,598,5.007,637,6.979,740,3.639,823,1.303,848,5.007,938,4.243,959,5.306,1806,7.631,1807,4.458,1808,7.444,1809,7.444,1810,7.444,1811,5.886,1812,5.036,1813,5.036,1814,6.649,1815,5.036,1816,5.036,1817,5.036,1818,5.036,1819,5.036,1820,5.036]],["title/controllers/OrthancExportController.html",[167,1.187,1821,3.38]],["body/controllers/OrthancExportController.html",[3,0.066,4,0.059,5,0.059,7,0.173,11,0.901,24,0.434,26,1.203,27,0.008,28,0.878,29,0.381,30,1.071,35,1.287,57,0.149,58,0.462,61,0.066,63,0.154,120,0.005,129,0.005,142,3.022,149,1.859,167,1.446,169,1.17,172,1.437,183,0.683,225,3.91,344,1.748,350,1.651,354,1.651,393,2.897,592,2.869,641,1.92,642,1.92,671,4.669,730,3.934,757,1.698,759,1.748,764,1.523,1073,4.909,1074,2.22,1077,5.567,1623,5.214,1639,5.824,1685,2.22,1686,2.421,1687,2.421,1689,5.094,1821,4.117,1822,3.359,1823,6.411,1824,6.411,1825,6.411,1826,6.411,1827,6.411,1828,6.411,1829,6.411,1830,3.795,1831,5.674,1832,3.795,1833,3.795,1834,3.795,1835,3.795,1836,3.795,1837,3.795,1838,6.411,1839,3.795,1840,3.795,1841,3.795,1842,3.795,1843,3.795,1844,3.795,1845,3.795,1846,3.795,1847,3.795,1848,3.795,1849,3.795,1850,3.795,1851,3.795,1852,3.795,1853,3.795,1854,7.983,1855,5.674,1856,3.795,1857,3.795,1858,3.795,1859,3.795,1860,3.795]],["title/controllers/OrthancImportController.html",[167,1.187,1861,3.38]],["body/controllers/OrthancImportController.html",[3,0.093,4,0.083,5,0.083,7,0.245,11,1.142,24,0.377,26,1.044,27,0.008,28,0.762,29,0.331,30,0.929,35,1.117,57,0.166,58,0.653,61,0.093,63,0.217,120,0.006,129,0.006,140,2.627,142,2.927,167,1.832,169,1.654,172,1.247,183,0.965,225,3.394,344,2.471,350,2.333,354,2.333,393,2.514,592,3.435,641,2.714,642,2.714,671,4.053,730,3.63,757,2.4,759,2.471,764,2.152,1073,4.789,1074,3.137,1077,5.338,1623,4.897,1639,5.585,1685,3.137,1686,3.423,1687,3.423,1689,4.421,1831,4.748,1855,4.748,1861,5.217,1862,4.748,1863,7.675,1864,7.675,1865,5.364,1866,5.364,1867,5.364,1868,5.364,1869,5.364,1870,5.364,1871,5.364,1872,6.929,1873,5.364]],["title/controllers/OrthancModifyController.html",[167,1.187,1874,3.38]],["body/controllers/OrthancModifyController.html",[3,0.086,4,0.077,5,0.077,7,0.227,11,1.088,24,0.403,26,1.116,27,0.008,28,0.814,29,0.354,30,0.993,35,1.194,57,0.162,58,0.606,61,0.086,63,0.202,120,0.006,129,0.006,142,2.969,158,2.44,167,1.746,169,1.536,172,1.333,183,0.897,225,3.627,344,2.296,350,2.167,354,2.167,393,2.687,592,3.314,641,2.521,642,2.521,671,4.331,730,3.772,757,2.23,759,2.296,764,1.999,1073,4.843,1074,2.914,1077,5.442,1623,5.03,1639,5.693,1685,2.914,1686,3.179,1687,3.179,1689,4.725,1874,4.971,1875,4.41,1876,7.405,1877,7.405,1878,7.405,1879,4.983,1880,4.983,1881,4.983,1882,4.983,1883,4.983,1884,4.983,1885,4.983,1886,4.983,1887,4.983,1888,4.983,1889,7.405,1890,4.983,1891,4.983]],["title/modules/OrthancModule.html",[189,1.482,207,3.177]],["body/modules/OrthancModule.html",[3,0.1,4,0.089,5,0.089,27,0.008,57,0.175,58,0.703,61,0.1,63,0.234,120,0.006,129,0.006,169,2.238,189,2.622,191,2.583,192,2.66,193,2.828,194,2.828,195,2.828,196,3.891,197,2.741,207,6.206,215,3.556,216,2.828,217,2.828,219,2.828,592,3.923,641,2.92,642,2.92,1622,5.981,1704,5.981,1768,7.097,1788,5.981,1821,5.981,1861,5.981,1874,5.981,1892,5.773,1893,5.773,1894,5.773,1895,5.981,1896,5.773,1897,5.773,1898,5.773,1899,5.773,1900,5.773,1901,5.773,1902,5.11]],["title/injectables/OrthancMonitoringTask.html",[0,0.676,1903,3.177]],["body/injectables/OrthancMonitoringTask.html",[0,1.064,2,1.956,3,0.096,4,0.085,5,0.085,7,0.252,8,1.327,11,1.164,12,1.971,22,1.907,24,0.423,26,0.832,27,0.008,28,0.607,29,0.337,30,0.741,34,3.368,35,0.89,38,2.082,48,2.004,49,2.004,57,0.158,58,0.672,61,0.096,63,0.224,65,2.036,72,1.155,108,3.695,120,0.006,129,0.006,172,0.994,244,4.158,250,3.909,251,3.909,373,3.231,592,3.879,641,2.794,642,2.794,793,6.888,794,7.259,1903,4.997,1904,7.259,1905,4.888,1906,7.782,1907,8.201,1908,4.888,1909,7.06,1910,7.06,1911,5.523,1912,4.888,1913,4.888,1914,7.782,1915,5.523,1916,5.523,1917,5.523,1918,5.523,1919,5.523,1920,5.523,1921,5.523,1922,5.523]],["title/controllers/OrthancQueryController.html",[167,1.187,1895,3.38]],["body/controllers/OrthancQueryController.html",[3,0.072,4,0.065,5,0.065,7,0.191,11,0.966,12,1.713,24,0.399,26,1.104,27,0.008,28,0.806,29,0.35,30,0.983,35,1.181,45,0.907,57,0.161,58,0.509,61,0.072,63,0.169,65,1.689,72,1.533,104,1.199,120,0.005,123,2.865,129,0.005,142,2.878,151,1.985,167,1.549,169,1.289,172,1.319,178,2.667,183,0.752,225,3.312,333,2.869,344,1.926,350,1.818,354,1.818,393,2.453,592,3.026,641,2.114,642,2.114,648,2.114,670,5.184,671,3.955,730,3.578,754,2.351,757,1.871,759,1.926,764,1.677,948,2.114,1073,4.744,1074,2.445,1077,5.261,1623,4.922,1639,5.504,1685,2.445,1686,2.667,1687,2.667,1689,4.314,1895,4.41,1923,3.383,1924,6.762,1925,6.762,1926,6.762,1927,6.762,1928,4.18,1929,4.18,1930,4.18,1931,4.18,1932,4.18,1933,3.7,1934,4.18,1935,6.762,1936,4.911,1937,4.18,1938,4.18,1939,4.18,1940,4.18,1941,4.18,1942,4.18,1943,3.926,1944,3.926,1945,4.18,1946,2.959,1947,4.18,1948,2.549,1949,4.18,1950,6.485,1951,4.18,1952,4.18,1953,4.18,1954,3.7,1955,5.857,1956,2.959,1957,4.18,1958,5.857,1959,4.18,1960,4.18,1961,4.18,1962,4.18,1963,4.18,1964,4.18,1965,4.18,1966,3.7,1967,4.18,1968,5.857,1969,4.18,1970,4.18,1971,4.18,1972,4.18,1973,4.18,1974,4.18,1975,4.18,1976,4.18]],["title/controllers/ProcessingController.html",[167,1.187,1977,3.38]],["body/controllers/ProcessingController.html",[3,0.054,4,0.048,5,0.048,7,0.142,10,2.769,11,0.78,12,2.169,13,3.832,18,3.215,21,3.173,22,0.844,24,0.373,26,0.961,27,0.008,28,0.794,29,0.385,30,0.856,32,2.477,35,1.209,36,2.542,38,1.686,40,3.427,44,1.904,45,1.006,50,4.716,57,0.149,58,0.38,59,4.182,60,1.992,61,0.054,63,0.127,65,2.082,72,1.51,73,3.832,75,2.764,84,0.791,96,2.528,100,2.528,104,1.306,110,1.055,112,3.173,120,0.006,123,1.221,124,2.528,125,2.764,126,2.764,127,2.764,129,0.004,131,1.805,142,2.869,144,1.967,157,2.248,164,1.529,167,0.826,169,0.963,172,1.234,183,0.562,300,4.293,312,3.021,320,4.185,322,4.218,326,4.276,333,2.319,344,2.181,348,1.904,350,2.059,353,4.6,354,1.358,373,1.19,374,4.554,376,3.716,390,2.059,391,2.26,393,2.488,490,2.181,591,3.487,645,1.992,690,4.305,722,1.756,730,3.608,731,4.011,740,2.751,751,1.904,754,1.756,757,1.397,758,3.021,759,1.439,789,2.565,854,2.21,862,1.321,948,1.58,1244,2.662,1451,3.832,1615,1.826,1977,3.564,1978,2.764,1979,4.628,1980,4.804,1981,4.305,1982,3.123,1983,5.176,1984,3.351,1985,3.564,1986,3.123,1987,3.123,1988,2.351,1989,2.351,1990,3.123,1991,5.434,1992,2.351,1993,3.123,1994,3.123,1995,2.351,1996,2.351,1997,2.351,1998,2.351,1999,3.123,2000,2.764,2001,2.351,2002,3.123,2003,3.123,2004,2.21,2005,3.564,2006,2.764,2007,2.093,2008,2.528,2009,2.764,2010,3.123,2011,3.123,2012,2.351,2013,3.123,2014,4.305,2015,2.21,2016,3.123,2017,2.351,2018,4.305,2019,3.123,2020,3.123,2021,2.351,2022,2.351,2023,2.351,2024,3.123,2025,3.123,2026,3.564,2027,3.123,2028,3.123,2029,3.123,2030,2.351,2031,2.351,2032,2.21,2033,2.351,2034,3.123,2035,3.123,2036,2.351,2037,3.123,2038,3.123]],["title/classes/ProcessingFile.html",[63,0.182,2039,3.38]],["body/classes/ProcessingFile.html",[3,0.101,4,0.09,5,0.09,7,0.266,8,1.373,11,1.205,22,1.576,24,0.469,26,0.879,27,0.008,28,0.641,29,0.438,30,0.782,35,1.178,45,1.252,61,0.101,63,0.236,104,1.496,120,0.006,123,3.369,129,0.006,180,4.764,373,3.351,823,1.51,2039,5.503,2040,5.163,2041,8.366,2042,8.366,2043,7.308,2044,7.308,2045,5.833,2046,5.833,2047,5.833,2048,7.308,2049,7.308]],["title/classes/ProcessingJobDto.html",[63,0.182,1983,3.009]],["body/classes/ProcessingJobDto.html",[3,0.099,4,0.088,5,0.088,7,0.261,8,1.356,24,0.392,27,0.008,29,0.345,45,0.968,48,2.073,57,0.152,61,0.125,63,0.32,84,2.169,110,2.671,120,0.006,129,0.006,139,1.802,172,1.298,183,1.028,534,2.561,535,3.91,536,3.214,537,2.94,540,1.802,646,6.253,647,4.835,648,2.891,692,6.4,694,5.299,695,4.302,696,4.302,697,4.625,700,4.625,740,3.508,823,1.479,1011,5.84,1983,4.835,2050,5.953,2051,4.625,2052,5.106,2053,5.714,2054,5.714,2055,5.953,2056,5.714,2057,5.714,2058,4.057,2059,5.058,2060,5.058]],["title/modules/ProcessingModule.html",[189,1.482,208,3.177]],["body/modules/ProcessingModule.html",[3,0.111,4,0.099,5,0.099,27,0.008,57,0.16,58,0.78,61,0.111,63,0.26,120,0.007,129,0.007,169,2.387,189,2.746,191,2.867,192,2.952,193,3.138,194,3.138,195,3.138,196,4.076,197,3.042,208,6.365,215,3.792,216,3.138,217,3.138,219,3.138,591,5.485,645,4.088,1977,6.265,1979,5.186,2061,6.407,2062,6.407,2063,6.407,2064,6.407]],["title/injectables/ProcessingQueueService.html",[0,0.676,591,2.738]],["body/injectables/ProcessingQueueService.html",[0,0.805,2,1.302,3,0.064,4,0.057,5,0.057,7,0.168,8,1.004,10,3.682,11,0.881,12,2.269,13,4.22,16,4.892,17,4.892,18,3.541,21,3.581,22,0.993,24,0.441,26,1.106,27,0.008,28,0.807,29,0.366,30,0.985,34,3.259,35,1.235,36,2.709,38,2.435,40,3.921,45,1.028,46,3.637,48,1.334,49,1.334,50,2.15,57,0.141,58,0.447,59,4.478,60,2.345,61,0.064,63,0.149,65,2.21,72,1.755,73,4.921,78,4.73,84,0.931,85,4.73,86,3.253,87,3.253,88,3.253,89,3.253,90,3.253,91,3.253,92,3.253,93,3.253,94,3.253,95,3.253,96,4.325,97,3.253,99,3.253,100,2.975,101,3.253,102,3.253,103,3.253,104,1.569,105,4.73,106,3.253,112,4.632,113,3.253,118,3.253,120,0.005,121,3.253,124,5.096,129,0.005,231,4.008,232,1.923,276,2.463,278,2.602,279,2.602,373,2.4,391,1.302,487,2.345,591,3.259,690,6.218,764,1.475,862,1.555,1207,2.602,1592,3.253,1593,3.253,1979,2.975,1983,5.429,2000,4.73,2006,3.253,2050,6.218,2065,3.253,2066,6.296,2067,5.343,2068,5.343,2069,3.676,2070,3.676,2071,3.676,2072,3.676,2073,3.676,2074,3.676,2075,5.343,2076,3.676,2077,3.676,2078,3.581,2079,3.676,2080,3.676,2081,2.767,2082,2.767,2083,3.676,2084,3.676,2085,3.676,2086,3.676,2087,3.676,2088,5.343,2089,3.676]],["title/classes/QueryAnswer.html",[63,0.182,2090,3.177]],["body/classes/QueryAnswer.html",[3,0.055,4,0.049,5,0.049,7,0.145,8,0.9,22,1.294,24,0.484,26,0.478,27,0.008,28,0.349,29,0.393,30,0.425,38,2.141,45,1.258,48,2.984,49,2.937,57,0.061,61,0.055,62,2.808,63,0.129,108,4.333,120,0.004,129,0.004,225,3.965,618,4.733,648,1.605,823,0.821,1948,4.598,2090,3.391,2091,6.728,2092,2.808,2093,5.981,2094,6.43,2095,6.43,2096,6.43,2097,4.467,2098,4.467,2099,5.981,2100,4.673,2101,4.673,2102,4.673,2103,4.673,2104,4.673,2105,4.673,2106,4.673,2107,4.673,2108,4.673,2109,4.673,2110,4.467,2111,4.467,2112,3.172,2113,4.791,2114,3.172,2115,3.172,2116,3.172,2117,3.172,2118,3.172,2119,3.172,2120,3.172,2121,3.172,2122,3.172,2123,3.172,2124,3.172,2125,3.172,2126,3.172,2127,3.172,2128,3.172,2129,3.172,2130,3.172,2131,3.172,2132,3.172,2133,4.791,2134,4.791,2135,4.791,2136,4.791,2137,4.791,2138,4.791,2139,4.791,2140,4.791,2141,4.791,2142,4.791]],["title/guards/QueryGuard.html",[130,2.068,151,2.131]],["body/guards/QueryGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,2.738,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.002,165,2.216,2143,4.088]],["title/classes/QueryParsedAnswerDto.html",[63,0.182,1936,3.009]],["body/classes/QueryParsedAnswerDto.html",[3,0.087,4,0.078,5,0.078,7,0.229,8,1.248,24,0.361,27,0.008,29,0.317,45,1.223,46,2.387,57,0.143,61,0.129,63,0.321,120,0.006,129,0.006,172,1.195,183,0.905,521,1.622,534,2.664,536,2.827,537,3.407,540,1.585,551,2.762,618,4.536,648,2.543,823,1.301,948,3.762,1936,4.451,1943,4.985,1944,4.985,1946,5.264,1948,4.825,1956,3.558,2052,4.701,2058,3.735,2097,2.827,2098,2.827,2110,2.827,2111,2.827,2144,5.6,2145,3.785,2146,5.027,2147,5.027,2148,5.027,2149,5.027,2150,3.369,2151,3.208,2152,4.825,2153,3.208,2154,3.208,2155,3.208,2156,3.066,2157,3.208,2158,3.066,2159,3.208,2160,3.066,2161,3.208,2162,3.208,2163,3.208,2164,3.208,2165,3.369,2166,3.369,2167,3.208,2168,2.94,2169,4.069]],["title/injectables/QueryQueueTask.html",[0,0.676,2170,3.177]],["body/injectables/QueryQueueTask.html",[0,1.041,2,1.893,3,0.093,4,0.083,5,0.083,7,0.244,11,1.139,12,1.941,22,1.867,24,0.376,26,0.805,27,0.008,28,0.588,29,0.255,30,0.717,35,0.862,57,0.168,58,0.65,61,0.093,63,0.217,65,2.336,72,1.755,120,0.006,129,0.006,172,0.962,229,2.325,244,4.023,373,2.635,391,2.448,533,2.325,792,4.94,812,3.41,1088,3.887,1330,4.325,1610,4.73,1912,4.73,1913,4.73,2170,4.892,2171,6.781,2172,4.73,2173,8.1,2174,5.344,2175,7.661,2176,4.94,2177,5.344,2178,6.912,2179,6.912,2180,5.344,2181,4.73,2182,4.023,2183,4.325,2184,5.595,2185,5.344,2186,4.325,2187,5.344,2188,5.344,2189,6.118,2190,5.344,2191,6.118,2192,5.344,2193,7.661,2194,5.344,2195,5.344,2196,5.344,2197,5.344,2198,7.661,2199,5.344,2200,5.344,2201,5.344]],["title/classes/QuerySeriesAnswer.html",[63,0.182,2202,3.634]],["body/classes/QuerySeriesAnswer.html",[3,0.045,4,0.04,5,0.04,7,0.118,8,0.769,22,1.105,24,0.491,26,0.39,27,0.008,28,0.284,29,0.402,30,0.347,38,2.457,45,1.249,48,3.134,49,3.116,57,0.079,61,0.045,63,0.105,108,4.435,120,0.004,129,0.004,225,3.273,618,2.495,648,1.308,823,0.669,880,1.885,1139,1.65,1948,2.495,1956,1.831,2090,6.177,2091,6.144,2093,5.032,2094,5.088,2095,5.41,2096,5.41,2097,3.759,2098,3.759,2099,5.032,2100,3.312,2101,3.312,2102,3.312,2103,3.312,2104,3.312,2105,3.312,2106,3.312,2107,3.312,2108,3.312,2109,3.312,2110,3.759,2111,3.759,2151,3.681,2152,4.557,2156,4.557,2158,4.557,2160,3.833,2168,3.676,2202,3.312,2203,6.606,2204,2.289,2205,7.473,2206,5.076,2207,5.076,2208,5.076,2209,5.076,2210,5.076,2211,4.492,2212,2.289,2213,5.77,2214,4.091,2215,2.586,2216,2.586,2217,2.586,2218,2.586,2219,2.586,2220,2.586,2221,2.586,2222,2.586,2223,2.586,2224,2.586,2225,2.586,2226,6.078,2227,2.289,2228,2.289,2229,2.289,2230,2.289,2231,2.289,2232,2.289,2233,2.289,2234,2.289,2235,2.289,2236,2.289,2237,2.289,2238,2.289,2239,2.289,2240,2.289,2241,2.289,2242,2.289,2243,2.289,2244,2.289,2245,2.289,2246,2.289,2247,2.289,2248,2.586,2249,3.621,2250,4.091,2251,4.091,2252,4.091,2253,4.091,2254,4.091]],["title/classes/QuerySeriesDto.html",[63,0.182,1943,3.009]],["body/classes/QuerySeriesDto.html",[3,0.08,4,0.071,5,0.071,7,0.211,8,1.18,24,0.449,27,0.008,29,0.394,45,1.239,57,0.137,61,0.124,63,0.31,120,0.006,129,0.006,172,1.484,183,0.832,521,2.66,534,2.637,536,2.599,537,3.369,540,1.457,551,2.731,618,2.818,648,2.338,823,1.196,948,2.338,1936,3.097,1943,4.778,1944,4.207,1946,5.971,1948,4.348,1956,3.271,2052,3.271,2058,3.53,2097,2.599,2098,2.599,2110,2.599,2111,2.599,2144,6.352,2145,3.479,2150,3.097,2151,4.548,2152,5.03,2153,2.948,2154,4.548,2155,2.948,2156,4.348,2157,2.948,2158,4.348,2159,2.948,2160,4.348,2161,2.948,2162,2.948,2163,2.948,2164,2.948,2165,3.097,2166,3.097,2167,2.948,2168,2.703,2169,3.741,2255,3.479,2256,4.621,2257,4.09,2258,4.621,2259,4.09,2260,4.621,2261,4.09,2262,4.621,2263,4.09,2264,4.621,2265,4.09,2266,4.621]],["title/classes/QueryStudyAnswer.html",[63,0.182,2267,3.634]],["body/classes/QueryStudyAnswer.html",[3,0.05,4,0.044,5,0.044,7,0.13,8,0.831,22,1.194,24,0.491,26,0.43,27,0.008,28,0.314,29,0.402,30,0.383,38,2.505,45,1.244,48,3.128,49,3.106,57,0.085,61,0.05,63,0.116,108,4.434,120,0.004,129,0.004,225,2.982,618,2.696,648,1.444,823,0.739,880,2.037,1139,1.822,1948,2.696,1966,2.527,2090,6.263,2091,5.927,2093,5.245,2094,5.332,2095,5.639,2096,5.639,2097,3.917,2098,3.917,2099,5.245,2100,3.578,2101,3.578,2102,3.578,2103,3.578,2104,3.578,2105,3.578,2106,3.578,2107,3.578,2108,3.578,2109,3.578,2110,3.917,2111,3.917,2168,4.507,2203,6.372,2211,4.787,2212,2.527,2226,6.175,2227,2.527,2228,2.527,2229,2.527,2230,2.527,2231,2.527,2232,2.527,2233,2.527,2234,2.527,2235,2.527,2236,2.527,2237,2.527,2238,2.527,2239,2.527,2240,2.527,2241,2.527,2242,2.527,2243,2.527,2244,2.527,2245,2.527,2246,2.527,2247,2.527,2249,3.913,2267,3.578,2268,2.527,2269,7.705,2270,7.705,2271,7.705,2272,5.409,2273,5.409,2274,5.409,2275,4.42,2276,2.855,2277,2.855,2278,2.855,2279,2.855,2280,2.855,2281,2.855,2282,2.855,2283,4.42,2284,4.42,2285,4.42]],["title/classes/QueryStudyDto.html",[63,0.182,1944,3.009]],["body/classes/QueryStudyDto.html",[3,0.078,4,0.07,5,0.07,7,0.206,8,1.163,24,0.456,27,0.008,29,0.401,45,1.24,57,0.136,61,0.122,63,0.307,120,0.005,129,0.005,172,1.51,183,0.814,521,2.706,534,2.63,536,2.544,537,3.359,540,1.426,551,2.723,618,2.759,648,2.289,823,1.171,948,2.289,1936,3.032,1943,4.147,1944,4.726,1946,6.046,1948,4.3,1956,3.202,2052,3.202,2058,3.479,2097,3.965,2098,3.965,2110,3.965,2111,3.965,2144,6.431,2145,3.406,2150,3.032,2151,2.887,2152,4.998,2153,2.887,2154,2.887,2155,2.887,2156,2.759,2157,2.887,2158,2.759,2159,2.887,2160,2.759,2161,2.887,2162,2.887,2163,2.887,2164,2.887,2165,3.032,2166,4.726,2167,2.887,2168,4.124,2169,3.662,2255,3.406,2286,4.004,2287,4.524,2288,4.524,2289,4.004,2290,4.524,2291,4.004,2292,4.524,2293,4.004,2294,4.524,2295,4.004,2296,4.524,2297,4.004,2298,4.524]],["title/modules/QueueModule.html",[189,1.482,209,3.177]],["body/modules/QueueModule.html",[3,0.1,4,0.089,5,0.089,27,0.008,57,0.171,58,0.704,61,0.1,63,0.234,120,0.006,129,0.006,169,2.241,189,2.624,191,2.589,192,2.665,193,2.833,194,2.833,195,2.833,196,3.894,197,2.747,209,6.476,215,3.561,216,2.833,217,2.833,219,2.833,1902,5.12,2176,5.35,2182,4.356,2299,5.12,2300,5.12,2301,5.879,2302,5.879,2303,5.785,2304,5.987,2305,5.987,2306,5.987,2307,7.271,2308,5.785,2309,7.271,2310,5.785,2311,7.271,2312,5.12,2313,5.12]],["title/controllers/QueuesAnonController.html",[167,1.187,2304,3.38]],["body/controllers/QueuesAnonController.html",[3,0.052,4,0.047,5,0.047,7,0.138,10,3.671,11,0.762,12,2.157,18,3.153,24,0.368,26,0.946,27,0.008,28,0.784,29,0.382,30,0.842,32,2.417,35,1.09,36,2.521,38,1.653,40,3.631,44,1.845,45,0.995,50,5.147,57,0.143,58,0.368,59,3.42,61,0.052,63,0.123,65,2.056,72,1.551,73,4.207,84,0.766,104,1.285,108,1.436,110,1.022,112,3.097,120,0.005,129,0.004,131,2.137,142,2.872,144,2.084,147,2.746,157,2.662,167,0.8,169,0.933,172,1.217,183,0.544,300,4.277,320,4.333,322,4.183,326,4.207,333,2.263,344,2.129,348,1.845,350,1.316,353,4.572,354,1.316,374,4.524,376,3.664,390,2.73,391,2.525,393,2.453,409,3.279,487,1.93,490,2.129,722,1.701,730,3.578,731,3.955,740,2.713,751,1.845,754,1.701,757,1.354,758,2.948,759,1.394,764,1.214,789,2.504,862,1.28,944,3.479,948,1.53,1244,1.701,1451,3.758,1615,1.769,1980,4.726,1981,4.222,1984,3.271,1985,3.479,1988,2.277,1989,2.277,1991,5.367,1992,2.277,1995,2.277,1996,2.277,1997,2.277,1998,2.277,2001,2.277,2004,2.141,2005,3.479,2007,2.027,2012,2.277,2014,4.726,2015,3.271,2017,2.277,2018,4.222,2021,2.277,2022,2.277,2023,2.277,2026,3.479,2030,3.479,2031,3.479,2032,3.271,2033,3.479,2036,2.277,2078,3.097,2301,3.758,2304,3.479,2312,2.677,2314,5.045,2315,2.677,2316,3.025,2317,5.607,2318,4.621,2319,3.025,2320,5.045,2321,3.025,2322,3.025,2323,3.025,2324,2.448,2325,2.448,2326,3.025,2327,3.025,2328,3.025,2329,3.025,2330,3.025,2331,3.025,2332,3.025,2333,3.025,2334,3.025,2335,3.74,2336,3.025,2337,3.025,2338,3.74,2339,3.025,2340,3.025,2341,4.621,2342,3.025,2343,2.448,2344,2.448,2345,3.025,2346,3.025,2347,3.025,2348,3.025,2349,3.025]],["title/classes/QueuesAnonDto.html",[63,0.182,2350,3.38]],["body/classes/QueuesAnonDto.html",[3,0.091,4,0.081,5,0.081,7,0.239,8,1.282,24,0.465,27,0.008,29,0.408,45,1.224,57,0.131,61,0.091,63,0.307,84,1.326,120,0.006,129,0.006,172,1.538,183,0.942,521,2.756,534,2.545,537,3.236,540,1.65,551,2.623,569,3.061,823,1.354,1464,4.351,2058,3.835,2314,6.159,2320,3.705,2344,4.237,2350,6.051,2351,4.237,2352,6.714,2353,6.714,2354,6.714,2355,6.714,2356,6.714,2357,7.113,2358,5.234,2359,5.234,2360,5.234,2361,5.234,2362,5.234,2363,5.234,2364,5.234,2365,5.234,2366,5.234,2367,5.234,2368,5.234,2369,5.234,2370,4.633,2371,4.633,2372,4.633,2373,4.633,2374,4.633]],["title/injectables/QueuesAnonService.html",[0,0.676,2301,3.009]],["body/injectables/QueuesAnonService.html",[0,0.909,1,5.984,2,1.545,3,0.076,4,0.067,5,0.067,7,0.199,8,1.134,9,4.044,10,4.366,11,0.995,12,2.318,13,4.044,14,4.543,15,5.208,16,4.896,17,4.896,18,3.393,19,4.543,20,4.543,21,4.044,22,1.179,24,0.478,26,1.252,27,0.008,28,0.913,29,0.405,30,1.114,31,3.284,32,3.905,34,3.68,35,1.386,36,2.71,37,3.284,38,2.201,40,2.865,44,2.66,45,1.001,46,3.944,48,2.51,49,2.51,50,3.529,51,3.284,53,3.284,55,3.284,57,0.144,58,0.531,60,2.783,61,0.076,63,0.177,72,0.912,120,0.005,129,0.005,231,4.099,232,2.282,276,2.924,278,3.088,279,3.088,391,1.545,645,2.783,880,2.78,1207,4.271,2081,3.284,2082,3.284,2226,6.159,2301,4.044,2314,4.271,2375,3.861,2376,4.362,2377,3.531,2378,3.531,2379,3.531,2380,3.531,2381,3.531,2382,3.531,2383,3.531,2384,3.531,2385,3.531,2386,3.531,2387,4.362,2388,4.362,2389,3.531,2390,3.531,2391,3.531,2392,3.531,2393,4.362]],["title/classes/QueuesAnonsDto.html",[63,0.182,2320,3.177]],["body/classes/QueuesAnonsDto.html",[3,0.102,4,0.091,5,0.091,7,0.268,8,1.381,24,0.32,27,0.008,29,0.281,45,1.182,57,0.141,61,0.102,63,0.325,84,1.861,120,0.006,129,0.006,172,1.059,183,1.059,521,1.897,534,2.606,537,3.323,540,1.855,551,2.694,569,3.44,823,1.522,1464,4.688,2058,4.132,2314,5.2,2320,5.2,2344,6.485,2350,6.318,2351,4.761,2352,5.206,2353,5.206,2354,5.206,2355,5.206,2356,5.206,2357,6.503,2370,5.206,2371,5.206,2372,5.206,2373,5.206,2374,5.206,2394,5.882,2395,5.882]],["title/controllers/QueuesDeleteController.html",[167,1.187,2305,3.38]],["body/controllers/QueuesDeleteController.html",[3,0.052,4,0.047,5,0.047,7,0.138,10,3.667,11,0.76,12,2.156,18,3.149,24,0.367,26,0.945,27,0.008,28,0.783,29,0.382,30,0.841,32,2.414,35,1.089,36,2.52,38,1.651,40,3.628,44,1.841,45,0.994,50,5.145,57,0.143,58,0.367,59,3.415,61,0.052,63,0.122,65,2.054,72,1.55,73,4.202,84,0.765,104,1.284,108,1.433,110,1.02,112,3.092,120,0.005,129,0.004,131,2.135,142,2.871,144,2.082,155,2.659,157,2.659,167,0.798,169,0.93,172,1.216,183,0.543,300,4.276,320,4.331,322,4.181,326,4.202,333,2.26,344,2.125,348,1.841,350,1.313,353,4.57,354,1.313,374,4.522,376,3.661,390,2.727,391,2.523,393,2.451,409,3.275,487,1.926,490,2.125,722,1.697,730,3.576,731,3.951,740,2.71,751,1.841,754,1.697,757,1.351,758,2.943,759,1.391,764,1.211,789,2.5,862,1.277,948,1.527,1244,1.697,1451,3.753,1615,1.765,1803,4.083,1980,4.721,1981,4.216,1984,3.265,1985,3.473,1988,2.273,1989,2.273,1991,5.363,1992,2.273,1995,2.273,1996,2.273,1997,2.273,1998,2.273,2001,2.273,2004,2.136,2005,3.473,2007,2.023,2012,2.273,2014,4.721,2015,3.265,2017,2.273,2018,4.216,2021,2.273,2022,2.273,2023,2.273,2026,4.216,2030,3.473,2031,3.473,2032,3.265,2033,3.473,2036,2.273,2078,3.092,2302,3.753,2305,3.473,2313,2.672,2324,2.443,2325,2.443,2335,3.734,2338,3.734,2343,2.443,2396,5.363,2397,2.672,2398,3.018,2399,5.6,2400,4.613,2401,3.018,2402,5.363,2403,3.018,2404,3.018,2405,3.018,2406,3.018,2407,3.018,2408,3.018,2409,3.018,2410,3.018,2411,3.018,2412,3.018,2413,3.018,2414,3.018,2415,3.018,2416,3.018,2417,3.018,2418,3.018,2419,3.018,2420,2.672,2421,3.018,2422,3.018,2423,3.018,2424,4.083,2425,3.018,2426,3.018]],["title/classes/QueuesDeleteDto.html",[63,0.182,2402,3.38]],["body/classes/QueuesDeleteDto.html",[3,0.115,4,0.102,5,0.102,7,0.301,8,1.482,24,0.359,27,0.008,29,0.315,45,1.058,57,0.152,61,0.115,63,0.32,120,0.007,129,0.007,172,1.188,183,1.188,521,2.13,534,2.274,540,2.082,551,1.991,823,1.709,1464,5.031,2396,5.936,2402,5.936,2420,7.461,2427,5.844,2428,6.603,2429,6.603,2430,6.603,2431,6.603]],["title/injectables/QueuesDeleteService.html",[0,0.676,2302,3.009]],["body/injectables/QueuesDeleteService.html",[0,0.909,1,5.984,2,1.545,3,0.076,4,0.067,5,0.067,7,0.199,8,1.134,9,4.044,10,4.366,11,0.995,12,2.318,13,4.044,14,4.543,15,5.208,16,4.896,17,4.896,18,3.393,19,4.543,20,4.543,21,4.044,22,1.179,24,0.478,26,1.252,27,0.008,28,0.913,29,0.405,30,1.114,31,3.284,32,3.905,34,3.68,35,1.386,36,2.71,37,3.284,38,2.201,40,2.865,44,2.66,45,1.001,46,3.944,48,2.51,49,2.51,50,3.529,51,3.284,53,3.284,55,3.284,57,0.144,58,0.531,60,2.783,61,0.076,63,0.177,72,0.912,120,0.005,129,0.005,231,4.099,232,2.282,276,2.924,278,3.088,279,3.088,391,1.545,645,2.783,880,2.78,1207,4.271,2081,3.284,2082,3.284,2226,6.159,2302,4.044,2377,3.531,2378,3.531,2379,3.531,2380,3.531,2381,3.531,2382,3.531,2383,3.531,2384,3.531,2385,3.531,2386,3.531,2389,3.531,2390,3.531,2391,3.531,2392,3.531,2396,4.543,2432,3.861,2433,4.362,2434,4.362,2435,4.362,2436,4.362]],["title/controllers/QueuesQueryController.html",[167,1.187,2306,3.38]],["body/controllers/QueuesQueryController.html",[3,0.051,4,0.045,5,0.045,7,0.133,10,3.601,11,0.74,12,2.142,18,3.081,24,0.362,26,0.928,27,0.008,28,0.772,29,0.378,30,0.826,32,2.35,35,1.072,36,2.496,38,1.616,40,3.681,44,1.778,45,0.982,50,5.168,57,0.141,58,0.355,59,3.342,61,0.051,63,0.118,65,2.026,72,1.581,73,4.126,84,0.738,104,1.26,108,2.132,110,0.985,112,3.01,120,0.005,129,0.004,131,2.089,142,2.855,144,2.05,151,2.601,157,2.601,167,0.771,169,0.899,172,1.197,183,0.525,300,4.259,320,4.29,322,4.142,326,4.126,333,2.2,344,2.069,348,1.778,350,1.268,353,4.538,354,1.268,374,4.488,376,3.603,390,2.892,391,2.592,393,2.412,409,3.205,487,1.86,490,2.069,669,3.496,722,1.639,730,3.543,731,3.889,740,2.668,751,1.778,754,1.639,757,1.304,758,2.866,759,1.343,764,1.169,789,2.434,862,1.233,921,3.382,938,2.866,948,1.474,1244,1.639,1451,3.672,1472,2.063,1615,1.705,1923,2.359,1933,2.58,1950,3.975,1980,4.635,1981,4.125,1984,3.179,1985,3.382,1988,2.195,1989,2.195,1991,5.289,1992,2.195,1995,2.195,1996,2.195,1997,2.195,1998,2.195,2001,2.195,2004,2.063,2005,3.382,2007,1.954,2012,2.195,2014,4.635,2015,3.179,2017,2.195,2018,4.125,2021,2.195,2022,2.195,2023,2.195,2026,4.125,2030,3.382,2031,3.382,2032,3.179,2033,3.382,2036,2.195,2078,3.01,2176,3.342,2182,2.195,2306,3.382,2324,2.359,2325,2.359,2335,3.635,2338,3.635,2343,2.359,2437,4.708,2438,2.915,2439,5.479,2440,4.491,2441,2.915,2442,4.708,2443,2.915,2444,2.915,2445,2.915,2446,2.915,2447,2.915,2448,2.915,2449,2.915,2450,3.01,2451,3.01,2452,2.915,2453,2.915,2454,2.915,2455,2.915,2456,2.915,2457,2.915,2458,2.915,2459,2.915,2460,2.915,2461,2.915,2462,2.915,2463,2.915,2464,2.915,2465,2.915,2466,2.915,2467,2.915,2468,2.063,2469,2.915,2470,4.491,2471,2.915,2472,2.915,2473,2.915]],["title/classes/QueuesQueryDto.html",[63,0.182,2442,3.009]],["body/classes/QueuesQueryDto.html",[3,0.078,4,0.069,5,0.069,7,0.204,8,1.155,24,0.334,27,0.008,29,0.294,45,1.216,46,2.918,48,2.23,49,2.23,57,0.118,61,0.122,63,0.306,84,1.912,110,2.076,120,0.005,129,0.005,172,1.106,183,0.806,521,1.983,534,2.647,537,3.387,540,1.413,551,2.757,569,3.595,663,6.032,669,4.476,740,3.029,823,1.16,1464,4.476,2058,3.945,2097,3.457,2098,3.457,2110,3.457,2111,3.457,2150,4.119,2151,3.922,2152,5.198,2153,3.922,2154,3.922,2155,3.922,2156,3.749,2157,3.922,2158,3.749,2159,3.922,2160,3.749,2161,3.922,2162,3.922,2163,3.922,2164,3.922,2165,4.119,2166,4.119,2167,3.922,2168,3.595,2437,4.702,2442,4.119,2450,4.702,2451,4.702,2468,4.966,2474,3.374,2475,6.146,2476,4.481,2477,4.481]],["title/classes/QueuesQuerySeriesDto.html",[63,0.182,2451,3.009]],["body/classes/QueuesQuerySeriesDto.html",[3,0.072,4,0.064,5,0.064,7,0.19,8,1.1,24,0.446,27,0.008,29,0.392,45,1.237,57,0.113,61,0.117,63,0.297,84,1.482,110,1.977,120,0.005,129,0.005,172,1.477,183,0.751,521,2.647,534,2.625,537,3.356,540,1.316,551,2.733,569,3.422,663,6.104,669,2.663,740,2.347,823,1.08,1464,4.311,2058,3.799,2097,3.291,2098,3.291,2110,3.291,2111,3.291,2150,3.922,2151,4.672,2152,5.26,2153,3.733,2154,4.672,2155,3.733,2156,4.466,2157,3.733,2158,4.466,2159,3.733,2160,4.466,2161,3.733,2162,3.733,2163,3.733,2164,3.733,2165,3.922,2166,3.922,2167,3.733,2168,3.422,2255,3.143,2257,3.694,2259,3.694,2261,3.694,2263,3.694,2265,3.694,2437,5.614,2442,2.797,2450,3.922,2451,4.528,2468,2.954,2474,3.143,2478,3.694,2479,4.174,2480,4.174,2481,4.174,2482,4.174,2483,4.174,2484,4.174,2485,4.174]],["title/injectables/QueuesQueryService.html",[0,0.676,2176,2.738]],["body/injectables/QueuesQueryService.html",[0,0.857,1,5.903,2,1.421,3,0.07,4,0.062,5,0.062,7,0.183,8,1.069,9,3.814,10,4.209,11,0.938,12,2.353,13,3.814,14,4.285,15,4.979,16,4.68,17,4.68,18,3.2,19,4.285,20,4.285,21,3.814,22,1.084,24,0.483,26,1.223,27,0.008,28,0.892,29,0.396,30,1.088,31,3.021,32,3.764,34,3.471,35,1.408,36,2.815,37,3.021,38,2.122,40,2.702,44,2.447,45,0.965,46,3.853,48,2.399,49,2.399,50,3.328,51,3.021,53,3.021,55,3.021,57,0.139,58,0.488,60,2.56,61,0.07,63,0.163,65,1.907,72,0.839,104,0.822,120,0.005,129,0.005,231,3.975,232,2.099,276,2.689,278,2.84,279,2.84,391,1.421,645,2.56,880,2.622,1207,4.028,2081,3.021,2082,3.021,2176,3.471,2226,6.053,2377,3.248,2378,3.248,2379,3.248,2380,3.248,2381,3.248,2382,3.248,2383,3.248,2384,3.248,2385,3.248,2386,3.248,2389,3.248,2390,3.248,2391,3.248,2392,3.248,2437,5.092,2486,3.551,2487,7.196,2488,7.196,2489,7.196,2490,4.012,2491,4.012,2492,4.012,2493,4.012,2494,4.012,2495,4.012,2496,4.012,2497,4.012,2498,4.012,2499,4.012,2500,4.012]],["title/classes/QueuesQueryStudyDto.html",[63,0.182,2450,3.009]],["body/classes/QueuesQueryStudyDto.html",[3,0.071,4,0.063,5,0.063,7,0.187,8,1.086,24,0.454,27,0.008,29,0.398,45,1.238,57,0.111,61,0.116,63,0.294,84,1.464,110,1.952,120,0.005,129,0.005,172,1.501,183,0.738,521,2.69,534,2.62,537,3.347,540,1.293,551,2.727,569,3.38,663,6.081,669,2.616,740,2.318,823,1.061,1464,4.27,2058,3.763,2097,4.086,2098,4.086,2110,4.086,2111,4.086,2150,3.873,2151,3.687,2152,5.24,2153,3.687,2154,3.687,2155,3.687,2156,3.524,2157,3.687,2158,3.524,2159,3.687,2160,3.524,2161,3.687,2162,3.687,2163,3.687,2164,3.687,2165,3.873,2166,4.87,2167,3.687,2168,4.249,2255,3.087,2286,3.629,2289,3.629,2291,3.629,2293,3.629,2295,3.629,2297,3.629,2437,5.682,2442,2.748,2450,4.485,2451,3.873,2468,2.902,2474,3.087,2478,3.629,2501,4.1,2502,4.1,2503,4.1,2504,4.1,2505,4.1,2506,4.1,2507,4.1,2508,4.1]],["title/guards/ReadAllGuard.html",[130,2.068,164,2.199]],["body/guards/ReadAllGuard.html",[0,1.321,3,0.071,4,0.063,5,0.063,7,0.187,11,0.951,24,0.222,26,0.616,27,0.008,28,0.45,29,0.195,30,0.548,35,0.659,57,0.079,58,0.498,61,0.151,63,0.352,72,1.924,104,1.778,120,0.005,129,0.005,131,1.559,132,1.941,133,2.139,134,4.224,135,4.162,136,4.099,138,1.884,139,2.764,140,2.002,141,3.886,142,2.866,143,4.392,144,2.836,145,4.706,146,2.216,147,2.002,148,2.216,149,2.002,150,2.216,151,1.941,152,2.216,153,2.068,154,2.216,155,1.941,156,2.216,157,1.941,158,2.002,159,2.216,160,2.068,161,2.216,162,2.002,163,2.216,164,2.825,165,2.216,2509,4.088]],["title/classes/RegisterDto.html",[63,0.182,339,3.38]],["body/classes/RegisterDto.html",[3,0.106,4,0.094,5,0.094,7,0.279,8,1.414,24,0.443,27,0.008,29,0.389,45,1.193,57,0.145,61,0.106,63,0.305,120,0.007,129,0.007,172,1.467,183,1.1,329,3.756,339,5.665,397,4.784,399,4.784,521,2.629,534,2.453,540,1.928,551,2.457,823,1.582,847,6.138,981,6.091,2510,5.411,2511,6.113,2512,6.113,2513,6.113,2514,6.113,2515,6.113,2516,6.113,2517,6.113]],["title/entities/Role.html",[494,2.131,510,2.068]],["body/entities/Role.html",[3,0.064,4,0.057,5,0.057,7,0.168,8,1.005,24,0.472,27,0.008,28,1.017,29,0.415,30,0.717,45,0.717,46,1.747,48,3.148,57,0.156,61,0.133,63,0.149,84,2.153,110,3.091,120,0.005,129,0.005,139,2.868,172,1.561,183,0.662,490,3.385,494,2.539,510,2.464,511,2.991,512,2.348,521,2.799,531,5.242,533,1.601,534,2.523,551,2.615,740,2.146,943,4.675,944,5.531,945,5.1,946,5.1,947,5.947,948,3.716,949,5.1,1009,4.223,1010,3.877,1013,2.467,1223,4.329,1248,2.771,2518,3.258,2519,8.501,2520,3.68,2521,3.68,2522,5.349,2523,3.68,2524,5.349,2525,3.68,2526,5.349,2527,3.68,2528,3.68,2529,3.68,2530,3.68,2531,3.68,2532,3.68,2533,5.349,2534,3.68,2535,3.68,2536,3.68,2537,3.68,2538,3.68,2539,5.349,2540,3.68,2541,5.349,2542,5.349]],["title/controllers/RolesController.html",[167,1.187,2543,3.38]],["body/controllers/RolesController.html",[3,0.044,4,0.039,5,0.039,7,0.116,11,0.667,12,2.216,22,0.689,24,0.393,26,1.088,27,0.008,28,0.929,29,0.384,30,0.969,35,1.164,36,2.62,45,1.156,46,1.21,57,0.155,58,0.31,61,0.044,63,0.103,65,2.396,72,0.846,104,1.278,110,1.366,120,0.004,129,0.004,131,2.181,144,0.786,167,0.674,169,0.786,172,1.3,183,0.459,300,4.287,312,2.58,314,3.273,320,4.408,322,4.347,333,2.462,344,1.863,348,1.555,349,1.708,350,2.489,351,4.069,353,4.579,354,1.109,362,2.046,363,1.626,373,1.916,374,4.543,376,3.913,390,2.715,391,2.881,393,2.62,401,4.35,409,1.491,410,3.579,490,2.875,494,3.862,551,0.768,722,1.433,730,3.718,731,4.223,732,2.192,751,1.555,754,1.433,757,1.141,759,1.174,760,2.063,786,2.71,789,2.192,790,3.982,862,2.127,867,2.063,872,1.919,940,5.757,948,1.289,1006,3.045,1009,2.71,1010,4.062,1012,3.579,1224,4.927,1233,1.919,1239,2.466,1241,2.256,1244,3.509,1248,1.919,1256,1.919,1418,1.804,1472,2.862,1583,2.063,1615,3.347,1684,1.919,1984,2.862,2004,1.804,2007,1.708,2008,2.063,2543,3.045,2544,2.256,2545,5.027,2546,5.027,2547,4.044,2548,3.579,2549,3.579,2550,5.027,2551,2.549,2552,6.96,2553,2.549,2554,2.549,2555,2.549,2556,2.549,2557,2.549,2558,2.549,2559,2.549,2560,2.549,2561,2.549,2562,2.549,2563,2.549,2564,2.549,2565,5,2566,2.549,2567,2.549,2568,2.549,2569,2.549,2570,2.549,2571,2.256,2572,3.579,2573,2.549,2574,2.549,2575,2.549,2576,2.549,2577,2.549,2578,2.256,2579,2.549,2580,2.549,2581,2.549,2582,2.256,2583,2.274,2584,2.256,2585,2.063,2586,2.549,2587,2.549,2588,2.549,2589,2.549,2590,2.549,2591,2.256,2592,2.549,2593,2.256,2594,2.549,2595,2.549,2596,2.549,2597,2.549,2598,2.549,2599,2.549,2600,4.044,2601,2.549,2602,2.549,2603,2.549,2604,2.549,2605,2.549,2606,2.549,2607,2.549,2608,2.549,2609,2.549,2610,2.549,2611,2.549,2612,2.256,2613,2.549,2614,2.549,2615,2.549,2616,2.549,2617,2.549,2618,2.549,2619,2.549,2620,5.027,2621,2.549,2622,4.044,2623,4.044,2624,2.549,2625,2.549,2626,2.549,2627,2.549,2628,2.549,2629,2.549,2630,2.549,2631,2.549,2632,2.549,2633,2.549,2634,2.549]],["title/modules/RolesModule.html",[189,1.482,210,3.177]],["body/modules/RolesModule.html",[3,0.1,4,0.089,5,0.089,27,0.008,57,0.175,58,0.704,61,0.1,63,0.234,120,0.006,129,0.006,144,2.241,169,2.241,189,2.624,191,2.589,192,2.665,193,2.833,194,2.833,195,2.833,196,3.894,197,2.747,210,6.476,215,3.561,216,2.833,217,2.833,219,2.833,228,3.253,229,2.516,362,4.438,363,3.691,450,4.356,494,2.747,1010,3.678,1013,3.877,1239,5.35,2543,5.987,2582,5.12,2583,4.933,2584,5.12,2585,4.683,2635,5.12,2636,5.12,2637,5.785,2638,5.785,2639,5.785]],["title/injectables/RolesService.html",[0,0.676,2583,2.524]],["body/injectables/RolesService.html",[0,0.726,2,1.131,3,0.055,4,0.049,5,0.049,7,0.146,11,0.794,12,2.332,22,1.301,24,0.454,26,1.199,27,0.008,28,0.987,29,0.38,30,1.067,35,1.328,36,2.796,45,1.219,57,0.145,58,0.389,61,0.101,63,0.129,65,2.459,72,1.58,84,2.256,104,1.418,108,1.516,110,1.079,120,0.004,129,0.004,144,1.787,180,3.141,229,1.389,349,2.141,373,1.836,390,1.389,391,1.131,401,4.258,409,1.868,490,2.219,494,4.114,511,2.286,533,1.389,732,2.61,786,4.326,789,2.61,790,3.072,792,4.608,812,2.038,943,3.936,944,3.626,945,3.898,946,3.898,947,3.898,948,2.436,949,3.898,1009,4.879,1010,2.436,1013,2.141,1238,6.442,1248,3.626,1255,2.827,1256,2.405,1265,4.262,1269,5.131,1278,2.827,1414,2.141,1498,4.568,1516,2.405,1517,2.405,2549,4.262,2571,4.262,2578,4.262,2583,2.708,2585,2.585,2640,2.827,2641,4.815,2642,6.454,2643,4.815,2644,4.815,2645,3.194,2646,3.194,2647,4.815,2648,4.815,2649,3.194,2650,4.815,2651,3.194,2652,3.194,2653,3.194,2654,4.815,2655,3.194,2656,3.194,2657,4.815,2658,3.194,2659,4.815,2660,3.194,2661,4.815,2662,3.194,2663,3.194,2664,3.194,2665,3.194,2666,4.815,2667,4.815,2668,5.712,2669,3.194,2670,3.194,2671,5.796,2672,3.194,2673,3.194,2674,5.796,2675,3.194,2676,3.194,2677,3.194,2678,4.815,2679,3.194,2680,4.815,2681,3.194]],["title/classes/Router.html",[63,0.182,516,2.864]],["body/classes/Router.html",[3,0.072,4,0.065,5,0.065,7,0.191,8,1.101,24,0.368,27,0.008,28,1.005,29,0.424,38,1.994,45,0.907,49,2.799,57,0.154,61,0.127,63,0.324,84,1.484,120,0.005,123,2.29,129,0.005,139,1.318,172,1.217,183,0.752,510,2.699,511,1.985,513,2.959,514,4.146,515,2.959,516,5.102,520,3.572,521,2.181,522,5.091,531,5.445,532,3.926,533,1.818,534,2.59,535,3.174,536,2.351,537,2.514,538,2.549,539,5.517,540,1.318,541,5.17,542,3.926,543,5.186,544,5.359,545,4.911,546,2.667,547,2.549,548,2.667,549,3.147,550,4.675,551,2.526,552,4.41,553,3.147,554,3.147,555,4.146,556,3.147,557,3.147,558,3.147,559,4.41,560,3.147,561,5.102,562,4.41,563,3.147,564,3.147,565,3.147,566,3.147,567,5.808,568,5.091,569,3.426,570,5.808,571,2.959,572,3.147,573,2.959,823,1.082,2682,5.857,2683,5.857,2684,4.18,2685,4.18,2686,4.18,2687,4.18]],["title/classes/Rule.html",[63,0.182,550,2.864]],["body/classes/Rule.html",[3,0.072,4,0.064,5,0.064,7,0.189,8,1.093,24,0.397,27,0.008,28,1.004,29,0.42,38,2.151,45,0.978,49,2.97,57,0.153,61,0.126,63,0.323,84,1.473,120,0.005,123,2.273,129,0.005,139,1.304,172,1.313,183,0.744,510,2.679,511,1.964,513,2.928,514,4.116,515,2.928,516,4.903,517,3.348,520,3.546,521,2.169,522,5.062,531,5.436,532,3.897,533,1.799,534,2.586,535,3.151,536,2.326,537,2.5,538,2.523,539,5.492,540,1.304,541,5.601,542,3.897,543,5.794,544,4.506,545,5.487,546,2.639,547,2.523,548,2.639,549,3.115,550,4.654,551,2.519,552,4.378,553,3.115,554,3.115,555,4.116,556,3.115,557,3.115,558,3.115,559,4.378,560,3.115,561,4.903,562,4.378,563,3.115,564,3.115,565,3.115,566,3.115,567,4.378,568,5.062,569,3.401,570,4.378,571,2.928,572,3.115,573,2.928,823,1.071,2688,4.137,2689,4.137,2690,4.137,2691,4.137,2692,4.137,2693,4.137,2694,4.137,2695,4.137]],["title/modules/SeederModule.html",[189,1.482,211,3.177]],["body/modules/SeederModule.html",[3,0.091,4,0.081,5,0.081,27,0.008,57,0.177,58,0.642,61,0.091,63,0.214,120,0.006,129,0.006,144,2.113,169,1.626,189,2.513,191,2.36,192,2.43,193,2.583,194,2.583,195,2.583,196,3.729,197,2.504,211,6.525,215,3.356,216,2.583,217,2.583,219,2.583,228,2.966,229,2.294,246,4.008,247,3.585,362,4.331,363,3.365,442,4.64,450,3.97,455,4.372,456,3.97,459,3.365,494,3.254,511,3.254,1010,3.466,1013,3.534,1024,3.97,1088,3.854,1580,5.222,2183,4.269,2583,4.815,2696,4.668,2697,4.668,2698,6.06,2699,5.273,2700,5.273,2701,3.97,2702,4.668,2703,5.273,2704,5.273]],["title/injectables/SeederService.html",[0,0.676,2698,3.177]],["body/injectables/SeederService.html",[0,1.088,2,2.028,3,0.099,4,0.088,5,0.088,7,0.261,11,1.191,12,2.005,22,1.952,24,0.393,26,0.863,27,0.008,28,0.63,29,0.274,30,0.768,35,0.923,57,0.165,58,0.697,61,0.099,63,0.232,65,2.397,120,0.006,129,0.006,180,4.643,246,3.349,247,2.996,362,4.494,363,3.653,373,3.168,442,4.814,459,3.653,862,3.517,1498,5.882,1580,5.069,1586,7.005,2583,4.92,2698,5.113,2701,4.311,2702,5.068,2705,5.068,2706,5.726,2707,5.726,2708,5.726,2709,5.726,2710,5.726,2711,5.726,2712,5.726]],["title/classes/TagAnon.html",[63,0.182,2713,3.634]],["body/classes/TagAnon.html",[3,0.099,4,0.088,5,0.088,7,0.26,8,1.354,22,1.947,24,0.451,26,0.859,27,0.008,28,0.627,29,0.396,30,0.765,38,2.523,45,1.225,46,4.15,48,2.069,57,0.11,61,0.099,63,0.231,120,0.006,129,0.006,648,2.885,823,1.476,2713,5.832,2714,7.575,2715,5.047,2716,8.875,2717,8.74,2718,8.875,2719,5.703,2720,7.736,2721,7.205,2722,5.703,2723,5.703,2724,5.703,2725,5.703,2726,5.703]],["title/modules/TasksModule.html",[189,1.482,212,3.177]],["body/modules/TasksModule.html",[3,0.097,4,0.087,5,0.087,27,0.008,57,0.17,58,0.683,61,0.097,63,0.227,120,0.006,129,0.006,189,2.588,191,2.511,192,2.585,193,2.748,194,2.748,195,2.748,196,3.84,197,3.722,212,6.575,215,3.493,216,2.748,217,2.748,219,2.748,228,3.156,229,2.441,592,3.895,641,2.839,642,2.839,948,2.839,1088,3.156,1601,4.967,1768,4.542,1903,6.52,2170,6.52,2176,5.309,2181,4.967,2182,4.225,2183,4.542,2727,4.967,2728,4.967,2729,4.967,2730,5.611,2731,5.611,2732,5.611]],["title/classes/TmtvJobDto.html",[63,0.182,2055,3.38]],["body/classes/TmtvJobDto.html",[3,0.094,4,0.084,5,0.084,7,0.249,8,1.315,24,0.444,27,0.008,29,0.39,45,1.094,48,2.539,57,0.149,61,0.121,63,0.313,84,2.067,110,2.756,120,0.006,129,0.006,139,2.207,172,1.468,183,0.98,534,2.533,535,3.792,536,3.064,537,2.875,540,1.718,646,5.821,647,5.182,648,2.756,692,4.41,694,3.651,695,5.821,696,5.821,697,6.258,700,6.258,740,3.465,823,1.41,910,4.822,959,4.69,1011,6.605,1983,3.651,2050,6.354,2051,4.41,2052,3.856,2055,5.821,2058,3.936,2059,4.822,2060,4.822,2733,5.448,2734,5.448,2735,5.448,2736,5.448,2737,5.448]],["title/classes/TmtvService.html",[63,0.182,2738,3.634]],["body/classes/TmtvService.html",[3,0.058,4,0.052,5,0.052,7,0.154,8,0.941,11,0.826,12,2.241,22,1.353,24,0.478,26,0.998,27,0.008,28,0.729,29,0.398,30,0.889,35,1.301,36,2.089,45,1.155,48,1.817,49,1.817,57,0.136,61,0.058,63,0.136,65,2.435,72,1.652,84,1.515,104,1.225,107,4.434,110,2.238,120,0.004,129,0.004,139,1.886,214,5.153,225,3.245,240,2.725,373,3.444,391,1.774,592,3.322,641,1.703,642,1.703,647,2.256,648,1.703,669,3.196,671,2.93,685,5.864,688,5.864,695,4.504,696,4.504,823,0.871,862,2.12,1349,5.333,1352,4.434,1386,2.98,1395,6.571,1397,2.98,1399,6.269,1401,2.98,1760,4.434,1908,2.98,2039,5.333,2424,5.864,2738,4.055,2739,2.98,2740,5.982,2741,6.626,2742,6.626,2743,6.626,2744,5.009,2745,6.626,2746,6.626,2747,6.626,2748,5.009,2749,5.009,2750,5.009,2751,3.366,2752,3.366,2753,3.366,2754,3.366,2755,3.366,2756,3.366,2757,3.366,2758,3.366,2759,3.366,2760,5.009,2761,3.366,2762,5.009,2763,3.366,2764,3.366,2765,3.366,2766,5.009,2767,3.366,2768,5.009,2769,3.366,2770,3.366,2771,3.366,2772,5.982,2773,3.366,2774,5.009,2775,3.366,2776,5.009,2777,3.366,2778,5.009,2779,7.424,2780,3.366,2781,3.366,2782,3.366,2783,3.366,2784,5.009,2785,3.366,2786,3.366,2787,5.009,2788,3.366,2789,3.366,2790,3.366,2791,5.982,2792,3.366,2793,3.366,2794,3.366,2795,3.366,2796,3.366,2797,5.009,2798,3.366,2799,3.366,2800,3.366,2801,3.366,2802,5.009,2803,3.366,2804,3.366,2805,3.366,2806,3.366,2807,3.366,2808,3.366,2809,3.366,2810,3.366,2811,3.366,2812,3.366,2813,3.366,2814,3.366]],["title/classes/UpdateOptionDto.html",[63,0.182,1575,3.177]],["body/classes/UpdateOptionDto.html",[3,0.12,4,0.107,5,0.107,27,0.008,57,0.156,61,0.12,63,0.281,120,0.007,129,0.007,183,1.247,732,3.755,823,1.793,880,3.738,883,4.905,885,5.217,991,7.18,1004,5.609,1005,5.217,1575,5.742,2815,6.133]],["title/classes/UpdateUserDto.html",[63,0.182,2816,3.38]],["body/classes/UpdateUserDto.html",[3,0.098,4,0.087,5,0.087,7,0.258,8,1.345,24,0.45,27,0.008,29,0.395,45,1.202,57,0.138,61,0.098,63,0.29,84,2.094,120,0.006,129,0.006,172,1.488,183,1.016,329,3.622,397,4.421,399,4.421,401,4.598,521,2.667,534,2.461,537,3.172,540,1.78,551,2.492,740,3.595,823,1.461,943,4.366,959,5.541,965,4.25,968,4.997,969,5.39,970,4.997,971,5.39,972,4.997,980,4.997,2816,5.39,2817,7.552,2818,7.159]],["title/entities/User.html",[144,1.384,510,2.068]],["body/entities/User.html",[3,0.077,4,0.069,5,0.069,7,0.203,8,1.15,24,0.47,27,0.008,28,0.949,29,0.413,30,1.141,38,1.804,45,1.193,57,0.145,61,0.077,63,0.248,84,2.213,110,2.067,120,0.005,123,3.086,129,0.005,144,1.886,172,1.554,183,0.801,284,3.939,329,3.636,393,2.537,397,4.439,399,4.439,401,4.09,494,4.099,502,4.331,510,2.819,512,2.841,521,2.429,525,3.941,531,5.19,532,4.101,533,1.937,534,2.49,547,2.715,551,2.27,943,2.715,966,3.604,969,3.352,971,3.352,1024,3.352,1568,5.416,2819,3.941,2820,6.992,2821,4.452,2822,4.452,2823,4.452,2824,4.452,2825,4.452,2826,4.452,2827,4.452,2828,4.452,2829,4.452,2830,4.452,2831,4.452,2832,4.452,2833,7.529,2834,4.452,2835,4.452,2836,6.992,2837,7.893,2838,4.452,2839,6.119,2840,4.452,2841,4.452,2842,6.119,2843,6.119,2844,4.452]],["title/interfaces/UserInfoResponse.html",[1177,3.177,1178,3.38]],["body/interfaces/UserInfoResponse.html",[0,0.891,3,0.073,4,0.065,5,0.065,7,0.193,8,1.111,12,1.964,22,1.145,27,0.008,28,0.81,29,0.394,32,3.093,36,2.445,45,1.235,57,0.159,58,0.516,61,0.073,63,0.172,65,2.425,72,1.758,104,1.587,120,0.005,129,0.005,139,2.148,187,2.999,246,2.478,247,2.217,329,3.572,347,3.19,373,2.596,387,5.513,389,3.429,390,3.206,391,2.611,392,5.513,393,2.674,397,2.383,399,2.383,439,2.84,442,3.691,446,2.999,448,3.19,459,2.703,461,3.606,473,5.513,492,5.966,675,4.786,862,2.882,880,1.952,1073,2.217,1075,3.429,1091,4.452,1136,2.584,1139,2.703,1148,3.429,1149,3.429,1150,3.19,1156,6.028,1158,3.75,1160,5.234,1161,3.75,1164,3.75,1166,3.75,1168,3.75,1170,3.19,1171,3.19,1172,2.999,1173,3.19,1174,4.452,1175,6.028,1176,3.19,1177,2.999,1178,4.452,1179,6.524,1180,6.524,1181,6.524,1182,6.524,1183,5.234,1184,3.75,1185,3.75,1186,3.75,1187,3.75,1188,3.75,1189,2.999,1190,3.75,1191,3.75,1192,3.75,1193,3.75,1194,3.75,1195,3.75,1196,3.75,1197,3.75,1198,3.75,1199,3.75,1200,3.75,1201,3.75,1202,3.75,1203,3.75,1204,3.75,1205,3.75,2845,4.237]],["title/controllers/UsersController.html",[167,1.187,2846,3.38]],["body/controllers/UsersController.html",[3,0.051,4,0.046,5,0.046,7,0.135,11,0.749,12,2.148,22,0.8,24,0.364,26,0.935,27,0.008,28,0.683,29,0.363,30,0.833,35,1.08,36,2.507,38,2.296,57,0.158,58,0.36,61,0.051,63,0.12,65,2.367,72,1.539,104,1.371,120,0.004,123,3.284,129,0.004,131,2.366,142,1.5,144,2.59,167,0.783,169,0.913,172,1.205,183,0.533,284,1.549,300,4.267,312,2.901,314,5.024,315,5.494,320,4.116,322,4.16,329,2.094,333,2.227,340,3.68,344,2.094,348,1.806,349,1.985,350,2.7,353,4.552,354,1.288,362,2.3,373,1.733,374,4.503,376,3.629,390,2.913,391,2.907,393,2.43,397,2.557,399,2.557,401,2.659,403,2.621,409,2.659,434,3.68,487,1.889,490,3.085,493,4.898,494,2.947,495,4.898,722,1.665,730,3.558,731,3.917,732,2.464,751,1.806,754,1.665,757,1.325,759,1.364,760,2.397,769,2.621,790,4.273,810,2.397,854,2.096,862,1.924,963,4.674,1014,4.166,1233,2.229,1244,2.557,1418,2.096,1451,1.985,1472,3.916,1582,2.397,1583,2.397,1615,1.732,1684,2.229,1954,2.621,2007,1.985,2008,2.397,2009,2.621,2015,3.916,2572,4.898,2583,2.557,2591,2.621,2593,2.621,2612,4.024,2701,2.229,2816,4.674,2846,3.423,2847,2.621,2848,5.533,2849,4.546,2850,6.207,2851,4.546,2852,2.961,2853,5.533,2854,4.546,2855,2.961,2856,2.961,2857,7.068,2858,2.961,2859,2.961,2860,2.961,2861,2.961,2862,2.961,2863,2.961,2864,2.961,2865,2.961,2866,2.961,2867,2.961,2868,2.621,2869,2.397,2870,5.533,2871,2.229,2872,2.961,2873,2.961,2874,2.961,2875,2.961,2876,2.961,2877,5.533,2878,5.533,2879,4.546,2880,5.533,2881,2.961,2882,2.961,2883,4.546,2884,2.961,2885,4.024,2886,2.961,2887,2.961,2888,2.961,2889,7.068,2890,4.546,2891,2.961,2892,4.546,2893,2.961,2894,2.961,2895,2.961,2896,2.961,2897,2.961,2898,2.961,2899,2.961,2900,2.961,2901,2.961,2902,2.961]],["title/modules/UsersModule.html",[189,1.482,213,3.009]],["body/modules/UsersModule.html",[3,0.103,4,0.092,5,0.092,27,0.008,57,0.174,58,0.724,61,0.103,63,0.241,120,0.007,129,0.007,144,1.833,169,2.28,189,2.657,191,2.66,192,2.739,193,2.912,194,2.912,195,2.912,196,3.943,197,2.822,213,6.067,215,3.622,216,2.912,217,2.912,219,2.912,228,3.343,229,2.586,362,4.468,467,5.262,494,3.511,1010,3.741,1013,3.984,1024,4.476,2583,4.967,2701,4.476,2846,6.061,2868,5.262,2869,4.812,2903,5.945,2904,5.945,2905,5.945,2906,5.945]],["title/injectables/UsersService.html",[0,0.676,362,2.271]],["body/injectables/UsersService.html",[0,0.736,2,1.152,3,0.056,4,0.05,5,0.05,7,0.148,11,0.805,12,2.323,22,1.319,24,0.45,26,1.205,27,0.008,28,0.88,29,0.382,30,1.073,35,1.313,36,2.775,38,2.544,45,1.073,46,3.093,48,1.772,49,1.772,57,0.134,58,0.396,61,0.056,63,0.132,65,2.468,72,1.73,84,1.857,104,1.557,110,1.099,120,0.004,123,3.127,129,0.004,139,2.311,144,2.783,180,3.176,229,1.415,284,3.066,329,3.503,362,2.47,373,1.24,390,1.415,391,1.152,397,2.746,399,2.746,401,4.083,421,4.744,487,2.076,494,2.783,533,1.415,732,2.646,786,4.366,789,2.646,790,3.115,792,3.973,808,4.322,810,3.952,812,2.076,821,2.879,938,2.076,943,3.973,1414,2.18,1418,2.303,1472,2.303,1498,4.611,1516,2.449,1517,2.449,2548,4.322,2668,5.188,2869,2.633,2871,2.449,2885,2.879,2907,2.879,2908,5.861,2909,4.883,2910,4.883,2911,4.883,2912,3.253,2913,3.253,2914,4.883,2915,4.883,2916,3.253,2917,3.253,2918,4.883,2919,7.82,2920,3.253,2921,3.253,2922,3.253,2923,4.883,2924,3.253,2925,4.883,2926,3.253,2927,3.253,2928,3.253,2929,3.253,2930,4.883,2931,3.253,2932,3.253,2933,3.253,2934,3.253,2935,3.253,2936,3.253,2937,5.861,2938,3.253,2939,4.883,2940,3.253,2941,4.883,2942,3.253,2943,4.883,2944,3.253,2945,3.253,2946,4.883,2947,3.253,2948,4.883,2949,3.253,2950,4.883,2951,3.253,2952,3.253,2953,3.253]],["title/classes/WithLabels.html",[63,0.182,2565,3.38]],["body/classes/WithLabels.html",[3,0.105,4,0.094,5,0.094,7,0.277,8,1.408,24,0.33,27,0.008,29,0.29,48,2.204,49,3.079,57,0.156,61,0.105,63,0.329,84,2.059,104,1.244,110,2.532,120,0.007,129,0.007,139,2.363,172,1.093,183,1.093,534,2.161,535,4.061,540,1.915,547,3.704,551,1.831,767,6.633,823,1.572,924,4.916,2565,6.564,2954,6.633,2955,5.376,2956,6.073,2957,6.073,2958,7.494,2959,6.073,2960,7.494]],["title/coverage.html",[2961,4.981]],["body/coverage.html",[0,1.313,1,1.525,5,0.035,6,2.014,27,0.008,29,0.109,63,0.366,120,0.003,129,0.003,130,3.648,131,0.867,133,3.937,140,1.115,144,1.436,147,1.115,149,1.115,151,1.08,153,1.151,155,1.08,158,1.115,160,1.151,162,1.115,164,1.115,167,2.204,168,1.713,170,2.014,180,1.233,214,1.525,233,1.842,237,1.713,247,2.805,298,1.713,299,2.014,310,1.713,328,1.713,339,1.713,355,1.713,357,1.713,360,1.452,362,1.151,364,1.713,368,1.525,391,0.806,439,1.525,440,1.611,441,1.611,442,1.233,453,1.713,455,1.452,468,2.014,484,1.842,485,1.842,486,1.842,494,1.08,510,2.908,511,1.08,513,3.795,516,1.452,548,1.452,550,1.452,561,1.452,574,1.611,575,2.014,590,1.452,591,1.388,592,1.018,598,1.713,637,1.842,694,1.525,720,1.713,721,2.014,729,1.713,785,2.014,824,2.014,825,2.989,854,1.611,855,2.989,856,2.014,872,1.713,873,2.014,878,2.014,879,2.014,883,1.611,884,2.014,885,3.508,938,6.085,940,1.611,941,2.014,942,2.989,963,1.713,964,2.014,965,3.508,989,1.713,990,2.014,1006,1.713,1007,2.014,1010,1.151,1014,1.713,1015,2.014,1026,1.842,1027,2.014,1088,1.28,1116,2.014,1117,2.014,1129,2.014,1137,1.842,1145,2.014,1146,2.014,1148,2.989,1149,2.989,1177,1.611,1178,1.713,1206,2.014,1220,2.014,1224,1.611,1225,2.014,1227,1.713,1228,2.014,1239,1.388,1264,2.014,1285,2.014,1287,2.014,1296,2.014,1303,2.014,1332,2.014,1349,1.713,1350,2.014,1351,2.014,1410,2.014,1411,2.014,1426,3.593,1427,2.014,1443,1.713,1444,2.014,1449,1.611,1484,2.014,1495,2.014,1520,2.014,1570,1.713,1571,2.014,1575,1.611,1580,1.388,1602,2.014,1615,1.331,1616,2.014,1622,1.713,1623,4.027,1624,2.014,1685,1.331,1704,1.713,1705,2.014,1788,1.713,1789,2.014,1806,2.014,1807,2.014,1821,1.713,1822,2.014,1861,1.713,1862,2.014,1874,1.713,1875,2.014,1895,1.713,1903,1.611,1904,2.014,1905,2.014,1923,2.989,1936,1.525,1943,1.525,1944,1.525,1946,3.298,1977,1.713,1978,2.014,1983,1.525,2039,1.713,2040,2.014,2050,3.508,2051,2.989,2055,1.713,2065,2.014,2078,1.525,2090,1.611,2091,3.508,2092,2.014,2144,3.508,2145,3.508,2170,1.611,2171,2.014,2172,2.014,2176,1.388,2184,1.842,2186,1.842,2202,1.842,2203,2.989,2204,2.014,2267,1.842,2268,2.014,2301,1.525,2302,1.525,2304,1.713,2305,1.713,2306,1.713,2314,3.795,2315,2.014,2320,1.611,2350,1.713,2351,2.989,2375,2.014,2396,3.508,2397,2.014,2402,1.713,2427,2.014,2432,2.014,2437,3.95,2442,1.525,2450,1.525,2451,1.525,2474,3.508,2486,2.014,2510,2.014,2518,2.014,2543,1.713,2544,2.014,2565,1.713,2583,1.28,2640,2.014,2698,1.611,2705,2.014,2713,1.842,2714,2.014,2715,2.014,2738,1.842,2739,2.014,2815,2.014,2816,1.713,2817,2.014,2819,2.014,2846,1.713,2847,2.014,2871,1.713,2907,2.014,2954,2.014,2955,2.014,2961,1.842,2962,2.276,2963,2.276,2964,2.276,2965,8.335,2966,2.276,2967,2.276,2968,7.159,2969,6.926,2970,8.019,2971,7.159,2972,6.649,2973,5.894,2974,8.893,2975,4.659,2976,2.276,2977,2.014,2978,7.356,2979,2.014,2980,2.014,2981,2.014,2982,4.124,2983,7.803,2984,2.014,2985,2.014,2986,2.014,2987,3.692,2988,2.276,2989,2.276,2990,2.276,2991,2.276,2992,2.014,2993,5.894,2994,4.659,2995,3.268,2996,2.014,2997,3.268,2998,2.014,2999,2.014,3000,2.014,3001,2.014,3002,4.124,3003,2.014,3004,2.014,3005,2.014,3006,3.692,3007,2.014,3008,2.014,3009,2.276,3010,2.014,3011,2.014,3012,2.014,3013,2.276,3014,2.276,3015,2.276,3016,5.217,3017,2.276,3018,2.276,3019,2.276,3020,2.276]],["title/dependencies.html",[192,2.491,3021,3.306]],["body/dependencies.html",[27,0.008,58,0.682,60,3.573,63,0.289,120,0.006,129,0.006,183,1.008,192,2.58,229,2.436,232,2.93,236,4.216,244,4.216,250,3.964,251,3.964,275,4.957,383,4.957,446,3.964,448,4.216,457,4.216,533,2.436,540,1.766,547,3.415,643,4.957,1072,4.957,1074,3.275,1136,3.415,1172,6.024,1173,4.216,1174,4.216,1176,4.216,1292,4.957,1310,4.533,1311,4.533,3022,5.6,3023,5.6,3024,5.6,3025,5.6,3026,7.833,3027,5.6,3028,5.6,3029,5.6,3030,5.6,3031,5.6,3032,5.6,3033,5.6,3034,5.6,3035,5.6,3036,5.6,3037,5.6,3038,5.6,3039,5.6,3040,5.6,3041,5.6,3042,5.6,3043,5.6,3044,5.6,3045,5.6,3046,5.6,3047,5.6,3048,5.6,3049,5.6,3050,5.6,3051,5.6,3052,5.6,3053,5.6,3054,5.6,3055,5.6,3056,5.6,3057,5.6,3058,5.6,3059,5.6,3060,5.6,3061,5.6,3062,5.6,3063,5.6,3064,5.6,3065,5.6,3066,5.6,3067,5.6,3068,5.6,3069,5.6,3070,5.6]],["title/miscellaneous/enumerations.html",[3071,2.504,3072,4.785]],["body/miscellaneous/enumerations.html",[7,0.174,27,0.008,38,1.619,45,0.736,49,3.482,120,0.005,129,0.005,502,3.886,520,3.348,541,3.68,542,3.68,543,3.886,544,3.68,545,3.68,619,4.859,646,4.134,647,3.68,663,3.886,669,4.103,694,3.68,704,4.859,789,2.975,921,2.873,1391,4.859,1811,3.377,1948,3.348,2093,2.873,2097,2.146,2098,2.146,2099,2.873,2110,2.146,2111,2.146,2152,3.348,2153,2.435,2154,2.435,2155,2.435,2156,2.327,2157,2.435,2158,2.327,2159,2.435,2160,2.327,2161,2.435,2162,2.435,2163,2.435,2164,2.435,2167,2.435,2168,2.232,2468,3.886,2720,4.859,3071,2.557,3072,3.377,3073,7.996,3074,7.033,3075,3.816,3076,3.816,3077,3.816,3078,3.816,3079,3.816,3080,3.816,3081,3.816,3082,3.816,3083,3.816,3084,3.816,3085,3.816,3086,3.816,3087,3.816,3088,3.816,3089,5.49,3090,5.49,3091,5.49,3092,5.49,3093,5.49,3094,3.816,3095,3.816,3096,3.816,3097,3.816,3098,3.816,3099,3.816,3100,3.816,3101,3.816,3102,3.816,3103,3.816,3104,3.816,3105,3.816,3106,3.816,3107,3.816,3108,3.816,3109,3.816,3110,3.816,3111,3.816,3112,3.816,3113,3.816,3114,3.816,3115,3.816,3116,5.49,3117,3.816,3118,3.816,3119,3.816,3120,3.816,3121,3.816,3122,3.816,3123,3.816,3124,3.816,3125,3.816,3126,3.816,3127,3.816,3128,3.816,3129,3.816,3130,3.816,3131,3.816,3132,3.816,3133,3.816,3134,3.816,3135,3.816,3136,3.816,3137,3.816,3138,3.816,3139,3.816,3140,3.816,3141,3.816,3142,3.816,3143,3.816,3144,3.816,3145,3.816,3146,3.816,3147,3.816,3148,3.816,3149,3.816,3150,3.816,3151,3.816,3152,3.816,3153,3.816,3154,3.816,3155,3.816,3156,3.816,3157,3.816,3158,3.816,3159,3.816,3160,3.816,3161,3.816,3162,3.816,3163,3.816,3164,3.816,3165,5.49,3166,5.49,3167,3.816,3168,5.49,3169,5.49,3170,5.49,3171,3.816,3172,3.816,3173,5.49,3174,5.49]],["title/miscellaneous/functions.html",[3071,2.504,3175,4.785]],["body/miscellaneous/functions.html",[7,0.21,26,1.348,27,0.008,28,0.984,29,0.427,30,1.2,35,0.744,38,2.638,45,0.841,59,5.415,120,0.006,129,0.006,139,1.455,142,2.069,214,5.751,231,4.783,233,5.075,326,3.092,592,4.165,694,4.202,1073,3.28,1094,5.55,1414,4.202,2184,5.075,2186,5.075,2189,5.55,2191,5.55,2982,4.084,2984,5.55,2985,6.304,2986,5.55,2995,4.084,2996,5.55,2997,4.084,2998,5.55,2999,5.55,3000,4.084,3001,5.55,3002,4.084,3003,5.55,3004,5.55,3005,5.55,3010,4.084,3011,5.55,3012,4.084,3071,3.092,3175,4.084,3176,7.122,3177,6.27,3178,4.614,3179,4.614,3180,7.122,3181,4.614,3182,6.27,3183,4.614,3184,7.642,3185,5.075,3186,4.614,3187,4.614,3188,4.614,3189,4.614,3190,4.614,3191,6.27,3192,6.27,3193,6.27,3194,4.614,3195,4.614,3196,6.27,3197,4.614,3198,4.614,3199,4.614,3200,4.614,3201,4.614,3202,4.614]],["title/index.html",[7,0.17,3203,3.735,3204,3.735]],["body/index.html",[4,0.091,27,0.008,120,0.006,129,0.006,300,2.811,551,2.422,792,3.61,1308,5.239,2961,4.791,3185,4.791,3205,5.919,3206,5.919,3207,7.376,3208,5.919,3209,5.919,3210,5.919,3211,5.919,3212,5.919,3213,5.919,3214,8.035,3215,5.919,3216,5.919,3217,5.919,3218,8.948,3219,5.919,3220,5.919,3221,8.823,3222,5.919,3223,5.919,3224,7.376,3225,5.919,3226,5.919,3227,5.919,3228,5.919,3229,7.376,3230,7.376,3231,5.919,3232,5.919,3233,5.919,3234,7.376,3235,7.376,3236,5.919,3237,5.919,3238,5.919,3239,5.919,3240,5.919,3241,5.239,3242,5.919,3243,5.919,3244,5.919,3245,5.919,3246,5.919,3247,5.919,3248,5.919,3249,5.919,3250,5.919,3251,5.239,3252,5.919,3253,5.919,3254,5.919,3255,5.919,3256,5.919,3257,5.919,3258,5.239]],["title/modules.html",[191,2.754]],["body/modules.html",[27,0.007,120,0.007,129,0.007,190,4.705,191,2.797,201,4.423,202,4.423,203,4.423,204,4.423,205,4.423,206,4.423,207,4.423,208,4.423,209,4.423,210,4.423,211,4.423,212,4.423,213,4.189,3241,8.298,3259,9.375,3260,9.375,3261,9.403,3262,6.249,3263,6.249]],["title/overview.html",[3264,5.447]],["body/overview.html",[2,1.407,27,0.008,120,0.005,129,0.005,132,1.886,169,1.225,189,1.311,190,7.023,191,1.778,192,1.83,193,1.946,194,1.946,195,1.946,196,1.946,197,1.886,198,3.516,199,3.516,200,3.516,201,6.452,202,6.111,203,5.357,204,4.655,205,5.357,206,5.357,207,5.357,208,5.357,209,5.956,210,5.956,211,6.224,212,6.224,213,5.543,214,4.408,215,2.768,216,1.946,217,1.946,360,5.163,362,3.979,368,4.408,435,3.516,437,3.516,438,3.516,439,4.408,440,4.655,441,4.655,442,4.102,512,2.535,574,4.655,590,4.196,591,4.369,592,3.387,779,3.516,780,3.516,823,1.028,939,2.991,1177,2.812,1239,4.369,1258,3.516,1259,3.516,1569,3.216,1580,4.369,1596,3.516,1597,3.516,1903,5.727,2170,5.727,2176,4.369,2299,3.516,2300,3.516,2301,4.408,2302,4.408,2583,4.256,2635,3.516,2636,3.516,2696,3.516,2697,3.516,2698,4.655,2727,3.516,2728,3.516,2729,3.516,3264,3.516,3265,5.65,3266,3.973,3267,3.973,3268,3.973]],["title/properties.html",[8,1.016,3021,3.306]],["body/properties.html",[8,1.346,27,0.008,120,0.007,129,0.007,300,3.399,3251,6.337,3258,6.337,3269,7.16,3270,7.16,3271,7.16,3272,7.16,3273,7.16]],["title/miscellaneous/variables.html",[3071,2.504,3274,4.785]],["body/miscellaneous/variables.html",[7,0.201,12,1.99,27,0.008,29,0.29,45,1.004,48,3.162,49,3.162,65,2.447,71,3.891,72,1.881,84,1.114,104,1.609,120,0.005,129,0.005,142,2.002,180,3.288,187,3.112,284,3.174,288,3.559,289,4.91,296,4.91,300,2.087,333,2.971,391,2.149,393,2.52,457,3.31,461,3.7,484,4.91,485,4.91,486,4.91,498,7.19,502,3.112,592,2.715,690,4.568,1073,3.634,1137,4.91,1140,3.891,1173,3.31,1174,3.31,1685,3.548,2032,3.112,2078,4.066,2871,4.568,2977,3.891,2979,5.369,2980,3.891,2981,3.891,2992,3.891,3007,3.891,3008,5.369,3016,3.891,3071,2.947,3185,4.91,3274,3.891,3275,4.396,3276,7.857,3277,4.396,3278,4.396,3279,4.396,3280,4.396,3281,4.396,3282,4.396,3283,4.396,3284,4.396,3285,6.066,3286,4.396,3287,4.396,3288,4.396,3289,4.396,3290,4.396,3291,4.396,3292,4.396,3293,4.396,3294,4.396,3295,4.396,3296,6.066,3297,4.396,3298,4.396,3299,4.396,3300,6.066,3301,4.396,3302,4.396,3303,4.396,3304,4.396,3305,6.066,3306,4.396,3307,6.066,3308,4.396,3309,6.066,3310,4.396,3311,4.396,3312,4.396,3313,4.396,3314,4.396,3315,4.396,3316,4.396,3317,4.396,3318,4.396,3319,4.396,3320,4.396,3321,4.396,3322,4.396,3323,4.396,3324,4.396]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":938,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/QueuesQueryController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3270,"title":{},"body":{"properties.html":{}}}],["0.11.2",{"_index":3046,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3043,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3069,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3062,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":3070,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3052,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2974,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2976,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2988,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2993,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3006,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2975,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3009,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2965,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2991,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2990,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2989,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":3018,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["0/47",{"_index":3015,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2969,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2968,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2972,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2973,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2994,"title":{},"body":{"coverage.html":{}}}],["0})@column({name",{"_index":1527,"title":{},"body":{"entities/Option.html":{}}}],["0})@isnumber",{"_index":907,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1",{"_index":1569,"title":{},"body":{"entities/Option.html":{},"injectables/OptionsService.html":{},"overview.html":{}}}],["1.0.0",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3056,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":934,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["10.0.0",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["10.3.7",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":3308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@isnumber",{"_index":935,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["12",{"_index":977,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":3265,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3266,"title":{},"body":{"overview.html":{}}}],["1})@primarygeneratedcolumn({name",{"_index":1563,"title":{},"body":{"entities/Option.html":{}}}],["2",{"_index":680,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["2.0.2",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":2967,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["22",{"_index":937,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["22})@column({name",{"_index":1521,"title":{},"body":{"entities/Option.html":{}}}],["22})@isnumber",{"_index":903,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["24",{"_index":71,"title":{},"body":{"injectables/AbstractQueueService.html":{},"miscellaneous/variables.html":{}}}],["27",{"_index":3267,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["3.3.5",{"_index":3059,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["302)@apiexcludeendpoint",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":2966,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":69,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["39",{"_index":3268,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3048,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":1991,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["404",{"_index":1458,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["409",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/UsersController.html":{}}}],["41",{"_index":1405,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["5.0.1",{"_index":3065,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":3067,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":939,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"overview.html":{}}}],["6.9.7",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":2082,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["6h",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{}}}],["6})@column({name",{"_index":1524,"title":{},"body":{"entities/Option.html":{}}}],["6})@isnumber",{"_index":905,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["7.3.1",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3063,"title":{},"body":{"dependencies.html":{}}}],["8.11.4",{"_index":3058,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":976,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["abstract",{"_index":62,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QueryAnswer.html":{}}}],["abstractqueueservice",{"_index":1,"title":{"injectables/AbstractQueueService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["abstractqueueservice:101",{"_index":2380,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:105",{"_index":2383,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:12",{"_index":2377,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:23",{"_index":2385,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:38",{"_index":2382,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:6",{"_index":2386,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:75",{"_index":2378,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:82",{"_index":2384,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:90",{"_index":2381,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:97",{"_index":2379,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["acc",{"_index":866,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["acc[key",{"_index":868,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["access",{"_index":2032,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/variables.html":{}}}],["accession_nb",{"_index":2165,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_nb'})@isstring",{"_index":2286,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_number",{"_index":3104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessionnb",{"_index":2166,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accessionnumber",{"_index":2093,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["according",{"_index":1762,"title":{},"body":{"controllers/OrthancController.html":{}}}],["acquisition_device_processing_description",{"_index":3141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisition_number",{"_index":3149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitiondeviceprocessingdescription",{"_index":3142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitionnumber",{"_index":3150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activated",{"_index":514,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["activated'})@isboolean",{"_index":518,"title":{},"body":{"entities/Autorouting.html":{}}}],["active",{"_index":89,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["adapter",{"_index":1329,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":1984,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["addanonjob",{"_index":2317,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addanonjob(queuesanonsdto",{"_index":2319,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addbearerauth",{"_index":3288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddeletejob",{"_index":2399,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["adddeletejob(queuesdeletedto",{"_index":2401,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["added",{"_index":1478,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["added'})@apiresponse({status",{"_index":1450,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addjob",{"_index":13,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(data",{"_index":31,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(request",{"_index":1982,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["addjob(userid",{"_index":2069,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["addlabeltorole",{"_index":2546,"title":{},"body":{"controllers/RolesController.html":{}}}],["addlabeltorole(rolename",{"_index":2551,"title":{},"body":{"controllers/RolesController.html":{}}}],["addoauthconfig",{"_index":1445,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addoauthconfig(@body",{"_index":1479,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addoauthconfig(oauthconfigdto",{"_index":1448,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addqueryjob",{"_index":2439,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["addqueryjob(queuesquerydto",{"_index":2441,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["address",{"_index":1058,"title":{},"body":{"classes/HttpClient.html":{}}}],["addrolelabel",{"_index":2641,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrolelabel(rolename",{"_index":2648,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin",{"_index":943,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["admin'})@column({name",{"_index":2835,"title":{},"body":{"entities/User.html":{}}}],["admin'})@primarycolumn({name",{"_index":2536,"title":{},"body":{"entities/Role.html":{}}}],["admin.controller",{"_index":1896,"title":{},"body":{"modules/OrthancModule.html":{}}}],["admin.controller.ts",{"_index":1624,"title":{},"body":{"controllers/OrthancAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:102",{"_index":1661,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:109",{"_index":1647,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:119",{"_index":1641,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:129",{"_index":1653,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:139",{"_index":1650,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:149",{"_index":1668,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:159",{"_index":1656,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:26",{"_index":1674,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:36",{"_index":1677,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:46",{"_index":1680,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:56",{"_index":1665,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:66",{"_index":1683,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:76",{"_index":1671,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:86",{"_index":1644,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin@gaelo.com",{"_index":2951,"title":{},"body":{"injectables/UsersService.html":{}}}],["adminguard",{"_index":131,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["aet",{"_index":663,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["aet'})@isstring",{"_index":2478,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["age",{"_index":68,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["agplv3",{"_index":3271,"title":{},"body":{"properties.html":{}}}],["alllabels",{"_index":1245,"title":{},"body":{"controllers/LabelsController.html":{}}}],["alllabels.map((label",{"_index":1247,"title":{},"body":{"controllers/LabelsController.html":{}}}],["allmodalities",{"_index":676,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('ct",{"_index":682,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('pt",{"_index":681,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.length",{"_index":679,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allowemptyvalue",{"_index":1659,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["allroles",{"_index":2667,"title":{},"body":{"injectables/RolesService.html":{}}}],["allusers",{"_index":2874,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers.map((user",{"_index":2876,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":3242,"title":{},"body":{"index.html":{}}}],["anon.ts",{"_index":2715,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["anon.ts:4",{"_index":2723,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:5",{"_index":2722,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:6",{"_index":2721,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon/queue",{"_index":2307,"title":{},"body":{"modules/QueueModule.html":{}}}],["anonqueue",{"_index":2387,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anons.controller",{"_index":2308,"title":{},"body":{"modules/QueueModule.html":{}}}],["anons.controller.ts",{"_index":2315,"title":{},"body":{"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["anons.controller.ts:103",{"_index":2322,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:130",{"_index":2330,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:39",{"_index":2323,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:50",{"_index":2327,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:77",{"_index":2326,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto",{"_index":2331,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto.ts",{"_index":2351,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["anons.dto.ts:11",{"_index":2369,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:15",{"_index":2359,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:19",{"_index":2361,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:23",{"_index":2363,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:27",{"_index":2365,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:36",{"_index":2395,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["anons.dto.ts:7",{"_index":2367,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.service",{"_index":2312,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{}}}],["anons.service.ts",{"_index":2375,"title":{},"body":{"injectables/QueuesAnonService.html":{},"coverage.html":{}}}],["anons.service.ts:8",{"_index":2376,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anonymize",{"_index":944,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/QueuesAnonController.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["anonymizeguard",{"_index":147,"title":{"guards/AnonymizeGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["anonymizes",{"_index":2344,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["anonymizes.foreach((anonymize",{"_index":2346,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["answer.dto",{"_index":1947,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["answer.dto.ts",{"_index":2145,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["answer.dto.ts:12",{"_index":2256,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:16",{"_index":2258,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:20",{"_index":2260,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:24",{"_index":2264,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:28",{"_index":2262,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:34",{"_index":2292,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:38",{"_index":2290,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:42",{"_index":2294,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:46",{"_index":2288,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:50",{"_index":2296,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:54",{"_index":2287,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:58",{"_index":2298,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:64",{"_index":2147,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:68",{"_index":2149,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:8",{"_index":2266,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer/query",{"_index":2203,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts",{"_index":2092,"title":{},"body":{"classes/QueryAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts:10",{"_index":2132,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:11",{"_index":2131,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:12",{"_index":2120,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:14",{"_index":2113,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:4",{"_index":2115,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:40",{"_index":2122,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:44",{"_index":2123,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:48",{"_index":2124,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:5",{"_index":2116,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:52",{"_index":2125,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:56",{"_index":2127,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:6",{"_index":2117,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:60",{"_index":2126,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:64",{"_index":2121,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:68",{"_index":2130,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:7",{"_index":2119,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:72",{"_index":2129,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:76",{"_index":2128,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:8",{"_index":2118,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:9",{"_index":2114,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answerid",{"_index":2094,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answernumber",{"_index":2095,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answser",{"_index":1281,"title":{},"body":{"injectables/LabelsService.html":{}}}],["api",{"_index":3285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api;proto",{"_index":1086,"title":{},"body":{"classes/HttpClient.html":{}}}],["apibearerauth",{"_index":757,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":730,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["apiexcludeendpoint",{"_index":182,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioauth2(['openid",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiparam",{"_index":758,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiproperty",{"_index":534,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{}}}],["apiproperty()@column({name",{"_index":517,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Rule.html":{}}}],["apiproperty()@column({nullable",{"_index":2839,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@isinstance(role",{"_index":1020,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":1017,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":845,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@isobject",{"_index":2148,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["apiproperty()@isstring",{"_index":1485,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":843,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":2831,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@primarygeneratedcolumn({name",{"_index":525,"title":{},"body":{"entities/Autorouting.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":521,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["apiproperty({required",{"_index":1011,"title":{},"body":{"classes/GetRoleDto.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["apiquery",{"_index":2005,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiresponse",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["apis",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('autorouting",{"_index":762,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["apitags('labels",{"_index":1242,"title":{},"body":{"controllers/LabelsController.html":{}}}],["apitags('oauth",{"_index":1468,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["apitags('options",{"_index":1584,"title":{},"body":{"controllers/OptionsController.html":{}}}],["apitags('orthanc",{"_index":1687,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{}}}],["apitags('processing",{"_index":2010,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["apitags('queues/anon",{"_index":2332,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["apitags('queues/delete",{"_index":2412,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["apitags('queues/query",{"_index":2453,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["apitags('roles",{"_index":2589,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":2872,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":3185,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":3296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["app.get(seederservice",{"_index":3321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":3282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_interceptor",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":168,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":3213,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":190,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":1856,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["archive')@useguards(exportguard",{"_index":1832,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["args",{"_index":1123,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["array",{"_index":622,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["array.from(new",{"_index":114,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["arraybuffer",{"_index":1092,"title":{},"body":{"classes/HttpClient.html":{}}}],["ask",{"_index":1749,"title":{},"body":{"controllers/OrthancController.html":{}}}],["async",{"_index":12,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1080,"title":{},"body":{"classes/HttpClient.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":298,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1135,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('bearer",{"_index":1147,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["authguard('jwt",{"_index":1130,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1286,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":201,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3251,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1201,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["authorizationurl",{"_index":1189,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["authservice",{"_index":360,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":926,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["auto'})@column({default",{"_index":1553,"title":{},"body":{"entities/Option.html":{}}}],["auto'})@isstring",{"_index":927,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["auto_query",{"_index":2522,"title":{},"body":{"entities/Role.html":{}}}],["auto_query_hour_start",{"_index":1522,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_hour_stop",{"_index":1525,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_start",{"_index":1528,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_stop",{"_index":1530,"title":{},"body":{"entities/Option.html":{}}}],["auto_routing",{"_index":2524,"title":{},"body":{"entities/Role.html":{}}}],["autoloadentities",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["autoquery",{"_index":945,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["autoqueryguard",{"_index":153,"title":{"guards/AutoQueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoqueryhourstart",{"_index":886,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryhourstop",{"_index":887,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestart",{"_index":888,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestop",{"_index":889,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autorouter_started",{"_index":1533,"title":{},"body":{"entities/Option.html":{}}}],["autorouterstarted",{"_index":890,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["autorouting",{"_index":511,"title":{"entities/Autorouting.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateRoleDto.html":{},"classes/Destination.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["autorouting'})@apiresponse({status",{"_index":733,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.activated",{"_index":717,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{}}}],["autorouting.dto",{"_index":761,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.dto.ts",{"_index":879,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["autorouting.entity",{"_index":640,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{}}}],["autorouting.enum",{"_index":546,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autorouting.eventtype",{"_index":715,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting.handler",{"_index":783,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autorouting.router.destinations",{"_index":711,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting/autorouting.entity",{"_index":2703,"title":{},"body":{"modules/SeederModule.html":{}}}],["autorouting/autoroutings.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["autoroutingconfigs",{"_index":576,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype",{"_index":520,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["autoroutingeventtype.new_instance",{"_index":571,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autoroutingeventtype.new_patient",{"_index":629,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_series",{"_index":625,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_study",{"_index":627,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_patient",{"_index":633,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_series",{"_index":631,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_study",{"_index":632,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingguard",{"_index":162,"title":{"guards/AutoRoutingGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoroutinghandler",{"_index":574,"title":{"injectables/AutoroutingHandler.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoroutingmatches",{"_index":713,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingmatches.foreach((autorouting",{"_index":718,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutings.controller",{"_index":782,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autoroutings.service",{"_index":639,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{}}}],["autoroutingscontroller",{"_index":720,"title":{"controllers/AutoroutingsController.html":{}},"body":{"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{}}}],["autoroutingservice",{"_index":594,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["autoroutingsmodule",{"_index":202,"title":{"modules/AutoroutingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoroutingsModule.html":{},"modules.html":{},"overview.html":{}}}],["autoroutingsrepository",{"_index":796,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["autoroutingsservice",{"_index":590,"title":{"injectables/AutoroutingsService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":3263,"title":{},"body":{"modules.html":{}}}],["await",{"_index":65,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1072,"title":{},"body":{"classes/HttpClient.html":{},"dependencies.html":{}}}],["axios.request(option).catch(function",{"_index":1090,"title":{},"body":{"classes/HttpClient.html":{}}}],["back",{"_index":1433,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["backers",{"_index":3243,"title":{},"body":{"index.html":{}}}],["bad",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception(\"missing",{"_index":2603,"title":{},"body":{"controllers/RolesController.html":{}}}],["badrequestexception('confirmation",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":2467,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["badrequestexception('role",{"_index":2900,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception('token",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('uuid",{"_index":2023,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["baseurl",{"_index":1078,"title":{},"body":{"classes/HttpClient.html":{}}}],["bcryptjs",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs.compare(password",{"_index":3301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.gensalt",{"_index":3310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.hash(password",{"_index":3311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1174,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":2187,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["between.ts",{"_index":3011,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bien",{"_index":1778,"title":{},"body":{"controllers/OrthancController.html":{}}}],["binary",{"_index":1114,"title":{},"body":{"classes/HttpClient.html":{}}}],["body",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["body_part_examined",{"_index":3119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bodypartexamined",{"_index":3120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"guards/ModifyGuard.html":{},"entities/Option.html":{},"classes/ProcessingJobDto.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["break",{"_index":665,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["browse",{"_index":3261,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3259,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1076,"title":{},"body":{"classes/HttpClient.html":{}}}],["buffer.from(response.data",{"_index":1113,"title":{},"body":{"classes/HttpClient.html":{}}}],["build",{"_index":3291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builddocs",{"_index":2979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":3208,"title":{},"body":{"index.html":{}}}],["buildswagger",{"_index":2984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswagger(app",{"_index":3183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":3298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullmq",{"_index":60,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["burner_date_format",{"_index":1536,"title":{},"body":{"entities/Option.html":{}}}],["burner_delete_study_after_sent",{"_index":1538,"title":{},"body":{"entities/Option.html":{}}}],["burner_label_path",{"_index":1541,"title":{},"body":{"entities/Option.html":{}}}],["burner_manifacturer",{"_index":1544,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitored_path",{"_index":1546,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitoring_level",{"_index":1549,"title":{},"body":{"entities/Option.html":{}}}],["burner_started",{"_index":1551,"title":{},"body":{"entities/Option.html":{}}}],["burner_support_type",{"_index":1554,"title":{},"body":{"entities/Option.html":{}}}],["burner_transcoding",{"_index":1557,"title":{},"body":{"entities/Option.html":{}}}],["burner_transfer_syntax",{"_index":1559,"title":{},"body":{"entities/Option.html":{}}}],["burner_viewer_path",{"_index":1561,"title":{},"body":{"entities/Option.html":{}}}],["burnerdateformat",{"_index":891,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerdeletestudyaftersent",{"_index":892,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerlabelpath",{"_index":893,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermanifacturer",{"_index":894,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoredpath",{"_index":895,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoringlevel",{"_index":896,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerstarted",{"_index":897,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnersupporttype",{"_index":898,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertranscoding",{"_index":899,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertransfersyntax",{"_index":900,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerviewerpath",{"_index":901,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["by=localhost;for=localhost;host",{"_index":1084,"title":{},"body":{"classes/HttpClient.html":{}}}],["callhandler",{"_index":1415,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["canactivate",{"_index":134,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["canactivate(context",{"_index":135,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["cardiac_number_of_images",{"_index":3123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardiacnumberofimages",{"_index":3124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":666,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["catch",{"_index":675,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["catch((e",{"_index":706,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["catch(function",{"_index":1100,"title":{},"body":{"classes/HttpClient.html":{}}}],["catcherror",{"_index":1420,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["catcherror((error",{"_index":1423,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["cd_burner",{"_index":2526,"title":{},"body":{"entities/Role.html":{}}}],["cdburner",{"_index":946,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["cdburnerguard",{"_index":160,"title":{"guards/CdBurnerGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["change",{"_index":1344,"title":{},"body":{"injectables/MailService.html":{}}}],["changed",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["changed'})@apiresponse({status",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(changepassworddto",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":310,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto})@public()@post('change",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordurl",{"_index":1339,"title":{},"body":{"injectables/MailService.html":{}}}],["changes",{"_index":1916,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.changes.foreach((element",{"_index":1919,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.last",{"_index":1918,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changetype",{"_index":1808,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["character",{"_index":841,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["checkifuseridhasjobs",{"_index":14,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkifuseridhasjobs(userid",{"_index":37,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkuseridguard",{"_index":854,"title":{"guards/CheckUserIdGuard.html":{}},"body":{"guards/CheckUserIdGuard.html":{},"controllers/ProcessingController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["checkuseridguard(['params",{"_index":2880,"title":{},"body":{"controllers/UsersController.html":{}}}],["checkuseridguard(['query",{"_index":2016,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["checkuserroleguard",{"_index":872,"title":{"guards/CheckUserRoleGuard.html":{}},"body":{"guards/CheckUserRoleGuard.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["checkuserroleguard(['params",{"_index":2620,"title":{},"body":{"controllers/RolesController.html":{}}}],["children",{"_index":92,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["class",{"_index":63,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":823,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"overview.html":{}}}],["client",{"_index":642,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["client.ts",{"_index":3014,"title":{},"body":{"coverage.html":{}}}],["clientid",{"_index":1428,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["closequeueconnection",{"_index":15,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["cluster_appmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule",{"_index":779,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule_providers",{"_index":780,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule",{"_index":1258,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule_providers",{"_index":1259,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_oauthconfigmodule",{"_index":1490,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_oauthconfigmodule_providers",{"_index":1491,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_optionsmodule",{"_index":1596,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_optionsmodule_providers",{"_index":1597,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_orthancmodule",{"_index":1892,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_providers",{"_index":1893,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_processingmodule",{"_index":2061,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_processingmodule_providers",{"_index":2062,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_queuemodule",{"_index":2299,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_providers",{"_index":2300,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2635,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2636,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":2696,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":2697,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2727,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2728,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2729,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2903,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2904,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":531,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["column({default",{"_index":1540,"title":{},"body":{"entities/Option.html":{}}}],["column({nullable",{"_index":2828,"title":{},"body":{"entities/User.html":{}}}],["comparepasswords",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(pass",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(token",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":3324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":86,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["condition",{"_index":541,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["condition'})@isenum(condition",{"_index":2688,"title":{},"body":{"classes/Rule.html":{}}}],["condition.equals",{"_index":559,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["config",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"modules/MailModule.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["config.dto",{"_index":1467,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["config.dto.ts",{"_index":1484,"title":{},"body":{"classes/OauthConfigDto.html":{},"coverage.html":{}}}],["config.dto.ts:11",{"_index":1489,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:15",{"_index":1486,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:19",{"_index":1487,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:7",{"_index":1488,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.entity",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{}}}],["config.entity.ts",{"_index":1427,"title":{},"body":{"entities/OauthConfig.html":{},"coverage.html":{}}}],["config.entity.ts:12",{"_index":1439,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:18",{"_index":1432,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:22",{"_index":1435,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:8",{"_index":1437,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.get('jwt_secret",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('mail_encryption",{"_index":1319,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":1317,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":1322,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":1321,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.controller",{"_index":1493,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.controller.ts",{"_index":1444,"title":{},"body":{"controllers/OauthConfigController.html":{},"coverage.html":{}}}],["configs.controller.ts:38",{"_index":1466,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:49",{"_index":1462,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:63",{"_index":1455,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.module.ts",{"_index":1492,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.service",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["configs.service.ts",{"_index":1495,"title":{},"body":{"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["configs.service.ts:15",{"_index":1507,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:22",{"_index":1505,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:31",{"_index":1508,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:35",{"_index":1503,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:39",{"_index":1502,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:46",{"_index":1509,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:9",{"_index":1500,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs/oauth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["configservice",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"miscellaneous/functions.html":{}}}],["configservice.get",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1216,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('redis_address",{"_index":2389,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('redis_port",{"_index":2391,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('typeorm_database",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_host",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_password",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_port",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_username",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1187,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["configure",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationpassword",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{}}}],["confirmationtoken",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflict",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflict'})@apibody({type",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflict'})@useguards(adminguard)@post",{"_index":2855,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["conflictexception('a",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('email",{"_index":2892,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception('label",{"_index":1255,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/RolesService.html":{}}}],["conflictexception('oauth",{"_index":1482,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["conflictexception('role",{"_index":2606,"title":{},"body":{"controllers/RolesController.html":{}}}],["connect/auth",{"_index":1441,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["connect/auth'})@column",{"_index":1431,"title":{},"body":{"entities/OauthConfig.html":{}}}],["connection",{"_index":2081,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["console.error(\"can't",{"_index":661,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('invalid",{"_index":683,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('tmtvjob",{"_index":668,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error(error",{"_index":1101,"title":{},"body":{"classes/HttpClient.html":{}}}],["console.log('documentation",{"_index":3297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('seeding",{"_index":3323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('sending",{"_index":703,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.log('tmtv",{"_index":701,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":1138,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constants/enums",{"_index":648,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancQueryController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(answerid",{"_index":2212,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["constructor(authservice",{"_index":1288,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(autoroutingservice",{"_index":589,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["constructor(autoroutingsrepository",{"_index":791,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["constructor(configservice",{"_index":1207,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["constructor(guards",{"_index":1617,"title":{},"body":{"guards/OrGuard.html":{}}}],["constructor(id",{"_index":2043,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["constructor(jwtservice",{"_index":1155,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["constructor(labelsrepository",{"_index":1267,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor(level",{"_index":2112,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["constructor(mailerservice",{"_index":1334,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(oauthconfigsrepository",{"_index":1499,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["constructor(optionrepository",{"_index":2174,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["constructor(optionsrepository",{"_index":1603,"title":{},"body":{"injectables/OptionsService.html":{}}}],["constructor(orthancclient",{"_index":1908,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"classes/TmtvService.html":{}}}],["constructor(private",{"_index":764,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["constructor(processingservice",{"_index":1362,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["constructor(queue",{"_index":23,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["constructor(reflector",{"_index":1131,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(rolesrepository",{"_index":2645,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(rolesservice",{"_index":2706,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(tag",{"_index":2719,"title":{},"body":{"classes/TagAnon.html":{}}}],["constructor(usersrepository",{"_index":2912,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(valuepath",{"_index":858,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["consumer",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":834,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["content",{"_index":1769,"title":{},"body":{"controllers/OrthancController.html":{}}}],["context",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["context.getclass",{"_index":1143,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1142,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":143,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["contrast_bolus_agent",{"_index":3143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contrastbolusagent",{"_index":3144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":167,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/autorouting",{"_index":763,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["controller('/labels",{"_index":1243,"title":{},"body":{"controllers/LabelsController.html":{}}}],["controller('/options",{"_index":1585,"title":{},"body":{"controllers/OptionsController.html":{}}}],["controller('/processing",{"_index":2011,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["controller('/queues/anon",{"_index":2333,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["controller('/queues/delete",{"_index":2413,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["controller('/queues/query",{"_index":2454,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["controller('/roles",{"_index":2590,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('/users",{"_index":2873,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('oauth",{"_index":1469,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["controllers",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":2961,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":732,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateOptionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1253,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(autorouting",{"_index":797,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["create(label",{"_index":1270,"title":{},"body":{"injectables/LabelsService.html":{}}}],["create(labeldto",{"_index":1229,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(role",{"_index":2650,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(user",{"_index":2915,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarchive",{"_index":1823,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createarchive(request",{"_index":1830,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createautorouting",{"_index":723,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautorouting(createautoroutingdto",{"_index":728,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautoroutingdto",{"_index":729,"title":{"classes/CreateAutoroutingDto.html":{}},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["createconfirmationtoken",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["createconfirmationtoken(user",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdfiles",{"_index":2740,"title":{},"body":{"classes/TmtvService.html":{}}}],["createdicom",{"_index":1863,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createdicom(request",{"_index":1865,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createecho",{"_index":1625,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createecho(request",{"_index":1638,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createinstances",{"_index":1864,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createinstances(request",{"_index":1868,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createjobs",{"_index":1626,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createjobs(request",{"_index":1642,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createmedia",{"_index":1824,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmedia(request",{"_index":1834,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended",{"_index":1825,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended(request",{"_index":1837,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport",{"_index":1826,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport(request",{"_index":1841,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesmodify",{"_index":1876,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesmodify(request",{"_index":1879,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesquery",{"_index":1924,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createmodalitiesquery(request",{"_index":1928,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createoptiondto",{"_index":883,"title":{"classes/CreateOptionDto.html":{}},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["createpeersstore",{"_index":1827,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createpeersstore(request",{"_index":1844,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createrole",{"_index":2547,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(@body",{"_index":2601,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(createroledto",{"_index":2557,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":940,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":2602,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto})@post",{"_index":2559,"title":{},"body":{"controllers/RolesController.html":{}}}],["createseries",{"_index":2741,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ctorthancseriesid",{"_index":2785,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ptorthancseriesid",{"_index":2789,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesmodify",{"_index":1877,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createseriesmodify(request",{"_index":1882,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify",{"_index":1878,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify(request",{"_index":1885,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createtasksuserexport",{"_index":1828,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createtasksuserexport(request",{"_index":1847,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createuser",{"_index":2849,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":2898,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdto",{"_index":2852,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":963,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["credentials",{"_index":1105,"title":{},"body":{"classes/HttpClient.html":{}}}],["cron",{"_index":1912,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":1910,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["cron(cronexpression.every_minute",{"_index":2179,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["cronexpression",{"_index":1913,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":3303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":3044,"title":{},"body":{"dependencies.html":{}}}],["ct",{"_index":687,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ctorthancseriesid",{"_index":696,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ctresponse",{"_index":2782,"title":{},"body":{"classes/TmtvService.html":{}}}],["ctseriesid",{"_index":685,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["currenthour",{"_index":2189,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["currentminute",{"_index":2191,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":34,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["data.uuid",{"_index":111,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['jobid",{"_index":81,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['userid",{"_index":79,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['uuid",{"_index":77,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["database",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrthancEventPayloadDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date().gethours",{"_index":2190,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date().getminutes",{"_index":2192,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date(date.now",{"_index":3306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":1193,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["decorators",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"entities/Option.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1119,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaultmessage(args",{"_index":1120,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaults",{"_index":1323,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["delayed",{"_index":88,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["delete",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/CreateRoleDto.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["delete('/:id",{"_index":769,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:labelname",{"_index":1249,"title":{},"body":{"controllers/LabelsController.html":{}}}],["delete('/:name",{"_index":2608,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/:rolename/label/:label",{"_index":2631,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/modalities",{"_index":1698,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/patients",{"_index":1802,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/peers",{"_index":1701,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/series",{"_index":1805,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies",{"_index":1804,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies/*/labels",{"_index":1759,"title":{},"body":{"controllers/OrthancController.html":{}}}],["delete(':name",{"_index":1473,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["delete(':uuid",{"_index":2036,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["delete(@param('id",{"_index":2895,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('name",{"_index":2609,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete(id",{"_index":2858,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(name",{"_index":2561,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete.controller",{"_index":1898,"title":{},"body":{"modules/OrthancModule.html":{}}}],["delete.controller.ts",{"_index":1789,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"coverage.html":{}}}],["delete.controller.ts:23",{"_index":1795,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:33",{"_index":1801,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:43",{"_index":1798,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete/queue",{"_index":2309,"title":{},"body":{"modules/QueueModule.html":{}}}],["deleteallressources",{"_index":2742,"title":{},"body":{"classes/TmtvService.html":{}}}],["deleteautorouting",{"_index":724,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(@param('id",{"_index":770,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(id",{"_index":737,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleted",{"_index":1471,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleted'})@apiresponse({status",{"_index":1457,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteguard",{"_index":155,"title":{"guards/DeleteGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancDeleteController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesDeleteController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["deletelabels",{"_index":1706,"title":{},"body":{"controllers/OrthancController.html":{}}}],["deletelabels(request",{"_index":1716,"title":{},"body":{"controllers/OrthancController.html":{}}}],["deletemodality",{"_index":1627,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletemodality(request",{"_index":1645,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deleteoauthconfig",{"_index":1446,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deleteoauthconfig(@param('name",{"_index":1474,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteoauthconfig(name",{"_index":1456,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deletepatients",{"_index":1790,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepatients(request",{"_index":1793,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepeer",{"_index":1628,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletepeer(request",{"_index":1648,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletequeue",{"_index":2434,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deletes.controller",{"_index":2310,"title":{},"body":{"modules/QueueModule.html":{}}}],["deletes.controller.ts",{"_index":2397,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["deletes.controller.ts:104",{"_index":2404,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:131",{"_index":2410,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:38",{"_index":2405,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:49",{"_index":2407,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:76",{"_index":2406,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto",{"_index":2411,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto.ts",{"_index":2427,"title":{},"body":{"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["deletes.dto.ts:6",{"_index":2429,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["deletes.service",{"_index":2313,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{}}}],["deletes.service.ts",{"_index":2432,"title":{},"body":{"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["deletes.service.ts:8",{"_index":2433,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deleteseries",{"_index":1791,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleteseries(request",{"_index":1796,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies",{"_index":1792,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies(request",{"_index":1799,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1757,"title":{},"body":{"controllers/OrthancController.html":{}}}],["description",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":561,"title":{"classes/Destination.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["destinations",{"_index":570,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype",{"_index":542,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["destinationtype.aet",{"_index":562,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype.peer",{"_index":702,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["destinationtype.tmtvjob",{"_index":667,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["development",{"_index":3220,"title":{},"body":{"index.html":{}}}],["dicom",{"_index":1873,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom')@useguards(importguard",{"_index":1866,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom_tag",{"_index":553,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicom_tag'})@isenum(dicomtag",{"_index":2690,"title":{},"body":{"classes/Rule.html":{}}}],["dicoms",{"_index":1760,"title":{},"body":{"controllers/OrthancController.html":{},"classes/TmtvService.html":{}}}],["dicomtag",{"_index":543,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["dicomtag.patient_name",{"_index":552,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["different",{"_index":3090,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["digit",{"_index":839,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["dir",{"_index":1326,"title":{},"body":{"modules/MailModule.html":{}}}],["disable",{"_index":744,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["disable(id",{"_index":799,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["disableautorouting",{"_index":725,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(@param('id",{"_index":777,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(id",{"_index":743,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["docs/oauth2",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["document",{"_index":3292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":2962,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":3283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":971,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["doe'})@column({name",{"_index":2826,"title":{},"body":{"entities/User.html":{}}}],["don't",{"_index":2031,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["doreverseproxy",{"_index":1685,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doreverseproxy(request",{"_index":1689,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{}}}],["dto/change",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":760,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/get",{"_index":1583,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/lost",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/orthanc",{"_index":636,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["dto/query",{"_index":1945,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["dto/register.dto",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":1582,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/UsersController.html":{}}}],["dto/with",{"_index":2587,"title":{},"body":{"controllers/RolesController.html":{}}}],["e",{"_index":664,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["e2e",{"_index":3231,"title":{},"body":{"index.html":{}}}],["each",{"_index":569,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["editmodality",{"_index":1629,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editmodality(request",{"_index":1651,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer",{"_index":1630,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer(request",{"_index":1654,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["efficient",{"_index":3209,"title":{},"body":{"index.html":{}}}],["element",{"_index":1922,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["element.changetype",{"_index":1921,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["email",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email@gaelo.com",{"_index":1301,"title":{},"body":{"classes/LoginDto.html":{}}}],["email@gaelo.com'})@isnotempty",{"_index":1297,"title":{},"body":{"classes/LoginDto.html":{}}}],["email_verified",{"_index":1179,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["emitter",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["enable",{"_index":748,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["enable(id",{"_index":801,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["enableautorouting",{"_index":726,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(@param('id",{"_index":774,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(id",{"_index":747,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["end",{"_index":1442,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["end'})@column",{"_index":1434,"title":{},"body":{"entities/OauthConfig.html":{}}}],["endhour",{"_index":3192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endminute",{"_index":3193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities",{"_index":512,"title":{},"body":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":510,"title":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitynotfounderror",{"_index":1421,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["enum",{"_index":2052,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["enumerations",{"_index":3072,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["epson",{"_index":917,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["epson'})@column({default",{"_index":1543,"title":{},"body":{"entities/Option.html":{}}}],["epson'})@isstring",{"_index":918,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["equals",{"_index":3089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":1091,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{}}}],["error('invalid",{"_index":1394,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["error.response",{"_index":1102,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response.status",{"_index":1103,"title":{},"body":{"classes/HttpClient.html":{}}}],["event",{"_index":637,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["event_type",{"_index":572,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["event_type'})@isenum(autoroutingeventtype",{"_index":523,"title":{},"body":{"entities/Autorouting.html":{}}}],["eventemitter",{"_index":793,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemitter2",{"_index":794,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemittermodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["eventtype",{"_index":515,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["example",{"_index":551,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["exclude",{"_index":1568,"title":{},"body":{"entities/Option.html":{},"entities/User.html":{}}}],["executioncontext",{"_index":136,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["exist",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{}}}],["existinguser",{"_index":2889,"title":{},"body":{"controllers/UsersController.html":{}}}],["existinguser.id",{"_index":2891,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists",{"_index":1256,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["exists'})@apibearerauth('access",{"_index":1452,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["exit(0",{"_index":3300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":61,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["export.controller",{"_index":1899,"title":{},"body":{"modules/OrthancModule.html":{}}}],["export.controller.ts",{"_index":1822,"title":{},"body":{"controllers/OrthancExportController.html":{},"coverage.html":{}}}],["export.controller.ts:24",{"_index":1843,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:34",{"_index":1833,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:44",{"_index":1836,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:54",{"_index":1840,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:64",{"_index":1852,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:74",{"_index":1846,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:84",{"_index":1849,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exportguard",{"_index":149,"title":{"guards/ExportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancExportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["exports",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1074,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"dependencies.html":{}}}],["extended",{"_index":1857,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extended')@useguards(exportguard",{"_index":1839,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extends",{"_index":880,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"classes/UpdateOptionDto.html":{},"interfaces/UserInfoResponse.html":{}}}],["extractjwt",{"_index":1211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1213,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":87,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["false",{"_index":110,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"entities/Option.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["false})@column({default",{"_index":1532,"title":{},"body":{"entities/Option.html":{}}}],["false})@isarray()@isobject({each",{"_index":2475,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["false})@isboolean",{"_index":910,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/TmtvJobDto.html":{}}}],["false})@isobject",{"_index":2056,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["false})@useguards(new",{"_index":1997,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["family_name",{"_index":1182,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["file.getid",{"_index":2814,"title":{},"body":{"classes/TmtvService.html":{}}}],["filter((job",{"_index":121,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["filteredjob",{"_index":105,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["find",{"_index":1707,"title":{},"body":{"controllers/OrthancController.html":{}}}],["find(@request",{"_index":1751,"title":{},"body":{"controllers/OrthancController.html":{}}}],["find(request",{"_index":1719,"title":{},"body":{"controllers/OrthancController.html":{}}}],["findall",{"_index":786,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":2594,"title":{},"body":{"controllers/RolesController.html":{}}}],["findall(withlabels",{"_index":2564,"title":{},"body":{"controllers/RolesController.html":{}}}],["findallwithlabels",{"_index":2642,"title":{},"body":{"injectables/RolesService.html":{}}}],["findone",{"_index":2548,"title":{},"body":{"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('name",{"_index":2599,"title":{},"body":{"controllers/RolesController.html":{}}}],["findone(id",{"_index":2918,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(name",{"_index":2567,"title":{},"body":{"controllers/RolesController.html":{}}}],["findonebyauthorizationurl",{"_index":1496,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyauthorizationurl(authorizationurl",{"_index":1504,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyemail",{"_index":2908,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":2921,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyeventtype",{"_index":787,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyeventtype(eventtype",{"_index":804,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyname",{"_index":1497,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyname(name",{"_index":1506,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyorfail",{"_index":1265,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["findonebyorfail(labelname",{"_index":1273,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findonebyorfail(name",{"_index":2654,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneorfail",{"_index":788,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findoneorfail(id",{"_index":806,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["finduser",{"_index":2941,"title":{},"body":{"injectables/UsersService.html":{}}}],["finishcallback",{"_index":1070,"title":{},"body":{"classes/HttpClient.html":{}}}],["firstname",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname'})@isnotempty",{"_index":2513,"title":{},"body":{"classes/RegisterDto.html":{}}}],["firstvaluefrom",{"_index":1175,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["flow",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["flush",{"_index":16,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["flushed",{"_index":2012,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushed'})@apiresponse({status",{"_index":1988,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushqueue",{"_index":1980,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["follow",{"_index":1346,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":2014,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiparam({name",{"_index":1992,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiquery({name",{"_index":1996,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@useguards(adminguard)@delete(':uuid",{"_index":2002,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["forbiddenexception",{"_index":2004,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["forbiddenexception(\"you",{"_index":2030,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbiddenexception('role",{"_index":2611,"title":{},"body":{"controllers/RolesController.html":{}}}],["forbiddenexception('user",{"_index":2343,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["force",{"_index":118,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["foreach((job",{"_index":122,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["forwarded",{"_index":1083,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedaddress",{"_index":1028,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedprotocol",{"_index":1029,"title":{},"body":{"classes/HttpClient.html":{}}}],["found",{"_index":1472,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibearerauth('access",{"_index":1459,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["found.interceptor",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["found.interceptor.ts",{"_index":1411,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["found.interceptor.ts:13",{"_index":1416,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["fragmented",{"_index":2762,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmask",{"_index":1399,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setmaskid(fragmentedmaskid",{"_index":1401,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setpetid(this.petid",{"_index":1402,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["fragmentedmask.setpetid(this.ptseriesid",{"_index":2805,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmaskid",{"_index":1397,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentmask",{"_index":1355,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["framework",{"_index":3207,"title":{},"body":{"index.html":{}}}],["function",{"_index":2983,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":3175,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaelo",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["generaterandomuuid",{"_index":2078,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatetoken",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":2881,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:name",{"_index":2598,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/:rolename/labels",{"_index":2628,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/dicom",{"_index":1784,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/instances",{"_index":1783,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/jobs/:id",{"_index":1696,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/labels/:name/studies",{"_index":1763,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/modalities",{"_index":1787,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/patients",{"_index":1780,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/peers",{"_index":1858,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["get('/peers/*/system",{"_index":1702,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/plugins",{"_index":1694,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/queries/*/answers",{"_index":1951,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["get('/series",{"_index":1782,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/studies",{"_index":1781,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/system",{"_index":1688,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/tools/log",{"_index":1692,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/wado",{"_index":1785,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get(':uuid",{"_index":2021,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["get('oauth2",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["getalluuids",{"_index":17,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getarchivedicomasbuffer([this.ctorthancseriesid",{"_index":2781,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivedicomasbuffer([this.ptorthancseriesid",{"_index":2775,"title":{},"body":{"classes/TmtvService.html":{}}}],["getautorouting",{"_index":727,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["getcreatedfiles",{"_index":2743,"title":{},"body":{"classes/TmtvService.html":{}}}],["getdicomweb",{"_index":1708,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getdicomweb(request",{"_index":1722,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getid",{"_index":2041,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getinstances",{"_index":1709,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getinstances(request",{"_index":1726,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs",{"_index":18,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobs(@request",{"_index":1697,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(request",{"_index":1657,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(userid",{"_index":2073,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getjobs(uuid",{"_index":44,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid",{"_index":19,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid(uuid",{"_index":51,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getloglevel",{"_index":1631,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getloglevel(request",{"_index":1662,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getmaskas",{"_index":1356,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskas(type",{"_index":1366,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskid",{"_index":1357,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmodalities",{"_index":1710,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getmodalities(request",{"_index":1729,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getnestedproperty",{"_index":857,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["getoauthconfig",{"_index":1447,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["getoptiondto",{"_index":989,"title":{"classes/GetOptionDto.html":{}},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"coverage.html":{}}}],["getoptiondto})@apiresponse({status",{"_index":1572,"title":{},"body":{"controllers/OptionsController.html":{}}}],["getoptions",{"_index":1030,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{}}}],["getpatients",{"_index":1711,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getpatients(request",{"_index":1732,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getpeers",{"_index":1829,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeers(request",{"_index":1850,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeersystem",{"_index":1632,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getpeersystem(request",{"_index":1666,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins",{"_index":1633,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins(request",{"_index":1669,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getqueryanswers",{"_index":1925,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryanswers(request",{"_index":1931,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer",{"_index":1926,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer(id",{"_index":1934,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getresponseasbuffer",{"_index":1034,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasbuffer(url",{"_index":1052,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream",{"_index":1035,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream(url",{"_index":1054,"title":{},"body":{"classes/HttpClient.html":{}}}],["getroledto",{"_index":1006,"title":{"classes/GetRoleDto.html":{}},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["getrolelabels",{"_index":2549,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolelabels(@param('rolename",{"_index":2629,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolelabels(rolename",{"_index":2571,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["gets",{"_index":1658,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getseries",{"_index":1712,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries(request",{"_index":1735,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesdetailsofstudy(orthancid",{"_index":672,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["getstatofmask",{"_index":1358,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getstudies",{"_index":1713,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudies(request",{"_index":1738,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel",{"_index":1764,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getsystem",{"_index":1634,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getsystem(request",{"_index":1672,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getting",{"_index":3203,"title":{"index.html":{}},"body":{}}],["gettokenexpiration",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettype",{"_index":2042,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getuserdto",{"_index":1014,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserdto})@apiresponse({status",{"_index":2863,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfourl",{"_index":1151,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getuserinfourl(wellknown",{"_index":1158,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["getusers",{"_index":2850,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid",{"_index":2851,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(@param('id",{"_index":2882,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(id",{"_index":2862,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuuid",{"_index":1981,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuid(userid",{"_index":1995,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuidofuser",{"_index":20,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidofuser(userid",{"_index":53,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidsofuser",{"_index":2067,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getuuidsofuser(userid",{"_index":2075,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getwado",{"_index":1714,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwado(@request",{"_index":1786,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwado(request",{"_index":1741,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwellknown",{"_index":1152,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getwellknown(iss",{"_index":1161,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["given_name",{"_index":1181,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["global",{"_index":1314,"title":{},"body":{"modules/MailModule.html":{}}}],["graph",{"_index":3262,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":3093,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":3238,"title":{},"body":{"index.html":{}}}],["guard",{"_index":130,"title":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}},"body":{"guards/OrGuard.html":{},"coverage.html":{}}}],["guard.canactivate(context",{"_index":1621,"title":{},"body":{"guards/OrGuard.html":{}}}],["guards",{"_index":132,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"overview.html":{}}}],["guards/check",{"_index":2008,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/jwt",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/local.guard",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/or.guard",{"_index":2007,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/roles.guard",{"_index":759,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["handleautoroutingupdated",{"_index":578,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handlebars",{"_index":3047,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1312,"title":{},"body":{"modules/MailModule.html":{}}}],["handleevent",{"_index":579,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handleevent(payload",{"_index":597,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["hash",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["hashadmin",{"_index":2946,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":2939,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":2871,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('passwordadmin",{"_index":2947,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword('passworduser",{"_index":2949,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(newpassword",{"_index":2940,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(token",{"_index":3304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword(userdto.password",{"_index":2901,"title":{},"body":{"controllers/UsersController.html":{}}}],["hashuser",{"_index":2948,"title":{},"body":{"injectables/UsersService.html":{}}}],["headers",{"_index":1075,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["here",{"_index":3248,"title":{},"body":{"index.html":{}}}],["host",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["hours",{"_index":3305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1345,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1173,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:8080/realms/master/protocol/openid",{"_index":1430,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["httpclient",{"_index":1026,"title":{"classes/HttpClient.html":{}},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["httpcode",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":3255,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1156,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["httpstatus",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":123,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({status",{"_index":738,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["id'})@exclude",{"_index":1564,"title":{},"body":{"entities/Option.html":{}}}],["id.guard",{"_index":2009,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/UsersController.html":{}}}],["id.guard.ts",{"_index":856,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"coverage.html":{}}}],["id.guard.ts:15",{"_index":861,"title":{},"body":{"guards/CheckUserIdGuard.html":{}}}],["id.guard.ts:4",{"_index":859,"title":{},"body":{"guards/CheckUserIdGuard.html":{}}}],["id_mask",{"_index":2796,"title":{},"body":{"classes/TmtvService.html":{}}}],["idct",{"_index":2794,"title":{},"body":{"classes/TmtvService.html":{}}}],["identifier",{"_index":2963,"title":{},"body":{"coverage.html":{}}}],["idpt",{"_index":2795,"title":{},"body":{"classes/TmtvService.html":{}}}],["ignore",{"_index":1517,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1214,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image_comments",{"_index":3163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_index",{"_index":3151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_orientation_patient",{"_index":3133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_position_patient",{"_index":3161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagecomments",{"_index":3164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageindex",{"_index":3152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageorientationpatient",{"_index":3134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagepositionpatient",{"_index":3162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["images_in_acquisition",{"_index":3125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagesinacquisition",{"_index":3126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":141,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"guards/OrGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["import",{"_index":57,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["import.controller",{"_index":1900,"title":{},"body":{"modules/OrthancModule.html":{}}}],["import.controller.ts",{"_index":1862,"title":{},"body":{"controllers/OrthancImportController.html":{},"coverage.html":{}}}],["import.controller.ts:17",{"_index":1870,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["import.controller.ts:27",{"_index":1867,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["importguard",{"_index":140,"title":{"guards/ImportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancImportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["imports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":3184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["inherited",{"_index":2226,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["inject",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":812,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(autorouting",{"_index":813,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["injectrepository(label",{"_index":1278,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["injectrepository(oauthconfig",{"_index":1510,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["injectrepository(option",{"_index":1610,"title":{},"body":{"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["injectrepository(role",{"_index":2665,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectrepository(user",{"_index":2932,"title":{},"body":{"injectables/UsersService.html":{}}}],["inline",{"_index":3045,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":3217,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3219,"title":{},"body":{"index.html":{}}}],["instance_creation_date",{"_index":3145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_creation_time",{"_index":3147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_number",{"_index":3153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationdate",{"_index":3146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationtime",{"_index":3148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancenumber",{"_index":3154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceof",{"_index":1424,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["instances",{"_index":3165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institution_name",{"_index":3106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institutionname",{"_index":3107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":1412,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["intercept(context",{"_index":1413,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptors/not",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/public",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["interface",{"_index":1177,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":2845,"title":{},"body":{"interfaces/UserInfoResponse.html":{}}}],["is_public_key",{"_index":1137,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":1464,"title":{},"body":{"controllers/OauthConfigController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["isbetween",{"_index":2193,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["isboolean",{"_index":535,"title":{},"body":{"entities/Autorouting.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/ProcessingJobDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/WithLabels.html":{}}}],["isemail",{"_index":981,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":536,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(autoroutingeventtype",{"_index":573,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(condition",{"_index":560,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(destinationtype",{"_index":563,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(dicomtag",{"_index":554,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(processingjobtype",{"_index":2060,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(processingmask",{"_index":2059,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(queryanswertype",{"_index":2169,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["isenum(rulecondition",{"_index":566,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(valuerepresentation",{"_index":557,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isequal",{"_index":580,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isequal(value",{"_index":601,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isexistinguser",{"_index":2909,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexistinguser(id",{"_index":2923,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["isgreaterthan",{"_index":581,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isgreaterthan(value",{"_index":603,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin",{"_index":582,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin(value",{"_index":605,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isinstance",{"_index":1023,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isinstance(role",{"_index":1025,"title":{},"body":{"classes/GetUserDto.html":{}}}],["islabelexist",{"_index":1266,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islabelexist(labelname",{"_index":1275,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islessthan",{"_index":583,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["islessthan(value",{"_index":607,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ismatch",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":847,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/RegisterDto.html":{}}}],["isnotin",{"_index":584,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnotin(value",{"_index":609,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnumber",{"_index":848,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["isnumberorstring",{"_index":548,"title":{"classes/IsNumberOrString.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["isobject",{"_index":2058,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["isoptional",{"_index":2960,"title":{},"body":{"classes/WithLabels.html":{}}}],["isoptional()@apiproperty({example",{"_index":2956,"title":{},"body":{"classes/WithLabels.html":{}}}],["ispaused",{"_index":2487,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["ispublic",{"_index":1140,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isroleexist",{"_index":2643,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleexist(name",{"_index":2657,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleused",{"_index":2910,"title":{},"body":{"injectables/UsersService.html":{}}}],["isroleused(rolename",{"_index":2925,"title":{},"body":{"injectables/UsersService.html":{}}}],["iss",{"_index":1163,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["issecondarycapture",{"_index":2998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["issecondarycapture(sopclassuid",{"_index":3187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issendable",{"_index":585,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["issendable(router",{"_index":611,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isstring",{"_index":537,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/LabelDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["issuer",{"_index":1199,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["istanbul",{"_index":1516,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["istimebetween",{"_index":2184,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istimebetween(starthour",{"_index":3190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["job",{"_index":59,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["job'})@apiresponse({status",{"_index":2001,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["job.data.jobid",{"_index":80,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.data.results",{"_index":127,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["job.data.state",{"_index":100,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.userid",{"_index":78,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.uuid",{"_index":76,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.dto",{"_index":2006,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.dto.ts",{"_index":2051,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":2734,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:16",{"_index":2736,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:20",{"_index":2737,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:26",{"_index":2054,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:30",{"_index":2057,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:8",{"_index":2733,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.id",{"_index":124,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.progress",{"_index":126,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobid",{"_index":690,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":73,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["jobs'})@useguards(anonymizeguard)@post",{"_index":2321,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["jobs'})@useguards(deleteguard)@post",{"_index":2403,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["jobs'})@useguards(queryguard)@post",{"_index":2443,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["jobs.filter((job",{"_index":106,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.find((job",{"_index":109,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["jobs.foreach((job",{"_index":75,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobs.map((job",{"_index":113,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.map(async",{"_index":103,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.push(job",{"_index":101,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobtype",{"_index":692,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["john",{"_index":969,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["john'})@column({name",{"_index":2823,"title":{},"body":{"entities/User.html":{}}}],["john.doe@gaelo.fr",{"_index":2818,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john.doe@gmail.com",{"_index":966,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/User.html":{}}}],["john.doe@gmail.com'})@column({unique",{"_index":2821,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":1308,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1327,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":2842,"title":{},"body":{"entities/User.html":{}}}],["jointable",{"_index":2542,"title":{},"body":{"entities/Role.html":{}}}],["json.stringify(document",{"_index":3295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonb",{"_index":568,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["jsonb'})@validatenested()@type(undefined",{"_index":529,"title":{},"body":{"entities/Autorouting.html":{}}}],["jsonb'})@validatenested({each",{"_index":2682,"title":{},"body":{"classes/Router.html":{}}}],["jwt",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.strategy",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":453,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1212,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoauthguard",{"_index":357,"title":{"injectables/JwtOAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["jwtoauthstrategy",{"_index":439,"title":{"injectables/JwtOauthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["jwtstrategy",{"_index":440,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3252,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":867,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"controllers/RolesController.html":{}}}],["keycloak",{"_index":1440,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["keycloak'})@column",{"_index":1438,"title":{},"body":{"entities/OauthConfig.html":{}}}],["keycloak'})@primarycolumn({name",{"_index":1436,"title":{},"body":{"entities/OauthConfig.html":{}}}],["known/openid",{"_index":1186,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["la",{"_index":1755,"title":{},"body":{"controllers/OrthancController.html":{}}}],["label",{"_index":1010,"title":{"entities/Label.html":{}},"body":{"classes/GetRoleDto.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["label'})@apiresponse({status",{"_index":1230,"title":{},"body":{"controllers/LabelsController.html":{}}}],["label.entity",{"_index":1262,"title":{},"body":{"modules/LabelsModule.html":{},"injectables/LabelsService.html":{}}}],["label.name",{"_index":1248,"title":{},"body":{"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["label.name)@jointable({name",{"_index":2532,"title":{},"body":{"entities/Role.html":{}}}],["labeldto",{"_index":1224,"title":{"classes/LabelDto.html":{}},"body":{"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["labeldto.name",{"_index":2627,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelname",{"_index":1238,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labels",{"_index":1009,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["labels.controller",{"_index":1261,"title":{},"body":{"modules/LabelsModule.html":{}}}],["labels.dto",{"_index":1241,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/RolesController.html":{}}}],["labels.dto.ts",{"_index":2955,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["labels.dto.ts:15",{"_index":2959,"title":{},"body":{"classes/WithLabels.html":{}}}],["labels.service",{"_index":1240,"title":{},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{}}}],["labels/label.entity",{"_index":1013,"title":{},"body":{"classes/GetRoleDto.html":{},"entities/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{}}}],["labels/labels.dto",{"_index":2588,"title":{},"body":{"controllers/RolesController.html":{}}}],["labels/labels.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["labels/labels.service",{"_index":2582,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["labelscontroller",{"_index":1227,"title":{"controllers/LabelsController.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"coverage.html":{}}}],["labelservice",{"_index":2592,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelsmodule",{"_index":203,"title":{"modules/LabelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LabelsModule.html":{},"modules.html":{},"overview.html":{}}}],["labelsrepository",{"_index":1269,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labelsservice",{"_index":1239,"title":{"injectables/LabelsService.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{},"overview.html":{}}}],["lastchanges",{"_index":1906,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["lastname",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname'})@isnotempty",{"_index":2515,"title":{},"body":{"classes/RegisterDto.html":{}}}],["legend",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["les",{"_index":1775,"title":{},"body":{"controllers/OrthancController.html":{}}}],["less_than",{"_index":3092,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":837,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["level",{"_index":618,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancAdminController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{}}}],["level')@useguards(adminguard",{"_index":1664,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["level_series",{"_index":3171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_study",{"_index":3172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelmapping",{"_index":577,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype",{"_index":619,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["leveltype.instances",{"_index":624,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.patients",{"_index":630,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.series",{"_index":626,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.studies",{"_index":628,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["license",{"_index":3258,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3235,"title":{},"body":{"index.html":{}}}],["link",{"_index":1347,"title":{},"body":{"injectables/MailService.html":{}}}],["local",{"_index":1292,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":355,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["localstrategy",{"_index":441,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":364,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@public()@httpcode(httpstatus.ok)@useguards(localauthguard)@post('login",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(@body",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(body",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpasswordto",{"_index":328,"title":{"classes/LostPassworDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["lostpasswordto})@public()@post('lost",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":838,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mail/mail.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mail@example.com",{"_index":2517,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mail@example.com'})@isemail",{"_index":2511,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mailermodule",{"_index":1309,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1315,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1335,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":204,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":368,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":2985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manufacturer",{"_index":3116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":2541,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":2843,"title":{},"body":{"entities/User.html":{}}}],["map((job",{"_index":2089,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["mask",{"_index":1395,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["mask.setmaskid(maskid",{"_index":2798,"title":{},"body":{"classes/TmtvService.html":{}}}],["mask.setpetid(this.ptseriesid",{"_index":2799,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskid",{"_index":1352,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["maskprocessingservice",{"_index":1349,"title":{"injectables/MaskProcessingService.html":{}},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["maskprocessingservice(this.processingclient",{"_index":2797,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskprocessingservice(this.processingservice",{"_index":1400,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["masks",{"_index":2802,"title":{},"body":{"classes/TmtvService.html":{}}}],["match",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":849,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*?[a",{"_index":983,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":853,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["matching",{"_index":129,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1838,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["media')@useguards(exportguard",{"_index":1835,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["message",{"_index":833,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":3061,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":850,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(12",{"_index":852,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["miscellaneous",{"_index":3071,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3234,"title":{},"body":{"index.html":{}}}],["modalities",{"_index":684,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["modalitiesinstudy",{"_index":2269,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["modality",{"_index":2152,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["modality'})@isstring",{"_index":2255,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["mode",{"_index":3224,"title":{},"body":{"index.html":{}}}],["modification",{"_index":1756,"title":{},"body":{"controllers/OrthancController.html":{}}}],["modify",{"_index":947,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["modify.controller",{"_index":1901,"title":{},"body":{"modules/OrthancModule.html":{}}}],["modify.controller.ts",{"_index":1875,"title":{},"body":{"controllers/OrthancModifyController.html":{},"coverage.html":{}}}],["modify.controller.ts:17",{"_index":1881,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:27",{"_index":1887,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:37",{"_index":1884,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modifyguard",{"_index":158,"title":{"guards/ModifyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancModifyController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["module",{"_index":189,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1311,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1313,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":643,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"dependencies.html":{}}}],["moment(value.tostring()).isafter(moment(rule.value.tostring",{"_index":660,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["moment(value.tostring()).issame(moment(rule.value.tostring",{"_index":657,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["monitoring.task",{"_index":2732,"title":{},"body":{"modules/TasksModule.html":{}}}],["monitoring.task.ts",{"_index":1905,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["monitoring.task.ts:17",{"_index":1911,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["monitoring.task.ts:9",{"_index":1909,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["more",{"_index":3247,"title":{},"body":{"index.html":{}}}],["mypassw0rd",{"_index":1302,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd'})@isnotempty",{"_index":1299,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd1234",{"_index":982,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mypassw0rd1234!'})@isstring()@matches(/^(?=.*?[a",{"_index":973,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":3253,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":527,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/LabelDto.html":{}}}],["name'})@primarycolumn({name",{"_index":1221,"title":{},"body":{"entities/Label.html":{}}}],["nest",{"_index":3214,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":3281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestfactory.createapplicationcontext(appmodule",{"_index":3319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":3257,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1419,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nestjs",{"_index":1310,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":58,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/TasksModule.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1136,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_accession_number",{"_index":2371,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_accession_number'})@isstring",{"_index":2358,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_instance",{"_index":3076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient",{"_index":3081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient_id",{"_index":2372,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_id'})@isstring",{"_index":2360,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_patient_name",{"_index":2373,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_name'})@isstring",{"_index":2362,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_series",{"_index":3077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study",{"_index":3079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study_description",{"_index":2374,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_study_description'})@isstring",{"_index":2364,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["newaccessionnumber",{"_index":2352,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newinstance",{"_index":1811,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"injectables/UsersService.html":{}}}],["newpatient",{"_index":3082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpatientid",{"_index":2353,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newpatientname",{"_index":2354,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newseries",{"_index":3078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudy",{"_index":3080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudydescription",{"_index":2355,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newuser",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.email",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.id",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":1414,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":1422,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nextfunction",{"_index":3196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nifti",{"_index":3170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3206,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1771,"title":{},"body":{"controllers/OrthancController.html":{}}}],["none",{"_index":929,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["none'})@column({default",{"_index":1556,"title":{},"body":{"entities/Option.html":{}}}],["none'})@isstring",{"_index":930,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["not_in",{"_index":3091,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1418,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('label",{"_index":2625,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('oauth",{"_index":1476,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["notfoundexception('role",{"_index":2617,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('user",{"_index":2885,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(error.message",{"_index":1425,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["notfoundinterceptor",{"_index":237,"title":{"injectables/NotFoundInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["npm",{"_index":3218,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/LabelsService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{}}}],["nullable",{"_index":2837,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":38,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"injectables/MailService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number'})@useguards(autoroutingguard)@delete('/:id",{"_index":741,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/disable",{"_index":745,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/enable",{"_index":749,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number(rule.value",{"_index":654,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number(value",{"_index":659,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number.ts",{"_index":1117,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["number.ts:13",{"_index":1122,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number.ts:9",{"_index":1125,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number_of_frames",{"_index":3155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_slices",{"_index":3129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_temporal_positions",{"_index":3127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_time_slices",{"_index":3131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofframes",{"_index":3156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofseriesrelatedinstances",{"_index":2205,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["numberofslices",{"_index":3130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofstudyrelatedinstances",{"_index":2270,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberofstudyrelatedseries",{"_index":2271,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberoftemporalpositions",{"_index":3128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberoftimeslices",{"_index":3132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["oauth.guard",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth.guard.ts",{"_index":1146,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["oauth.strategy",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth.strategy.ts",{"_index":1149,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["oauth.strategy.ts:22",{"_index":1157,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:31",{"_index":1162,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:42",{"_index":1167,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:49",{"_index":1159,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:53",{"_index":1169,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:80",{"_index":1165,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth2",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["oauth2')@public()@useguards(jwtoauthguard)@httpcode(httpstatus.ok)@post('oauth2",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(@request",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(req",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2redirect",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["oauthconfig",{"_index":455,"title":{"entities/OauthConfig.html":{}},"body":{"modules/AuthModule.html":{},"entities/OauthConfig.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["oauthconfigcontroller",{"_index":1443,"title":{"controllers/OauthConfigController.html":{}},"body":{"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"coverage.html":{}}}],["oauthconfigdto",{"_index":1449,"title":{"classes/OauthConfigDto.html":{}},"body":{"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["oauthconfigdto.name",{"_index":1481,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigdto})@useguards(adminguard)@post",{"_index":1454,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigmodule",{"_index":205,"title":{"modules/OauthConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OauthConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["oauthconfigservice",{"_index":442,"title":{"injectables/OauthConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["oauthconfigsrepository",{"_index":1501,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["obj",{"_index":863,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["object",{"_index":32,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"interfaces/UserInfoResponse.html":{}}}],["object})@apiresponse({status",{"_index":1985,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["observable",{"_index":1417,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["omittype",{"_index":882,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["omittype(autorouting",{"_index":881,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["one",{"_index":835,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["onevent",{"_index":635,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('autorouting.updated",{"_index":595,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('orthanc",{"_index":599,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["open",{"_index":3236,"title":{},"body":{"index.html":{}}}],["openapi.json",{"_index":3299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operators_name",{"_index":3137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operatorsname",{"_index":3138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":1088,"title":{"entities/Option.html":{}},"body":{"classes/HttpClient.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["option.dto",{"_index":1005,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{}}}],["option.dto.ts",{"_index":885,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["option.dto.ts:11",{"_index":908,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:12",{"_index":1000,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:15",{"_index":906,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:16",{"_index":1001,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:19",{"_index":909,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:20",{"_index":999,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:23",{"_index":936,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:24",{"_index":1002,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:27",{"_index":925,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:28",{"_index":1003,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:31",{"_index":916,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:35",{"_index":923,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:39",{"_index":919,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:43",{"_index":920,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:47",{"_index":915,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:51",{"_index":928,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:55",{"_index":933,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:59",{"_index":932,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:63",{"_index":914,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:67",{"_index":931,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:7",{"_index":904,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:71",{"_index":911,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:8",{"_index":998,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.entity",{"_index":1600,"title":{},"body":{"modules/OptionsModule.html":{},"injectables/OptionsService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionrepository",{"_index":2178,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options",{"_index":1330,"title":{},"body":{"modules/MailModule.html":{},"controllers/OptionsController.html":{},"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstart",{"_index":2194,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstop",{"_index":2196,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestart",{"_index":2195,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestop",{"_index":2197,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.controller",{"_index":1599,"title":{},"body":{"modules/OptionsModule.html":{}}}],["options.service",{"_index":1581,"title":{},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{}}}],["options/option.entity",{"_index":2183,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{}}}],["options/options.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["options/options.service",{"_index":2702,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["optionscontroller",{"_index":1570,"title":{"controllers/OptionsController.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"coverage.html":{}}}],["optionservice",{"_index":1586,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/SeederService.html":{}}}],["optionsmodule",{"_index":206,"title":{"modules/OptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["optionsrepository",{"_index":1605,"title":{},"body":{"injectables/OptionsService.html":{}}}],["optionsservice",{"_index":1580,"title":{"injectables/OptionsService.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["orguard",{"_index":1615,"title":{"guards/OrGuard.html":{}},"body":{"guards/OrGuard.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["orguard())@delete('/:id",{"_index":2859,"title":{},"body":{"controllers/UsersController.html":{}}}],["orguard())@delete('/:rolename/label/:label",{"_index":2576,"title":{},"body":{"controllers/RolesController.html":{}}}],["orguard())@get",{"_index":1998,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["orguard())@get('/:id",{"_index":2864,"title":{},"body":{"controllers/UsersController.html":{}}}],["orguard())@get('/:rolename/labels",{"_index":2573,"title":{},"body":{"controllers/RolesController.html":{}}}],["orguard())@get(':uuid",{"_index":2325,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["orguard())@post('/:rolename/label",{"_index":2555,"title":{},"body":{"controllers/RolesController.html":{}}}],["orguard())@put('/:id",{"_index":2866,"title":{},"body":{"controllers/UsersController.html":{}}}],["orguard([new",{"_index":2015,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["orientation",{"_index":1367,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["originaet",{"_index":2096,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["orthanc",{"_index":1768,"title":{},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"modules/TasksModule.html":{}}}],["orthanc.controller",{"_index":1897,"title":{},"body":{"modules/OrthancModule.html":{}}}],["orthanc/orthanc.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc_monitoring_rate",{"_index":1566,"title":{},"body":{"entities/Option.html":{}}}],["orthanc_study_id",{"_index":2370,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthanc_study_id'})@isstring",{"_index":2366,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["orthancaddress",{"_index":992,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancadmincontroller",{"_index":1622,"title":{"controllers/OrthancAdminController.html":{}},"body":{"controllers/OrthancAdminController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanccalledapi",{"_index":3313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthancclient",{"_index":592,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["orthancclient.streamanswertores(orthanccalledapi",{"_index":3317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthanccontroller",{"_index":1704,"title":{"controllers/OrthancController.html":{}},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancdeletecontroller",{"_index":1788,"title":{"controllers/OrthancDeleteController.html":{}},"body":{"controllers/OrthancDeleteController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanceventpayloaddto",{"_index":598,"title":{"classes/OrthancEventPayloadDto.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["orthancexportcontroller",{"_index":1821,"title":{"controllers/OrthancExportController.html":{}},"body":{"controllers/OrthancExportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancid",{"_index":620,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["orthancimportcontroller",{"_index":1861,"title":{"controllers/OrthancImportController.html":{}},"body":{"controllers/OrthancImportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodifycontroller",{"_index":1874,"title":{"controllers/OrthancModifyController.html":{}},"body":{"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodule",{"_index":207,"title":{"modules/OrthancModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules.html":{},"overview.html":{}}}],["orthancmonitoringcron",{"_index":1907,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["orthancmonitoringrate",{"_index":902,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["orthancmonitoringtask",{"_index":1903,"title":{"injectables/OrthancMonitoringTask.html":{}},"body":{"injectables/OrthancMonitoringTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["orthancpassword",{"_index":993,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancport",{"_index":994,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancquerycontroller",{"_index":1895,"title":{"controllers/OrthancQueryController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["orthancseriesid",{"_index":2424,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/TmtvService.html":{}}}],["orthancseriesids",{"_index":2420,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{}}}],["orthancseriesids.foreach((orthancseriesid",{"_index":2422,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["orthancstudyid",{"_index":2356,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthancusername",{"_index":995,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["other_patient_ids",{"_index":3097,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otherpatientids",{"_index":3098,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":3264,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":3021,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":754,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":1954,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/UsersController.html":{}}}],["param('label",{"_index":2632,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('name",{"_index":2615,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('rolename",{"_index":2622,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('uuid",{"_index":2022,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parsed",{"_index":1946,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["partialtype",{"_index":1004,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createoptiondto",{"_index":991,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createroledto",{"_index":1008,"title":{},"body":{"classes/GetRoleDto.html":{}}}],["pass",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1172,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1170,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["passportstrategy(strategy",{"_index":1150,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["password",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpClient.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@exclude",{"_index":2829,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":825,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["password.dto.ts:19",{"_index":842,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:24",{"_index":827,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:29",{"_index":844,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:34",{"_index":846,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1305,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["password1234!change",{"_index":851,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty",{"_index":826,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty()@minlength(12)@matches(/^(?=.*[a",{"_index":828,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password?token=${token}&userid=${userid",{"_index":1341,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":1294,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1579,"title":{},"body":{"controllers/OptionsController.html":{}}}],["path",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["patharray",{"_index":864,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["patharray.reduce",{"_index":865,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["patient_birthdate",{"_index":2163,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_birthdate'})@isstring",{"_index":2293,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_id",{"_index":2162,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_id'})@isstring",{"_index":2289,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_name",{"_index":2161,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_name'})@isstring",{"_index":2291,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_sex",{"_index":3095,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientbirthdate",{"_index":3094,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientid",{"_index":2097,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patientname",{"_index":2098,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patients",{"_index":3166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientsex",{"_index":3096,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pause",{"_index":2488,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["paused",{"_index":94,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["payload",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/JwtStrategy.html":{}}}],["payload.changetype",{"_index":716,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto",{"_index":638,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto.ts",{"_index":1807,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:12",{"_index":1815,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:16",{"_index":1816,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:20",{"_index":1817,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":1818,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:28",{"_index":1820,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":1813,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.email",{"_index":1218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":709,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.role",{"_index":1219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1217,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peer",{"_index":704,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["performed_procedure_step_description",{"_index":3139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performedprocedurestepdescription",{"_index":3140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["petid",{"_index":1353,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["petseriesorthancid",{"_index":1354,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["pg",{"_index":3057,"title":{},"body":{"dependencies.html":{}}}],["pixilib",{"_index":3272,"title":{},"body":{"properties.html":{}}}],["please",{"_index":3245,"title":{},"body":{"index.html":{}}}],["port",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["post",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post('/:id/disable",{"_index":776,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:id/enable",{"_index":773,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:rolename/label",{"_index":2621,"title":{},"body":{"controllers/RolesController.html":{}}}],["post('/instances",{"_index":1871,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["post('/jobs",{"_index":1695,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/echo",{"_index":1699,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/modify",{"_index":1888,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/modalities/*/query",{"_index":1949,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/modalities/*/store",{"_index":1853,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/modalities/:id/parsed",{"_index":1953,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/peers/*/store",{"_index":1859,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/queries/:id/answers/:index/retrieve",{"_index":1952,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/queries/:id/answers/:index/retrieve')@useguards(queryguard",{"_index":1941,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/series/*/modify",{"_index":1891,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/studies/*/modify",{"_index":1890,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/tasks/:user/export",{"_index":1860,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/tools/create",{"_index":1855,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["post('/tools/find",{"_index":1747,"title":{},"body":{"controllers/OrthancController.html":{}}}],["post('/tools/reset",{"_index":1690,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/tools/shutdown",{"_index":1691,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('change",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('lost",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('oauth2",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pour",{"_index":1754,"title":{},"body":{"controllers/OrthancController.html":{}}}],["preferred_username",{"_index":1180,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["prefix",{"_index":722,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":2604,"title":{},"body":{"controllers/RolesController.html":{}}}],["primarycolumn",{"_index":1223,"title":{},"body":{"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":532,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["prioritized",{"_index":93,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["private",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LabelsService.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["processevent",{"_index":586,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processevent(autorouting",{"_index":613,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processing",{"_index":1979,"title":{},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{}}}],["processing.controller",{"_index":2064,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["processing.file",{"_index":2770,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service",{"_index":2771,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service.ts",{"_index":1351,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:13",{"_index":1372,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1369,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1374,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1368,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:58",{"_index":1370,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:65",{"_index":1365,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:7",{"_index":1376,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:77",{"_index":1375,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:8",{"_index":1377,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:9",{"_index":1363,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing/processing",{"_index":644,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{}}}],["processing/processing.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["processingclient",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["processingcontroller",{"_index":1977,"title":{"controllers/ProcessingController.html":{}},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"coverage.html":{}}}],["processingfile",{"_index":2039,"title":{"classes/ProcessingFile.html":{}},"body":{"classes/ProcessingFile.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["processingfile(ctresponse",{"_index":2783,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(fragmentedmaskid",{"_index":2804,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(maskid",{"_index":2801,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(ptresponse",{"_index":2780,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ctseriesid",{"_index":2788,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ptseriesid",{"_index":2792,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingjobdto",{"_index":1983,"title":{"classes/ProcessingJobDto.html":{}},"body":{"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["processingjobtype",{"_index":646,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"miscellaneous/enumerations.html":{}}}],["processingjobtype.tmtv",{"_index":693,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processingjobtype})@isenum(processingjobtype",{"_index":2053,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["processingmask",{"_index":647,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["processingmask.nifti",{"_index":1382,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processingmask.rtss",{"_index":698,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmask.seg",{"_index":699,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmodule",{"_index":208,"title":{"modules/ProcessingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProcessingModule.html":{},"modules.html":{},"overview.html":{}}}],["processingqueue",{"_index":2066,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["processingqueueservice",{"_index":591,"title":{"injectables/ProcessingQueueService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["processingservice",{"_index":1364,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processseries",{"_index":3003,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processseries(orthancclient",{"_index":3197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processstudy",{"_index":3004,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processstudy(orthancclient",{"_index":3198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":3226,"title":{},"body":{"index.html":{}}}],["profile",{"_index":2357,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["profile'})@isstring",{"_index":2368,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["progress",{"_index":125,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["progressive",{"_index":3205,"title":{},"body":{"index.html":{}}}],["project",{"_index":3237,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":102,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"classes/WithLabels.html":{},"properties.html":{}}}],["protected",{"_index":9,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/HttpClient.html":{},"controllers/OrthancController.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["protocol",{"_index":1061,"title":{},"body":{"classes/HttpClient.html":{}}}],["protocol_name",{"_index":2153,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["protocol_name'})@isstring",{"_index":2257,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["protocolname",{"_index":2154,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["provide",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["provider",{"_index":1429,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["providers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["proxy",{"_index":1766,"title":{},"body":{"controllers/OrthancController.html":{}}}],["pt",{"_index":689,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ptorthancseriesid",{"_index":695,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ptresponse",{"_index":2777,"title":{},"body":{"classes/TmtvService.html":{}}}],["ptseriesid",{"_index":688,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["public",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"classes/ProcessingFile.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('oauth2",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["put",{"_index":1684,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["put('/:id",{"_index":2884,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:name",{"_index":2614,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('/modalities",{"_index":1700,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/peers",{"_index":1703,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/studies/*/labels",{"_index":1758,"title":{},"body":{"controllers/OrthancController.html":{}}}],["put('/tools/log",{"_index":1693,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["que",{"_index":1774,"title":{},"body":{"controllers/OrthancController.html":{}}}],["query",{"_index":948,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"modules/TasksModule.html":{}}}],["query')@useguards(queryguard",{"_index":1938,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query('userid",{"_index":2017,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.answer",{"_index":2247,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["query.controller",{"_index":1902,"title":{},"body":{"modules/OrthancModule.html":{},"modules/QueueModule.html":{}}}],["query.controller.ts",{"_index":1923,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["query.controller.ts:106",{"_index":2444,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:146",{"_index":2449,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:32",{"_index":1930,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:42",{"_index":1933,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:51",{"_index":1942,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:53",{"_index":2446,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:61",{"_index":1939,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:80",{"_index":2445,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto",{"_index":2452,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto.ts",{"_index":2474,"title":{},"body":{"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["query.dto.ts:104",{"_index":2476,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.dto.ts:11",{"_index":2504,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:15",{"_index":2506,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:19",{"_index":2503,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:23",{"_index":2507,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:27",{"_index":2501,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:31",{"_index":2508,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:35",{"_index":2502,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:41",{"_index":2485,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:45",{"_index":2480,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:49",{"_index":2481,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:53",{"_index":2482,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:57",{"_index":2484,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:61",{"_index":2483,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:65",{"_index":2479,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:7",{"_index":2505,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:86",{"_index":2477,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.service",{"_index":2182,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"modules/TasksModule.html":{}}}],["query.service.ts",{"_index":2486,"title":{},"body":{"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["query.service.ts:20",{"_index":2492,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:24",{"_index":2493,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:28",{"_index":2491,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:8",{"_index":2490,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query/queue",{"_index":2311,"title":{},"body":{"modules/QueueModule.html":{}}}],["queryanswer",{"_index":2090,"title":{"classes/QueryAnswer.html":{}},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["queryanswer:10",{"_index":2246,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:11",{"_index":2245,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:12",{"_index":2234,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:14",{"_index":2230,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:4",{"_index":2228,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:40",{"_index":2236,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:44",{"_index":2237,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:48",{"_index":2238,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:5",{"_index":2229,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:52",{"_index":2239,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:56",{"_index":2241,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:6",{"_index":2231,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:60",{"_index":2240,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:64",{"_index":2235,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:68",{"_index":2244,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:7",{"_index":2233,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:72",{"_index":2243,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:76",{"_index":2242,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:8",{"_index":2232,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:9",{"_index":2227,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype",{"_index":1948,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["queryanswertype.level_series",{"_index":1956,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["queryanswertype.level_study",{"_index":1966,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype})@isenum(queryanswertype",{"_index":2146,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["queryguard",{"_index":151,"title":{"guards/QueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["queryparsedanswer",{"_index":1935,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.level",{"_index":1955,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.query",{"_index":1958,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswerdto",{"_index":1936,"title":{"classes/QueryParsedAnswerDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queryqueue",{"_index":2494,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueue.pause",{"_index":2496,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueuecron",{"_index":2173,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queryqueuetask",{"_index":2170,"title":{"injectables/QueryQueueTask.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queryseriesanswer",{"_index":2202,"title":{"classes/QuerySeriesAnswer.html":{}},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["queryseriesdto",{"_index":1943,"title":{"classes/QuerySeriesDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["querystudyanswer",{"_index":2267,"title":{"classes/QueryStudyAnswer.html":{}},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["querystudydto",{"_index":1944,"title":{"classes/QueryStudyDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queue",{"_index":10,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["queue('anon",{"_index":2388,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["queue('delete",{"_index":2435,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["queue('processing",{"_index":2080,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue('query",{"_index":2495,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queue.service",{"_index":645,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["queue.service.ts",{"_index":2065,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"coverage.html":{}}}],["queue.service.ts:10",{"_index":2068,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:22",{"_index":2071,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:26",{"_index":2077,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:30",{"_index":2070,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:47",{"_index":2074,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:88",{"_index":2072,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:95",{"_index":2076,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.task",{"_index":2731,"title":{},"body":{"modules/TasksModule.html":{}}}],["queue.task.ts",{"_index":2172,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["queue.task.ts:12",{"_index":2177,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queue.task.ts:20",{"_index":2180,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queuemodule",{"_index":209,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queuequeryservice",{"_index":2175,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queues/anon",{"_index":2316,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queues/delete",{"_index":2398,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queues/query",{"_index":2438,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queues/query/queue",{"_index":2181,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{}}}],["queues/queue.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["queuesanoncontroller",{"_index":2304,"title":{"controllers/QueuesAnonController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["queuesanondto",{"_index":2350,"title":{"classes/QueuesAnonDto.html":{}},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto",{"_index":2320,"title":{"classes/QueuesAnonsDto.html":{}},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto.anonymizes",{"_index":2345,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queuesanonservice",{"_index":2301,"title":{"injectables/QueuesAnonService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesdeletecontroller",{"_index":2305,"title":{"controllers/QueuesDeleteController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["queuesdeletedto",{"_index":2402,"title":{"classes/QueuesDeleteDto.html":{}},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["queuesdeletedto.orthancseriesids",{"_index":2421,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queuesdeleteservice",{"_index":2302,"title":{"injectables/QueuesDeleteService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerycontroller",{"_index":2306,"title":{"controllers/QueuesQueryController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["queuesquerydto",{"_index":2442,"title":{"classes/QueuesQueryDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesquerydto.series",{"_index":2464,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerydto.studies",{"_index":2462,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries",{"_index":2463,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.foreach((series",{"_index":2471,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.length",{"_index":2465,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseriesdto",{"_index":2451,"title":{"classes/QueuesQuerySeriesDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesqueryservice",{"_index":2176,"title":{"injectables/QueuesQueryService.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerystudy",{"_index":2461,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.foreach((study",{"_index":2469,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.length",{"_index":2466,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudydto",{"_index":2450,"title":{"classes/QueuesQueryStudyDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuestate",{"_index":2198,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["racines",{"_index":1776,"title":{},"body":{"controllers/OrthancController.html":{}}}],["randomuuid",{"_index":3302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rbac",{"_index":1772,"title":{},"body":{"controllers/OrthancController.html":{}}}],["read",{"_index":3246,"title":{},"body":{"index.html":{}}}],["read_all",{"_index":2539,"title":{},"body":{"entities/Role.html":{}}}],["readall",{"_index":949,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["readallguard",{"_index":164,"title":{"guards/ReadAllGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["readonly",{"_index":862,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"guards/OrGuard.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{}}}],["redirect",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/docs/oauth2",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html')@redirect('/docs/oauth2",{"_index":174,"title":{},"body":{"controllers/AppController.html":{}}}],["redis_address",{"_index":2390,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redis_port",{"_index":2392,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redisaddress",{"_index":996,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["redisport",{"_index":997,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["referring_physician_name",{"_index":3110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referringphysicianname",{"_index":3111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":3060,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1132,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":339,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.firstname",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.lastname",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto})@public()@post('register",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["related",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["relations",{"_index":2668,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":789,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('labelname",{"_index":1250,"title":{},"body":{"controllers/LabelsController.html":{}}}],["remove(id",{"_index":808,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["remove(labelname",{"_index":1235,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{}}}],["remove(name",{"_index":2659,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeanonjob",{"_index":2318,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(@param('uuid",{"_index":2348,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(uuid",{"_index":2328,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removechildren",{"_index":83,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removedeletejob",{"_index":2400,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(@param('uuid",{"_index":2425,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(uuid",{"_index":2408,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removejob",{"_index":21,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(@param('uuid",{"_index":2037,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["removejob(data",{"_index":55,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(uuid",{"_index":2000,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["removelabelfromrole",{"_index":2550,"title":{},"body":{"controllers/RolesController.html":{}}}],["removelabelfromrole(rolename",{"_index":2575,"title":{},"body":{"controllers/RolesController.html":{}}}],["removeoncomplete",{"_index":67,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removeonfail",{"_index":70,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removequeryjob",{"_index":2440,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(@param('uuid",{"_index":2472,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(uuid",{"_index":2447,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removerolelabel",{"_index":2644,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerolelabel(rolename",{"_index":2661,"title":{},"body":{"injectables/RolesService.html":{}}}],["repeat",{"_index":95,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["replace",{"_index":3174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["replacevalue",{"_index":2716,"title":{},"body":{"classes/TagAnon.html":{}}}],["reply",{"_index":1324,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":792,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["req['user",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":142,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibody({type",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":2854,"title":{},"body":{"controllers/UsersController.html":{}}}],["request(config",{"_index":1108,"title":{},"body":{"classes/HttpClient.html":{}}}],["request(option",{"_index":1095,"title":{},"body":{"classes/HttpClient.html":{}}}],["request.body",{"_index":3316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.method",{"_index":3315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.url",{"_index":3312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":145,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["request.user.role.name",{"_index":877,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["request.user.userid",{"_index":871,"title":{},"body":{"guards/CheckUserIdGuard.html":{}}}],["request['user",{"_index":2018,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["requestbuffer",{"_index":1031,"title":{},"body":{"classes/HttpClient.html":{}}}],["requested_procedure_description",{"_index":3105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestedproceduredescription",{"_index":2099,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["requesting_physician",{"_index":3108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestingphysician",{"_index":3109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmethod",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["requeststream",{"_index":1032,"title":{},"body":{"classes/HttpClient.html":{}}}],["requesttype",{"_index":1639,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{}}}],["required",{"_index":740,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"controllers/OauthConfigController.html":{},"entities/Option.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["res",{"_index":1094,"title":{},"body":{"classes/HttpClient.html":{},"miscellaneous/functions.html":{}}}],["res.data",{"_index":674,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["res.setheader('content",{"_index":1097,"title":{},"body":{"classes/HttpClient.html":{}}}],["res.status(500).send('bad",{"_index":1104,"title":{},"body":{"classes/HttpClient.html":{}}}],["reset",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetorthanc",{"_index":1635,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resetorthanc(request",{"_index":1675,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resource",{"_index":2033,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["resourcetype",{"_index":1809,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["response",{"_index":1073,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.data",{"_index":1111,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.email",{"_index":1202,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.family_name",{"_index":1204,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.given_name",{"_index":1203,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.pipe(res",{"_index":1099,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.pipe(streamwriter).on('finish",{"_index":1109,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.headers['content",{"_index":1098,"title":{},"body":{"classes/HttpClient.html":{}}}],["responsetype",{"_index":1077,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{}}}],["result",{"_index":107,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/TmtvService.html":{}}}],["results",{"_index":120,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":2029,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["results[id",{"_index":128,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["resume",{"_index":2489,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["retrieve",{"_index":1927,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["retrieve(request",{"_index":1940,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["return",{"_index":104,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1463,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1765,"title":{},"body":{"controllers/OrthancController.html":{}}}],["role",{"_index":494,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["role'})@apiresponse({status",{"_index":2552,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.dto",{"_index":1012,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{}}}],["role.dto.ts",{"_index":942,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":957,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":951,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":956,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:23",{"_index":961,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":952,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:31",{"_index":955,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:35",{"_index":950,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:39",{"_index":958,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:43",{"_index":954,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:47",{"_index":953,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:51",{"_index":962,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":960,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{}}}],["role.entity",{"_index":2585,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["role.guard",{"_index":2586,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.guard.ts",{"_index":873,"title":{},"body":{"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:15",{"_index":875,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.guard.ts:4",{"_index":874,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.labels",{"_index":2678,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.filter((label",{"_index":2679,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.find((label",{"_index":2676,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.push(label",{"_index":2677,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.name",{"_index":2844,"title":{},"body":{"entities/User.html":{}}}],["role.name)@joincolumn({name",{"_index":2832,"title":{},"body":{"entities/User.html":{}}}],["role_label",{"_index":2533,"title":{},"body":{"entities/Role.html":{}}}],["role_name",{"_index":2833,"title":{},"body":{"entities/User.html":{}}}],["rolecount",{"_index":2933,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolecount[1",{"_index":2935,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolename",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":2545,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles.controller",{"_index":2638,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":2584,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/role.entity",{"_index":1024,"title":{},"body":{"classes/GetUserDto.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["roles/roles.service",{"_index":2701,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["rolescontroller",{"_index":2543,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":2591,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":210,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesrepository",{"_index":2647,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":2583,"title":{"injectables/RolesService.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["role})@apiresponse({status",{"_index":2568,"title":{},"body":{"controllers/RolesController.html":{}}}],["router",{"_index":516,"title":{"classes/Router.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["routes",{"_index":1767,"title":{},"body":{"controllers/OrthancController.html":{}}}],["rtss",{"_index":3169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rtssid",{"_index":1384,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rtssstream",{"_index":1386,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["rule",{"_index":550,"title":{"classes/Rule.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.value.tostring",{"_index":655,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.value.tostring().includes(value.tostring",{"_index":658,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.valuerepresentation",{"_index":652,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule_condition",{"_index":565,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rule_condition'})@isenum(rulecondition",{"_index":2685,"title":{},"body":{"classes/Router.html":{}}}],["rulecondition",{"_index":544,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["rulecondition.and",{"_index":564,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rules",{"_index":567,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["ruletoboolean",{"_index":587,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ruletoboolean(rule",{"_index":615,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["run",{"_index":3221,"title":{},"body":{"index.html":{}}}],["runinference",{"_index":2744,"title":{},"body":{"classes/TmtvService.html":{}}}],["runinference(fragmented",{"_index":2760,"title":{},"body":{"classes/TmtvService.html":{}}}],["rxjs",{"_index":1176,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["salim",{"_index":1750,"title":{},"body":{"controllers/OrthancController.html":{}}}],["salttest",{"_index":3309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sas",{"_index":3273,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":3210,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2619,"title":{},"body":{"controllers/RolesController.html":{}}}],["scheme",{"_index":3289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1215,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1318,"title":{},"body":{"modules/MailModule.html":{}}}],["seed",{"_index":1498,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}}}],["seeder",{"_index":3008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":2700,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["seedermodule",{"_index":211,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":2698,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedservice",{"_index":3320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedservice.seed",{"_index":3322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":1391,"title":{},"body":{"injectables/MaskProcessingService.html":{},"miscellaneous/enumerations.html":{}}}],["segid",{"_index":1389,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["segstream",{"_index":2809,"title":{},"body":{"classes/TmtvService.html":{}}}],["send",{"_index":662,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["send(error.response.statusmessage",{"_index":1107,"title":{},"body":{"classes/HttpClient.html":{}}}],["sendchangepasswordemail",{"_index":1333,"title":{},"body":{"injectables/MailService.html":{}}}],["sendchangepasswordemail(email",{"_index":1337,"title":{},"body":{"injectables/MailService.html":{}}}],["senddicomtoprocessing",{"_index":2745,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskasrtsstoorthanc",{"_index":2746,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskassegtoorthanc",{"_index":2747,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmasktoorthancas",{"_index":697,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["sendtodestination",{"_index":588,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtodestination(destination",{"_index":617,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtopeer(destination.name",{"_index":705,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sent",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["sent'})@apiresponse({status",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["seq",{"_index":1810,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["sequence_name",{"_index":3121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sequencename",{"_index":3122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series",{"_index":669,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["series.answer.ts",{"_index":2204,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["series.answer.ts:10",{"_index":2214,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:49",{"_index":2224,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:5",{"_index":2225,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:53",{"_index":2222,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:57",{"_index":2219,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:6",{"_index":2217,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:61",{"_index":2221,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:65",{"_index":2223,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:69",{"_index":2220,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:7",{"_index":2215,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:8",{"_index":2216,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:9",{"_index":2218,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.maindicomtags.modality",{"_index":678,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["series_date",{"_index":3112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_description",{"_index":2155,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_description'})@isstring",{"_index":2259,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_id_1",{"_index":2430,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_id_2",{"_index":2431,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_instance_uid",{"_index":2159,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_instance_uid'})@isstring",{"_index":2261,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_number",{"_index":2157,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_number'})@isstring",{"_index":2263,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_time",{"_index":3114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_type",{"_index":3135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdate",{"_index":3113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdescription",{"_index":2156,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesdetails",{"_index":670,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancQueryController.html":{}}}],["seriesdetails.find",{"_index":686,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdetails.map",{"_index":677,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdto",{"_index":1957,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.modality",{"_index":1961,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.protocolname",{"_index":1962,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesdescription",{"_index":1963,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesinstanceuid",{"_index":1965,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesnumber",{"_index":1964,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.studyuid",{"_index":1960,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesinstanceuid",{"_index":2160,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesnumber",{"_index":2158,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriestime",{"_index":3115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriestype",{"_index":3136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesuid",{"_index":2213,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["server",{"_index":3211,"title":{},"body":{"index.html":{}}}],["set",{"_index":1348,"title":{},"body":{"injectables/MailService.html":{}}}],["set(uuids",{"_index":115,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["setaccessionnumber",{"_index":2100,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswerid",{"_index":2101,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswernumber",{"_index":2102,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setctorthancseriesid",{"_index":2748,"title":{},"body":{"classes/TmtvService.html":{}}}],["setctorthancseriesid(orthancseriesid",{"_index":2766,"title":{},"body":{"classes/TmtvService.html":{}}}],["setdescription('the",{"_index":3286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setforwardedadress",{"_index":1036,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedadress(address",{"_index":1056,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol",{"_index":1037,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol(protocol",{"_index":1059,"title":{},"body":{"classes/HttpClient.html":{}}}],["setlevel",{"_index":2103,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setmaskid",{"_index":1359,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmaskid(maskid",{"_index":1371,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmetadata(is_public_key",{"_index":3318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmodalitiesinstudy",{"_index":2272,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setmodality",{"_index":2206,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofseriesrelatedinstances",{"_index":2207,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofstudyrelatedinstances",{"_index":2273,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setnumberofstudyrelatedseries",{"_index":2274,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setoriginaet",{"_index":2104,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpassword",{"_index":1038,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpassword(password",{"_index":1062,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpatientid",{"_index":2105,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpatientname",{"_index":2106,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpetid",{"_index":1360,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setpetid(petid",{"_index":1373,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setptorthancseriesid",{"_index":2749,"title":{},"body":{"classes/TmtvService.html":{}}}],["setptorthancseriesid(orthancseriesid",{"_index":2768,"title":{},"body":{"classes/TmtvService.html":{}}}],["setrequestedproceduredescription",{"_index":2107,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setseriesdescription",{"_index":2208,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesinstanceuid",{"_index":2209,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesnumber",{"_index":2210,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setstudydate",{"_index":2108,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudydescription",{"_index":2109,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudyinstanceuid",{"_index":2211,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["settitle('gaelo",{"_index":3284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupanonworker",{"_index":2999,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupanonworker(orthancclient",{"_index":3189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupdeleteworker",{"_index":3001,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupdeleteworker(orthancclient",{"_index":3200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupprocessingworker",{"_index":2996,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupprocessingworker(orthancclient",{"_index":3201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupqueryworker",{"_index":3005,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupqueryworker(orthancclient",{"_index":3199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupworkers",{"_index":2986,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupworkers(app",{"_index":3186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seturl",{"_index":1039,"title":{},"body":{"classes/HttpClient.html":{}}}],["seturl(url",{"_index":1064,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername",{"_index":1040,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername(username",{"_index":1066,"title":{},"body":{"classes/HttpClient.html":{}}}],["setversion('2.0",{"_index":3287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdownorthanc",{"_index":1636,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["shutdownorthanc(request",{"_index":1678,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["side",{"_index":3212,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["sk",{"_index":1752,"title":{},"body":{"controllers/OrthancController.html":{}}}],["sont",{"_index":1777,"title":{},"body":{"controllers/OrthancController.html":{}}}],["sop_instance_uid",{"_index":3159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sopclassuid",{"_index":3188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sopinstanceuid",{"_index":3160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["special",{"_index":840,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["sponsors",{"_index":3240,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":3064,"title":{},"body":{"dependencies.html":{}}}],["sqlite3",{"_index":3066,"title":{},"body":{"dependencies.html":{}}}],["src/.../anon.worker.ts",{"_index":3177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../autorouting.enum.ts",{"_index":3073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../build_docs.ts",{"_index":3275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":3278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete.worker.ts",{"_index":3181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":3074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":3178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":3179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwords.ts",{"_index":3276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../processing.worker.ts",{"_index":3182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":3279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.worker.ts",{"_index":3180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":3280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":3277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:87",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:86",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/change",{"_index":824,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1296,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1300,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1298,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/lost",{"_index":1303,"title":{},"body":{"classes/LostPassworDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":2510,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":2514,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":2516,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":2512,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":1148,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1206,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":1210,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":1208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1287,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:16",{"_index":1291,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":1289,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/autorouting/autorouting.entity.ts",{"_index":513,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.entity.ts:104",{"_index":524,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:109",{"_index":519,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:115",{"_index":530,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:25",{"_index":2691,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:30",{"_index":2695,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:35",{"_index":2693,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:40",{"_index":2689,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:47",{"_index":986,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:52",{"_index":987,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:59",{"_index":2686,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:74",{"_index":2687,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:87",{"_index":2684,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:94",{"_index":526,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:99",{"_index":528,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.enum.ts",{"_index":3075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/autorouting/autorouting.handler.ts",{"_index":575,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.handler.ts:115",{"_index":612,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:130",{"_index":621,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:203",{"_index":614,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:21",{"_index":623,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:220",{"_index":600,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:23",{"_index":634,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:31",{"_index":593,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:42",{"_index":596,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:46",{"_index":602,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:57",{"_index":606,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:64",{"_index":610,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:71",{"_index":604,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:80",{"_index":608,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:89",{"_index":616,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autoroutings.controller.ts",{"_index":721,"title":{},"body":{"controllers/AutoroutingsController.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.controller.ts:32",{"_index":736,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:47",{"_index":753,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:60",{"_index":742,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:74",{"_index":750,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:87",{"_index":746,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.module.ts",{"_index":781,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["src/autorouting/autoroutings.service.ts",{"_index":785,"title":{},"body":{"injectables/AutoroutingsService.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.service.ts:10",{"_index":795,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:17",{"_index":803,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:21",{"_index":805,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:29",{"_index":807,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:35",{"_index":798,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:40",{"_index":811,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:45",{"_index":809,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:50",{"_index":802,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:56",{"_index":800,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/dto/create",{"_index":878,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["src/autorouting/dto/orthanc",{"_index":1806,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["src/build_docs.ts",{"_index":2977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":2980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":3167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/guards/check",{"_index":855,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["src/guards/jwt",{"_index":1145,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts",{"_index":1129,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts:12",{"_index":1134,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/jwt.guard.ts:7",{"_index":1133,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/local.guard.ts",{"_index":1285,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard.ts",{"_index":1616,"title":{},"body":{"guards/OrGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard.ts:3",{"_index":1618,"title":{},"body":{"guards/OrGuard.html":{}}}],["src/guards/or.guard.ts:6",{"_index":1619,"title":{},"body":{"guards/OrGuard.html":{}}}],["src/guards/roles.guard.ts",{"_index":133,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:105",{"_index":2509,"title":{},"body":{"guards/ReadAllGuard.html":{}}}],["src/guards/roles.guard.ts:15",{"_index":166,"title":{},"body":{"guards/AnonymizeGuard.html":{}}}],["src/guards/roles.guard.ts:25",{"_index":988,"title":{},"body":{"guards/ExportGuard.html":{}}}],["src/guards/roles.guard.ts:35",{"_index":2143,"title":{},"body":{"guards/QueryGuard.html":{}}}],["src/guards/roles.guard.ts:45",{"_index":508,"title":{},"body":{"guards/AutoQueryGuard.html":{}}}],["src/guards/roles.guard.ts:5",{"_index":1115,"title":{},"body":{"guards/ImportGuard.html":{}}}],["src/guards/roles.guard.ts:55",{"_index":984,"title":{},"body":{"guards/DeleteGuard.html":{}}}],["src/guards/roles.guard.ts:65",{"_index":137,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/roles.guard.ts:75",{"_index":1409,"title":{},"body":{"guards/ModifyGuard.html":{}}}],["src/guards/roles.guard.ts:85",{"_index":822,"title":{},"body":{"guards/CdBurnerGuard.html":{}}}],["src/guards/roles.guard.ts:95",{"_index":509,"title":{},"body":{"guards/AutoRoutingGuard.html":{}}}],["src/interceptors/not",{"_index":1410,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/public.ts",{"_index":2981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/labels/label.entity.ts",{"_index":1220,"title":{},"body":{"entities/Label.html":{},"coverage.html":{}}}],["src/labels/label.entity.ts:8",{"_index":1222,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/labels.controller.ts",{"_index":1228,"title":{},"body":{"controllers/LabelsController.html":{},"coverage.html":{}}}],["src/labels/labels.controller.ts:27",{"_index":1234,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:37",{"_index":1237,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:47",{"_index":1232,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.dto.ts",{"_index":1225,"title":{},"body":{"classes/LabelDto.html":{},"coverage.html":{}}}],["src/labels/labels.dto.ts:7",{"_index":1226,"title":{},"body":{"classes/LabelDto.html":{}}}],["src/labels/labels.module.ts",{"_index":1260,"title":{},"body":{"modules/LabelsModule.html":{}}}],["src/labels/labels.service.ts",{"_index":1264,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/labels/labels.service.ts:14",{"_index":1272,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:18",{"_index":1274,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:22",{"_index":1276,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:27",{"_index":1277,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:31",{"_index":1271,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:8",{"_index":1268,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/mail/mail.module.ts",{"_index":1307,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1332,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:12",{"_index":1338,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":1336,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2982,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/oauth",{"_index":1426,"title":{},"body":{"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["src/options/dto/create",{"_index":884,"title":{},"body":{"classes/CreateOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/get",{"_index":990,"title":{},"body":{"classes/GetOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/update",{"_index":2815,"title":{},"body":{"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["src/options/option.entity.ts",{"_index":1520,"title":{},"body":{"entities/Option.html":{},"coverage.html":{}}}],["src/options/option.entity.ts:10",{"_index":1565,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:14",{"_index":1523,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:18",{"_index":1529,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:22",{"_index":1526,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:26",{"_index":1531,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:30",{"_index":1567,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:34",{"_index":1552,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:38",{"_index":1542,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:42",{"_index":1550,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:46",{"_index":1545,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:50",{"_index":1547,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:54",{"_index":1539,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:58",{"_index":1555,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:62",{"_index":1562,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:66",{"_index":1560,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:70",{"_index":1537,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:74",{"_index":1558,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:78",{"_index":1534,"title":{},"body":{"entities/Option.html":{}}}],["src/options/options.controller.ts",{"_index":1571,"title":{},"body":{"controllers/OptionsController.html":{},"coverage.html":{}}}],["src/options/options.controller.ts:28",{"_index":1573,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.controller.ts:52",{"_index":1578,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.module.ts",{"_index":1598,"title":{},"body":{"modules/OptionsModule.html":{}}}],["src/options/options.service.ts",{"_index":1602,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/options/options.service.ts:15",{"_index":1606,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:19",{"_index":1609,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:24",{"_index":1607,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:9",{"_index":1604,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/orthanc/dto/query",{"_index":2144,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["src/orthanc/orthanc",{"_index":1623,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts",{"_index":1705,"title":{},"body":{"controllers/OrthancController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts:102",{"_index":1725,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:112",{"_index":1743,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:119",{"_index":1731,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:24",{"_index":1721,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:32",{"_index":1746,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:42",{"_index":1718,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:62",{"_index":1734,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:72",{"_index":1740,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:82",{"_index":1737,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:92",{"_index":1728,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.module.ts",{"_index":1894,"title":{},"body":{"modules/OrthancModule.html":{}}}],["src/orthanc/query",{"_index":2091,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["src/orthanc/tag",{"_index":2714,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["src/orthanc/utils.ts",{"_index":2992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/processing/mask",{"_index":1350,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["src/processing/processing",{"_index":2050,"title":{},"body":{"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts",{"_index":1978,"title":{},"body":{"controllers/ProcessingController.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts:115",{"_index":1987,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:135",{"_index":2003,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:41",{"_index":1990,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:54",{"_index":1999,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:77",{"_index":1994,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.file.ts",{"_index":2040,"title":{},"body":{"classes/ProcessingFile.html":{},"coverage.html":{}}}],["src/processing/processing.file.ts:10",{"_index":2047,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:14",{"_index":2046,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:2",{"_index":2045,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:3",{"_index":2044,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.module.ts",{"_index":2063,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["src/processing/processing.worker.ts",{"_index":2995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/processing/tmtv.service.ts",{"_index":2739,"title":{},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["src/processing/tmtv.service.ts:10",{"_index":2756,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:102",{"_index":2765,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:107",{"_index":2758,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:11",{"_index":2752,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:13",{"_index":2754,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:14",{"_index":2753,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:16",{"_index":2750,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:23",{"_index":2769,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:27",{"_index":2767,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:31",{"_index":2759,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:35",{"_index":2763,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:51",{"_index":2757,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:68",{"_index":2761,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:8",{"_index":2755,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:9",{"_index":2751,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:97",{"_index":2764,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/queues/anon/anon.worker.ts",{"_index":2997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/anon/queue",{"_index":2314,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["src/queues/delete/delete.worker.ts",{"_index":3000,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/delete/queue",{"_index":2396,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["src/queues/query/query.worker.ts",{"_index":3002,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/query/queue",{"_index":2437,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["src/queues/queue.module.ts",{"_index":2303,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queues/queue.service.ts",{"_index":6,"title":{},"body":{"injectables/AbstractQueueService.html":{},"coverage.html":{}}}],["src/queues/queue.service.ts:101",{"_index":42,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:105",{"_index":52,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:12",{"_index":33,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:23",{"_index":56,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:38",{"_index":47,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:6",{"_index":25,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:75",{"_index":39,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:82",{"_index":54,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:90",{"_index":43,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:97",{"_index":41,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/roles/dto/create",{"_index":941,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/get",{"_index":1007,"title":{},"body":{"classes/GetRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/with",{"_index":2954,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts",{"_index":2518,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts:13",{"_index":2530,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:17",{"_index":2521,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:21",{"_index":2529,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:25",{"_index":2538,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:29",{"_index":2523,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:33",{"_index":2528,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:37",{"_index":2520,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:41",{"_index":2535,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:45",{"_index":2527,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:49",{"_index":2525,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:53",{"_index":2540,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:58",{"_index":2534,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:9",{"_index":2537,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/roles.controller.ts",{"_index":2544,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:102",{"_index":2580,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:123",{"_index":2556,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:144",{"_index":2574,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:164",{"_index":2577,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:51",{"_index":2566,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:62",{"_index":2570,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:73",{"_index":2560,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:88",{"_index":2563,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":2637,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":2640,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:17",{"_index":2652,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:21",{"_index":2653,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:28",{"_index":2655,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:32",{"_index":2658,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:36",{"_index":2651,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":2660,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:44",{"_index":2664,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:48",{"_index":2649,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":2656,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":2662,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:82",{"_index":2663,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":2646,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/seeder/seed.ts",{"_index":3007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeder/seeder.module.ts",{"_index":2699,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/seeder/seeder.service.ts",{"_index":2705,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/seeder/seeder.service.ts:17",{"_index":2708,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/seeder/seeder.service.ts:9",{"_index":2707,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/tasks/orthanc",{"_index":1904,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["src/tasks/query",{"_index":2171,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":2730,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/dto/create",{"_index":964,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":1015,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":2817,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":2819,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:17",{"_index":2825,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":2824,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":2827,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":2830,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:43",{"_index":2822,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:51",{"_index":2838,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":2834,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":2840,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":2841,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":2847,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:115",{"_index":2860,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:129",{"_index":2856,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":2861,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:68",{"_index":2865,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:87",{"_index":2867,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":2905,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":2907,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":2926,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":2917,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":2920,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":2924,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":2922,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:62",{"_index":2929,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":2931,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":2916,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":2927,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":2928,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":2913,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/http.client.ts",{"_index":1027,"title":{},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["src/utils/http.client.ts:11",{"_index":1044,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:123",{"_index":1071,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:143",{"_index":1055,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:152",{"_index":1053,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:39",{"_index":1057,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:43",{"_index":1060,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:47",{"_index":1065,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:5",{"_index":1050,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:51",{"_index":1067,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:55",{"_index":1063,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:59",{"_index":1046,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:6",{"_index":1051,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:7",{"_index":1045,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:71",{"_index":1047,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:8",{"_index":1042,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:83",{"_index":1048,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:9",{"_index":1043,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:95",{"_index":1049,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/is",{"_index":3010,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.middleware.ts",{"_index":3012,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/orthanc",{"_index":3013,"title":{},"body":{"coverage.html":{}}}],["src/utils/passwords.ts",{"_index":3016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/processing.client.ts",{"_index":3017,"title":{},"body":{"coverage.html":{}}}],["src/validators/string",{"_index":1116,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["stable_patient",{"_index":3087,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_series",{"_index":3083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_study",{"_index":3085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablepatient",{"_index":3088,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stableseries",{"_index":3084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablestudy",{"_index":3086,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":3222,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3225,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3227,"title":{},"body":{"index.html":{}}}],["started",{"_index":3204,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3216,"title":{},"body":{"index.html":{}}}],["starthour",{"_index":3194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startminute",{"_index":3191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":96,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs",{"_index":97,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs.foreach((job",{"_index":99,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statements",{"_index":2964,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":85,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["station_name",{"_index":3117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationname",{"_index":3118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["status(error.response.status",{"_index":1106,"title":{},"body":{"classes/HttpClient.html":{}}}],["stay",{"_index":3249,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1171,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["stream",{"_index":1093,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamanswertores",{"_index":1033,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback",{"_index":1041,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback(url",{"_index":1068,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamwriter",{"_index":1069,"title":{},"body":{"classes/HttpClient.html":{}}}],["strict",{"_index":1331,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string|null",{"_index":2248,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["studies",{"_index":2468,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study",{"_index":921,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/enumerations.html":{}}}],["study'})@column({default",{"_index":1548,"title":{},"body":{"entities/Option.html":{}}}],["study'})@isstring",{"_index":922,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["study.answer.ts",{"_index":2268,"title":{},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["study.answer.ts:43",{"_index":2278,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:47",{"_index":2281,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:5",{"_index":2282,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:51",{"_index":2280,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:57",{"_index":2279,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:6",{"_index":2276,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:7",{"_index":2277,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:8",{"_index":2275,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study_date",{"_index":3099,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_description",{"_index":2164,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_description'})@isstring",{"_index":2295,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_id",{"_index":3102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_instance_uid",{"_index":2167,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_instance_uid'})@isstring",{"_index":2297,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_time",{"_index":3100,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_uid",{"_index":2150,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_uid'})@isstring",{"_index":2265,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["studydate",{"_index":2110,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydescription",{"_index":2111,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydetails",{"_index":1968,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto",{"_index":1967,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.accessionnb",{"_index":1975,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.modality",{"_index":1973,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientid",{"_index":1971,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientname",{"_index":1970,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydate",{"_index":1972,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydescription",{"_index":1974,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studyinstanceuid",{"_index":1976,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studyes",{"_index":1761,"title":{},"body":{"controllers/OrthancController.html":{}}}],["studyid",{"_index":3103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyinstanceuid",{"_index":2168,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studytime",{"_index":3101,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyuid",{"_index":2151,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["sub",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["subject",{"_index":1343,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1139,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"interfaces/UserInfoResponse.html":{}}}],["super(anonqueue",{"_index":2393,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["super(deletequeue",{"_index":2436,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["super(queryqueue",{"_index":2497,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["super.canactivate(context",{"_index":1144,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3241,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3260,"title":{},"body":{"modules.html":{}}}],["swaggermodule.createdocument(app",{"_index":3293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1381,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["synchronize",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":3020,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3019,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2717,"title":{},"body":{"classes/TagAnon.html":{}}}],["taganon",{"_index":2713,"title":{"classes/TagAnon.html":{}},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["tagpolicies",{"_index":2720,"title":{},"body":{"classes/TagAnon.html":{},"miscellaneous/enumerations.html":{}}}],["tagpolicy",{"_index":2718,"title":{},"body":{"classes/TagAnon.html":{}}}],["tasks/tasks.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":212,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["template",{"_index":1325,"title":{},"body":{"modules/MailModule.html":{}}}],["templates",{"_index":1328,"title":{},"body":{"modules/MailModule.html":{}}}],["temporal_position_identifier",{"_index":3157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporalpositionidentifier",{"_index":3158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":3230,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":3233,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3232,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3229,"title":{},"body":{"index.html":{}}}],["text",{"_index":1126,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["thanks",{"_index":3239,"title":{},"body":{"index.html":{}}}],["then((ctseriesid",{"_index":2786,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((ptseriesid",{"_index":2790,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((res",{"_index":673,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["then((response",{"_index":1096,"title":{},"body":{"classes/HttpClient.html":{}}}],["then(async",{"_index":2776,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.accessionnumber",{"_index":2139,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answerid",{"_index":2133,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answernumber",{"_index":2134,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.authservice.createconfirmationtoken(newuser",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createconfirmationtoken(user",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req['user",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1295,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verifyconfirmationtoken(token",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoroutingconfigs",{"_index":650,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingconfigs.filter",{"_index":714,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingservice.create(createautoroutingdto",{"_index":768,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.disable(id",{"_index":778,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.enable(id",{"_index":775,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findall",{"_index":651,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findoneorfail(id",{"_index":771,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.remove(id",{"_index":772,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingsrepository.delete(id",{"_index":819,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.find",{"_index":814,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.findoneorfail",{"_index":815,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.save(autorouting",{"_index":816,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.update(id",{"_index":818,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.configservice.get('app_url')}:${this.configservice.get('port_client')}/change",{"_index":1340,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('orthanc_address",{"_index":1588,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_password",{"_index":1591,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_port",{"_index":1589,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_username",{"_index":1590,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('redis_address",{"_index":1592,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.configservice.get('redis_port",{"_index":1593,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.createdfiles",{"_index":2774,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.foreach((file",{"_index":2812,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.push(new",{"_index":2779,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctorthancseriesid",{"_index":2773,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctseriesid",{"_index":2787,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.eventemitter.emit('autorouting.updated",{"_index":817,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.eventemitter.emit('orthanc",{"_index":1920,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.findone(id",{"_index":2942,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneorfail(id",{"_index":820,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.forwardedaddress",{"_index":1085,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.forwardedprotocol",{"_index":1087,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.fragmentedmask",{"_index":2806,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.rtss",{"_index":2807,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.seg",{"_index":2810,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.getjobs",{"_index":2088,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.getjobs(uuid",{"_index":119,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.getnestedproperty(request",{"_index":869,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["this.getoptions(url",{"_index":1089,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.getuserinfourl(wellknown",{"_index":1196,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.getwellknown(decoded.iss",{"_index":1195,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.guards",{"_index":1620,"title":{},"body":{"guards/OrGuard.html":{}}}],["this.handleautoroutingupdated",{"_index":649,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.httpservice.get(iss",{"_index":1184,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.httpservice.get(url",{"_index":1200,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.id",{"_index":2048,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.issendable(autorouting.router",{"_index":710,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.jwtservice.decode(token",{"_index":1194,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.jwtservice.signasync(payload",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.labelservice.findonebyorfail(label",{"_index":2633,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelservice.islabelexist(labeldto.name",{"_index":2624,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelsrepository.delete(labelname",{"_index":1283,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.find",{"_index":1279,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneby",{"_index":1282,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findonebyorfail",{"_index":1280,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneorfail",{"_index":2675,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.labelsrepository.save(label",{"_index":1284,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsservice.create(labeldto",{"_index":1257,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findall",{"_index":1246,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findonebyorfail(labelname",{"_index":1251,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.islabelexist(labeldto.name",{"_index":1254,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.remove(labelname",{"_index":1252,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.lastchanges",{"_index":1914,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.level",{"_index":2135,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.levelmapping[payload.changetype",{"_index":707,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.mailerservice.sendmail",{"_index":1342,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendchangepasswordemail",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendchangepasswordemail(user.email",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mask",{"_index":2800,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.maskid",{"_index":1378,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.modalitiesinstudy",{"_index":2283,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.modality",{"_index":2251,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofseriesrelatedinstances",{"_index":2254,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofstudyrelatedinstances",{"_index":2285,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.numberofstudyrelatedseries",{"_index":2284,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.oauthconfigservice.addoauthconfig(oauthconfigdto",{"_index":1483,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.deleteoauthconfig(name",{"_index":1477,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyauthorizationurl(authorizationurl",{"_index":1191,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.oauthconfigservice.findonebyname",{"_index":1480,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyname(name",{"_index":1475,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.getoauthconfig",{"_index":1470,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.seed",{"_index":2712,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.oauthconfigsrepository.create",{"_index":1518,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.create(oauthconfigdto",{"_index":1514,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.delete",{"_index":1513,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.find",{"_index":1512,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.findone",{"_index":1511,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(config",{"_index":1515,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(option",{"_index":1519,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.optionrepository.find())[0",{"_index":2188,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.optionservice.getoptions",{"_index":1587,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionservice.seed",{"_index":2711,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.optionservice.update(options",{"_index":1595,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionsrepository.create",{"_index":1613,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.findonebyorfail",{"_index":1611,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.insert(option",{"_index":1614,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.update(1",{"_index":1612,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.originaet",{"_index":2136,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.orthancclient",{"_index":671,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"classes/TmtvService.html":{}}}],["this.orthancclient.getchangessince(this.lastchanges.tostring",{"_index":1917,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getlastchanges()).data.last",{"_index":1915,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getorthancdetails(level",{"_index":708,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.queryseriesinaet",{"_index":1959,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.querystudiesinaet",{"_index":1969,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.sendtoorthanc(rtssstream",{"_index":2808,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.orthancclient.sendtoorthanc(segstream",{"_index":2811,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.password",{"_index":1082,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.patientid",{"_index":2138,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.patientname",{"_index":2137,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.petid",{"_index":1379,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.petseriesorthancid",{"_index":1380,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processevent(autorouting",{"_index":719,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingclient",{"_index":2784,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.createdicom(result",{"_index":2778,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.deleteressource(file.gettype",{"_index":2813,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.executeinference('pt_seg_attentionunet",{"_index":2793,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.fragmentmask",{"_index":2803,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingqueue",{"_index":2079,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.add(jobid",{"_index":2086,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.getjobs(state",{"_index":2087,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.obliterate",{"_index":2084,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.remove(uuid",{"_index":2085,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.resume",{"_index":2083,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueueservice.addjob",{"_index":2035,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.addjob(null",{"_index":691,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingqueueservice.flush",{"_index":2013,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getalluuids",{"_index":2019,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getjobs(undefined",{"_index":2028,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser",{"_index":2025,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser(userid",{"_index":2020,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.removejob(uuid",{"_index":2038,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingservice.creatertssfrommask",{"_index":1385,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.createsegfrommask",{"_index":1390,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('rtss",{"_index":1388,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('seg",{"_index":1393,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.fragmentmask",{"_index":1398,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getmaskdicomorientation",{"_index":1383,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getrtss(rtssid",{"_index":1387,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getseg(segid",{"_index":1392,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getstatsmaskseries",{"_index":1396,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.thresholdmask",{"_index":1404,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.ptorthancseriesid",{"_index":2772,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ptseriesid",{"_index":2791,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.queue",{"_index":64,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.add(data['uuid",{"_index":66,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.close",{"_index":116,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs",{"_index":74,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs(state",{"_index":98,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.ispaused",{"_index":2500,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.obliterate",{"_index":117,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.pause",{"_index":2498,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.remove(job.id",{"_index":82,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.resume",{"_index":2499,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queuequeryservice.ispaused",{"_index":2199,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.pause",{"_index":2201,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.resume",{"_index":2200,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuesanonservice.addjob",{"_index":2347,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.checkifuseridhasjobs(user.userid",{"_index":2342,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.flush",{"_index":2334,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getalluuids",{"_index":2336,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getjobsforuuid(uuid",{"_index":2340,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(user.userid",{"_index":2339,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(userid",{"_index":2337,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.removejob",{"_index":2349,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesdeleteservice.addjob",{"_index":2423,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.checkifuseridhasjobs(user.userid",{"_index":2419,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.flush",{"_index":2414,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getalluuids",{"_index":2415,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getjobsforuuid(uuid",{"_index":2418,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser",{"_index":2417,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser(userid",{"_index":2416,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.removejob",{"_index":2426,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesqueryservice.addjob",{"_index":2470,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.checkifuseridhasjobs(user.userid",{"_index":2460,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.flush",{"_index":2455,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getalluuids",{"_index":2456,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getjobsforuuid(uuid",{"_index":2459,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(user.userid",{"_index":2458,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(userid",{"_index":2457,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.removejob",{"_index":2473,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1141,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.replacevalue",{"_index":2726,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.requestbuffer(url",{"_index":1112,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.requestedproceduredescription",{"_index":2142,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.requeststream(url",{"_index":1110,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.roleservice.addrolelabel(rolename",{"_index":2626,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.create(createroledto",{"_index":2607,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findall",{"_index":2597,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findallwithlabels",{"_index":2596,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(name",{"_index":2600,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(rolename",{"_index":2623,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(userdto.rolename",{"_index":2888,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.getrolelabels(rolename)).map",{"_index":2630,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(createroledto.name",{"_index":2605,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(name",{"_index":2616,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(userdto.rolename",{"_index":2899,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.remove(name",{"_index":2613,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.removerolelabel(rolename",{"_index":2634,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.update(name",{"_index":2618,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesrepository.create",{"_index":2680,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.delete(name",{"_index":2672,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.find",{"_index":2666,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneby",{"_index":2670,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findonebyorfail",{"_index":2669,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneorfail",{"_index":2674,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.insert([admin",{"_index":2681,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.save(role",{"_index":2671,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.update(name",{"_index":2673,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.seed",{"_index":2709,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.sendtodestination(destination",{"_index":712,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.seriesdescription",{"_index":2252,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesinstanceuid",{"_index":2250,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesnumber",{"_index":2253,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.studydate",{"_index":2141,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studydescription",{"_index":2140,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studyinstanceuid",{"_index":2249,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["this.tag",{"_index":2725,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.tagpolicy",{"_index":2724,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.type",{"_index":2049,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.update(id",{"_index":821,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["this.url",{"_index":1079,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.username",{"_index":1081,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.userservice.create(user)).id",{"_index":2902,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":2875,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findone(id",{"_index":2883,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyemail(userdto.email",{"_index":2890,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isexistinguser(id",{"_index":2896,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isroleused(role.name",{"_index":2610,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.userservice.remove(id",{"_index":2897,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.update(id",{"_index":2894,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":2950,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":2945,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":2936,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findandcount",{"_index":2934,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":2937,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert([admin",{"_index":2953,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":2944,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":2938,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(userid",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(userdata.email",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.seed",{"_index":2710,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.usersservice.update(user.id",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserpassword(userid",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.validateissuer(wellknown",{"_index":1197,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.valuepath",{"_index":870,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["this.verifytoken(token",{"_index":1205,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["thresholdedmask",{"_index":1406,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setmaskid(thresholdedmaskid",{"_index":1407,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setpetid(this.petid",{"_index":1408,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmaskid",{"_index":1403,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdmaskto41",{"_index":1361,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["throw",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":2186,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tls",{"_index":1320,"title":{},"body":{"modules/MailModule.html":{}}}],["tmp",{"_index":3068,"title":{},"body":{"dependencies.html":{}}}],["tmtv",{"_index":3168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tmtvjob",{"_index":694,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob(job",{"_index":3202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tmtvjobdto",{"_index":2055,"title":{"classes/TmtvJobDto.html":{}},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["tmtvservice",{"_index":2738,"title":{"classes/TmtvService.html":{}},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["toclassonly",{"_index":2958,"title":{},"body":{"classes/WithLabels.html":{}}}],["todo",{"_index":1748,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MailService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["token')@apibody({type",{"_index":1453,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["token')@apiparam({name",{"_index":1460,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{}}}],["token')@apiresponse({status",{"_index":731,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["token')@delete('/modalities/*')@useguards(adminguard",{"_index":1646,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/patients/*')@useguards(deleteguard",{"_index":1794,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/peers/*')@useguards(adminguard",{"_index":1649,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/series/*')@useguards(deleteguard",{"_index":1797,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*')@useguards(deleteguard",{"_index":1800,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*/labels",{"_index":1717,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/dicom",{"_index":1723,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/instances",{"_index":1727,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/modalities",{"_index":1730,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/patients",{"_index":1733,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/peers*')@useguards(exportguard",{"_index":1851,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@get('/peers/*/system')@useguards(adminguard",{"_index":1667,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/plugins')@useguards(adminguard",{"_index":1670,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/queries/*/answers*')@useguards(queryguard",{"_index":1932,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@get('/series",{"_index":1736,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/studies",{"_index":1739,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/system')@useguards(adminguard",{"_index":1673,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/tools/log",{"_index":1663,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/wado",{"_index":1742,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@post('/instances')@useguards(importguard",{"_index":1869,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["token')@post('/jobs/*')@useguards(adminguard",{"_index":1643,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/echo')@useguards(adminguard",{"_index":1640,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/modify')@useguards(modifyguard",{"_index":1880,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/modalities/*/query')@useguards(queryguard",{"_index":1929,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/modalities/*/store')@useguards(exportguard",{"_index":1842,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/modalities/:id/parsed",{"_index":1937,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/peers/*/store')@useguards(exportguard",{"_index":1845,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/series/*/modify')@useguards(modifyguard",{"_index":1883,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/studies/*/modify')@useguards(modifyguard",{"_index":1886,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/tasks/:user/export')@useguards(exportguard",{"_index":1848,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/tools/create",{"_index":1831,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["token')@post('/tools/find",{"_index":1720,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@post('/tools/reset')@useguards(adminguard",{"_index":1676,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/tools/shutdown')@useguards(adminguard",{"_index":1679,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/modalities/*')@useguards(adminguard",{"_index":1652,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/peers/*/')@useguards(adminguard",{"_index":1655,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/studies/*/labels",{"_index":1745,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@put('/tools/log",{"_index":1682,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["tokenexpiration",{"_index":2820,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":3250,"title":{},"body":{"index.html":{}}}],["transform",{"_index":767,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/WithLabels.html":{}}}],["transformer",{"_index":547,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["transport",{"_index":1316,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":2519,"title":{},"body":{"entities/Role.html":{}}}],["true})@get('/jobs/:id?')@useguards(adminguard",{"_index":1660,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["true})@get(':uuid",{"_index":1993,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["true})@isboolean",{"_index":924,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/WithLabels.html":{}}}],["true})@isemail",{"_index":967,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["true})@isenum(autoroutingeventtype",{"_index":1812,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isenum(processingmask",{"_index":2735,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["true})@isnumber",{"_index":1819,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isstring",{"_index":959,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["true})@public()@get",{"_index":1465,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@transform",{"_index":2957,"title":{},"body":{"classes/WithLabels.html":{}}}],["true})@type(undefined",{"_index":2683,"title":{},"body":{"classes/Router.html":{}}}],["true})@useguards(adminguard)@delete(':name",{"_index":1461,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@useguards(new",{"_index":2324,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["try",{"_index":1183,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["twitter",{"_index":3256,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"guards/OrGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'})@isenum(destinationtype",{"_index":985,"title":{},"body":{"classes/Destination.html":{}}}],["typeof",{"_index":1128,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["typeorm",{"_index":533,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"entities/Label.html":{},"injectables/LabelsService.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm_type",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":2704,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([autorouting",{"_index":784,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["typeormmodule.forfeature([label",{"_index":1263,"title":{},"body":{"modules/LabelsModule.html":{}}}],["typeormmodule.forfeature([oauthconfig",{"_index":1494,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["typeormmodule.forfeature([option",{"_index":1601,"title":{},"body":{"modules/OptionsModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":2639,"title":{},"body":{"modules/RolesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3215,"title":{},"body":{"index.html":{}}}],["uk",{"_index":912,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["uk'})@column({default",{"_index":1535,"title":{},"body":{"entities/Option.html":{}}}],["uk'})@isstring",{"_index":913,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["unauthorized",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@apibody({schema",{"_index":2553,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@apibody({type",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apioauth2(['openid",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":739,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":1451,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@apibody({type",{"_index":2558,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete",{"_index":1989,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:labelname",{"_index":1236,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:name",{"_index":2562,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get",{"_index":1233,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@get('/:name",{"_index":2569,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@patch",{"_index":1577,"title":{},"body":{"controllers/OptionsController.html":{}}}],["unauthorized'})@useguards(adminguard)@post",{"_index":1231,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@put('/:name",{"_index":2579,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(anonymizeguard)@delete(':uuid",{"_index":2329,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@get",{"_index":752,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@usepipes(new",{"_index":734,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(deleteguard)@delete(':uuid",{"_index":2409,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["unauthorized'})@useguards(new",{"_index":2572,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(queryguard)@delete(':uuid",{"_index":2448,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(readallguard)@post",{"_index":1986,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["unauthorizedexception",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('invalid",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('unknown",{"_index":1198,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["undefined",{"_index":46,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/TagAnon.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({status",{"_index":751,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["undefined})@column({name",{"_index":522,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["undefined})@isarray",{"_index":2428,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["undefined})@isarray()@isobject({each",{"_index":2394,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["undefined})@manytomany(undefined",{"_index":2531,"title":{},"body":{"entities/Role.html":{}}}],["undefined})@useguards(new",{"_index":2554,"title":{},"body":{"controllers/RolesController.html":{}}}],["unique",{"_index":2836,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":3228,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtStrategy.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancQueryController.html":{}}}],["update",{"_index":790,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":1594,"title":{},"body":{"controllers/OptionsController.html":{}}}],["update(id",{"_index":810,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(name",{"_index":2578,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(option",{"_index":1608,"title":{},"body":{"injectables/OptionsService.html":{}}}],["update(options",{"_index":1574,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updatelabels",{"_index":1715,"title":{},"body":{"controllers/OrthancController.html":{}}}],["updatelabels(request",{"_index":1744,"title":{},"body":{"controllers/OrthancController.html":{}}}],["updateloglevel",{"_index":1637,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateloglevel(request",{"_index":1681,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateoptiondto",{"_index":1575,"title":{"classes/UpdateOptionDto.html":{}},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["updateoptiondto})@apiresponse({status",{"_index":1576,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updateuserdto",{"_index":2816,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpassword",{"_index":2911,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassword(id",{"_index":2930,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercase",{"_index":836,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["url",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["url.replace('/api",{"_index":3314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":2612,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefactory",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1244,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(anonymizeguard",{"_index":2341,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(autoroutingguard",{"_index":765,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["useguards(deleteguard",{"_index":1803,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/QueuesDeleteController.html":{}}}],["useguards(exportguard",{"_index":1854,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["useguards(importguard",{"_index":1872,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["useguards(jwtoauthguard",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(modifyguard",{"_index":1889,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["useguards(new",{"_index":2335,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["useguards(queryguard",{"_index":1950,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["useguards(readallguard",{"_index":2034,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["useinterceptors",{"_index":2581,"title":{},"body":{"controllers/RolesController.html":{}}}],["usepipes",{"_index":755,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["usepipes(new",{"_index":766,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["user",{"_index":144,"title":{"entities/User.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user'})@apiresponse({status",{"_index":2853,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":2870,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":965,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":972,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":1018,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:15",{"_index":968,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":1016,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:19",{"_index":980,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:22",{"_index":1019,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:26",{"_index":979,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["user.dto.ts:30",{"_index":1022,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:34",{"_index":1021,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:7",{"_index":970,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.entity",{"_index":2869,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":2877,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.id",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.lastname",{"_index":2878,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.password",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.role.admin",{"_index":157,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.anonymize",{"_index":148,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autoquery",{"_index":154,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autorouting",{"_index":163,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.cdburner",{"_index":161,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.delete",{"_index":156,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.export",{"_index":150,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.import",{"_index":146,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.modify",{"_index":159,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.query",{"_index":152,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.readall",{"_index":165,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.rolename",{"_index":2879,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.token",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tokenexpiration",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":2026,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["user1@mail.com",{"_index":1306,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user1@mail.com'})@isnotempty",{"_index":1304,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user@gaelo.com",{"_index":2952,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.email",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.firstname",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdata.lastname",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":2857,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.email",{"_index":2893,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.firstname",{"_index":2886,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.lastname",{"_index":2887,"title":{},"body":{"controllers/UsersController.html":{}}}],["userexists",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":40,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["userinforesponse",{"_index":1178,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{}}}],["usernamefield",{"_index":1293,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":876,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["users",{"_index":2848,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":2906,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":2868,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{}}}],["users/users.module",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["userscontroller",{"_index":2846,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":2593,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":213,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":2914,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":362,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithpasswordupdated",{"_index":2943,"title":{},"body":{"injectables/UsersService.html":{}}}],["utils",{"_index":1686,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{}}}],["utils/is",{"_index":2185,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["utils/logger.middleware",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/orthanc",{"_index":641,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["utils/passwords",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utils/processing.client",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["uuid",{"_index":50,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["uuidofuser",{"_index":2338,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuids",{"_index":112,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuidsofuser",{"_index":2024,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["uuidsofuser.includes(uuid",{"_index":2027,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["validate",{"_index":538,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(email",{"_index":1290,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(isnumberorstring",{"_index":558,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(payload",{"_index":1209,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(text",{"_index":1124,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validate(token",{"_index":1164,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateissuer",{"_index":1153,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["validateissuer(wellknown",{"_index":1166,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validatenested",{"_index":539,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validateuser",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":1121,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validationpipe",{"_index":756,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validationpipe())@post",{"_index":735,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validator",{"_index":540,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1127,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validatorconstraintinterface",{"_index":1118,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validators/string",{"_index":549,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value",{"_index":49,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/Destination.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value'})@validate(isnumberorstring",{"_index":2692,"title":{},"body":{"classes/Rule.html":{}}}],["value_representation",{"_index":556,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value_representation'})@isenum(valuerepresentation",{"_index":2694,"title":{},"body":{"classes/Rule.html":{}}}],["valuepath",{"_index":860,"title":{},"body":{"guards/CheckUserIdGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["valuerepresentation",{"_index":545,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["valuerepresentation.date",{"_index":656,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.number",{"_index":653,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.string",{"_index":555,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["variable",{"_index":2978,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3274,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifier",{"_index":1773,"title":{},"body":{"controllers/OrthancController.html":{}}}],["verifyconfirmationtoken",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyconfirmationtoken(token",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":1154,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["verifytoken(token",{"_index":1168,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["verouillees",{"_index":1779,"title":{},"body":{"controllers/OrthancController.html":{}}}],["version",{"_index":3269,"title":{},"body":{"properties.html":{}}}],["void",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"classes/TmtvService.html":{}}}],["voir",{"_index":1753,"title":{},"body":{"controllers/OrthancController.html":{}}}],["wait",{"_index":90,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["waiting",{"_index":91,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["warning",{"_index":1770,"title":{},"body":{"controllers/OrthancController.html":{}}}],["watch",{"_index":3223,"title":{},"body":{"index.html":{}}}],["weak",{"_index":978,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["web",{"_index":1724,"title":{},"body":{"controllers/OrthancController.html":{}}}],["website",{"_index":3254,"title":{},"body":{"index.html":{}}}],["well",{"_index":1185,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown",{"_index":1160,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown.data",{"_index":1188,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['authorization_endpoint",{"_index":1190,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['userinfo_endpoint",{"_index":1192,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wildcard",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["withfragmentedmask",{"_index":700,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["withlabels",{"_index":2565,"title":{"classes/WithLabels.html":{}},"body":{"controllers/RolesController.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["withlabels.withlabels",{"_index":2595,"title":{},"body":{"controllers/RolesController.html":{}}}],["withrole",{"_index":2919,"title":{},"body":{"injectables/UsersService.html":{}}}],["writefilesync('../openapi.json",{"_index":3294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":3244,"title":{},"body":{"index.html":{}}}],["yyyymmddthhmmss",{"_index":1814,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["z\\d\\w]{12",{"_index":832,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*?[0",{"_index":975,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*?[a",{"_index":974,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":829,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*\\d)(?=.*[\\w])[a",{"_index":830,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["za",{"_index":831,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["zoom",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractQueueService.html":{"url":"injectables/AbstractQueueService.html","title":"injectable - AbstractQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queues/queue.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/queues/queue.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Job, Queue } from 'bullmq';\n\n@Injectable()\nexport abstract class AbstractQueueService {\n  protected queue: Queue;\n\n  constructor(queue: Queue) {\n    this.queue = queue;\n  }\n\n  async addJob(data: object): Promise {\n    await this.queue.add(data['uuid'], data, {\n      removeOnComplete: {\n        age: 3600,\n      },\n      removeOnFail: {\n        age: 24 * 3600,\n      },\n    });\n  }\n\n  async removeJob(data: object | undefined = undefined): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n\n    jobs.forEach((job) => {\n      if (\n        data == undefined ||\n        ((job.data.uuid == data['uuid'] || data['uuid'] == undefined) &&\n          (job.data.userId == data['userId'] || data['userId'] == undefined) &&\n          (job.data.jobId == data['jobId'] || data['jobId'] == undefined))\n      ) {\n        this.queue.remove(job.id, { removeChildren: true });\n      }\n    });\n  }\n\n  async getJobs(\n    uuid: string | undefined = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.queue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return job.data.uuid == uuid || uuid == undefined;\n    });\n\n    return filteredJob;\n  }\n\n  async checkIfUserIdHasJobs(userId: number): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const result: Job | null = jobs.find((job) => job.data.userId == userId);\n\n    return result ? true : false;\n  }\n\n  async getUuidOfUser(userId: number): Promise {\n    const jobs: Job[] | null = await this.queue.getJobs();\n    const uuid: string | null = jobs.find((job) => job.data.userId == userId)\n      ?.data.uuid;\n\n    return uuid ? uuid : null;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const uuids = jobs.map((job) => job.data.uuid);\n\n    return Array.from(new Set(uuids));\n  }\n\n  async closeQueueConnection(): Promise {\n    await this.queue.close();\n  }\n\n  async flush(): Promise {\n    await this.queue.obliterate({ force: true });\n  }\n\n  async getJobsForUuid(uuid: string = undefined): Promise {\n    const jobs: Job[] | null = await this.getJobs(uuid);\n\n    const results = {};\n    jobs\n      .filter((job) => job.data.uuid == uuid || uuid == undefined)\n      .forEach((job) => {\n        const id = job.id;\n        const progress = {\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n          UserId: job.data.userId,\n        };\n        results[id] = progress;\n      });\n\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AnonymizeGuard.html":{"url":"guards/AnonymizeGuard.html","title":"guard - AnonymizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AnonymizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Redirect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('oauth2-redirect.html')@Redirect('/docs/oauth2-redirect.html', 302)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Redirect } from '@nestjs/common';\nimport { Public } from './interceptors/public';\nimport { ApiExcludeEndpoint } from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Public()\n  @Get('oauth2-redirect.html')\n  @Redirect('/docs/oauth2-redirect.html', 302)\n  @ApiExcludeEndpoint()\n  async oauth2Redirect() {\n    return { url: '/docs/oauth2-redirect.html' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoroutingsModule\n                        \n                        \n                            LabelsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OauthConfigModule\n                        \n                        \n                            OptionsModule\n                        \n                        \n                            OrthancModule\n                        \n                        \n                            ProcessingModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SeederModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { logger } from './utils/logger.middleware';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { NotFoundInterceptor } from './interceptors/not-found.interceptor';\n\nimport ProcessingClient from './utils/processing.client';\n\n// MODULES\nimport { AuthModule } from './auth/auth.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { MailModule } from './mail/mail.module';\nimport { OauthConfigModule } from './oauth-configs/oauth-configs.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AutoroutingsModule } from './autorouting/autoroutings.module';\nimport { UsersModule } from './users/users.module';\nimport { RolesModule } from './roles/roles.module';\nimport { LabelsModule } from './labels/labels.module';\nimport { OptionsModule } from './options/options.module';\nimport { OrthancModule } from './orthanc/orthanc.module';\nimport { ProcessingModule } from './processing/processing.module';\nimport { QueueModule } from './queues/queue.module';\n\n// CONTROLLERS\nimport { AppController } from './app.controller';\n\nimport { SeederModule } from './seeder/seeder.module';\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot({\n      wildcard: true,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: ['.env.dev', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\n          'TYPEORM_TYPE',\n          'postgres',\n        ) as 'postgres', // Default to 'postgres'\n        host: configService.get('TYPEORM_HOST', 'localhost'),\n        port: +configService.get('TYPEORM_PORT', 5432),\n        username: configService.get('TYPEORM_USERNAME', 'postgres'),\n        password: configService.get('TYPEORM_PASSWORD', 'postgres'),\n        database: configService.get('TYPEORM_DATABASE', 'gaelo-flow'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    AuthModule,\n    UsersModule,\n    RolesModule,\n    LabelsModule,\n    OptionsModule,\n    TasksModule,\n    OauthConfigModule,\n    ProcessingModule,\n    AutoroutingsModule,\n    QueueModule,\n    OrthancModule,\n    MailModule,\n    SeederModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    ProcessingClient,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: NotFoundInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for all authentication related APIs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                lostPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Password changed'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: ChangePasswordDto})@Public()@Post('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({type: LoginDto})@Public()@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n                        login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        lostPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    lostPassword(body: LostPassworDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Email sent'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: LostPassworDto})@Public()@Post('lost-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LostPassworDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiOAuth2(['openid'], 'oauth2')@Public()@UseGuards(JwtOAuthGuard)@HttpCode(HttpStatus.OK)@Post('oauth2')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Register success'})@ApiResponse({status: 409, description: 'Conflict'})@ApiBody({type: RegisterDto})@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  BadRequestException,\n  ConflictException,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBody, ApiOAuth2, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LocalAuthGuard } from '../guards/local.guard';\nimport { JwtOAuthGuard } from '../guards/jwt-oauth.guard';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { Public } from '../interceptors/public';\nimport { LoginDto } from './dto/login.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { MailService } from '../mail/mail.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LostPassworDto } from './dto/lost-password.dto';\n\n/**\n * Controller for all authentication related APIs\n */\n@ApiTags('auth')\n@Controller('')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  /**\n   * login controller\n   */\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ type: LoginDto })\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req: Request) {\n    return await this.authService.login(req['user']);\n  }\n\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiOAuth2(['openid'], 'oauth2')\n  @Public()\n  @UseGuards(JwtOAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('oauth2')\n  async oauth2Login(@Request() req: Request) {\n    const userData = req['user'];\n\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    const userExists = await this.usersService.findOneByEmail(userData.email);\n    if (!userExists) {\n      await this.usersService.create({\n        Email: userData.email,\n        Firstname: userData.firstname,\n        Lastname: userData.lastname,\n        RoleName: 'User',\n        Password: null,\n      });\n    }\n\n    const user = await this.usersService.findOneByEmail(userData.email);\n    return await this.authService.login(user);\n  }\n\n  @ApiResponse({ status: 201, description: 'Register success' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @ApiBody({ type: RegisterDto })\n  @Public()\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    const userExists = await this.usersService.findOneByEmail(\n      registerDto.Email,\n      false,\n    );\n    if (userExists) {\n      throw new ConflictException('A user already exist with this email');\n    }\n\n    const newUser = await this.usersService.create({\n      Email: registerDto.Email,\n      Firstname: registerDto.Firstname,\n      Lastname: registerDto.Lastname,\n      RoleName: 'User',\n      Password: null,\n    });\n    const confirmationToken =\n      await this.authService.createConfirmationToken(newUser);\n\n    await this.mailService.sendChangePasswordEmail(\n      newUser.Email,\n      confirmationToken,\n      newUser.Id,\n    );\n  }\n\n  @ApiResponse({ status: 201, description: 'Password changed' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: ChangePasswordDto })\n  @Public()\n  @Post('change-password')\n  async changePassword(\n    @Body() changePasswordDto: ChangePasswordDto,\n  ): Promise {\n    const { Token, NewPassword, ConfirmationPassword, UserId } =\n      changePasswordDto;\n\n    if (NewPassword !== ConfirmationPassword) {\n      throw new BadRequestException('Confirmation password does not match');\n    }\n    await this.usersService.findOne(UserId);\n    await this.authService.verifyConfirmationToken(Token, UserId);\n    await this.usersService.updateUserPassword(UserId, NewPassword);\n  }\n\n  @ApiResponse({ status: 200, description: 'Email sent' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: LostPassworDto })\n  @Public()\n  @Post('lost-password')\n  async lostPassword(@Body() body: LostPassworDto) {\n    const { Email } = body;\n    const user = await this.usersService.findOneByEmail(Email, false);\n    const token = await this.authService.createConfirmationToken(user);\n    await this.mailService.sendChangePasswordEmail(user.Email, token, user.Id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtOauthStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            OauthConfigService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { MailService } from '../mail/mail.service';\n\nimport { AuthController } from './auth.controller';\nimport { User } from '../users/user.entity';\n\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthGuard } from '../guards/jwt.guard';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { JwtOauthStrategy } from './jwt-oauth.strategy';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    HttpModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService): any => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User, OauthConfig]),\n  ],\n  providers: [\n    LocalStrategy,\n    JwtStrategy,\n    JwtOauthStrategy,\n    AuthService,\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    MailService,\n    OauthConfigService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createConfirmationToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyConfirmationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createConfirmationToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyConfirmationToken(token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  comparePasswords,\n  generateToken,\n  getTokenExpiration,\n} from '../utils/passwords';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (user && (await comparePasswords(pass, user.Password))) {\n      delete user.Password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = {\n      sub: user.Id,\n      email: user.Email,\n      role: user.Role,\n      userId: user.Id,\n    };\n    return {\n      AccessToken: await this.jwtService.signAsync(payload),\n      UserId: user.Id,\n    };\n  }\n\n  async createConfirmationToken(user: User): Promise {\n    const { hash, token: confirmationToken } = await generateToken();\n    user.Token = hash;\n    user.TokenExpiration = getTokenExpiration();\n    user.Password = null;\n    await this.usersService.update(user.Id, user);\n    return confirmationToken;\n  }\n\n  async verifyConfirmationToken(\n    token: string,\n    userId: number,\n  ): Promise {\n    const user = await this.usersService.findOne(userId);\n\n    if (new Date() > user.TokenExpiration) {\n      throw new BadRequestException('Token expired');\n    }\n    const isMatch = await comparePasswords(token, user.Token);\n    if (!isMatch) {\n      throw new BadRequestException('Invalid token');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoQueryGuard.html":{"url":"guards/AutoQueryGuard.html","title":"guard - AutoQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoRoutingGuard.html":{"url":"guards/AutoRoutingGuard.html","title":"guard - AutoRoutingGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoRoutingGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autorouting.html":{"url":"entities/Autorouting.html","title":"entity - Autorouting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autorouting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Activated\n                            \n                            \n                                    \n                                    \n                                    \n                                EventType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Activated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        EventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'event_type'})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'router', type: 'jsonb'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingHandler.html":{"url":"injectables/AutoroutingHandler.html","title":"injectable - AutoroutingHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoroutingConfigs\n                            \n                            \n                                levelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleAutoroutingUpdated\n                            \n                            \n                                    \n                                    Async\n                                handleEvent\n                            \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Private\n                                isGreaterThan\n                            \n                            \n                                    Private\n                                isIn\n                            \n                            \n                                    Private\n                                isLessThan\n                            \n                            \n                                    Private\n                                isNotIn\n                            \n                            \n                                    Private\n                                isSendable\n                            \n                            \n                                    Async\n                                processEvent\n                            \n                            \n                                    Private\n                                ruleToBoolean\n                            \n                            \n                                    Private\n                                    Async\n                                sendToDestination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingService: AutoroutingsService, processingQueueService: ProcessingQueueService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autorouting.handler.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingService\n                                                  \n                                                        \n                                                                        AutoroutingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingQueueService\n                                                  \n                                                        \n                                                                        ProcessingQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleAutoroutingUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoroutingUpdated()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('autorouting.updated')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(payload: OrthancEventPayloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('orthanc.*')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEqual\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEqual(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGreaterThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGreaterThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLessThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLessThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNotIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNotIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSendable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSendable(router: Router, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(autorouting: Autorouting, payload: OrthancEventPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ruleToBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    ruleToBoolean(rule: Rule, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendToDestination\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToDestination(destination: Destination, level: LevelType, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            Destination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            LevelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoroutingConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { Injectable } from '@nestjs/common';\nimport { OrthancEventPayloadDto } from './dto/orthanc-event-payload.dto';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { Autorouting, Destination, Router, Rule } from './autorouting.entity';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  LevelType,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport OrthancClient from '../utils/orthanc-client';\nimport * as moment from 'moment';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\n@Injectable()\nexport class AutoroutingHandler {\n  autoroutingConfigs: Array = [];\n\n  levelMapping = {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  };\n\n  constructor(\n    private autoroutingService: AutoroutingsService,\n    private processingQueueService: ProcessingQueueService,\n    private orthancClient: OrthancClient,\n  ) {\n    this.handleAutoroutingUpdated();\n  }\n\n  @OnEvent('autorouting.updated')\n  async handleAutoroutingUpdated() {\n    this.autoroutingConfigs = await this.autoroutingService.findAll();\n  }\n\n  private isEqual(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return value === Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return value === rule.Value.toString();\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isSame(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isNotIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return !rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isGreaterThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value) > Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isAfter(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isLessThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value)  {\n            console.error(\"can't send to aet: \", e);\n          });\n        break;\n      case DestinationType.TMTVJOB:\n        if (level !== LevelType.STUDIES) {\n          console.error('TMTVJob can only be sent to series');\n          return;\n        }\n\n        const seriesDetails = await this.orthancClient\n          .getSeriesDetailsOfStudy(orthancID)\n          .then((res) => {\n            return res.data;\n          })\n          .catch(() => {\n            return [];\n          });\n\n        const allModalities = seriesDetails.map(\n          (series: any) => series.MainDicomTags.Modality,\n        );\n\n        if (\n          allModalities.length !== 2 ||\n          !allModalities.includes('PT') ||\n          !allModalities.includes('CT')\n        ) {\n          console.error('Invalid series modalities: ', allModalities);\n          return;\n        }\n\n        const ctSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'CT',\n        ).ID;\n\n        const ptSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'PT',\n        ).ID;\n\n        const jobId = await this.processingQueueService.addJob(null, {\n          JobType: ProcessingJobType.TMTV,\n          TmtvJob: {\n            PtOrthancSeriesId: ptSeriesID,\n            CtOrthancSeriesId: ctSeriesID,\n            SendMaskToOrthancAs: [ProcessingMask.RTSS, ProcessingMask.SEG],\n            WithFragmentedMask: true,\n          },\n        });\n\n        console.log('TMTV jobId:', jobId);\n\n        break;\n      case DestinationType.PEER:\n        console.log('Sending to Peer', destination, orthancID);\n        this.orthancClient\n          .sendToPeer(destination.Name, [orthancID])\n          .catch((e) => {\n            console.error(\"can't send to peer: \", e);\n          });\n        break;\n    }\n  }\n\n  async processEvent(\n    autorouting: Autorouting,\n    payload: OrthancEventPayloadDto,\n  ) {\n    const level = this.levelMapping[payload.ChangeType];\n    const data = (await this.orthancClient.getOrthancDetails(level, payload.ID))\n      .data;\n    const isSendable = this.isSendable(autorouting.Router, data);\n\n    if (isSendable) {\n      for (const destination of autorouting.Router.Destinations) {\n        this.sendToDestination(destination, level, payload.ID);\n      }\n    }\n  }\n\n  @OnEvent('orthanc.*')\n  async handleEvent(payload: OrthancEventPayloadDto) {\n    const autoroutingMatches = this.autoroutingConfigs.filter(\n      (autorouting) =>\n        autorouting.EventType === payload.ChangeType && autorouting.Activated,\n    );\n\n    autoroutingMatches.forEach((autorouting: Autorouting) => {\n      this.processEvent(autorouting, payload);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoroutingsController.html":{"url":"controllers/AutoroutingsController.html","title":"controller - AutoroutingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoroutingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /autorouting\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAutorouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAutorouting(createAutoroutingDto: CreateAutoroutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'create autorouting'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@UsePipes(new ValidationPipe())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAutoroutingDto\n                                            \n                                                            CreateAutoroutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'delete autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'disable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/disable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'enable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/enable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAutorouting()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all autorouting', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Body,\n  Post,\n  Delete,\n  Param,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AutoRoutingGuard } from '../guards/roles.guard';\nimport { CreateAutoroutingDto } from './dto/create-autorouting.dto';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\n\n@ApiTags('autorouting')\n@Controller('/autorouting')\nexport class AutoroutingsController {\n  constructor(private autoroutingService: AutoroutingsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'create autorouting',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post()\n  async createAutorouting(\n    @Body() createAutoroutingDto: CreateAutoroutingDto,\n  ): Promise {\n    return await this.autoroutingService.create(createAutoroutingDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all autorouting',\n    type: [Autorouting],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @Get()\n  async getAutorouting(): Promise {\n    return await this.autoroutingService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'delete autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Delete('/:id')\n  async deleteAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.findOneOrFail(id);\n    return await this.autoroutingService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'enable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/enable')\n  async enableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.enable(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'disable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/disable')\n  async disableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoroutingsModule.html":{"url":"modules/AutoroutingsModule.html","title":"module - AutoroutingsModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoroutingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/autorouting/autoroutings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoroutingHandler\n                        \n                        \n                            AutoroutingsService\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoroutingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { AutoroutingsController } from './autoroutings.controller';\nimport { AutoroutingHandler } from './autorouting.handler';\nimport OrthancClient from '../utils/orthanc-client';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Autorouting])],\n  providers: [\n    AutoroutingsService,\n    AutoroutingHandler,\n    OrthancClient,\n    ProcessingQueueService,\n  ],\n  controllers: [AutoroutingsController],\n})\nexport class AutoroutingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingsService.html":{"url":"injectables/AutoroutingsService.html","title":"injectable - AutoroutingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEventType\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingsRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autoroutings.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEventType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEventType(eventType: AutoroutingEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventType\n                                            \n                                                            AutoroutingEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrFail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Autorouting } from './autorouting.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { AutoroutingEventType } from './autorouting.enum';\n\n@Injectable()\nexport class AutoroutingsService {\n  constructor(\n    @InjectRepository(Autorouting)\n    private autoroutingsRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.autoroutingsRepository.find();\n  }\n\n  async findOneByEventType(\n    eventType: AutoroutingEventType,\n  ): Promise {\n    return await this.autoroutingsRepository.find({\n      where: { EventType: eventType, Activated: true },\n    });\n  }\n\n  async findOneOrFail(id: number): Promise {\n    return await this.autoroutingsRepository.findOneOrFail({\n      where: { Id: id },\n    });\n  }\n\n  async create(autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.save(autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async update(id: number, autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.update(id, autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async remove(id: number): Promise {\n    await this.autoroutingsRepository.delete(id);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async enable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = true;\n    await this.update(id, autorouting);\n  }\n\n  async disable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = false;\n    await this.update(id, autorouting);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CdBurnerGuard.html":{"url":"guards/CdBurnerGuard.html","title":"guard - CdBurnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CdBurnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ConfirmationPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                Token\n                            \n                            \n                                    \n                                    \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ConfirmationPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()@MinLength(12)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {message: 'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(12)\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {\n    message:\n      'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character',\n  })\n  NewPassword: string;\n\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  ConfirmationPassword: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  Token: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  UserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdGuard.html":{"url":"guards/CheckUserIdGuard.html","title":"guard - CheckUserIdGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getNestedProperty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(valuePath: string[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id.guard.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        valuePath\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CheckUserIdGuard implements CanActivate {\n  constructor(private readonly valuePath: string[]) {}\n\n  getNestedProperty = (obj: any, pathArray: string[]) => {\n    if (!obj) return undefined;\n    return pathArray.reduce(\n      (acc, key) => (acc && acc[key] !== undefined ? acc[key] : undefined),\n      obj,\n    );\n  };\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = this.getNestedProperty(request, this.valuePath);\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserRoleGuard.html":{"url":"guards/CheckUserRoleGuard.html","title":"guard - CheckUserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getNestedProperty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(valuePath: string[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-role.guard.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        valuePath\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-role.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CheckUserRoleGuard implements CanActivate {\n  constructor(private readonly valuePath: string[]) {}\n\n  getNestedProperty = (obj: any, pathArray: string[]) => {\n    if (!obj) return undefined;\n    return pathArray.reduce(\n      (acc, key) => (acc && acc[key] !== undefined ? acc[key] : undefined),\n      obj,\n    );\n  };\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = this.getNestedProperty(request, this.valuePath);\n    const userRole = request.user.role.Name;\n\n    return value == userRole && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoroutingDto.html":{"url":"classes/CreateAutoroutingDto.html","title":"class - CreateAutoroutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoroutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/create-autorouting.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Autorouting, [\n  'Id',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Autorouting } from '../autorouting.entity';\n\nexport class CreateAutoroutingDto extends OmitType(Autorouting, [\n  'Id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOptionDto.html":{"url":"classes/CreateOptionDto.html","title":"class - CreateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/create-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: false, default: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false, default: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean, IsNumber } from 'class-validator';\n\nexport class CreateOptionDto {\n  @ApiProperty({ example: 22 })\n  @IsNumber()\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @IsNumber()\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false, default: 10 })\n  @IsNumber()\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: true, required: false, default: true })\n  @IsBoolean()\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @IsString()\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @IsString()\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @IsString()\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @IsString()\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Import: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Export: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Query: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Delete: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Admin: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Modify: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  ReadAll: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd1234!'})@IsString()@Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty({ example: 'myPassw0rd1234!' })\n  @IsString()\n  @Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {\n    message: 'Password too weak',\n  })\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DeleteGuard.html":{"url":"guards/DeleteGuard.html","title":"guard - DeleteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DeleteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Destination.html":{"url":"classes/Destination.html","title":"class - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Destination\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DestinationType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'type'})@IsEnum(DestinationType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExportGuard.html":{"url":"guards/ExportGuard.html","title":"guard - ExportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOptionDto.html":{"url":"classes/GetOptionDto.html","title":"class - GetOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/get-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancAddress\n                            \n                            \n                                    \n                                    \n                                OrthancPassword\n                            \n                            \n                                    \n                                    \n                                OrthancPort\n                            \n                            \n                                    \n                                    \n                                OrthancUsername\n                            \n                            \n                                    \n                                    \n                                RedisAddress\n                            \n                            \n                                    \n                                    \n                                RedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\nimport { IsString } from 'class-validator';\n\nexport class GetOptionDto extends PartialType(CreateOptionDto) {\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPort: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancUsername: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPassword: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisPort: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleDto.html":{"url":"classes/GetRoleDto.html","title":"class - GetRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/get-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/get-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { Label } from '../../labels/label.entity';\n\nexport class GetRoleDto extends PartialType(CreateRoleDto) {\n  @ApiProperty({ required: false, default: null })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInstance(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsInstance,\n  IsNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from '../../roles/role.entity';\n\nexport class GetUserDto {\n  @ApiProperty()\n  @IsNumber()\n  Id: number;\n\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty()\n  @IsInstance(Role)\n  Role?: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClient.html":{"url":"classes/HttpClient.html","title":"class - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/http.client.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardedAddress\n                            \n                            \n                                    Protected\n                                forwardedProtocol\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Protected\n                                password\n                            \n                            \n                                request\n                            \n                            \n                                requestBuffer\n                            \n                            \n                                requestStream\n                            \n                            \n                                streamAnswerToRes\n                            \n                            \n                                    Protected\n                                url\n                            \n                            \n                                    Protected\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getResponseAsBuffer\n                            \n                            \n                                    Async\n                                getResponseAsStream\n                            \n                            \n                                setForwardedAdress\n                            \n                            \n                                setForwardedProtocol\n                            \n                            \n                                setPassword\n                            \n                            \n                                setUrl\n                            \n                            \n                                setUsername\n                            \n                            \n                                    Async\n                                streamToWriteAnswerWithCallBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedProtocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamAnswerToRes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsBuffer(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsStream(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedAdress\n                        \n                    \n                \n            \n            \n                \nsetForwardedAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedProtocol\n                        \n                    \n                \n            \n            \n                \nsetForwardedProtocol(protocol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                protocol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUsername\n                        \n                    \n                \n            \n            \n                \nsetUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        streamToWriteAnswerWithCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToWriteAnswerWithCallBack(url: string, method: string, body: object, streamWriter: any, finishCallBack: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamWriter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finishCallBack\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { Response } from 'express';\n\nexport class HttpClient {\n  protected url: string;\n  protected username: string;\n  protected password: string;\n  protected forwardedAddress: string;\n  protected forwardedProtocol: string;\n\n  getOptions = (\n    url: string,\n    method: string,\n    headers: object,\n    data: object | string | Buffer | any,\n    responseType: string | undefined = undefined,\n  ): object => {\n    return {\n      method: method,\n      baseURL: this.url,\n      url: url,\n      auth: {\n        username: this.username,\n        password: this.password,\n      },\n      headers: {\n        Forwarded:\n          'by=localhost;for=localhost;host=' +\n          this.forwardedAddress +\n          '/api;proto=' +\n          this.forwardedProtocol,\n        ...headers,\n      },\n      data: data ?? undefined,\n      responseType: responseType,\n    };\n  };\n\n  setForwardedAdress(address: string): void {\n    this.forwardedAddress = address;\n  }\n\n  setForwardedProtocol(protocol: string): void {\n    this.forwardedProtocol = protocol;\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  request = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body);\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  requestBuffer = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'arraybuffer');\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  requestStream = (\n    url: string,\n    method: string,\n    body: object | string | null,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  streamAnswerToRes = (\n    url: string,\n    method: string,\n    body: object,\n    res: Response,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios\n      .request(option)\n      .then((response) => {\n        res.setHeader('content-type', response.headers['content-type']);\n        response.data.pipe(res);\n      })\n      .catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            res.status(500).send('Bad credentials');\n          } else {\n            res\n              .status(error.response.status)\n              .send(error.response.statusMessage);\n          }\n        }\n      });\n  };\n\n  async streamToWriteAnswerWithCallBack(\n    url: string,\n    method: string,\n    body: object,\n    streamWriter: any,\n    finishCallBack: any,\n  ) {\n    const config = this.getOptions(url, method, {}, body, 'stream');\n    return axios\n      .request(config)\n      .then((response) => {\n        response.data.pipe(streamWriter).on('finish', () => {\n          finishCallBack();\n        });\n      })\n      .catch(function (error) {\n        throw error;\n      });\n  }\n\n  async getResponseAsStream(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestStream(url, method, body);\n    return response.data;\n  }\n\n  async getResponseAsBuffer(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestBuffer(url, method, body);\n    return Buffer.from(response.data, 'binary');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ImportGuard.html":{"url":"guards/ImportGuard.html","title":"guard - ImportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ImportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNumberOrString.html":{"url":"classes/IsNumberOrString.html","title":"class - IsNumberOrString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNumberOrString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/string-or-number.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(text: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'string-or-number', async: false })\nexport class IsNumberOrString implements ValidatorConstraintInterface {\n  validate(text: any, args: ValidationArguments) {\n    return typeof text === 'number' || typeof text === 'string';\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return '($value) must be number or string';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/jwt.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/jwt.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../constants/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOAuthGuard.html":{"url":"injectables/JwtOAuthGuard.html","title":"injectable - JwtOAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt-oauth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('bearer')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtOAuthGuard extends AuthGuard('bearer') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOauthStrategy.html":{"url":"injectables/JwtOauthStrategy.html","title":"injectable - JwtOauthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOauthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserInfoUrl\n                            \n                            \n                                    Async\n                                getWellKnown\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateIssuer\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, httpService: HttpService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-oauth.strategy.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserInfoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfoUrl(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWellKnown\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWellKnown(iss: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iss\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIssuer\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIssuer(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      email: payload.email,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Label.html":{"url":"entities/Label.html","title":"entity - Label","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/label.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Label {\n  @ApiProperty({ example: 'name' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelDto.html":{"url":"classes/LabelDto.html","title":"class - LabelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/labels.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class LabelDto {\n  @ApiProperty({ example: 'name' })\n  @IsString()\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LabelsController.html":{"url":"controllers/LabelsController.html","title":"controller - LabelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LabelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /labels\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'remove label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:labelName')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  ConflictException,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LabelsService } from './labels.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { LabelDto } from './labels.dto';\n\n@ApiTags('labels')\n@Controller('/labels')\nexport class LabelsController {\n  constructor(private readonly LabelsService: LabelsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(): Promise {\n    const allLabels = await this.LabelsService.findAll();\n    return allLabels.map((label) => label.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'remove label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:labelName')\n  async remove(@Param('labelName') labelName: string): Promise {\n    await this.LabelsService.findOneByOrFail(labelName);\n    return this.LabelsService.remove(labelName);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async create(@Body() labelDto: LabelDto): Promise {\n    if (await this.LabelsService.isLabelExist(labelDto.Name))\n      throw new ConflictException('Label with this name already exists');\n    return this.LabelsService.create(labelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabelsModule.html":{"url":"modules/LabelsModule.html","title":"module - LabelsModule","body":"\n                   \n\n\n\n\n    Modules\n    LabelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nLabelsModule\n\nLabelsModule\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/labels/labels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LabelsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LabelsService } from './labels.service';\nimport { LabelsController } from './labels.controller';\nimport { Label } from './label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Label])],\n  providers: [LabelsService],\n  controllers: [LabelsController],\n})\nexport class LabelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                isLabelExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/labels/labels.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(label: Label)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            Label\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isLabelExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLabelExist(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Label } from './label.entity';\n\n@Injectable()\nexport class LabelsService {\n  constructor(\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.labelsRepository.find();\n  }\n\n  async findOneByOrFail(labelName: string): Promise {\n    return await this.labelsRepository.findOneByOrFail({ Name: labelName });\n  }\n\n  async isLabelExist(labelName: string): Promise {\n    const answser = await this.labelsRepository.findOneBy({ Name: labelName });\n    return answser !== null;\n  }\n\n  async remove(labelName: string): Promise {\n    await this.labelsRepository.delete(labelName);\n  }\n\n  async create(label: Label): Promise {\n    await this.labelsRepository.save(label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/local.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'Email',\n      passwordField: 'Password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'email@gaelo.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'email@gaelo.com' })\n  @IsNotEmpty()\n  Email: string;\n\n  @ApiProperty({ example: 'myPassw0rd' })\n  @IsNotEmpty()\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LostPassworDto.html":{"url":"classes/LostPassworDto.html","title":"class - LostPassworDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LostPassworDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/lost-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/lost-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LostPassworDto {\n  @ApiProperty({ example: 'user1@mail.com' })\n  @IsNotEmpty()\n  Email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\n\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: config.get('MAIL_ENCRYPTION', false) === 'tls',\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: join(__dirname, './templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  exports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendChangePasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendChangePasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChangePasswordEmail(email: string, token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    private configService: ConfigService,\n  ) {}\n\n  async sendChangePasswordEmail(\n    email: string,\n    token: string,\n    userId: number,\n  ): Promise {\n    const changePasswordUrl = `${this.configService.get('APP_URL')}:${this.configService.get('PORT_CLIENT')}/change-password?token=${token}&userId=${userId}`;\n    await this.mailerService.sendMail({\n      from: '\"GaelO-Flow\" ',\n      to: email,\n      subject: 'Change your password',\n      html: `Follow this link to set your password : ${changePasswordUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaskProcessingService.html":{"url":"injectables/MaskProcessingService.html","title":"injectable - MaskProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaskProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/mask-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskId\n                            \n                            \n                                    Private\n                                petId\n                            \n                            \n                                    Private\n                                petSeriesOrthancId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fragmentMask\n                            \n                            \n                                    Async\n                                getMaskAs\n                            \n                            \n                                getMaskId\n                            \n                            \n                                    Async\n                                getStatOfMask\n                            \n                            \n                                setMaskId\n                            \n                            \n                                setPetId\n                            \n                            \n                                    Async\n                                thresholdMaskTo41\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processingService: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/mask-processing.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processingService\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fragmentMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    fragmentMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaskAs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaskAs(type: ProcessingMask, orientation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ProcessingMask\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orientation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaskId\n                        \n                    \n                \n            \n            \n                \ngetMaskId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatOfMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatOfMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaskId\n                        \n                    \n                \n            \n            \n                \nsetMaskId(maskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPetId\n                        \n                    \n                \n            \n            \n                \nsetPetId(petId: string, petSeriesOrthancId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                petId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                petSeriesOrthancId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        thresholdMaskTo41\n                        \n                    \n                \n            \n            \n                \n                        \n                    thresholdMaskTo41()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petSeriesOrthancId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProcessingMask } from '../constants/enums';\nimport ProcessingClient from '../utils/processing.client';\n\n@Injectable()\nexport class MaskProcessingService {\n  private maskId: string;\n  private petId: string;\n  private petSeriesOrthancId: string;\n\n  constructor(private readonly processingService: ProcessingClient) {}\n\n  setMaskId(maskId: string): void {\n    this.maskId = maskId;\n  }\n\n  getMaskId(): string {\n    return this.maskId;\n  }\n\n  setPetId(petId: string, petSeriesOrthancId: string): void {\n    this.petId = petId;\n    this.petSeriesOrthancId = petSeriesOrthancId;\n  }\n\n  async getMaskAs(\n    type: ProcessingMask,\n    orientation: string = null,\n  ): Promise {\n    switch (type) {\n      case ProcessingMask.NIFTI:\n        return await this.processingService.getMaskDicomOrientation(\n          this.maskId,\n          orientation,\n          true,\n        );\n      case ProcessingMask.RTSS:\n        const rtssId = await this.processingService.createRtssFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const rtssStream = await this.processingService.getRtss(rtssId);\n        await this.processingService.deleteRessource('rtss', rtssId);\n        return rtssStream;\n      case ProcessingMask.SEG:\n        const segId = await this.processingService.createSegFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const seg = await this.processingService.getSeg(segId);\n        await this.processingService.deleteRessource('seg', segId);\n        return seg;\n      default:\n        throw new Error('Invalid mask type');\n    }\n  }\n\n  async getStatOfMask(): Promise {\n    return await this.processingService.getStatsMaskSeries(\n      this.maskId,\n      this.petId,\n    );\n  }\n\n  async fragmentMask(): Promise {\n    const fragmentedMaskId = await this.processingService.fragmentMask(\n      this.petId,\n      this.maskId,\n      true,\n    );\n    const fragmentedMask = new MaskProcessingService(this.processingService);\n    fragmentedMask.setMaskId(fragmentedMaskId);\n    fragmentedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return fragmentedMask;\n  }\n\n  async thresholdMaskTo41(): Promise {\n    const thresholdedMaskId = await this.processingService.thresholdMask(\n      this.maskId,\n      this.petId,\n      '41%',\n    );\n    const thresholdedMask = new MaskProcessingService(this.processingService);\n    thresholdedMask.setMaskId(thresholdedMaskId);\n    thresholdedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return thresholdedMask;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ModifyGuard.html":{"url":"guards/ModifyGuard.html","title":"guard - ModifyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ModifyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundInterceptor.html":{"url":"injectables/NotFoundInterceptor.html","title":"injectable - NotFoundInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/not-found.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/not-found.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NotFoundException,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, catchError } from 'rxjs';\nimport { EntityNotFoundError } from 'typeorm';\n\n@Injectable()\nexport class NotFoundInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof EntityNotFoundError) {\n          throw new NotFoundException(error.message);\n        } else {\n          throw error;\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OauthConfig.html":{"url":"entities/OauthConfig.html","title":"entity - OauthConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OauthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'back-end'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@PrimaryColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class OauthConfig {\n  @ApiProperty({ example: 'keycloak' })\n  @PrimaryColumn({ name: 'id' })\n  Name: string;\n\n  @ApiProperty({ example: 'keycloak' })\n  @Column()\n  Provider: string;\n\n  @ApiProperty({\n    example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n  })\n  @Column()\n  AuthorizationUrl: string;\n\n  @ApiProperty({ example: 'back-end' })\n  @Column()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OauthConfigController.html":{"url":"controllers/OauthConfigController.html","title":"controller - OauthConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OauthConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth-config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOauthConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Oauth config added'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Oauth config already exists'})@ApiBearerAuth('access-token')@ApiBody({type: OauthConfigDto})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config deleted'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 404, description: 'Oauth config not found'})@ApiBearerAuth('access-token')@ApiParam({name: 'name', required: true})@UseGuards(AdminGuard)@Delete(':name')\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config returned', type: OauthConfigDto, isArray: true})@Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Public } from '../interceptors/public';\nimport { OauthConfigService } from './oauth-configs.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@ApiTags('oauth-config')\n@Controller('oauth-config')\nexport class OauthConfigController {\n  constructor(private readonly oauthConfigService: OauthConfigService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Oauth config returned',\n    type: OauthConfigDto,\n    isArray: true,\n  })\n  @Public()\n  @Get()\n  async getOauthConfig(): Promise {\n    return await this.oauthConfigService.getOauthConfig();\n  }\n\n  @ApiResponse({ status: 200, description: 'Oauth config deleted' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 404, description: 'Oauth config not found' })\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'name', required: true })\n  @UseGuards(AdminGuard)\n  @Delete(':name')\n  async deleteOauthConfig(@Param('name') name: string) {\n    const config = await this.oauthConfigService.findOneByName(name);\n    if (!config) throw new NotFoundException('Oauth config not found');\n\n    return this.oauthConfigService.deleteOauthConfig(name);\n  }\n\n  @ApiResponse({ status: 201, description: 'Oauth config added' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Oauth config already exists' })\n  @ApiBearerAuth('access-token')\n  @ApiBody({ type: OauthConfigDto })\n  @UseGuards(AdminGuard)\n  @Post()\n  async addOauthConfig(@Body() oauthConfigDto: OauthConfigDto) {\n    const exists = await this.oauthConfigService.findOneByName(\n      oauthConfigDto.Name,\n    );\n    if (exists) throw new ConflictException('Oauth config already exists');\n\n    return this.oauthConfigService.addOauthConfig(oauthConfigDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthConfigDto.html":{"url":"classes/OauthConfigDto.html","title":"class - OauthConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class OauthConfigDto {\n  @ApiProperty()\n  @IsString()\n  Name: string;\n\n  @ApiProperty()\n  @IsString()\n  Provider: string;\n\n  @ApiProperty()\n  @IsString()\n  AuthorizationUrl: string;\n\n  @ApiProperty()\n  @IsString()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OauthConfigModule.html":{"url":"modules/OauthConfigModule.html","title":"module - OauthConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    OauthConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OauthConfigModule\n\n\n\ncluster_OauthConfigModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OauthConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OauthConfigService } from './oauth-configs.service';\nimport { OauthConfigController } from './oauth-configs.controller';\nimport { OauthConfig } from './oauth-config.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([OauthConfig])],\n  providers: [OauthConfigService],\n  controllers: [OauthConfigController],\n})\nexport class OauthConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OauthConfigService.html":{"url":"injectables/OauthConfigService.html","title":"injectable - OauthConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OauthConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByAuthorizationUrl\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByName\n                            \n                            \n                                    Public\n                                    Async\n                                getOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthConfigsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth-configs/oauth-configs.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthConfigsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByAuthorizationUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuthorizationUrl(AuthorizationUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AuthorizationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { OauthConfig } from './oauth-config.entity';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@Injectable()\nexport class OauthConfigService {\n  constructor(\n    @InjectRepository(OauthConfig)\n    private oauthConfigsRepository: Repository,\n  ) {}\n\n  public async findOneByName(Name: string): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { Name },\n    });\n    return config;\n  }\n\n  public async findOneByAuthorizationUrl(\n    AuthorizationUrl: string,\n  ): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { AuthorizationUrl },\n    });\n    return config;\n  }\n\n  public async getOauthConfig(): Promise {\n    return await this.oauthConfigsRepository.find();\n  }\n\n  public async deleteOauthConfig(Name: string) {\n    await this.oauthConfigsRepository.delete({ Name });\n  }\n\n  public async addOauthConfig(oauthConfigDto: OauthConfigDto) {\n    const config = this.oauthConfigsRepository.create(oauthConfigDto);\n\n    await this.oauthConfigsRepository.insert(config);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.oauthConfigsRepository.create({\n      Name: 'keycloak',\n      Provider: 'keycloak',\n      AuthorizationUrl:\n        'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n      ClientId: 'back-end',\n    });\n    await this.oauthConfigsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Option.html":{"url":"entities/Option.html","title":"entity - Option","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/option.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@Column({name: 'auto_query_hour_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@Column({name: 'auto_query_hour_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'autorouter_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@Column({default: 'uk', name: 'burner_date_format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'burner_delete_study_after_sent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_label_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@Column({default: 'Epson', name: 'burner_manifacturer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_monitored_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@Column({default: 'Study', name: 'burner_monitoring_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false})@Column({default: false, name: 'burner_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@Column({default: 'Auto', name: 'burner_support_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transcoding'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transfer_syntax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_viewer_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn({name: 'id'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false})@Column({default: 10, name: 'orthanc_monitoring_rate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Option {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn({ name: 'id' })\n  @Exclude()\n  Id: number;\n\n  @ApiProperty({ example: 22 })\n  @Column({ name: 'auto_query_hour_start' })\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_start' })\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @Column({ name: 'auto_query_hour_stop' })\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_stop' })\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false })\n  @Column({ default: 10, name: 'orthanc_monitoring_rate' })\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: false, required: false })\n  @Column({ default: false, name: 'burner_started' })\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_label_path' })\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @Column({ default: 'Study', name: 'burner_monitoring_level' })\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @Column({ default: 'Epson', name: 'burner_manifacturer' })\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_monitored_path' })\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'burner_delete_study_after_sent' })\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @Column({ default: 'Auto', name: 'burner_support_type' })\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_viewer_path' })\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transfer_syntax' })\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @Column({ default: 'uk', name: 'burner_date_format' })\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transcoding' })\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'autorouter_started' })\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OptionsController.html":{"url":"controllers/OptionsController.html","title":"controller - OptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /options\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all options', type: GetOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(options: UpdateOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update options', type: UpdateOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nimport { OptionsService } from './options.service';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { GetOptionDto } from './dto/get-option.dto';\n\n@ApiTags('options')\n@Controller('/options')\nexport class OptionsController {\n  constructor(\n    private readonly optionService: OptionsService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all options',\n    type: GetOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getOptions(): Promise {\n    const { Id, ...options } = await this.optionService.getOptions();\n    const getOptionDto: GetOptionDto = {\n      ...options,\n      OrthancAddress: this.configService.get('ORTHANC_ADDRESS'),\n      OrthancPort: this.configService.get('ORTHANC_PORT'),\n      OrthancUsername: this.configService.get('ORTHANC_USERNAME'),\n      OrthancPassword: this.configService.get('ORTHANC_PASSWORD'),\n      RedisAddress: this.configService.get('REDIS_ADDRESS'),\n      RedisPort: this.configService.get('REDIS_PORT'),\n    };\n\n    return getOptionDto;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Update options',\n    type: UpdateOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Patch()\n  async update(@Body() options: UpdateOptionDto): Promise {\n    return await this.optionService.update(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsModule.html":{"url":"modules/OptionsModule.html","title":"module - OptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\n\nOptionsService\n\nOptionsService\n\n\n\nOptionsModule\n\nOptionsModule\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OptionsService } from './options.service';\nimport { OptionsController } from './options.controller';\nimport { Option } from './option.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [OptionsService, ConfigService],\n  controllers: [OptionsController],\n})\nexport class OptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOptions\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/options/options.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(option: UpdateOptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Option } from './option.entity';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\n@Injectable()\nexport class OptionsService {\n  constructor(\n    @InjectRepository(Option)\n    private optionsRepository: Repository,\n  ) {}\n\n  async getOptions(): Promise {\n    return await this.optionsRepository.findOneByOrFail({ Id: 1 });\n  }\n\n  async update(option: UpdateOptionDto): Promise {\n    await this.optionsRepository.update(1, option);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.optionsRepository.create({\n      AutoQueryHourStart: 22,\n      AutoQueryMinuteStart: 0,\n      AutoQueryHourStop: 6,\n      AutoQueryMinuteStop: 0,\n    });\n    await this.optionsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/OrGuard.html":{"url":"guards/OrGuard.html","title":"guard - OrGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    OrGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/or.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(guards: CanActivate[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/or.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guards\n                                                  \n                                                        \n                                                                    CanActivate[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/or.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class OrGuard implements CanActivate {\n  constructor(private readonly guards: CanActivate[]) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    for (const guard of this.guards) {\n      if (await guard.canActivate(context)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancAdminController.html":{"url":"controllers/OrthancAdminController.html","title":"controller - OrthancAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-admin.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createEcho\n                            \n                            \n                                    \n                                    \n                                    \n                                createJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteModality\n                            \n                            \n                                    \n                                    \n                                    \n                                deletePeer\n                            \n                            \n                                    \n                                    \n                                    \n                                editModality\n                            \n                            \n                                    \n                                    \n                                    \n                                editPeer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                getLogLevel\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeerSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                getPlugins\n                            \n                            \n                                    \n                                    \n                                    \n                                getSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                resetOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                shutdownOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createEcho\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEcho(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/echo')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/jobs/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/peers/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    editModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editPeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    editPeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/peers/*/')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: false, description: 'Gets the job id', allowEmptyValue: true})@Get('/jobs/:id?')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeerSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeerSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers/*/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPlugins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlugins(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/plugins')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        resetOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/reset')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        shutdownOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    shutdownOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/shutdown')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiParam } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancAdminController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/system')\n  @UseGuards(AdminGuard)\n  getSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/reset')\n  @UseGuards(AdminGuard)\n  resetOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/shutdown')\n  @UseGuards(AdminGuard)\n  shutdownOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/tools/log-level')\n  @UseGuards(AdminGuard)\n  getLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/tools/log-level')\n  @UseGuards(AdminGuard)\n  updateLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/plugins')\n  @UseGuards(AdminGuard)\n  getPlugins(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/jobs/*')\n  @UseGuards(AdminGuard)\n  createJobs(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({\n    name: 'id',\n    required: false,\n    description: 'Gets the job id',\n    allowEmptyValue: true,\n  })\n  @Get('/jobs/:id?')\n  @UseGuards(AdminGuard)\n  getJobs(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/modalities/*')\n  @UseGuards(AdminGuard)\n  deleteModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/echo')\n  @UseGuards(AdminGuard)\n  createEcho(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/modalities/*')\n  @UseGuards(AdminGuard)\n  editModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/peers/*')\n  @UseGuards(AdminGuard)\n  deletePeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers/*/system')\n  @UseGuards(AdminGuard)\n  getPeerSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/peers/*/')\n  @UseGuards(AdminGuard)\n  editPeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancController.html":{"url":"controllers/OrthancController.html","title":"controller - OrthancController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                deleteLabels\n                            \n                            \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                getDicomWeb\n                            \n                            \n                                    \n                                    \n                                getInstances\n                            \n                            \n                                    \n                                    \n                                getModalities\n                            \n                            \n                                    \n                                    \n                                getPatients\n                            \n                            \n                                    \n                                    \n                                getSeries\n                            \n                            \n                                    \n                                    \n                                getStudies\n                            \n                            \n                                    \n                                    \n                                getWado\n                            \n                            \n                                    \n                                    \n                                updateLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deleteLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*/labels/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/find')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getDicomWeb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDicomWeb(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/dicom-web/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/instances/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getModalities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModalities(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/modalities*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/patients/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/series/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/studies/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getWado\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWado(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/wado/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/studies/*/labels/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/find')\n  // @UseGuards() ??? // TODO: ask salim about this\n  find(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  //SK Voir role pour la modification des labels\n  @ApiBearerAuth('access-token')\n  @Put('/studies/*/labels/*')\n  // @UseGuards() ???\n  updateLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*/labels/*')\n  // @UseGuards() ???\n  deleteLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  // //Get dicoms studyes according to labels\n  // @Get('/labels/:name/studies')\n  // // @UseGuards() ???\n  // getStudiesWithLabel(\n  //   @Request() request: RequestType,\n  //   @Response() response: ResponseType,\n  // ) {}\n\n  //Reverse Proxy Routes for orthanc content => Warning non RBAC Protected\n  //SK A VERIFIER QUE LES RACINES SONT BIEN VEROUILLEES\n  @ApiBearerAuth('access-token')\n  @Get('/patients/*')\n  // @UseGuards() ???\n  getPatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/studies/*')\n  // @UseGuards() ???\n  getStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/series/*')\n  // @UseGuards() ???\n  getSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/instances/*')\n  // @UseGuards() ???\n  getInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/dicom-web/*')\n  // @UseGuards() ???\n  getDicomWeb(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/wado/*')\n  // @UseGuards() ???\n  getWado(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/modalities*')\n  // @UseGuards() ???\n  getModalities(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancDeleteController.html":{"url":"controllers/OrthancDeleteController.html","title":"controller - OrthancDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-delete.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deletePatients\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteStudies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/patients/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/series/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  Request,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { DeleteGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancDeleteController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Delete('/patients/*')\n  @UseGuards(DeleteGuard)\n  deletePatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*')\n  @UseGuards(DeleteGuard)\n  deleteStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/series/*')\n  @UseGuards(DeleteGuard)\n  deleteSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthancEventPayloadDto.html":{"url":"classes/OrthancEventPayloadDto.html","title":"class - OrthancEventPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthancEventPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/orthanc-event-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ChangeType\n                            \n                            \n                                    \n                                    \n                                Date\n                            \n                            \n                                    \n                                    \n                                ID\n                            \n                            \n                                    \n                                    \n                                Path\n                            \n                            \n                                    \n                                    \n                                ResourceType\n                            \n                            \n                                    \n                                    \n                                Seq\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ChangeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NewInstance', required: true})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'YYYYMMDDTHHMMSS', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Seq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { AutoroutingEventType } from '../autorouting.enum';\n\nexport class OrthancEventPayloadDto {\n  @ApiProperty({ example: 'NewInstance', required: true })\n  @IsEnum(AutoroutingEventType)\n  ChangeType: AutoroutingEventType;\n\n  @ApiProperty({ example: 'YYYYMMDDTHHMMSS', required: true })\n  @IsString()\n  Date: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ID: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  Path: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ResourceType: string;\n\n  @ApiProperty({ example: 0, required: true })\n  @IsNumber()\n  Seq: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancExportController.html":{"url":"controllers/OrthancExportController.html","title":"controller - OrthancExportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancExportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-export.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                createMedia\n                            \n                            \n                                    \n                                    \n                                    \n                                createMediaExtended\n                            \n                            \n                                    \n                                    \n                                    \n                                createModalitiesExport\n                            \n                            \n                                    \n                                    \n                                    \n                                createPeersStore\n                            \n                            \n                                    \n                                    \n                                    \n                                createTasksUserExport\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-archive')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMediaExtended\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMediaExtended(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media-extended')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPeersStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPeersStore(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/peers/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createTasksUserExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTasksUserExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tasks/:user/export')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers*')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ExportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancExportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/store')\n  @UseGuards(ExportGuard)\n  createModalitiesExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-archive')\n  @UseGuards(ExportGuard)\n  createArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media')\n  @UseGuards(ExportGuard)\n  createMedia(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media-extended')\n  @UseGuards(ExportGuard)\n  createMediaExtended(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers*')\n  @UseGuards(ExportGuard)\n  getPeers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/peers/*/store')\n  @UseGuards(ExportGuard)\n  createPeersStore(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tasks/:user/export')\n  @UseGuards(ExportGuard)\n  createTasksUserExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancImportController.html":{"url":"controllers/OrthancImportController.html","title":"controller - OrthancImportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancImportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-import.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createDicom\n                            \n                            \n                                    \n                                    \n                                    \n                                createInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createDicom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDicom(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-dicom')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/instances')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ImportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancImportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/instances')\n  @UseGuards(ImportGuard)\n  createInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-dicom')\n  @UseGuards(ImportGuard)\n  createDicom(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancModifyController.html":{"url":"controllers/OrthancModifyController.html","title":"controller - OrthancModifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancModifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-modify.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createSeriesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createStudiesModify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createSeriesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeriesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createStudiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStudiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ModifyGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancModifyController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/modify')\n  @UseGuards(ModifyGuard)\n  createModalitiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/*/modify')\n  @UseGuards(ModifyGuard)\n  createStudiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/*/modify')\n  @UseGuards(ModifyGuard)\n  createSeriesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrthancModule.html":{"url":"modules/OrthancModule.html","title":"module - OrthancModule","body":"\n                   \n\n\n\n\n    Modules\n    OrthancModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\n\nOrthancClient\n\nOrthancClient\n\n\n\nOrthancModule\n\nOrthancModule\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orthanc/orthanc.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrthancController\n                        \n                        \n                            OrthancAdminController\n                        \n                        \n                            OrthancDeleteController\n                        \n                        \n                            OrthancExportController\n                        \n                        \n                            OrthancImportController\n                        \n                        \n                            OrthancModifyController\n                        \n                        \n                            OrthancQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrthancAdminController } from './orthanc-admin.controller';\nimport { OrthancController } from './orthanc.controller';\nimport { OrthancDeleteController } from './orthanc-delete.controller';\nimport { OrthancExportController } from './orthanc-export.controller';\nimport { OrthancImportController } from './orthanc-import.controller';\nimport { OrthancModifyController } from './orthanc-modify.controller';\nimport { OrthancQueryController } from './orthanc-query.controller';\nimport OrthancClient from '../utils/orthanc-client';\n\n@Module({\n  imports: [],\n  providers: [OrthancClient],\n  controllers: [\n    OrthancController,\n    OrthancAdminController,\n    OrthancDeleteController,\n    OrthancExportController,\n    OrthancImportController,\n    OrthancModifyController,\n    OrthancQueryController,\n  ],\n})\nexport class OrthancModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrthancMonitoringTask.html":{"url":"injectables/OrthancMonitoringTask.html","title":"injectable - OrthancMonitoringTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrthancMonitoringTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/orthanc-monitoring.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                orthancMonitoringCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        orthancMonitoringCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    orthancMonitoringCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/orthanc-monitoring.task.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport OrthancClient from '../utils/orthanc-client';\n\n@Injectable()\nexport class OrthancMonitoringTask {\n  private lastChanges: number = null;\n\n  constructor(\n    private orthancClient: OrthancClient,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  async orthancMonitoringCron() {\n    if (this.lastChanges === null) {\n      this.lastChanges = (await this.orthancClient.getLastChanges()).data.Last;\n    }\n\n    const changes = (\n      await this.orthancClient.getChangesSince(this.lastChanges.toString())\n    ).data;\n\n    this.lastChanges = changes.Last;\n    changes.Changes.forEach((element: any) => {\n      this.eventEmitter.emit('orthanc.' + element.ChangeType, element);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancQueryController.html":{"url":"controllers/OrthancQueryController.html","title":"controller - OrthancQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-query.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                getQueryAnswers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryParsedAnswer\n                            \n                            \n                                    \n                                    \n                                retrieve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesQuery(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQueryAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryAnswers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/queries/*/answers*')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryParsedAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryParsedAnswer(id: string, queryParsedAnswer: QueryParsedAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/:id/parsed-query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParsedAnswer\n                                            \n                                                            QueryParsedAnswerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/queries/:id/answers/:index/retrieve')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Param,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\nimport {\n  QueryParsedAnswerDto,\n  QuerySeriesDto,\n  QueryStudyDto,\n} from './dto/query-parsed-answer.dto';\nimport { QueryAnswerType } from '../constants/enums';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancQueryController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/query')\n  @UseGuards(QueryGuard)\n  createModalitiesQuery(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/queries/*/answers*')\n  @UseGuards(QueryGuard)\n  getQueryAnswers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @Post('/queries/:id/answers/:index/retrieve')\n  @UseGuards(QueryGuard)\n  retrieve(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/:id/parsed-query')\n  @UseGuards(QueryGuard)\n  async getQueryParsedAnswer(\n    @Param('id') id: string,\n    @Body() queryParsedAnswer: QueryParsedAnswerDto,\n  ) {\n    if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_SERIES) {\n      const seriesDto = queryParsedAnswer.Query as QuerySeriesDto;\n      const seriesDetails = await this.orthancClient.querySeriesInAet(\n        seriesDto.StudyUID,\n        seriesDto.Modality,\n        seriesDto.ProtocolName,\n        seriesDto.SeriesDescription,\n        seriesDto.SeriesNumber,\n        seriesDto.SeriesInstanceUID,\n        id,\n      );\n      return seriesDetails;\n    } else if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_STUDY) {\n      const studyDto = queryParsedAnswer.Query as QueryStudyDto;\n      const studyDetails = await this.orthancClient.queryStudiesInAet(\n        studyDto.PatientName,\n        studyDto.PatientID,\n        studyDto.StudyDate,\n        studyDto.Modality,\n        studyDto.StudyDescription,\n        studyDto.AccessionNb,\n        studyDto.StudyInstanceUID,\n        id,\n      );\n      return studyDetails;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessingController.html":{"url":"controllers/ProcessingController.html","title":"controller - ProcessingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /processing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(request: Request, processingJobDto: ProcessingJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Add job and returns the JobId', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(ReadAllGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(new OrGuard())@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@UseGuards(AdminGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Job } from 'bullmq';\n\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { ProcessingQueueService } from './processing-queue.service';\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdGuard } from '../guards/check-user-id.guard';\n\n@ApiTags('processing')\n@Controller('/processing')\nexport class ProcessingController {\n  constructor(\n    private readonly processingQueueService: ProcessingQueueService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.processingQueueService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(\n    new OrGuard([new AdminGuard(), new CheckUserIdGuard(['query', 'userId'])]),\n  )\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.processingQueueService.getAllUuids();\n    } else {\n      return await this.processingQueueService.getUuidsOfUser(userId);\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidsOfUser = await this.processingQueueService.getUuidsOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidsOfUser.includes(uuid)) {\n      const jobs = await this.processingQueueService.getJobs(undefined, uuid);\n      const results = [];\n      jobs.forEach((job: Job) => {\n        results.push({\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n        });\n      });\n      return results;\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'Add job and returns the JobId',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(ReadAllGuard)\n  @Post()\n  async addJob(\n    @Req() request: Request,\n    @Body() processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const user = request['user'];\n\n    return {\n      JobId: await this.processingQueueService.addJob(\n        user.userId,\n        processingJobDto,\n      ),\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @UseGuards(AdminGuard)\n  @Delete(':uuid')\n  async removeJob(@Param('uuid') uuid: string): Promise {\n    this.processingQueueService.removeJob(uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingFile.html":{"url":"classes/ProcessingFile.html","title":"class - ProcessingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing.file.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessingFile {\n  private id: string;\n  private type: string;\n\n  constructor(id: string, type: string) {\n    this.id = id;\n    this.type = type;\n  }\n\n  public getType(): string {\n    return this.type;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingJobDto.html":{"url":"classes/ProcessingJobDto.html","title":"class - ProcessingJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                JobType\n                            \n                            \n                                    \n                                    \n                                TmtvJob\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JobType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingJobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: ProcessingJobType})@IsEnum(ProcessingJobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        TmtvJob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TmtvJobDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessingModule.html":{"url":"modules/ProcessingModule.html","title":"module - ProcessingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessingModule\n\n\n\ncluster_ProcessingModule_providers\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\n\n\nProcessingModule\n\nProcessingModule\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/processing/processing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProcessingController } from './processing.controller';\nimport { ProcessingQueueService } from './processing-queue.service';\n\n@Module({\n  imports: [],\n  providers: [ProcessingQueueService],\n  controllers: [ProcessingController],\n})\nexport class ProcessingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessingQueueService.html":{"url":"injectables/ProcessingQueueService.html","title":"injectable - ProcessingQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessingQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processingQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getUuidsOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing-queue.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(userId: number, processingJobDto: ProcessingJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(userId: number, jobId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidsOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidsOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processingQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-queue.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Job, Queue } from 'bullmq';\n\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { generateRandomUUID } from '../utils/passwords';\n\n@Injectable()\nexport class ProcessingQueueService {\n  private processingQueue: Queue;\n\n  constructor(private readonly configService: ConfigService) {\n    this.processingQueue = new Queue('processing', {\n      connection: {\n        host: this.configService.get('REDIS_ADDRESS', 'localhost'),\n        port: this.configService.get('REDIS_PORT', 6379),\n      },\n    });\n    this.processingQueue.resume();\n  }\n\n  async flush(): Promise {\n    await this.processingQueue.obliterate({ force: true });\n  }\n\n  async removeJob(uuid: string): Promise {\n    await this.processingQueue.remove(uuid);\n  }\n\n  async addJob(\n    userId: number,\n    processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const jobId = generateRandomUUID();\n    const data = {\n      ...processingJobDto,\n      userId,\n    };\n\n    this.processingQueue.add(jobId, data, {\n      jobId: jobId,\n    });\n\n    return jobId;\n  }\n\n  async getJobs(\n    userId: number = undefined,\n    jobId: string = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.processingQueue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return (\n        (job.data.userId == userId || userId == undefined) &&\n        (job.id == jobId || jobId == undefined)\n      );\n    });\n\n    return filteredJob;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs.map((job) => job.id);\n\n    return uuids;\n  }\n\n  async getUuidsOfUser(userId: number): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs\n      .filter((job) => job.data.userId == userId)\n      .map((job) => job.id);\n\n    return uuids;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryAnswer.html":{"url":"classes/QueryAnswer.html","title":"class - QueryAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query.answer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: QueryAnswerType, answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        QueryAnswerType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\n\nexport default abstract class QueryAnswer {\n  AnswerId: string;\n  AnswerNumber: number;\n  OriginAET: string;\n  PatientName: string | null;\n  PatientID: string;\n  AccessionNumber: string | null;\n  StudyDescription: string | null;\n  StudyDate: string | null;\n  RequestedProcedureDescription: string | null;\n\n  Level: QueryAnswerType;\n\n  constructor(\n    level: QueryAnswerType,\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    accessionNumber: string | null,\n    studyDescription: string | null,\n    studyDate: string | null,\n    requestedProcedureDescription: string | null,\n  ) {\n    this.AnswerId = answerId;\n    this.AnswerNumber = answerNumber;\n    this.Level = level;\n    this.OriginAET = originAET;\n    this.PatientName = patientName;\n    this.PatientID = patientID;\n    this.AccessionNumber = accessionNumber;\n    this.StudyDescription = studyDescription;\n    this.StudyDate = studyDate;\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  }\n\n  setAnswerId = (answerId: string): void => {\n    this.AnswerId = answerId;\n  };\n\n  setAnswerNumber = (answerNumber: number): void => {\n    this.AnswerNumber = answerNumber;\n  };\n\n  setLevel = (level: QueryAnswerType): void => {\n    this.Level = level;\n  };\n\n  setOriginAET = (originAET: string): void => {\n    this.OriginAET = originAET;\n  };\n\n  setPatientName = (patientName: string): void => {\n    this.PatientName = patientName;\n  };\n\n  setPatientID = (patientID: string): void => {\n    this.PatientID = patientID;\n  };\n\n  setAccessionNumber = (accessionNumber: string | null): void => {\n    this.AccessionNumber = accessionNumber;\n  };\n\n  setStudyDescription = (studyDescription: string | null): void => {\n    this.StudyDescription = studyDescription;\n  };\n\n  setStudyDate = (studyDate: string | null): void => {\n    this.StudyDate = studyDate;\n  };\n\n  setRequestedProcedureDescription = (\n    requestedProcedureDescription: string | null,\n  ): void => {\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryGuard.html":{"url":"guards/QueryGuard.html","title":"guard - QueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParsedAnswerDto.html":{"url":"classes/QueryParsedAnswerDto.html","title":"class - QueryParsedAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParsedAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Level\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, enum: QueryAnswerType})@IsEnum(QueryAnswerType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QuerySeriesDto | QueryStudyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryQueueTask.html":{"url":"injectables/QueryQueueTask.html","title":"injectable - QueryQueueTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryQueueTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/query-queue.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                queryQueueCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionRepository: Repository, queueQueryService: QueuesQueryService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/query-queue.task.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueQueryService\n                                                  \n                                                        \n                                                                        QueuesQueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        queryQueueCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryQueueCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/query-queue.task.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Repository } from 'typeorm';\n\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport { Option } from '../options/option.entity';\n\nimport { isTimeBetween } from '../utils/is-time-between';\n\n@Injectable()\nexport class QueryQueueTask {\n  constructor(\n    @InjectRepository(Option)\n    private optionRepository: Repository,\n    private queueQueryService: QueuesQueryService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async queryQueueCron() {\n    const options: Option = (await this.optionRepository.find())[0];\n    const currentHour = new Date().getHours();\n    const currentMinute = new Date().getMinutes();\n    const isBetween = isTimeBetween(\n      options.AutoQueryHourStart,\n      options.AutoQueryMinuteStart,\n      options.AutoQueryHourStop,\n      options.AutoQueryMinuteStop,\n      currentHour,\n      currentMinute,\n    );\n    const queueState = await this.queueQueryService.isPaused();\n\n    if (queueState && isBetween) {\n      await this.queueQueryService.resume();\n    } else if (!queueState && !isBetween) {\n      await this.queueQueryService.pause();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesAnswer.html":{"url":"classes/QuerySeriesAnswer.html","title":"class - QuerySeriesAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-series.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Modality\n                            \n                            \n                                NumberOfSeriesRelatedInstances\n                            \n                            \n                                SeriesDescription\n                            \n                            \n                                SeriesInstanceUID\n                            \n                            \n                                SeriesNumber\n                            \n                            \n                                setModality\n                            \n                            \n                                setNumberOfSeriesRelatedInstances\n                            \n                            \n                                setSeriesDescription\n                            \n                            \n                                setSeriesInstanceUID\n                            \n                            \n                                setSeriesNumber\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyUID: string, seriesUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modality: string | null, seriesDescription: string | null, seriesNumber: number | null, numberOfSeriesRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modality\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesNumber\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfSeriesRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModality\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QuerySeriesAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  SeriesInstanceUID: string;\n  Modality: string | null = null;\n  SeriesDescription: string | null = null;\n  SeriesNumber: number | null = null;\n  NumberOfSeriesRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string|null,\n    patientID: string,\n    studyUID: string,\n    seriesUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modality: string | null = null,\n    seriesDescription: string | null = null,\n    seriesNumber: number | null = null,\n    numberOfSeriesRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_SERIES,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.StudyInstanceUID = studyUID;\n    this.SeriesInstanceUID = seriesUID;\n    this.Modality = modality;\n    this.SeriesDescription = seriesDescription;\n    this.SeriesNumber = seriesNumber;\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  }\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setSeriesInstanceUID = (seriesInstanceUID: string): void => {\n    this.SeriesInstanceUID = seriesInstanceUID;\n  };\n\n  setModality = (modality: string | null): void => {\n    this.Modality = modality;\n  };\n\n  setSeriesDescription = (seriesDescription: string | null): void => {\n    this.SeriesDescription = seriesDescription;\n  };\n\n  setSeriesNumber = (seriesNumber: number | null): void => {\n    this.SeriesNumber = seriesNumber;\n  };\n\n  setNumberOfSeriesRelatedInstances = (\n    numberOfSeriesRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesDto.html":{"url":"classes/QuerySeriesDto.html","title":"class - QuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyAnswer.html":{"url":"classes/QueryStudyAnswer.html","title":"class - QueryStudyAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-study.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ModalitiesInStudy\n                            \n                            \n                                NumberOfStudyRelatedInstances\n                            \n                            \n                                NumberOfStudyRelatedSeries\n                            \n                            \n                                setModalitiesInStudy\n                            \n                            \n                                setNumberOfStudyRelatedInstances\n                            \n                            \n                                setNumberOfStudyRelatedSeries\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modalitiesInStudy: string | null, numberOfStudyRelatedSeries: number | null, numberOfStudyRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalitiesInStudy\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedSeries\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QueryStudyAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  ModalitiesInStudy: string | null = null;\n  NumberOfStudyRelatedSeries: number | null = null;\n  NumberOfStudyRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    studyInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modalitiesInStudy: string | null = null,\n    numberOfStudyRelatedSeries: number | null = null,\n    numberOfStudyRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_STUDY,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.ModalitiesInStudy = modalitiesInStudy;\n    this.StudyInstanceUID = studyInstanceUID;\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  }\n\n  setModalitiesInStudy = (modalitiesInStudy: string | null): void => {\n    this.ModalitiesInStudy = modalitiesInStudy;\n  };\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setNumberOfStudyRelatedSeries = (\n    numberOfStudyRelatedSeries: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n  };\n\n  setNumberOfStudyRelatedInstances = (\n    numberOfStudyRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyDto.html":{"url":"classes/QueryStudyDto.html","title":"class - QueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queues/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueuesAnonService\n                        \n                        \n                            QueuesDeleteService\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueuesAnonController\n                        \n                        \n                            QueuesDeleteController\n                        \n                        \n                            QueuesQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QueuesAnonController } from './anon/queue-anons.controller';\nimport { QueuesDeleteController } from './delete/queue-deletes.controller';\nimport { QueuesQueryController } from './query/queue-query.controller';\nimport { QueuesAnonService } from './anon/queue-anons.service';\nimport { QueuesDeleteService } from './delete/queue-deletes.service';\nimport { QueuesQueryService } from './query/queue-query.service';\n\n@Module({\n  imports: [],\n  providers: [QueuesAnonService, QueuesDeleteService, QueuesQueryService],\n  controllers: [\n    QueuesAnonController,\n    QueuesDeleteController,\n    QueuesQueryController,\n  ],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesAnonController.html":{"url":"controllers/QueuesAnonController.html","title":"controller - QueuesAnonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesAnonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/anon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addAnonJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeAnonJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAnonJob(queuesAnonsDto: QueuesAnonsDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(AnonymizeGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesAnonsDto\n                                            \n                                                            QueuesAnonsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(new OrGuard())@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(new OrGuard())@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAnonJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AnonymizeGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesAnonService } from './queue-anons.service';\nimport { QueuesAnonsDto } from './queue-anons.dto';\n\nimport { AdminGuard, AnonymizeGuard } from '../../guards/roles.guard';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/anon')\n@Controller('/queues/anon')\nexport class QueuesAnonController {\n  constructor(private readonly QueuesAnonService: QueuesAnonService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesAnonService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(new OrGuard([new AnonymizeGuard(), new AdminGuard()]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesAnonService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesAnonService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(new OrGuard([new AnonymizeGuard(), new AdminGuard()]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesAnonService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesAnonService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(AnonymizeGuard)\n  @Post()\n  async addAnonJob(\n    @Body() queuesAnonsDto: QueuesAnonsDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesAnonService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const anonymizes = queuesAnonsDto.Anonymizes;\n    const uuid = generateRandomUUID();\n    anonymizes.forEach((anonymize) => {\n      this.QueuesAnonService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        anonymize: anonymize,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AnonymizeGuard)\n  @Delete(':uuid')\n  async removeAnonJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesAnonService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonDto.html":{"url":"classes/QueuesAnonDto.html","title":"class - QueuesAnonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewAccessionNumber\n                            \n                            \n                                    \n                                    \n                                NewPatientID\n                            \n                            \n                                    \n                                    \n                                NewPatientName\n                            \n                            \n                                    \n                                    \n                                NewStudyDescription\n                            \n                            \n                                    \n                                    \n                                OrthancStudyID\n                            \n                            \n                                    \n                                    \n                                Profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_accession_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancStudyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'orthanc_study_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'profile'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesAnonService.html":{"url":"injectables/QueuesAnonService.html","title":"injectable - QueuesAnonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesAnonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/anon/queue-anons.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Queue } from 'bullmq';\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesAnonService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const anonQueue = new Queue('anon', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(anonQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonsDto.html":{"url":"classes/QueuesAnonsDto.html","title":"class - QueuesAnonsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Anonymizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Anonymizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueuesAnonDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesDeleteController.html":{"url":"controllers/QueuesDeleteController.html","title":"controller - QueuesDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/delete\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addDeleteJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeDeleteJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDeleteJob(queuesDeleteDto: QueuesDeleteDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(DeleteGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesDeleteDto\n                                            \n                                                            QueuesDeleteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(new OrGuard())@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(new OrGuard())@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDeleteJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(DeleteGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesDeleteService } from './queue-deletes.service';\nimport { AdminGuard, DeleteGuard } from '../../guards/roles.guard';\nimport { QueuesDeleteDto } from './queue-deletes.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/delete')\n@Controller('/queues/delete')\nexport class QueuesDeleteController {\n  constructor(private readonly QueuesDeleteService: QueuesDeleteService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesDeleteService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(new OrGuard([new DeleteGuard(), new AdminGuard()]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesDeleteService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesDeleteService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(new OrGuard([new DeleteGuard(), new AdminGuard()]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesDeleteService.getUuidOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesDeleteService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(DeleteGuard)\n  @Post()\n  async addDeleteJob(\n    @Body() queuesDeleteDto: QueuesDeleteDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesDeleteService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const orthancSeriesIds = queuesDeleteDto.OrthancSeriesIds;\n    const uuid = generateRandomUUID();\n    orthancSeriesIds.forEach((orthancSeriesId) => {\n      this.QueuesDeleteService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        orthancSeriesId: orthancSeriesId,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(DeleteGuard)\n  @Delete(':uuid')\n  async removeDeleteJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesDeleteService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesDeleteDto.html":{"url":"classes/QueuesDeleteDto.html","title":"class - QueuesDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancSeriesIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancSeriesIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/delete/queue-deletes.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nexport class QueuesDeleteDto {\n  @ApiProperty({ example: ['series_id_1', 'series_id_2'] })\n  @IsArray()\n  OrthancSeriesIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesDeleteService.html":{"url":"injectables/QueuesDeleteService.html","title":"injectable - QueuesDeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesDeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/delete/queue-deletes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesDeleteService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const deleteQueue = new Queue('delete', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(deleteQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesQueryController.html":{"url":"controllers/QueuesQueryController.html","title":"controller - QueuesQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/query\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addQueryJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeQueryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addQueryJob(queuesQueryDto: QueuesQueryDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(QueryGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesQueryDto\n                                            \n                                                            QueuesQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(new OrGuard())@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(new OrGuard())@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeQueryJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(QueryGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesQueryService } from './queue-query.service';\nimport { AdminGuard, QueryGuard } from '../../guards/roles.guard';\nimport {\n  QueuesQueryDto,\n  QueuesQueryStudyDto,\n  QueuesQuerySeriesDto,\n} from './queue-query.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/query')\n@Controller('/queues/query')\nexport class QueuesQueryController {\n  constructor(private readonly QueuesQueryService: QueuesQueryService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesQueryService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(new OrGuard([new QueryGuard(), new AdminGuard()]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesQueryService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesQueryService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(new OrGuard([new QueryGuard(), new AdminGuard()]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesQueryService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesQueryService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(QueryGuard)\n  @Post()\n  async addQueryJob(\n    @Body() queuesQueryDto: QueuesQueryDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesQueryService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const queuesQueryStudy: QueuesQueryStudyDto[] = queuesQueryDto.Studies;\n    const queuesQuerySeries: QueuesQuerySeriesDto[] = queuesQueryDto.Series;\n\n    if (queuesQuerySeries.length === 0 && queuesQueryStudy.length === 0)\n      throw new BadRequestException('No studies or series found');\n\n    const uuid = generateRandomUUID();\n    queuesQueryStudy.forEach((study) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        study: study,\n        results: null,\n      });\n    });\n    queuesQuerySeries.forEach((series) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        series: series,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(QueryGuard)\n  @Delete(':uuid')\n  async removeQueryJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesQueryService.removeJob({ uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryDto.html":{"url":"classes/QueuesQueryDto.html","title":"class - QueuesQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Series\n                            \n                            \n                                    \n                                    \n                                    \n                                Studies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQuerySeriesDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Studies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQueryStudyDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQuerySeriesDto.html":{"url":"classes/QueuesQuerySeriesDto.html","title":"class - QueuesQuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesQueryService.html":{"url":"injectables/QueuesQueryService.html","title":"injectable - QueuesQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isPaused\n                            \n                            \n                                    Async\n                                pause\n                            \n                            \n                                    Async\n                                resume\n                            \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/query/queue-query.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isPaused\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPaused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesQueryService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const queryQueue = new Queue('query', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    queryQueue.pause();\n    super(queryQueue);\n  }\n\n  async pause(): Promise {\n    await this.queue.pause();\n  }\n\n  async resume(): Promise {\n    await this.queue.resume();\n  }\n\n  async isPaused(): Promise {\n    return await this.queue.isPaused();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryStudyDto.html":{"url":"classes/QueuesQueryStudyDto.html","title":"class - QueuesQueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReadAllGuard.html":{"url":"guards/ReadAllGuard.html","title":"guard - ReadAllGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReadAllGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mail@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'firstname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lastname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'mail@example.com' })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'firstname' })\n  @IsNotEmpty()\n  Firstname: string;\n\n  @ApiProperty({ example: 'lastname' })\n  @IsNotEmpty()\n  Lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Labels\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'anonymize'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_routing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'cd_burner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'export'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'import'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, label => label.Name)@JoinTable({name: 'role_label'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'modify'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'read_all'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Label } from '../labels/label.entity';\nimport { Entity, Column, PrimaryColumn, ManyToMany, JoinTable } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @ApiProperty({ example: 'admin' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'import' })\n  Import: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'anonymize' })\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'export' })\n  Export: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'query' })\n  Query: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_query' })\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'delete' })\n  Delete: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'admin' })\n  Admin: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'modify' })\n  Modify: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'cd_burner' })\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_routing' })\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'read_all' })\n  ReadAll: boolean;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Label, (label) => label.Name)\n  @JoinTable({ name: 'role_label' })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addLabelToRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeLabelFromRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addLabelToRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLabelToRole(roleName: string, labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add label to role'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({schema: undefined})@UseGuards(new OrGuard())@Post('/:roleName/label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@ApiBody({type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(withLabels: WithLabels)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all roles', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                withLabels\n                                            \n                                                            WithLabels\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get role by name', type: Role})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels from role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(new OrGuard())@Get('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeLabelFromRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLabelFromRole(roleName: string, label: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove label from role'})@ApiResponse({status: 400, description: 'Label does not exist for this role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(new OrGuard())@Delete('/:roleName/label/:label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Put('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Delete,\n  Put,\n  ForbiddenException,\n  ConflictException,\n  BadRequestException,\n  UseGuards,\n  Query,\n  UseInterceptors,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from '../users/users.service';\nimport { LabelsService } from '../labels/labels.service';\nimport { RolesService } from './roles.service';\n\nimport { Role } from './role.entity';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserRoleGuard } from '../guards/check-user-role.guard';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { GetRoleDto } from './dto/get-role.dto';\nimport { WithLabels } from './dto/with-labels.dto';\nimport { LabelDto } from '../labels/labels.dto';\n\n@ApiTags('roles')\n@Controller('/roles')\nexport class RolesController {\n  constructor(\n    private readonly roleService: RolesService,\n    private readonly labelService: LabelsService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all roles',\n    type: [GetRoleDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(@Query() withLabels: WithLabels): Promise {\n    if (withLabels.WithLabels)\n      return await this.roleService.findAllWithLabels();\n    return await this.roleService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get role by name', type: Role })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get('/:name')\n  async findOne(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n    return role;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @ApiBody({ type: CreateRoleDto })\n  @Post()\n  async createRole(@Body() createRoleDto: CreateRoleDto): Promise {\n    if (createRoleDto.Name == undefined)\n      throw new BadRequestException(\"Missing Primary Key 'name'\");\n\n    if (await this.roleService.isRoleExist(createRoleDto.Name))\n      throw new ConflictException('Role with this name already exists');\n\n    await this.roleService.create(createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:name')\n  async delete(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n\n    if (await this.userService.isRoleUsed(role.Name))\n      throw new ForbiddenException('Role is used');\n\n    return this.roleService.remove(name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Put('/:name')\n  async update(\n    @Param('name') name: string,\n    @Body() createRoleDto: CreateRoleDto,\n  ): Promise {\n    if ((await this.roleService.isRoleExist(name)) == false)\n      throw new NotFoundException('Role not found');\n\n    await this.roleService.update(name, createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add label to role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ schema: { example: { label: 'label' } } })\n  @UseGuards(\n    new OrGuard([\n      new AdminGuard(),\n      new CheckUserRoleGuard(['params', 'roleName']),\n    ]),\n  )\n  @Post('/:roleName/label')\n  async addLabelToRole(\n    @Param('roleName') roleName: string,\n    @Body() labelDto: LabelDto,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    if ((await this.labelService.isLabelExist(labelDto.Name)) == false)\n      throw new NotFoundException('Label not found');\n\n    await this.roleService.addRoleLabel(roleName, labelDto.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels from role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(\n    new OrGuard([\n      new AdminGuard(),\n      new CheckUserRoleGuard(['params', 'roleName']),\n    ]),\n  )\n  @Get('/:roleName/labels')\n  async getRoleLabels(@Param('roleName') roleName: string): Promise {\n    return (await this.roleService.getRoleLabels(roleName)).map(\n      (label) => label.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove label from role' })\n  @ApiResponse({\n    status: 400,\n    description: 'Label does not exist for this role',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(\n    new OrGuard([\n      new AdminGuard(),\n      new CheckUserRoleGuard(['params', 'roleName']),\n    ]),\n  )\n  @Delete('/:roleName/label/:label')\n  async removeLabelFromRole(\n    @Param('roleName') roleName: string,\n    @Param('label') label: string,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    await this.labelService.findOneByOrFail(label);\n\n    await this.roleService.removeRoleLabel(roleName, label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\nimport { LabelsService } from '../labels/labels.service';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role, Label, User])],\n  providers: [RolesService, LabelsService, UsersService],\n  controllers: [RolesController],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRoleLabel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithLabels\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    Async\n                                isRoleExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRoleLabel\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesRepository: Repository, labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectRepository(Role)\n    private rolesRepository: Repository,\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.rolesRepository.find();\n  }\n\n  async findAllWithLabels(): Promise {\n    const allRoles = await this.rolesRepository.find({\n      relations: ['Labels'],\n    });\n    return allRoles;\n  }\n\n  async findOneByOrFail(name: string): Promise {\n    return await this.rolesRepository.findOneByOrFail({ Name: name });\n  }\n\n  async isRoleExist(name: string): Promise {\n    return (await this.rolesRepository.findOneBy({ Name: name })) != null;\n  }\n\n  async create(role: Role): Promise {\n    await this.rolesRepository.save(role);\n  }\n\n  async remove(name: string): Promise {\n    await this.rolesRepository.delete(name);\n  }\n\n  async update(name: string, role: Role): Promise {\n    await this.rolesRepository.update(name, role);\n  }\n\n  async addRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    const label = await this.labelsRepository.findOneOrFail({\n      where: { Name: labelName },\n    });\n    if (role.Labels.find((label) => label.Name == labelName))\n      throw new ConflictException('Label already exists for role');\n\n    role.Labels.push(label);\n    await this.rolesRepository.save(role);\n  }\n\n  async getRoleLabels(roleName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    return role.Labels;\n  }\n\n  async removeRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n\n    role.Labels = role.Labels.filter((label) => label.Name != labelName);\n    await this.rolesRepository.save(role);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const admin = this.rolesRepository.create({\n      Name: 'Admin',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: true,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    const user = this.rolesRepository.create({\n      Name: 'User',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: false,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    await this.rolesRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Router.html":{"url":"classes/Router.html","title":"class - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                Destinations\n                            \n                            \n                                    \n                                    \n                                    \n                                RuleCondition\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Destination[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'destinations', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RuleCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleCondition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rule_condition'})@IsEnum(RuleCondition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rules', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Condition\n                            \n                            \n                                    \n                                    \n                                    \n                                DicomTag\n                            \n                            \n                                    \n                                    \n                                    \n                                Value\n                            \n                            \n                                    \n                                    \n                                    \n                                ValueRepresentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'condition'})@IsEnum(Condition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DicomTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DicomTag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'dicom_tag'})@IsEnum(DicomTag)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'value'})@Validate(IsNumberOrString)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ValueRepresentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValueRepresentation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'value_representation'})@IsEnum(ValueRepresentation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                        \n                            OptionsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            SeederService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './seeder.service';\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { Autorouting } from '../autorouting/autorouting.entity';\nimport { Option } from '../options/option.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User,\n      Role,\n      Option,\n      Label,\n      OauthConfig,\n      Autorouting,\n    ]),\n  ],\n  providers: [\n    SeederService,\n    RolesService,\n    UsersService,\n    OptionsService,\n    OauthConfigService,\n  ],\n  controllers: [],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(rolesService: RolesService, usersService: UsersService, optionService: OptionsService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/seeder/seeder.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionService\n                                                  \n                                                        \n                                                                        OptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Injectable()\nexport class SeederService {\n  public constructor(\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService,\n    private readonly optionService: OptionsService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {}\n\n  public async seed() {\n    await this.rolesService.seed();\n    await this.usersService.seed();\n    await this.optionService.seed();\n    await this.oauthConfigService.seed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagAnon.html":{"url":"classes/TagAnon.html","title":"class - TagAnon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagAnon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/tag-anon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replaceValue\n                            \n                            \n                                tag\n                            \n                            \n                                tagPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: string, tagPolicy: TagPolicies, replaceValue: string | number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/tag-anon.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagPolicy\n                                                  \n                                                        \n                                                                        TagPolicies\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        replaceValue\n                                                  \n                                                        \n                                                                    string | number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        replaceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagPolicies\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagPolicies } from '../constants/enums';\n\nexport default class TagAnon {\n  tagPolicy: TagPolicies;\n  tag: string;\n  replaceValue: string | number | undefined;\n\n  constructor(\n    tag: string,\n    tagPolicy: TagPolicies,\n    replaceValue: string | number | undefined = undefined,\n  ) {\n    this.tagPolicy = tagPolicy;\n    this.tag = tag;\n    this.replaceValue = replaceValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\n\n\nTasksModule\n\nTasksModule\n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Option } from '../options/option.entity';\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryQueueTask } from './query-queue.task';\nimport { OrthancMonitoringTask } from './orthanc-monitoring.task';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [\n    QueuesQueryService,\n    OrthancClient,\n    QueryQueueTask,\n    OrthancMonitoringTask,\n  ],\n  exports: [QueryQueueTask, OrthancMonitoringTask],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvJobDto.html":{"url":"classes/TmtvJobDto.html","title":"class - TmtvJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                CtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                PtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                SendMaskToOrthancAs\n                            \n                            \n                                    \n                                    \n                                WithFragmentedMask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SendMaskToOrthancAs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingMask[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEnum(ProcessingMask)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WithFragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvService.html":{"url":"classes/TmtvService.html","title":"class - TmtvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/tmtv.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createdFiles\n                            \n                            \n                                    Private\n                                ctOrthancSeriesId\n                            \n                            \n                                    Private\n                                ctSeriesId\n                            \n                            \n                                    Private\n                                fragmentedMask\n                            \n                            \n                                    Private\n                                mask\n                            \n                            \n                                    Private\n                                ptOrthancSeriesId\n                            \n                            \n                                    Private\n                                ptSeriesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeries\n                            \n                            \n                                    Async\n                                deleteAllRessources\n                            \n                            \n                                getCreatedFiles\n                            \n                            \n                                    Async\n                                runInference\n                            \n                            \n                                    Async\n                                sendDicomToProcessing\n                            \n                            \n                                    Async\n                                sendMaskAsRtssToOrthanc\n                            \n                            \n                                    Async\n                                sendMaskAsSegToOrthanc\n                            \n                            \n                                setCtOrthancSeriesId\n                            \n                            \n                                setPtOrthancSeriesId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, processingClient: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/tmtv.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingClient\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllRessources\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllRessources()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedFiles\n                        \n                    \n                \n            \n            \n                \ngetCreatedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProcessingFile[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInference\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInference(fragmented: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fragmented\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendDicomToProcessing\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDicomToProcessing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsRtssToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsRtssToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsSegToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsSegToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetCtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetPtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import OrthancClient from '../utils/orthanc-client';\nimport ProcessingClient from '../utils/processing.client';\nimport { ProcessingFile } from './processing.file';\nimport { MaskProcessingService } from './mask-processing.service';\nimport { ProcessingMask } from '../constants/enums';\n\nexport class TmtvService {\n  private ptOrthancSeriesId: string;\n  private ctOrthancSeriesId: string;\n  private ptSeriesId: string;\n  private ctSeriesId: string;\n\n  private mask: MaskProcessingService;\n  private fragmentedMask: MaskProcessingService;\n\n  private createdFiles: ProcessingFile[] = [];\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly processingClient: ProcessingClient,\n  ) {}\n\n  setPtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ptOrthancSeriesId = orthancSeriesId;\n  }\n\n  setCtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ctOrthancSeriesId = orthancSeriesId;\n  }\n\n  getCreatedFiles(): ProcessingFile[] {\n    return this.createdFiles;\n  }\n\n  async sendDicomToProcessing() {\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ptOrthancSeriesId])\n      .then(async (result) => {\n        const ptResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ptResponse, 'dicoms'));\n      });\n\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ctOrthancSeriesId])\n      .then(async (result) => {\n        const ctResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ctResponse, 'dicoms'));\n      });\n  }\n\n  async createSeries() {\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ctOrthancSeriesId, false, false)\n      .then((ctSeriesId) => {\n        this.ctSeriesId = ctSeriesId;\n\n        this.createdFiles.push(new ProcessingFile(this.ctSeriesId, 'series'));\n      });\n\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ptOrthancSeriesId, true, true)\n      .then((ptSeriesId) => {\n        this.ptSeriesId = ptSeriesId;\n        this.createdFiles.push(new ProcessingFile(this.ptSeriesId, 'series'));\n      });\n  }\n\n  async runInference(fragmented: boolean = false) {\n    const maskId = (\n      await this.processingClient.executeInference('pt_seg_attentionunet', {\n        idCT: this.ctSeriesId,\n        idPT: this.ptSeriesId,\n      })\n    )['id_mask'];\n    const mask = new MaskProcessingService(this.processingClient);\n\n    mask.setMaskId(maskId);\n    mask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n    this.mask = mask;\n    this.createdFiles.push(new ProcessingFile(maskId, 'masks'));\n\n    if (fragmented) {\n      const fragmentedMaskId = await this.processingClient.fragmentMask(\n        this.ptSeriesId,\n        maskId,\n        true,\n      );\n      const fragmentedMask = new MaskProcessingService(this.processingClient);\n\n      this.createdFiles.push(new ProcessingFile(fragmentedMaskId, 'masks'));\n      fragmentedMask.setMaskId(fragmentedMaskId);\n      fragmentedMask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n      this.fragmentedMask = fragmentedMask;\n    }\n  }\n\n  async sendMaskAsRtssToOrthanc(): Promise {\n    const rtssStream = await this.fragmentedMask.getMaskAs(ProcessingMask.RTSS);\n    return await this.orthancClient.sendToOrthanc(rtssStream);\n  }\n\n  async sendMaskAsSegToOrthanc(): Promise {\n    const segStream = await this.fragmentedMask.getMaskAs(ProcessingMask.SEG);\n    return await this.orthancClient.sendToOrthanc(segStream);\n  }\n\n  async deleteAllRessources() {\n    this.createdFiles.forEach((file) => {\n      this.processingClient.deleteRessource(file.getType(), file.getId());\n    });\n    this.createdFiles = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOptionDto.html":{"url":"classes/UpdateOptionDto.html","title":"class - UpdateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/update-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\n\nexport class UpdateOptionDto extends PartialType(CreateOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gaelo.fr', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gaelo.fr', required: true })\n  @IsString()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                TokenExpiration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com'})@Column({unique: true, name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@Column({name: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@Column({name: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@ManyToOne(undefined, role => role.Name)@JoinColumn({name: 'role_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@Column({name: 'role_name', unique: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        TokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { Role } from '../roles/role.entity';\n\n@Entity()\nexport class User {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty({ example: 'John' })\n  @Column({\n    name: 'firstname',\n  })\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @Column({\n    name: 'lastname',\n  })\n  Lastname: string;\n\n  @Column({\n    nullable: true,\n    name: 'password',\n  })\n  @Exclude()\n  Password: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com' })\n  @Column({\n    unique: true,\n    name: 'email',\n  })\n  Email: string;\n\n  @ApiProperty({ example: 'admin' })\n  @Column({\n    name: 'role_name',\n    unique: false,\n    nullable: true,\n  })\n  RoleName: string;\n\n  @ApiProperty()\n  @ManyToOne(() => Role, (role) => role.Name)\n  @JoinColumn({ name: 'role_name' })\n  Role?: Role;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  Token?: string;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  TokenExpiration?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoResponse.html":{"url":"interfaces/UserInfoResponse.html","title":"interface - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            preferred_username\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferred_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferred_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsersId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Conflict'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(new OrGuard())@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all users', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsersId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get user by id', type: GetUserDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(new OrGuard())@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, userDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update user'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(new OrGuard())@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Delete,\n  UseGuards,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { User } from './user.entity';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdGuard } from '../guards/check-user-id.guard';\n\nimport { hashPassword } from '../utils/passwords';\n\n@ApiTags('users')\n@Controller('/users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users',\n    type: [GetUserDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getUsers(): Promise {\n    const allUsers = await this.userService.findAll();\n    return allUsers.map((user) => {\n      return {\n        Id: user.Id,\n        Firstname: user.Firstname,\n        Lastname: user.Lastname,\n        Email: user.Email,\n        RoleName: user.RoleName,\n        Role: user.Role,\n      };\n    });\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get user by id', type: GetUserDto })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(\n    new OrGuard([new AdminGuard(), new CheckUserIdGuard(['params', 'id'])]),\n  )\n  @Get('/:id')\n  async getUsersId(@Param('id') id: number): Promise {\n    const user = await this.userService.findOne(id);\n    return {\n      Id: user.Id,\n      Firstname: user.Firstname,\n      Lastname: user.Lastname,\n      Email: user.Email,\n      RoleName: user.RoleName,\n      Role: user.Role,\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update user' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(\n    new OrGuard([new AdminGuard(), new CheckUserIdGuard(['params', 'id'])]),\n  )\n  @Put('/:id')\n  async update(\n    @Param('id') id: number,\n    @Body() userDto: UpdateUserDto,\n  ): Promise {\n    const user = await this.userService.findOne(id);\n\n    if (!user) throw new NotFoundException('User not found');\n\n    user.Firstname = userDto.Firstname;\n    user.Lastname = userDto.Lastname;\n    user.Role = await this.roleService.findOneByOrFail(userDto.RoleName);\n\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    if (existingUser && existingUser.Id != id)\n      throw new ConflictException('Email already used');\n    user.Email = userDto.Email;\n\n    await this.userService.update(id, user);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(\n    new OrGuard([new AdminGuard(), new CheckUserIdGuard(['params', 'id'])]),\n  )\n  @Delete('/:id')\n  async delete(@Param('id') id: number): Promise {\n    const existingUser = await this.userService.isExistingUser(id);\n\n    if (!existingUser) throw new NotFoundException('User not found');\n    return await this.userService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async createUser(@Body() userDto: CreateUserDto): Promise {\n    let user = new User();\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    const role = await this.roleService.isRoleExist(userDto.RoleName);\n\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    if (existingUser) {\n      throw new ConflictException('Email already used');\n    }\n    user = { ...userDto, Password: await hashPassword(userDto.Password) };\n    return (await this.userService.create(user)).Id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { UsersController } from './users.controller';\n\nimport { User } from './user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Role, Label])],\n  providers: [UsersService, RolesService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                isExistingUser\n                            \n                            \n                                    Async\n                                isRoleUsed\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isExistingUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isExistingUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleUsed(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPassword(id: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { hashPassword } from '../utils/passwords';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async isRoleUsed(roleName: string): Promise {\n    const roleCount = await this.usersRepository.findAndCount({\n      where: {\n        RoleName: roleName,\n      },\n    });\n    return roleCount[1] > 0;\n  }\n\n  async findAll(): Promise {\n    return await this.usersRepository.find({\n      relations: { Role: true },\n    });\n  }\n\n  async findOne(id: number, withRole: boolean = true): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n      relations: {\n        Role: withRole,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  async isExistingUser(id: number): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n    });\n    return user ? true : false;\n  }\n\n  async findOneByEmail(\n    email: string,\n    withRole: boolean = true,\n  ): Promise | undefined {\n    if (email === undefined) return undefined;\n    const user = await this.usersRepository.findOne({\n      where: { Email: email },\n      relations: {\n        Role: withRole,\n      },\n    });\n    return user;\n  }\n\n  async update(id: number, user: User): Promise {\n    await this.usersRepository.update(id, user);\n  }\n\n  async updateUserPassword(id: number, newPassword: string): Promise {\n    const hashedPassword = await hashPassword(newPassword);\n    const findUser = await this.findOne(id);\n    const userWithPasswordUpdated = { ...findUser, Password: hashedPassword };\n    await this.update(id, userWithPasswordUpdated);\n  }\n\n  async create(user: User): Promise {\n    return await this.usersRepository.save(user);\n  }\n\n  async remove(id: number): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const hashAdmin = await hashPassword('passwordadmin');\n\n    const hashUser = await hashPassword('passworduser');\n\n    const admin = this.usersRepository.create({\n      Firstname: 'Admin',\n      Lastname: 'Admin',\n      Email: 'admin@gaelo.com',\n      Password: hashAdmin,\n      RoleName: 'Admin',\n    });\n\n    const user = this.usersRepository.create({\n      Firstname: 'User',\n      Lastname: 'User',\n      Email: 'user@gaelo.com',\n      Password: hashUser,\n      RoleName: 'User',\n    });\n\n    await this.usersRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithLabels.html":{"url":"classes/WithLabels.html","title":"class - WithLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/with-labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                WithLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        WithLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({example: true})@Transform( => , {toClassOnly: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/with-labels.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\n\nexport class WithLabels {\n  @IsOptional()\n  @ApiProperty({ example: true })\n  @Transform(\n    ({ value }) => {\n      return value === 'true' || value === '';\n    },\n    { toClassOnly: true },\n  )\n  @IsBoolean()\n  WithLabels: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/lost-password.dto.ts\n            \n            class\n            LostPassworDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            injectable\n            JwtOauthStrategy\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            interface\n            UserInfoResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            entity\n            Autorouting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Router\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.handler.ts\n            \n            injectable\n            AutoroutingHandler\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.controller.ts\n            \n            controller\n            AutoroutingsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.service.ts\n            \n            injectable\n            AutoroutingsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/autorouting/dto/create-autorouting.dto.ts\n            \n            class\n            CreateAutoroutingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/dto/orthanc-event-payload.dto.ts\n            \n            class\n            OrthancEventPayloadDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/build_docs.ts\n            \n            variable\n            buildDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/check-user-id.guard.ts\n            \n            guard\n            CheckUserIdGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/check-user-role.guard.ts\n            \n            guard\n            CheckUserRoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/jwt-oauth.guard.ts\n            \n            injectable\n            JwtOAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            guard\n            OrGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AnonymizeGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoQueryGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoRoutingGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            CdBurnerGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            DeleteGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ExportGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ImportGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ModifyGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            QueryGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ReadAllGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/not-found.interceptor.ts\n            \n            injectable\n            NotFoundInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/label.entity.ts\n            \n            entity\n            Label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/labels.controller.ts\n            \n            controller\n            LabelsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/labels/labels.dto.ts\n            \n            class\n            LabelDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/labels/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupWorkers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.dto.ts\n            \n            class\n            OauthConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.entity.ts\n            \n            entity\n            OauthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.controller.ts\n            \n            controller\n            OauthConfigController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.service.ts\n            \n            injectable\n            OauthConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/options/dto/create-option.dto.ts\n            \n            class\n            CreateOptionDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/options/dto/get-option.dto.ts\n            \n            class\n            GetOptionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/options/dto/update-option.dto.ts\n            \n            class\n            UpdateOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/option.entity.ts\n            \n            entity\n            Option\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/options.controller.ts\n            \n            controller\n            OptionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/options.service.ts\n            \n            injectable\n            OptionsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryParsedAnswerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QuerySeriesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryStudyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-admin.controller.ts\n            \n            controller\n            OrthancAdminController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-delete.controller.ts\n            \n            controller\n            OrthancDeleteController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-export.controller.ts\n            \n            controller\n            OrthancExportController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-import.controller.ts\n            \n            controller\n            OrthancImportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-modify.controller.ts\n            \n            controller\n            OrthancModifyController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-query.controller.ts\n            \n            controller\n            OrthancQueryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc.controller.ts\n            \n            controller\n            OrthancController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-series.answer.ts\n            \n            class\n            QuerySeriesAnswer\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-study.answer.ts\n            \n            class\n            QueryStudyAnswer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query.answer.ts\n            \n            class\n            QueryAnswer\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/orthanc/tag-anon.ts\n            \n            class\n            TagAnon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/utils.ts\n            \n            variable\n            doReverseProxy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/mask-processing.service.ts\n            \n            injectable\n            MaskProcessingService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            ProcessingJobDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            TmtvJobDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/processing/processing-queue.service.ts\n            \n            injectable\n            ProcessingQueueService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/processing/processing.controller.ts\n            \n            controller\n            ProcessingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.file.ts\n            \n            class\n            ProcessingFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            setupProcessingWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            tmtvJob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/tmtv.service.ts\n            \n            class\n            TmtvService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            isSecondaryCapture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            setupAnonWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.controller.ts\n            \n            controller\n            QueuesAnonController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.service.ts\n            \n            injectable\n            QueuesAnonService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/delete/delete.worker.ts\n            \n            function\n            setupDeleteWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.controller.ts\n            \n            controller\n            QueuesDeleteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.dto.ts\n            \n            class\n            QueuesDeleteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.service.ts\n            \n            injectable\n            QueuesDeleteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processSeries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            setupQueryWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.controller.ts\n            \n            controller\n            QueuesQueryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQuerySeriesDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryStudyDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.service.ts\n            \n            injectable\n            QueuesQueryService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/queues/queue.service.ts\n            \n            injectable\n            AbstractQueueService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/dto/get-role.dto.ts\n            \n            class\n            GetRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/dto/with-labels.dto.ts\n            \n            class\n            WithLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/seeder/seed.ts\n            \n            variable\n            seeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/orthanc-monitoring.task.ts\n            \n            injectable\n            OrthancMonitoringTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/query-queue.task.ts\n            \n            injectable\n            QueryQueueTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils/http.client.ts\n            \n            class\n            HttpClient\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/utils/is-time-between.ts\n            \n            function\n            isTimeBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/orthanc-client.ts\n            \n            injectable\n            OrthancClient\n            \n                0 %\n                (0/47)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateRandomUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            getTokenExpiration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/processing.client.ts\n            \n            injectable\n            ProcessingClient\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/validators/string-or-number.ts\n            \n            class\n            IsNumberOrString\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.11.0\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.3.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.7\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.7\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            axios : ^1.6.0\n        \n            bcryptjs : ^2.4.3\n        \n            bullmq : ^5.5.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            css-inline : ^0.11.2\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.30.1\n        \n            nodemailer : ^6.9.7\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            pg : ^8.11.4\n        \n            postgres : ^3.3.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sqlite : ^5.0.1\n        \n            sqlite3 : ^5.1.6\n        \n            tmp : ^0.2.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoroutingEventType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            Condition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DestinationType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DicomTag   (src/.../autorouting.enum.ts)\n                        \n                        \n                            LevelType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            ProcessingJobType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingMask   (src/.../enums.ts)\n                        \n                        \n                            QueryAnswerType   (src/.../enums.ts)\n                        \n                        \n                            RuleCondition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            TagPolicies   (src/.../enums.ts)\n                        \n                        \n                            ValueRepresentation   (src/.../autorouting.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/autorouting/autorouting.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AutoroutingEventType\n                    \n                \n                        \n                            \n                                 NEW_INSTANCE\n                            \n                        \n                        \n                            \n                                Value : NewInstance\n                            \n                        \n                        \n                            \n                                 NEW_SERIES\n                            \n                        \n                        \n                            \n                                Value : NewSeries\n                            \n                        \n                        \n                            \n                                 NEW_STUDY\n                            \n                        \n                        \n                            \n                                Value : NewStudy\n                            \n                        \n                        \n                            \n                                 NEW_PATIENT\n                            \n                        \n                        \n                            \n                                Value : NewPatient\n                            \n                        \n                        \n                            \n                                 STABLE_SERIES\n                            \n                        \n                        \n                            \n                                Value : StableSeries\n                            \n                        \n                        \n                            \n                                 STABLE_STUDY\n                            \n                        \n                        \n                            \n                                Value : StableStudy\n                            \n                        \n                        \n                            \n                                 STABLE_PATIENT\n                            \n                        \n                        \n                            \n                                Value : StablePatient\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : EQUALS\n                            \n                        \n                        \n                            \n                                 DIFFERENT\n                            \n                        \n                        \n                            \n                                Value : DIFFERENT\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : NOT_IN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DestinationType\n                    \n                \n                        \n                            \n                                 AET\n                            \n                        \n                        \n                            \n                                Value : AET\n                            \n                        \n                        \n                            \n                                 TMTVJOB\n                            \n                        \n                        \n                            \n                                Value : TMTVJob\n                            \n                        \n                        \n                            \n                                 PEER\n                            \n                        \n                        \n                            \n                                Value : Peer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DicomTag\n                    \n                \n                        \n                            \n                                 PATIENT_NAME\n                            \n                        \n                        \n                            \n                                Value : PatientName\n                            \n                        \n                        \n                            \n                                 PATIENT_ID\n                            \n                        \n                        \n                            \n                                Value : PatientID\n                            \n                        \n                        \n                            \n                                 PATIENT_BIRTHDATE\n                            \n                        \n                        \n                            \n                                Value : PatientBirthDate\n                            \n                        \n                        \n                            \n                                 PATIENT_SEX\n                            \n                        \n                        \n                            \n                                Value : PatientSex\n                            \n                        \n                        \n                            \n                                 OTHER_PATIENT_IDS\n                            \n                        \n                        \n                            \n                                Value : OtherPatientIDs\n                            \n                        \n                        \n                            \n                                 STUDY_DATE\n                            \n                        \n                        \n                            \n                                Value : StudyDate\n                            \n                        \n                        \n                            \n                                 STUDY_TIME\n                            \n                        \n                        \n                            \n                                Value : StudyTime\n                            \n                        \n                        \n                            \n                                 STUDY_ID\n                            \n                        \n                        \n                            \n                                Value : StudyID\n                            \n                        \n                        \n                            \n                                 STUDY_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : StudyDescription\n                            \n                        \n                        \n                            \n                                 ACCESSION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AccessionNumber\n                            \n                        \n                        \n                            \n                                 STUDY_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : StudyInstanceUID\n                            \n                        \n                        \n                            \n                                 REQUESTED_PROCEDURE_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : RequestedProcedureDescription\n                            \n                        \n                        \n                            \n                                 INSTITUTION_NAME\n                            \n                        \n                        \n                            \n                                Value : InstitutionName\n                            \n                        \n                        \n                            \n                                 REQUESTING_PHYSICIAN\n                            \n                        \n                        \n                            \n                                Value : RequestingPhysician\n                            \n                        \n                        \n                            \n                                 REFERRING_PHYSICIAN_NAME\n                            \n                        \n                        \n                            \n                                Value : ReferringPhysicianName\n                            \n                        \n                        \n                            \n                                 SERIES_DATE\n                            \n                        \n                        \n                            \n                                Value : SeriesDate\n                            \n                        \n                        \n                            \n                                 SERIES_TIME\n                            \n                        \n                        \n                            \n                                Value : SeriesTime\n                            \n                        \n                        \n                            \n                                 MODALITY\n                            \n                        \n                        \n                            \n                                Value : Modality\n                            \n                        \n                        \n                            \n                                 MANUFACTURER\n                            \n                        \n                        \n                            \n                                Value : Manufacturer\n                            \n                        \n                        \n                            \n                                 STATION_NAME\n                            \n                        \n                        \n                            \n                                Value : StationName\n                            \n                        \n                        \n                            \n                                 SERIES_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : SeriesDescription\n                            \n                        \n                        \n                            \n                                 BODY_PART_EXAMINED\n                            \n                        \n                        \n                            \n                                Value : BodyPartExamined\n                            \n                        \n                        \n                            \n                                 SEQUENCE_NAME\n                            \n                        \n                        \n                            \n                                Value : SequenceName\n                            \n                        \n                        \n                            \n                                 PROTOCOL_NAME\n                            \n                        \n                        \n                            \n                                Value : ProtocolName\n                            \n                        \n                        \n                            \n                                 SERIES_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SeriesNumber\n                            \n                        \n                        \n                            \n                                 CARDIAC_NUMBER_OF_IMAGES\n                            \n                        \n                        \n                            \n                                Value : CardiacNumberOfImages\n                            \n                        \n                        \n                            \n                                 IMAGES_IN_ACQUISITION\n                            \n                        \n                        \n                            \n                                Value : ImagesInAcquisition\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TEMPORAL_POSITIONS\n                            \n                        \n                        \n                            \n                                Value : NumberOfTemporalPositions\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfSlices\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TIME_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfTimeSlices\n                            \n                        \n                        \n                            \n                                 SERIES_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SeriesInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_ORIENTATION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImageOrientationPatient\n                            \n                        \n                        \n                            \n                                 SERIES_TYPE\n                            \n                        \n                        \n                            \n                                Value : SeriesType\n                            \n                        \n                        \n                            \n                                 OPERATORS_NAME\n                            \n                        \n                        \n                            \n                                Value : OperatorsName\n                            \n                        \n                        \n                            \n                                 PERFORMED_PROCEDURE_STEP_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : PerformedProcedureStepDescription\n                            \n                        \n                        \n                            \n                                 ACQUISITION_DEVICE_PROCESSING_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : AcquisitionDeviceProcessingDescription\n                            \n                        \n                        \n                            \n                                 CONTRAST_BOLUS_AGENT\n                            \n                        \n                        \n                            \n                                Value : ContrastBolusAgent\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_DATE\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationDate\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_TIME\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationTime\n                            \n                        \n                        \n                            \n                                 ACQUISITION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AcquisitionNumber\n                            \n                        \n                        \n                            \n                                 IMAGE_INDEX\n                            \n                        \n                        \n                            \n                                Value : ImageIndex\n                            \n                        \n                        \n                            \n                                 INSTANCE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : InstanceNumber\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_FRAMES\n                            \n                        \n                        \n                            \n                                Value : NumberOfFrames\n                            \n                        \n                        \n                            \n                                 TEMPORAL_POSITION_IDENTIFIER\n                            \n                        \n                        \n                            \n                                Value : TemporalPositionIdentifier\n                            \n                        \n                        \n                            \n                                 SOP_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SOPInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_POSITION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImagePositionPatient\n                            \n                        \n                        \n                            \n                                 IMAGE_COMMENTS\n                            \n                        \n                        \n                            \n                                Value : ImageComments\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LevelType\n                    \n                \n                        \n                            \n                                 INSTANCES\n                            \n                        \n                        \n                            \n                                Value : instances\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 STUDIES\n                            \n                        \n                        \n                            \n                                Value : studies\n                            \n                        \n                        \n                            \n                                 PATIENTS\n                            \n                        \n                        \n                            \n                                Value : patients\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RuleCondition\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : AND\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueRepresentation\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n            \n        \n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProcessingJobType\n                    \n                \n                        \n                            \n                                 TMTV\n                            \n                        \n                        \n                            \n                                Value : tmtv\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingMask\n                    \n                \n                        \n                            \n                                 RTSS\n                            \n                        \n                        \n                            \n                                Value : rtss\n                            \n                        \n                        \n                            \n                                 SEG\n                            \n                        \n                        \n                            \n                                Value : seg\n                            \n                        \n                        \n                            \n                                 NIFTI\n                            \n                        \n                        \n                            \n                                Value : nifti\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryAnswerType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TagPolicies\n                    \n                \n                        \n                            \n                                 KEEP\n                            \n                        \n                        \n                            \n                                Value : Keep\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : Replace\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : Remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildSwagger   (src/.../main.ts)\n                        \n                        \n                            isSecondaryCapture   (src/.../anon.worker.ts)\n                        \n                        \n                            isTimeBetween   (src/.../is-time-between.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            processSeries   (src/.../query.worker.ts)\n                        \n                        \n                            processStudy   (src/.../query.worker.ts)\n                        \n                        \n                            setupAnonWorker   (src/.../anon.worker.ts)\n                        \n                        \n                            setupDeleteWorker   (src/.../delete.worker.ts)\n                        \n                        \n                            setupProcessingWorker   (src/.../processing.worker.ts)\n                        \n                        \n                            setupQueryWorker   (src/.../query.worker.ts)\n                        \n                        \n                            setupWorkers   (src/.../main.ts)\n                        \n                        \n                            tmtvJob   (src/.../processing.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildSwagger\n                        \n                    \n                \n            \n            \n                \nbuildSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupWorkers\n                        \n                    \n                \n            \n            \n                \nsetupWorkers(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/anon/anon.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSecondaryCapture\n                        \n                    \n                \n            \n            \n                \nisSecondaryCapture(sopClassUid: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sopClassUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupAnonWorker\n                        \n                    \n                \n            \n            \n                \nsetupAnonWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/is-time-between.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTimeBetween\n                        \n                    \n                \n            \n            \n                \nisTimeBetween(startHour: number, startMinute: number, endHour: number, endMinute: number, currentHour: number, currentMinute: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/query/query.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSeries\n                        \n                    \n                \n            \n            \n                \nprocessSeries(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processStudy\n                        \n                    \n                \n            \n            \n                \nprocessStudy(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupQueryWorker\n                        \n                    \n                \n            \n            \n                \nsetupQueryWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/delete/delete.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDeleteWorker\n                        \n                    \n                \n            \n            \n                \nsetupDeleteWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/processing/processing.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupProcessingWorker\n                        \n                    \n                \n            \n            \n                \nsetupProcessingWorker(orthancClient: OrthancClient, configService: ConfigService, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmtvJob\n                        \n                    \n                \n            \n            \n                \ntmtvJob(job: Job, orthancClient: OrthancClient, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoroutingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OauthConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrthancModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\nLabelsService\n\nLabelsService\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    27 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : AGPLv3\n        \n            Author : Pixilib SAS\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildDocs   (src/.../build_docs.ts)\n                        \n                        \n                            comparePasswords   (src/.../passwords.ts)\n                        \n                        \n                            doReverseProxy   (src/.../utils.ts)\n                        \n                        \n                            generateRandomUUID   (src/.../passwords.ts)\n                        \n                        \n                            generateToken   (src/.../passwords.ts)\n                        \n                        \n                            getTokenExpiration   (src/.../passwords.ts)\n                        \n                        \n                            hashPassword   (src/.../passwords.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                        \n                            seeder   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/build_docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix('api');\n  const config = new DocumentBuilder()\n    .setTitle('GaelO Flow API')\n    .setDescription('The GaelO Flow API description')\n    .setVersion('2.0')\n    .addBearerAuth(\n      { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n      'access-token',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  writeFileSync('../openapi.json', JSON.stringify(document));\n  await app.close();\n  console.log('Documentation built -> openapi.json');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/passwords.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string, hash: string) => {\n  return bcryptjs.compare(password, hash);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomUUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const jobId = randomUUID();\n  return jobId;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const token = crypto.randomBytes(32).toString('hex');\n  const hash = await hashPassword(token);\n  return { token, hash };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (hours = 24): Date => {\n  return new Date(Date.now() + hours * 60 * 60 * 1000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const saltTest = await bcryptjs.genSalt();\n  const hash = await bcryptjs.hash(password, saltTest);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n\n    src/orthanc/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doReverseProxy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: Request,\n  response: Response,\n  orthancClient: OrthancClient,\n) => {\n  const url = request.url;\n  const orthancCalledApi = url.replace('/api', '');\n  const method = request.method;\n  const body = request.body;\n  orthancClient.streamAnswerToRes(orthancCalledApi, method, body, response);\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n\n    src/interceptors/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/seeder/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  const seedservice = app.get(SeederService);\n\n  await seedservice.seed();\n  await app.close();\n\n  console.log('Seeding complete');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
