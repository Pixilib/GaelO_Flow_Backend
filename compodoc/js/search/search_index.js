var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractQueueService.html",[0,0.626,1,3.046]],["body/injectables/AbstractQueueService.html",[0,0.651,1,3.167,2,1.061,3,0.051,4,0.045,5,0.045,6,2.737,7,0.134,8,0.936,9,3.835,10,4.84,11,0.743,12,2.274,13,3.167,14,3.552,15,4.811,16,4.526,17,4.526,18,3.226,19,3.552,20,3.552,21,3.167,22,0.836,23,4.705,24,0.442,25,4.705,26,1.087,27,0.008,28,0.78,29,0.352,30,0.948,31,3.552,32,3.809,33,3.089,34,3.907,35,1.226,36,2.646,37,3.552,38,2.174,39,3.089,40,3.191,41,3.089,42,3.089,43,3.089,44,1.894,45,1.016,46,3.977,47,3.089,48,2.099,49,2.05,50,4.761,51,3.552,52,3.089,53,3.552,54,3.089,55,3.552,56,3.089,57,0.086,58,0.354,59,4.865,60,1.98,61,0.051,62,2.737,63,0.121,64,3.089,65,2.284,66,3.089,67,3.089,68,4.705,69,4.705,70,3.089,71,2.737,72,1.712,73,5.211,74,6.371,75,2.737,76,6.371,77,4.705,78,5.646,79,4.705,80,3.089,81,4.705,82,3.089,83,3.089,84,1.45,85,4.169,86,2.737,87,2.737,88,2.737,89,2.737,90,2.737,91,2.737,92,2.737,93,2.737,94,2.737,95,2.737,96,4.622,97,2.737,98,3.089,99,2.737,100,3.816,101,2.737,102,2.737,103,2.737,104,1.434,105,4.169,106,2.737,107,4.169,108,3.101,109,4.705,110,1.014,111,3.089,112,2.079,113,2.737,114,3.089,115,3.089,116,3.089,117,3.089,118,2.737,119,3.089,120,0.006,121,2.737,122,3.089,123,1.692,124,3.816,125,5.049,126,2.737,127,2.737,128,3.089,129,0.004]],["title/guards/AdminGuard.html",[130,1.991,131,1.707]],["body/guards/AdminGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,2.181,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,137,4.09,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232]],["title/guards/AnonymizeGuard.html",[130,1.991,147,2.237]],["body/guards/AnonymizeGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.858,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,166,4.09]],["title/controllers/AppController.html",[167,1.175,168,3.417]],["body/controllers/AppController.html",[3,0.093,4,0.082,5,0.082,7,0.243,11,1.128,12,2.182,22,1.516,24,0.384,27,0.008,28,0.581,35,1.104,57,0.163,58,0.642,61,0.093,63,0.219,84,1.424,104,1.364,120,0.006,123,2.57,129,0.006,167,1.855,168,5.394,169,1.722,170,4.962,171,8.288,172,7.344,173,1.308,174,5.6,175,5.6,176,8.288,177,5.6,178,5.6,179,4.381,180,3.058,181,4.542,182,2.831,183,5.6,184,5.6,185,5.6,186,2.335,187,3.9,188,4.542,189,2.397,190,7.145,191,4.381,192,1.025,193,4.381,194,4.962,195,5.075,196,4.962,197,3.977,198,4.962,199,3.056,200,3.434,201,5.6,202,5.6,203,5.6,204,3.977,205,5.6,206,1.968,207,5.6,208,5.6,209,5.6]],["title/modules/AppModule.html",[210,1.52,211,3.417]],["body/modules/AppModule.html",[3,0.06,4,0.054,5,0.054,11,0.578,24,0.197,26,0.529,27,0.008,28,0.38,29,0.242,30,0.462,35,0.565,48,1.347,57,0.17,58,0.42,61,0.06,63,0.143,84,1.762,120,0.004,129,0.004,141,1.566,168,4.758,169,1.938,193,2.244,194,3.242,195,2.599,196,3.242,197,2.599,198,3.242,210,2.116,211,7.075,212,2.414,213,1.703,214,1.808,215,1.808,216,1.808,217,3.114,218,1.754,219,3.242,220,3.242,221,3.242,222,5.463,223,5.463,224,5.463,225,5.463,226,5.463,227,5.463,228,5.463,229,5.463,230,5.463,231,5.463,232,5.463,233,5.463,234,5.177,235,5.177,236,2.638,237,1.808,238,1.808,239,3.659,240,3.114,241,3.659,242,5.338,243,6.928,244,3.659,245,3.659,246,1.754,247,5.338,248,3.659,249,2.071,250,1.609,251,4.73,252,3.653,253,1.929,254,2.967,255,3.659,256,5.338,257,2.599,258,4.03,259,3.659,260,3.659,261,2.967,262,3.659,263,3.659,264,3.659,265,2.762,266,3.659,267,2.153,268,1.929,269,3.659,270,3.659,271,2.599,272,2.599,273,3.659,274,3.242,275,3.659,276,3.659,277,3.659,278,3.659,279,3.659,280,3.659,281,3.659,282,3.659,283,2.762,284,3.659,285,2.762,286,3.659,287,3.659,288,3.659,289,3.659,290,3.659,291,3.659,292,3.659,293,3.659,294,3.659,295,3.659,296,2.599,297,2.967,298,3.659,299,3.659,300,6.528,301,2.462,302,3.659,303,2.599,304,2.599,305,3.659,306,3.659,307,3.242,308,3.659,309,1.929,310,3.659,311,3.659,312,3.659,313,2.967,314,2.967,315,3.659,316,3.659,317,3.242,318,3.242,319,3.659,320,2.967,321,2.967,322,3.659]],["title/controllers/AuthController.html",[167,1.175,323,3.417]],["body/controllers/AuthController.html",[3,0.05,4,0.045,5,0.045,7,0.132,11,0.734,12,2.139,22,0.823,24,0.366,26,0.986,27,0.008,28,0.707,29,0.359,30,0.86,35,1.053,36,1.399,40,2.164,57,0.152,58,0.349,61,0.05,63,0.119,65,2.423,72,1.603,104,0.888,108,2.103,110,1.527,120,0.004,129,0.004,142,2.376,144,2.049,167,1.865,169,0.935,173,1.247,179,2.851,186,1.268,187,3.92,188,2.467,192,0.557,206,2.221,309,4.164,323,3.511,324,2.695,325,4.272,326,4.65,327,4.65,328,4.65,329,5.644,330,6.828,331,4.65,332,4.65,333,6.321,334,3.041,335,5.818,336,6.034,337,4.052,338,3.041,339,5.127,340,5.601,341,4.65,342,3.041,343,3.041,344,3.041,345,3.92,346,5.644,347,3.332,348,3.041,349,3.041,350,3.041,351,4.254,352,3.041,353,5.142,354,3.342,355,3.041,356,3.041,357,3.041,358,3.365,359,3.041,360,3.041,361,3.041,362,3.041,363,3.041,364,5.641,365,3.771,366,3.041,367,3.041,368,3.041,369,1.375,370,3.041,371,3.041,372,2.296,373,1.865,374,2.047,375,5.524,376,3.041,377,4.473,378,1.302,379,2.296,380,3.041,381,2.296,382,3.041,383,3.041,384,3.619,385,2.467,386,2.879,387,1.95,388,3.511,389,3.041,390,3.041,391,4.65,392,3.799,393,2.695,394,3.041,395,3.041,396,3.041,397,2.129,398,4.399,399,5.644,400,2.538,401,4.65,402,3.041,403,3.041,404,3.041,405,3.041,406,3.041,407,2.695,408,3.041,409,3.041,410,3.041,411,3.771,412,3.041,413,3.771,414,2.483,415,2.03,416,2.467,417,6.321,418,4.65,419,4.65,420,2.632,421,3.041,422,2.632,423,3.041,424,2.736,425,3.041,426,2.695,427,3.041,428,3.041,429,3.041,430,4.65,431,3.041,432,1.79,433,2.695,434,3.041,435,3.041,436,3.041,437,4.12,438,3.041,439,3.041,440,3.041,441,3.041,442,3.041,443,3.041,444,4.578,445,4.12,446,3.041,447,3.041,448,2.695,449,3.041,450,3.041,451,2.695,452,3.041,453,3.041,454,2.695,455,3.041,456,3.041,457,2.467]],["title/modules/AuthModule.html",[210,1.52,222,3.215]],["body/modules/AuthModule.html",[3,0.075,4,0.067,5,0.067,27,0.008,57,0.17,58,0.524,61,0.075,63,0.178,120,0.005,129,0.005,144,1.374,169,1.92,210,2.389,212,2.066,213,2.126,214,2.257,215,2.257,216,2.257,217,3.516,218,3.41,222,6.641,234,5.565,236,3.086,237,2.257,238,2.257,240,3.086,249,2.586,250,2.009,252,3.751,253,2.408,257,3.244,267,3.674,268,3.292,274,4.047,296,3.244,297,3.705,317,4.047,318,4.047,323,5.372,384,5.768,385,3.705,386,4.217,387,2.929,392,5.565,393,4.047,458,4.047,459,4.568,460,4.047,461,4.047,462,5.565,463,5.873,464,5.873,465,4.513,466,4.568,467,6.245,468,4.568,469,3.244,470,6.245,471,3.449,472,4.568,473,3.449,474,4.568,475,4.568,476,4.715,477,4.568,478,4.004,479,3.449,480,3.449,481,4.568,482,2.929,483,4.568,484,2.801,485,4.568,486,4.568,487,4.568,488,4.568,489,4.568,490,4.047]],["title/injectables/AuthService.html",[0,0.626,384,2.902]],["body/injectables/AuthService.html",[0,0.833,2,1.488,3,0.072,4,0.064,5,0.064,7,0.188,11,0.951,12,2.222,22,1.63,24,0.423,26,1.137,27,0.008,28,0.816,29,0.357,30,0.992,35,1.156,36,2.448,38,2.082,40,3.657,45,1.169,57,0.144,58,0.497,61,0.072,63,0.169,65,2.355,72,1.563,84,1.102,104,1.5,108,2.723,120,0.005,129,0.005,144,2.72,179,2.657,206,2.628,330,5.335,354,2.802,373,2.657,384,3.86,386,4.149,387,2.778,397,2.271,414,2.648,415,2.489,437,5.335,448,3.839,454,3.839,457,5.613,469,3.077,473,3.271,491,3.839,492,6.021,493,6.021,494,6.92,495,4.332,496,6.768,497,4.332,498,6.021,499,4.332,500,6.021,501,4.332,502,6.021,503,6.132,504,4.332,505,4.332,506,4.332,507,3.514,508,4.884,509,4.884,510,2.778,511,4.332,512,6.92,513,1.959,514,3.514,515,3.514,516,3.839,517,2.076,518,3.839,519,4.332,520,4.332,521,5.335,522,6.021,523,6.021,524,4.332,525,3.077,526,4.332,527,4.332,528,6.021,529,4.332,530,4.332]],["title/guards/AutoQueryGuard.html",[130,1.991,153,2.237]],["body/guards/AutoQueryGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.858,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,531,4.09]],["title/guards/AutoRoutingGuard.html",[130,1.991,162,2.237]],["body/guards/AutoRoutingGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.858,163,2.232,164,1.903,165,2.232,532,4.09]],["title/entities/Autorouting.html",[533,2.106,534,2.169]],["body/entities/Autorouting.html",[3,0.067,4,0.06,5,0.06,7,0.177,8,1.147,24,0.413,27,0.008,28,0.959,29,0.407,30,0.728,38,2.19,45,0.985,49,2.763,57,0.146,61,0.12,63,0.312,84,1.466,120,0.005,123,2.763,129,0.005,139,1.772,173,1.407,192,0.746,533,2.683,534,2.763,535,2.611,536,2.892,537,5.169,538,4.753,539,5.462,540,5.428,541,4.072,542,4.072,543,4.104,544,1.337,545,3.074,546,4.072,547,4.072,548,3.608,549,4.072,550,3.303,551,4.072,552,4.072,553,4.072,554,5.492,555,3.88,556,1.791,557,2.654,558,3.147,559,2.305,560,2.524,561,2.497,562,5.495,563,1.308,564,5.169,565,3.88,566,5.169,567,4.504,568,4.898,569,2.611,570,2.497,571,2.611,572,3.074,573,4.291,574,2.575,575,4.353,576,3.074,577,3.074,578,4.095,579,3.074,580,3.074,581,3.074,582,4.353,583,3.074,584,4.924,585,4.353,586,3.074,587,3.074,588,3.074,589,3.074,590,4.353,591,5.053,592,3.392,593,4.353,594,2.892,595,3.074,596,2.892]],["title/injectables/AutoroutingHandler.html",[0,0.626,597,3.215]],["body/injectables/AutoroutingHandler.html",[0,0.553,2,0.86,3,0.041,4,0.037,5,0.037,7,0.109,8,0.794,11,0.631,12,1.94,22,1.081,24,0.438,26,1.127,27,0.008,28,0.808,29,0.365,30,0.983,32,1.32,34,4.261,35,1.203,38,2.482,45,1.138,48,1.471,49,2.675,57,0.14,58,0.287,61,0.041,63,0.098,65,1.605,72,1.517,84,0.637,104,1.591,110,1.867,120,0.003,123,1.437,129,0.003,139,2.436,173,0.731,271,1.778,272,1.778,397,3.315,451,2.219,514,5.039,534,3.458,539,3.646,543,1.535,564,1.685,565,1.685,567,1.685,568,1.685,569,1.605,573,5.822,578,3.539,584,4.245,594,2.837,597,2.837,598,2.219,599,4.983,600,4.983,601,5.686,602,3.994,603,3.994,604,3.994,605,3.994,606,3.994,607,3.994,608,5.686,609,4.983,610,3.994,611,3.994,612,2.504,613,3.646,614,4.261,615,2.974,616,2.504,617,3.539,618,3.994,619,2.504,620,3.994,621,5.246,622,3.994,623,2.504,624,3.994,625,2.504,626,3.994,627,2.504,628,3.994,629,2.504,630,3.994,631,2.504,632,3.994,633,2.504,634,2.504,635,2.504,636,2.504,637,2.504,638,2.504,639,2.504,640,2.504,641,3.81,642,4.415,643,4.293,644,2.504,645,3.239,646,2.504,647,3.994,648,3.994,649,5.686,650,3.994,651,6.213,652,3.994,653,5.686,654,3.994,655,3.994,656,3.994,657,2.504,658,2.504,659,2.504,660,2.031,661,2.504,662,2.031,663,1.778,664,1.237,665,1.2,666,3.539,667,2.219,668,1.605,669,1.89,670,1.685,671,1.277,672,2.504,673,2.504,674,2.219,675,7.215,676,4.983,677,3.994,678,2.504,679,3.994,680,2.504,681,3.994,682,3.994,683,2.504,684,3.994,685,3.994,686,1.778,687,3.994,688,4.983,689,3.539,690,2.504,691,2.504,692,3.983,693,2.219,694,2.106,695,2.504,696,2.504,697,2.504,698,1.778,699,3.994,700,2.504,701,4.983,702,2.504,703,2.219,704,2.504,705,2.504,706,2.504,707,2.504,708,3.539,709,3.994,710,2.504,711,3.539,712,2.504,713,3.762,714,2.504,715,2.031,716,2.504,717,1.685,718,1.89,719,1.89,720,2.031,721,2.219,722,2.219,723,2.031,724,2.504,725,2.504,726,2.504,727,3.539,728,2.504,729,2.504,730,2.504,731,2.504,732,3.994,733,2.504,734,2.504,735,2.504,736,2.504,737,2.504,738,2.504,739,2.504,740,2.219,741,2.504,742,2.504]],["title/controllers/AutoroutingsController.html",[167,1.175,743,3.417]],["body/controllers/AutoroutingsController.html",[3,0.06,4,0.054,5,0.054,7,0.159,11,0.843,12,2.209,24,0.396,26,1.003,27,0.008,28,0.824,29,0.392,30,0.875,35,1.139,36,2.538,38,2.601,57,0.141,58,0.42,61,0.06,63,0.143,65,2.171,84,2.02,104,1.203,120,0.004,123,3.188,129,0.004,162,1.808,167,0.95,169,1.125,173,1.349,180,3.611,182,3.047,186,1.525,189,1.566,191,4.248,192,0.67,206,2.589,325,4.359,337,3.422,345,4.443,347,4.448,358,2.638,369,2.414,377,4.666,378,1.566,398,4.604,400,4.021,513,2.85,534,4.143,613,3.422,617,3.242,662,2.967,663,2.599,674,3.242,743,4.03,744,3.242,745,2.071,746,6.302,747,5.338,748,5.338,749,5.338,750,6.928,751,3.659,752,5.807,753,4.335,754,2.814,755,3.659,756,3.659,757,3.659,758,3.659,759,3.659,760,6.302,761,6.302,762,3.659,763,3.659,764,3.659,765,4.73,766,3.659,767,3.659,768,3.659,769,4.73,770,3.659,771,3.659,772,2.244,773,3.659,774,3.659,775,1.997,776,3.659,777,5.338,778,1.655,779,2.967,780,3.659,781,3.659,782,3.659,783,1.487,784,7.367,785,3.659,786,3.242,787,3.659,788,3.242,789,3.659,790,3.659,791,3.659,792,3.659,793,3.659,794,3.659,795,3.659,796,3.659,797,3.659]],["title/modules/AutoroutingsModule.html",[210,1.52,223,3.215]],["body/modules/AutoroutingsModule.html",[3,0.095,4,0.085,5,0.085,27,0.008,57,0.166,58,0.663,61,0.095,63,0.226,120,0.006,129,0.006,169,2.24,210,2.68,212,2.611,213,2.687,214,2.853,215,2.853,216,2.853,217,3.944,218,2.767,223,6.617,236,3.6,237,2.853,238,2.853,240,2.853,249,3.269,250,2.54,534,2.767,597,6.268,613,5.658,614,5.411,615,3.778,662,4.683,663,4.101,664,2.853,665,2.767,667,5.117,668,3.702,743,6.026,798,5.117,799,5.117,800,5.774,801,5.774,802,5.774,803,5.774]],["title/injectables/AutoroutingsService.html",[0,0.626,613,2.902]],["body/injectables/AutoroutingsService.html",[0,0.793,2,1.386,3,0.067,4,0.059,5,0.059,7,0.175,11,0.905,12,2.319,22,1.551,24,0.457,26,1.209,27,0.008,28,0.867,29,0.379,30,1.055,35,1.292,36,2.723,38,2.708,57,0.146,58,0.463,61,0.067,63,0.158,65,2.434,72,1.14,84,1.457,104,1.271,110,1.325,120,0.005,123,2.942,129,0.005,250,1.775,271,2.867,272,2.867,397,2.161,534,4.337,537,2.867,538,5.149,543,4.445,556,1.775,569,2.588,613,3.673,663,2.867,740,5.077,754,3.021,765,5.077,769,5.077,804,3.577,805,4.879,806,6.66,807,5.729,808,3.127,809,3.673,810,4.036,811,4.445,812,5.901,813,6.423,814,4.036,815,5.729,816,5.729,817,4.036,818,5.729,819,4.036,820,5.729,821,4.036,822,4.036,823,4.036,824,4.036,825,5.729,826,4.036,827,5.077,828,4.036,829,4.647,830,4.036,831,2.588,832,4.036,833,5.729,834,4.036,835,4.036,836,6.66,837,4.036,838,4.036,839,5.729,840,5.077]],["title/guards/CdBurnerGuard.html",[130,1.991,160,2.309]],["body/guards/CdBurnerGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.95,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,841,4.09]],["title/classes/ChangePasswordDto.html",[63,0.177,335,3.417]],["body/classes/ChangePasswordDto.html",[3,0.089,4,0.08,5,0.08,7,0.234,8,1.389,24,0.44,27,0.008,29,0.371,38,2.101,40,3.6,45,1.173,57,0.128,61,0.089,63,0.273,120,0.006,129,0.006,173,1.498,192,0.99,206,2.719,309,3.682,335,5.272,444,6.275,445,6.855,544,2.293,557,2.494,560,3.085,563,1.735,574,2.147,842,1.433,843,7.503,844,4.383,845,5.403,846,5.403,847,5.403,848,6.983,849,6.983,850,6.983,851,6.983,852,6.187,853,6.983,854,8.943,855,6.983,856,8.178,857,6.983,858,6.983,859,6.983,860,6.983,861,5.403,862,5.403,863,5.403,864,5.403,865,5.403,866,6.394,867,5.272,868,4.788,869,5.403,870,6.983,871,5.403,872,5.403]],["title/guards/CheckUserIdParamsGuard.html",[130,1.991,873,3.417]],["body/guards/CheckUserIdParamsGuard.html",[0,1.033,3,0.099,4,0.088,5,0.088,7,0.26,11,1.178,22,1.624,24,0.401,26,1.08,27,0.008,28,0.774,29,0.339,30,0.942,35,0.927,40,3.472,45,1.099,46,2.713,49,2.921,57,0.11,58,0.688,61,0.099,63,0.234,72,1.616,104,1.145,120,0.006,123,2.921,129,0.006,132,2.638,134,3.638,135,3.194,136,3.543,138,2.501,139,2.294,141,2.568,142,1.805,143,2.713,144,2.444,783,2.437,873,5.634,874,6.132,875,5.316,876,5.316,877,5.999,878,6.612,879,5.999,880,2.568,881,4.529,882,5.316]],["title/guards/CheckUserIdQueryGuard.html",[130,1.991,883,3.417]],["body/guards/CheckUserIdQueryGuard.html",[0,1.033,3,0.099,4,0.088,5,0.088,7,0.26,11,1.178,22,1.624,24,0.401,26,1.08,27,0.008,28,0.774,29,0.339,30,0.942,35,0.927,40,3.472,45,1.099,46,2.713,49,2.921,57,0.11,58,0.688,61,0.099,63,0.234,72,1.616,104,1.145,120,0.006,123,2.921,129,0.006,132,2.638,134,3.638,135,3.194,136,3.543,138,2.501,139,2.294,141,2.568,142,1.805,143,2.713,144,2.444,783,2.437,874,6.132,876,5.316,878,6.612,880,2.568,882,5.316,883,5.634,884,5.316,885,5.999,886,5.999,887,5.999]],["title/guards/CheckUserRoleGuard.html",[130,1.991,888,3.417]],["body/guards/CheckUserRoleGuard.html",[0,1.052,3,0.102,4,0.091,5,0.091,7,0.268,11,1.201,22,2.229,24,0.409,26,0.895,27,0.008,28,0.642,29,0.281,30,0.781,35,0.956,46,2.797,49,2.962,57,0.113,58,0.71,61,0.102,63,0.242,72,1.638,104,1.181,120,0.006,129,0.006,132,2.721,134,3.677,135,3.255,136,3.581,138,2.579,139,2.338,141,2.648,142,1.861,143,2.797,144,2.477,874,6.217,888,5.742,889,5.481,890,6.186,891,6.186,892,6.186,893,5.742,894,4.671]],["title/classes/CreateAutoroutingDto.html",[63,0.177,752,3.417]],["body/classes/CreateAutoroutingDto.html",[3,0.113,4,0.101,5,0.101,27,0.008,57,0.148,61,0.113,63,0.268,72,1.61,120,0.007,123,2.911,129,0.007,192,1.256,534,3.287,663,4.872,752,6.11,842,1.818,895,6.077,896,6.077,897,3.559,898,8.092,899,6.859]],["title/classes/CreateOptionDto.html",[63,0.177,900,3.215]],["body/classes/CreateOptionDto.html",[3,0.055,4,0.049,5,0.049,7,0.146,8,0.997,24,0.476,27,0.008,29,0.402,38,2.487,45,1.205,48,3.382,57,0.092,61,0.055,63,0.196,84,1.525,110,3.055,120,0.004,129,0.004,139,2.293,173,1.622,182,3.638,192,0.615,544,2.908,557,2.623,558,3.628,560,3.239,563,1.078,574,2.723,842,0.89,867,5.631,900,3.559,901,7.893,902,2.535,903,4.861,904,4.861,905,4.861,906,4.861,907,5.311,908,5.311,909,5.311,910,5.311,911,5.311,912,5.311,913,5.311,914,5.311,915,5.311,916,5.311,917,5.311,918,5.311,919,5.311,920,3.358,921,3.358,922,3.358,923,3.358,924,5.01,925,3.358,926,3.358,927,4.44,928,3.358,929,5.311,930,3.358,931,3.358,932,3.358,933,3.358,934,5.311,935,3.358,936,3.358,937,3.358,938,4.257,939,3.358,940,3.358,941,2.723,942,3.358,943,5.311,944,3.358,945,3.358,946,6.608,947,5.01,948,3.358,949,3.358,950,3.358,951,5.311,952,3.358,953,3.358,954,2.723,955,3.073,956,2.535]],["title/classes/CreateRoleDto.html",[63,0.177,957,3.215]],["body/classes/CreateRoleDto.html",[3,0.068,4,0.061,5,0.061,7,0.178,8,1.155,24,0.475,27,0.008,28,0.699,29,0.401,45,0.786,57,0.141,61,0.121,63,0.227,84,2.411,120,0.005,129,0.005,139,2.852,173,1.618,182,3.694,192,0.753,513,3.043,534,3.226,544,2.902,557,2.624,558,4.824,560,2.19,563,1.321,574,2.717,842,1.091,941,7.1,957,4.125,958,7.894,959,3.337,960,4.728,961,5.081,962,5.459,963,5.459,964,5.459,965,3.433,966,5.459,967,4.114,968,4.114,969,4.114,970,4.114,971,4.114,972,4.114,973,4.114,974,4.114,975,4.114,976,2.769,977,3.646,978,4.114,979,4.114]],["title/classes/CreateUserDto.html",[63,0.177,980,3.417]],["body/classes/CreateUserDto.html",[3,0.086,4,0.077,5,0.077,7,0.227,8,1.36,24,0.451,27,0.008,29,0.38,45,1.226,57,0.125,61,0.086,63,0.267,84,2.055,120,0.006,129,0.006,173,1.535,182,3.519,192,0.958,309,4.419,354,3.544,420,4.312,422,4.312,424,4.482,544,2.752,557,2.532,558,2.855,560,3.161,563,1.68,574,2.577,842,1.387,852,6.058,868,4.635,960,4.192,976,5.126,980,5.162,981,7.618,982,3.949,983,5.545,984,4.635,985,4.635,986,5.162,987,4.635,988,5.162,989,4.635,990,5.23,991,6.837,992,6.837,993,6.837,994,6.837,995,6.837,996,4.635,997,4.635,998,5.545,999,5.23,1000,5.23]],["title/guards/DeleteGuard.html",[130,1.991,155,2.169]],["body/guards/DeleteGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,2.772,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,1001,4.09]],["title/classes/Destination.html",[63,0.177,584,2.902]],["body/classes/Destination.html",[3,0.071,4,0.063,5,0.063,7,0.187,8,1.193,24,0.322,27,0.008,28,0.965,29,0.397,38,2.075,45,1.009,49,2.82,57,0.149,61,0.123,63,0.317,84,1.525,120,0.005,123,2.156,129,0.005,139,1.324,173,1.098,192,0.788,533,2.79,534,2.064,536,3.058,537,4.258,538,3.058,539,5.027,540,3.492,543,3.676,544,1.414,545,3.251,550,3.492,554,5.54,555,4.035,556,1.894,557,2.675,558,3.272,559,2.437,560,2.602,561,2.64,562,5.631,563,1.383,564,5.277,565,4.642,566,5.298,567,4.642,568,5.02,569,2.76,570,2.64,571,2.76,572,3.251,573,4.422,574,2.612,575,4.527,576,3.251,577,3.251,578,4.258,579,3.251,580,3.251,581,3.251,582,4.527,583,3.251,584,5.447,585,4.527,586,3.251,587,3.251,588,3.251,589,3.251,590,4.527,591,5.208,592,3.528,593,4.527,594,3.058,595,3.251,596,3.058,842,1.142,1002,4.306,1003,4.306,1004,4.306]],["title/guards/ExportGuard.html",[130,1.991,149,2.169]],["body/guards/ExportGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,2.772,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,1005,4.09]],["title/classes/GetOptionDto.html",[63,0.177,1006,3.417]],["body/classes/GetOptionDto.html",[3,0.088,4,0.078,5,0.078,7,0.23,8,1.373,24,0.464,27,0.008,29,0.392,45,1.246,57,0.141,61,0.088,63,0.27,120,0.006,129,0.006,173,1.581,192,0.972,544,2.834,557,2.589,560,3.491,563,1.705,574,2.654,754,2.8,842,1.408,897,3.037,900,3.772,902,4.01,1006,5.213,1007,7.788,1008,6.118,1009,6.799,1010,6.799,1011,6.799,1012,6.799,1013,6.799,1014,6.799,1015,5.31,1016,5.31,1017,5.31,1018,5.31,1019,5.31,1020,5.31,1021,4.307,1022,4.01]],["title/classes/GetRoleDto.html",[63,0.177,1023,3.417]],["body/classes/GetRoleDto.html",[3,0.106,4,0.095,5,0.095,7,0.279,8,1.549,24,0.346,27,0.008,29,0.292,30,0.983,46,2.908,48,2.867,57,0.154,61,0.106,63,0.251,108,2.908,110,2.556,120,0.007,129,0.007,173,1.177,182,2.547,192,1.177,557,2.293,754,3.39,842,1.705,897,3.424,957,4.567,959,5.215,977,5.697,1021,5.215,1023,5.879,1024,6.899,1025,7.786,1026,5.636,1027,4.014,1028,5.215,1029,5.697,1030,4.327]],["title/classes/GetUserDto.html",[63,0.177,1031,3.417]],["body/classes/GetUserDto.html",[3,0.086,4,0.077,5,0.077,7,0.227,8,1.36,24,0.462,27,0.008,29,0.39,30,0.863,38,2.057,45,1.202,57,0.14,61,0.086,63,0.267,84,2.055,120,0.006,123,2.74,129,0.006,173,1.574,182,3.519,192,0.958,354,3.544,420,4.312,422,4.312,424,4.482,517,4.12,544,2.652,557,2.579,558,2.855,560,3.047,563,1.68,574,2.483,842,1.387,867,5.162,960,4.192,976,5.126,982,3.949,983,5.545,984,4.635,986,5.162,988,5.162,996,4.635,998,5.545,1031,5.162,1032,7.76,1033,5.23,1034,5.23,1035,5.23,1036,5.23,1037,5.23,1038,5.23,1039,5.23,1040,5.23,1041,3.949,1042,5.23]],["title/classes/HttpClient.html",[63,0.177,1043,3.671]],["body/classes/HttpClient.html",[3,0.044,4,0.039,5,0.039,7,0.116,8,0.837,9,5.63,11,0.664,12,1.893,24,0.462,26,1.068,27,0.008,28,0.766,29,0.38,30,0.932,32,4.585,34,3.189,35,1.141,36,1.774,45,1.281,46,2.352,48,2.624,49,2.563,57,0.077,61,0.044,63,0.104,65,1.187,72,1.418,104,1.409,108,2.352,120,0.004,129,0.004,142,1.565,179,1.639,204,6.097,246,3.415,307,6.035,309,3.591,321,7.164,347,1.409,358,4.297,414,2.594,484,1.639,842,0.709,1043,3.411,1044,2.368,1045,5.2,1046,5.2,1047,4.218,1048,5.2,1049,5.2,1050,5.2,1051,5.2,1052,5.2,1053,4.206,1054,4.206,1055,4.206,1056,4.206,1057,4.206,1058,5.2,1059,2.672,1060,2.672,1061,2.672,1062,2.672,1063,2.672,1064,2.672,1065,2.672,1066,2.672,1067,2.672,1068,2.672,1069,2.672,1070,2.672,1071,2.672,1072,2.672,1073,4.206,1074,2.672,1075,4.206,1076,4.206,1077,2.672,1078,4.206,1079,4.206,1080,2.672,1081,4.206,1082,2.672,1083,4.206,1084,2.672,1085,2.672,1086,5.2,1087,5.898,1088,2.672,1089,5.226,1090,3.008,1091,1.513,1092,6.429,1093,2.672,1094,3.06,1095,2.672,1096,4.206,1097,2.368,1098,4.206,1099,4.206,1100,2.672,1101,2.672,1102,4.206,1103,2.672,1104,4.206,1105,3.339,1106,6.414,1107,5.2,1108,5.735,1109,2.672,1110,5.2,1111,3.727,1112,2.672,1113,4.206,1114,2.672,1115,2.672,1116,2.672,1117,4.206,1118,2.672,1119,2.672,1120,2.672,1121,2.672,1122,2.672,1123,2.672,1124,2.672,1125,2.672,1126,2.672,1127,2.672,1128,2.672,1129,2.672,1130,2.672,1131,2.672]],["title/guards/ImportGuard.html",[130,1.991,140,2.237]],["body/guards/ImportGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.858,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,1132,4.09]],["title/injectables/InstanceGuard.html",[0,0.626,197,3.215]],["body/injectables/InstanceGuard.html",[0,1.045,2,2.101,3,0.101,4,0.09,5,0.09,7,0.265,11,1.193,12,2.042,24,0.329,26,0.885,27,0.008,28,0.635,29,0.278,30,0.772,35,0.946,36,2.272,57,0.138,58,0.702,61,0.101,63,0.239,65,1.727,72,1.702,104,1.442,108,2.767,110,2.009,120,0.006,129,0.006,134,3.233,135,3.233,136,3.567,138,2.551,142,1.841,143,2.767,193,5.024,197,5.365,643,5.703,694,3.226,698,4.346,881,4.619,893,4.619,894,4.619,897,3.322,1133,5.421,1134,6.118,1135,5.421,1136,6.692,1137,6.118,1138,4.962,1139,5.421]],["title/classes/IsNumberOrString.html",[63,0.177,571,2.902]],["body/classes/IsNumberOrString.html",[3,0.099,4,0.088,5,0.088,7,0.259,11,1.175,12,1.488,24,0.4,26,1.077,27,0.008,28,0.841,29,0.338,30,0.939,35,1.15,38,2.439,45,1.148,49,2.149,57,0.11,61,0.099,63,0.291,104,1.42,110,1.961,120,0.006,129,0.006,139,1.836,141,3.186,561,4.563,563,1.918,571,4.771,842,1.584,1140,7.182,1141,5.293,1142,8.106,1143,7.441,1144,7.441,1145,9.026,1146,5.973,1147,8.484,1148,7.441,1149,5.973,1150,8.106,1151,7.441,1152,7.441]],["title/injectables/JwtAuthGuard.html",[0,0.626,476,3.417]],["body/injectables/JwtAuthGuard.html",[0,1.031,2,2.056,3,0.099,4,0.088,5,0.088,7,0.259,11,1.177,22,1.62,24,0.401,26,1.078,27,0.008,28,0.773,29,0.338,30,0.941,35,0.925,57,0.156,58,0.687,61,0.099,63,0.234,72,1.191,84,1.523,104,1.422,120,0.006,129,0.006,134,3.19,135,3.19,136,3.54,138,2.496,257,4.252,476,5.626,783,2.432,897,3.277,1153,5.304,1154,7.451,1155,5.986,1156,8.905,1157,5.986,1158,5.986,1159,4.855,1160,3.671,1161,4.855,1162,5.986,1163,3.838,1164,6.603,1165,5.986,1166,5.986,1167,5.986,1168,5.986]],["title/injectables/JwtOAuthGuard.html",[0,0.626,381,3.417]],["body/injectables/JwtOAuthGuard.html",[0,1.131,2,2.397,3,0.115,4,0.103,5,0.103,27,0.008,57,0.15,58,0.801,61,0.115,63,0.273,120,0.007,129,0.007,381,6.173,897,3.596,1159,5.661,1160,4.28,1169,6.184,1170,6.184,1171,8.175]],["title/injectables/JwtOauthStrategy.html",[0,0.626,462,3.046]],["body/injectables/JwtOauthStrategy.html",[0,0.764,2,1.317,3,0.063,4,0.056,5,0.056,7,0.166,11,0.872,12,2.225,22,1.495,24,0.42,26,1.131,27,0.008,28,0.836,29,0.355,30,0.987,32,4.122,35,1.16,36,2.565,45,1.208,57,0.148,58,0.44,61,0.063,63,0.15,65,2.328,72,1.64,104,1.433,120,0.005,129,0.005,139,1.179,204,2.724,206,2.748,267,2.257,268,2.022,354,2.57,372,2.896,397,2.442,411,5.251,413,3.111,414,3.115,415,2.548,416,5.251,420,2.171,422,2.171,462,3.718,465,4.398,469,2.724,471,2.896,482,2.459,484,3.387,496,6.341,515,3.111,561,3.387,698,3.924,880,2.771,897,2.43,1090,1.956,1092,3.111,1108,4.171,1160,2.352,1163,2.459,1172,6.535,1173,3.111,1174,4.171,1175,5.524,1176,5.524,1177,5.524,1178,5.524,1179,3.836,1180,7.139,1181,3.836,1182,4.895,1183,3.836,1184,6.276,1185,4.895,1186,3.836,1187,3.836,1188,4.895,1189,3.836,1190,4.895,1191,3.836,1192,4.895,1193,3.836,1194,2.896,1195,2.896,1196,2.724,1197,2.896,1198,4.171,1199,5.736,1200,2.724,1201,2.582,1202,2.896,1203,3.399,1204,3.399,1205,3.399,1206,3.399,1207,4.895,1208,3.399,1209,3.399,1210,3.399,1211,3.399,1212,3.399,1213,2.724,1214,3.399,1215,3.399,1216,3.399,1217,3.399,1218,3.399,1219,3.399,1220,3.399,1221,3.399,1222,3.399,1223,3.399,1224,3.399,1225,3.399,1226,3.399,1227,3.399,1228,3.399,1229,3.399]],["title/injectables/JwtStrategy.html",[0,0.626,463,3.215]],["body/injectables/JwtStrategy.html",[0,1.026,2,2.038,3,0.098,4,0.087,5,0.087,7,0.257,11,1.171,12,2.014,22,1.607,24,0.399,26,1.073,27,0.008,28,0.769,29,0.336,30,0.936,35,0.917,40,2.762,57,0.155,58,0.681,61,0.098,63,0.232,104,1.133,110,1.949,120,0.006,129,0.006,179,3.639,252,4.685,253,3.129,354,2.762,463,5.264,480,4.481,514,4.814,517,2.844,561,4.545,783,2.411,880,2.541,897,3.26,1160,3.639,1163,3.805,1174,5.596,1194,4.481,1195,4.481,1196,4.215,1230,5.259,1231,4.215,1232,5.935,1233,7.412,1234,5.935,1235,5.935,1236,5.935,1237,5.935,1238,5.935,1239,5.935,1240,5.935,1241,5.935,1242,5.935,1243,5.935]],["title/entities/Label.html",[533,2.106,1027,2.169]],["body/entities/Label.html",[3,0.109,4,0.097,5,0.097,7,0.287,8,1.575,24,0.356,27,0.008,28,0.957,29,0.3,45,1.071,57,0.145,61,0.109,63,0.258,120,0.007,129,0.007,173,1.211,192,1.211,533,3.685,535,4.24,544,2.172,556,2.909,557,2.332,574,2.033,1027,3.795,1244,5.86,1245,6.613,1246,6.613,1247,6.423]],["title/classes/LabelDto.html",[63,0.177,1248,3.215]],["body/classes/LabelDto.html",[3,0.111,4,0.099,5,0.099,7,0.29,8,1.587,24,0.36,27,0.008,28,0.916,29,0.304,45,1.079,57,0.146,61,0.111,63,0.312,120,0.007,129,0.007,173,1.226,192,1.226,544,2.198,550,5.429,557,2.349,560,3.008,563,2.15,574,2.058,842,1.775,1248,5.665,1249,5.931,1250,6.693]],["title/controllers/LabelsController.html",[167,1.175,1251,3.417]],["body/controllers/LabelsController.html",[3,0.076,4,0.068,5,0.068,7,0.2,11,0.994,12,2.183,24,0.385,26,0.911,27,0.008,28,0.743,29,0.349,30,0.795,35,1.106,36,2.496,45,1.04,57,0.147,58,0.53,61,0.076,63,0.181,65,2.021,72,0.919,104,1.366,120,0.005,129,0.005,131,1.743,167,1.2,169,1.421,173,1.311,180,3.552,186,1.927,189,1.978,192,0.846,206,2.516,325,4.32,337,4.035,345,4.195,347,4.374,358,2.283,369,2.846,374,3.11,377,4.634,378,1.978,398,4.529,400,3.907,414,2.032,415,1.662,432,2.719,513,2.09,745,2.616,753,4.212,754,4.052,772,2.834,775,2.522,778,2.09,783,1.878,805,5.173,808,4.195,880,1.978,1026,4.818,1027,3.017,1248,5.893,1251,4.752,1252,4.095,1253,4.621,1254,6.294,1255,4.621,1256,4.621,1257,3.489,1258,4.621,1259,4.095,1260,4.621,1261,4.621,1262,4.752,1263,4.39,1264,4.095,1265,4.095,1266,4.621,1267,4.621,1268,4.052,1269,4.621,1270,4.621,1271,4.621,1272,3.282,1273,4.621,1274,4.621,1275,4.621,1276,4.621,1277,4.621,1278,4.621,1279,4.095,1280,3.489,1281,4.621]],["title/modules/LabelsModule.html",[210,1.52,224,3.215]],["body/modules/LabelsModule.html",[3,0.104,4,0.093,5,0.093,27,0.008,57,0.163,58,0.724,61,0.104,63,0.247,120,0.006,129,0.006,169,2.367,210,2.79,212,2.855,213,2.938,214,3.119,215,3.119,216,3.119,217,4.105,218,3.026,224,6.407,236,3.805,237,3.119,238,3.119,240,3.119,249,3.574,250,2.776,1027,3.026,1251,6.273,1263,5.532,1264,5.594,1282,5.594,1283,5.594,1284,6.313,1285,6.313,1286,5.594,1287,6.313]],["title/injectables/LabelsService.html",[0,0.626,1263,2.776]],["body/injectables/LabelsService.html",[0,0.912,2,1.7,3,0.082,4,0.073,5,0.073,7,0.215,11,1.041,12,2.306,22,1.785,24,0.455,26,1.191,27,0.008,28,0.897,29,0.374,30,1.039,35,1.272,36,2.7,45,1.202,57,0.145,58,0.568,61,0.082,63,0.193,65,2.231,72,0.985,104,1.415,108,2.239,120,0.006,129,0.006,250,2.177,397,1.867,556,2.177,754,3.476,805,5.32,808,3.599,811,4.847,831,3.174,1027,3.945,1259,5.842,1262,6.215,1263,4.043,1286,4.387,1288,4.387,1289,5.842,1290,6.593,1291,4.951,1292,4.951,1293,5.842,1294,6.593,1295,4.951,1296,4.951,1297,6.593,1298,4.951,1299,6.593,1300,4.951,1301,4.951,1302,4.387,1303,4.951,1304,4.951,1305,6.593,1306,4.951,1307,4.951,1308,4.951]],["title/injectables/LocalAuthGuard.html",[0,0.626,379,3.417]],["body/injectables/LocalAuthGuard.html",[0,1.133,2,2.403,3,0.116,4,0.103,5,0.103,27,0.008,57,0.15,58,0.803,61,0.116,63,0.273,120,0.007,129,0.007,379,6.182,897,3.601,1159,5.675,1160,4.291,1309,6.2,1310,8.188]],["title/injectables/LocalStrategy.html",[0,0.626,464,3.215]],["body/injectables/LocalStrategy.html",[0,1.009,2,1.987,3,0.096,4,0.085,5,0.085,7,0.251,11,1.152,12,1.991,22,1.566,24,0.392,26,1.056,27,0.008,28,0.757,29,0.331,30,0.921,35,0.894,36,2.195,45,1.194,57,0.154,58,0.664,61,0.096,63,0.226,65,1.633,72,1.151,104,1.105,120,0.006,129,0.006,144,2.404,309,4.559,354,3.395,372,5.508,384,5.661,385,4.693,414,2.545,415,2.081,464,5.181,561,4.473,783,2.351,897,3.208,1160,3.548,1163,3.71,1174,5.508,1194,4.369,1195,4.369,1196,4.11,1311,5.127,1312,5.786,1313,5.786,1314,7.295,1315,5.786,1316,5.127,1317,5.786,1318,5.786,1319,5.786]],["title/classes/LoginDto.html",[63,0.177,388,3.417]],["body/classes/LoginDto.html",[3,0.106,4,0.094,5,0.094,7,0.278,8,1.547,24,0.418,27,0.008,29,0.353,45,1.177,57,0.143,61,0.106,63,0.304,120,0.007,129,0.007,173,1.424,192,1.175,309,4.411,354,3.893,388,5.87,544,2.553,557,2.464,563,2.06,574,2.39,842,1.701,866,6.317,1320,5.684,1321,6.415,1322,6.415,1323,6.415,1324,6.415,1325,6.415,1326,6.415]],["title/classes/LostPassworDto.html",[63,0.177,353,3.417]],["body/classes/LostPassworDto.html",[3,0.11,4,0.098,5,0.098,7,0.289,8,1.582,24,0.358,27,0.008,29,0.302,45,1.076,57,0.146,61,0.11,63,0.311,120,0.007,129,0.007,173,1.22,192,1.22,353,6.005,354,3.957,544,2.187,557,2.342,563,2.139,574,2.048,842,1.766,844,5.403,866,6.005,1327,7.047,1328,6.661,1329,6.661,1330,6.661]],["title/modules/MailModule.html",[210,1.52,225,3.215]],["body/modules/MailModule.html",[3,0.098,4,0.087,5,0.087,12,1.479,27,0.008,57,0.16,58,0.681,61,0.098,63,0.232,84,1.51,110,1.949,120,0.006,129,0.006,144,1.786,210,2.489,212,2.684,218,2.844,225,5.264,240,3.662,251,6.567,252,4.261,253,3.129,296,4.215,297,4.814,301,3.994,320,4.814,415,2.135,484,3.639,503,5.259,1097,5.259,1331,5.935,1332,5.259,1333,7.412,1334,6.011,1335,4.814,1336,7.412,1337,5.935,1338,7.412,1339,5.935,1340,5.935,1341,5.935,1342,5.935,1343,5.935,1344,5.935,1345,5.935,1346,5.935,1347,5.935,1348,5.935,1349,5.935,1350,5.935,1351,5.935,1352,5.935,1353,5.935,1354,4.814,1355,5.259]],["title/injectables/MailService.html",[0,0.626,392,3.046]],["body/injectables/MailService.html",[0,0.999,2,1.955,3,0.094,4,0.084,5,0.084,7,0.247,11,1.14,12,1.976,22,1.954,24,0.388,26,1.045,27,0.008,28,0.749,29,0.328,30,0.911,35,0.88,36,2.172,38,2.385,40,3.689,45,1.189,57,0.145,58,0.653,61,0.094,63,0.222,65,1.607,72,1.132,120,0.006,129,0.006,206,2.786,252,4.709,253,3.001,309,3.806,313,4.616,314,4.616,354,3.689,392,4.859,397,2.723,1334,4.616,1335,4.616,1356,5.043,1357,7.928,1358,5.691,1359,8.792,1360,5.691,1361,5.691,1362,5.691,1363,7.219,1364,5.691,1365,5.691,1366,5.691,1367,5.691,1368,5.691,1369,5.691,1370,5.691,1371,5.691,1372,5.691]],["title/injectables/MaskProcessingService.html",[0,0.626,1373,3.417]],["body/injectables/MaskProcessingService.html",[0,0.765,2,1.319,3,0.063,4,0.057,5,0.057,7,0.167,8,1.1,11,0.873,12,2.174,22,1.04,24,0.464,26,1.026,27,0.008,28,0.736,29,0.392,30,0.895,35,1.246,36,2.482,45,1.238,48,2.036,49,1.382,57,0.119,58,0.441,61,0.063,63,0.15,65,2.408,72,1.641,84,1.407,104,1.539,108,2.5,120,0.005,129,0.005,235,4.77,246,3.397,261,3.115,397,3.169,414,1.689,415,2.33,670,4.77,671,1.959,689,5.741,721,3.403,722,3.403,783,1.561,880,1.644,1373,4.175,1374,7.732,1375,3.403,1376,6.655,1377,7.51,1378,8.06,1379,7.087,1380,6.479,1381,7.087,1382,7.087,1383,5.529,1384,5.529,1385,7.087,1386,3.841,1387,5.529,1388,5.529,1389,3.841,1390,3.841,1391,7.087,1392,3.841,1393,3.841,1394,3.841,1395,5.529,1396,3.841,1397,5.529,1398,3.841,1399,3.841,1400,3.841,1401,3.841,1402,8.249,1403,7.087,1404,7.51,1405,3.841,1406,3.841,1407,3.841,1408,5.529,1409,3.841,1410,4.9,1411,3.841,1412,3.841,1413,5.529,1414,3.841,1415,4.9,1416,3.841,1417,3.841,1418,3.841,1419,3.403,1420,3.841,1421,3.403,1422,3.841,1423,4.9,1424,5.529,1425,3.403,1426,3.841,1427,3.841,1428,3.841,1429,3.841,1430,5.529,1431,3.841,1432,3.841]],["title/guards/ModifyGuard.html",[130,1.991,158,2.237]],["body/guards/ModifyGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.858,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,1433,4.09]],["title/injectables/NotFoundInterceptor.html",[0,0.626,258,3.417]],["body/injectables/NotFoundInterceptor.html",[0,1.041,2,2.088,3,0.1,4,0.089,5,0.089,7,0.263,11,1.188,24,0.327,26,0.88,27,0.008,28,0.631,29,0.276,30,0.767,35,0.939,57,0.15,58,0.697,61,0.1,63,0.237,104,1.16,120,0.006,129,0.006,136,3.559,138,2.534,141,2.602,258,5.679,414,3.308,415,2.186,556,2.673,1108,5.679,1200,4.317,1434,6.665,1435,5.385,1436,7.522,1437,7.522,1438,5.498,1439,8.536,1440,6.078,1441,7.239,1442,4.317,1443,7.522,1444,5.385,1445,7.522,1446,6.078,1447,6.078,1448,6.078,1449,6.078]],["title/entities/OauthConfig.html",[478,2.902,533,2.106]],["body/entities/OauthConfig.html",[3,0.094,4,0.084,5,0.084,7,0.246,8,1.434,24,0.448,27,0.008,28,0.865,29,0.378,45,1.222,57,0.132,61,0.094,63,0.222,120,0.006,123,2.593,129,0.006,173,1.526,192,1.04,268,4.534,478,4.622,533,3.355,535,3.642,544,2.736,554,5.109,556,2.498,557,2.532,574,2.561,1213,5.626,1247,5.847,1450,5.788,1451,5.033,1452,6.424,1453,6.424,1454,6.388,1455,5.68,1456,5.68,1457,6.388,1458,5.68,1459,5.68,1460,5.68,1461,5.68,1462,5.68,1463,5.68,1464,6.388,1465,5.033,1466,5.033]],["title/controllers/OauthConfigController.html",[167,1.175,1467,3.417]],["body/controllers/OauthConfigController.html",[3,0.068,4,0.061,5,0.061,7,0.179,11,0.921,12,2.131,24,0.363,26,0.844,27,0.008,28,0.855,29,0.351,30,0.736,35,1.044,36,1.755,45,0.913,57,0.147,58,0.475,61,0.068,63,0.162,65,1.906,72,1.16,84,1.483,104,1.289,120,0.005,129,0.005,131,1.561,167,1.075,169,1.272,173,1.236,179,3.576,180,2.496,181,3.357,182,2.31,186,1.726,187,3.183,188,3.357,189,1.772,191,3.576,192,0.758,206,2.049,267,5.247,268,3.865,325,4.303,336,5.983,337,3.739,345,4.001,347,3.865,358,2.045,365,4.73,369,2.637,374,2.786,375,4.73,377,4.591,378,1.772,398,4.497,400,3.183,414,2.565,415,2.098,432,3.973,465,3.685,482,2.653,484,5.595,513,1.872,745,2.343,775,2.259,778,1.872,783,1.682,880,1.772,1268,3.301,1280,5.535,1442,2.94,1450,4.934,1467,4.403,1468,3.667,1469,5.167,1470,5.167,1471,6.495,1472,3.667,1473,6.074,1474,4.139,1475,3.925,1476,4.139,1477,4.139,1478,4.139,1479,4.139,1480,3.667,1481,4.139,1482,5.831,1483,4.139,1484,4.139,1485,4.139,1486,5.831,1487,3.739,1488,4.139,1489,4.139,1490,3.667,1491,4.139,1492,4.139,1493,4.139,1494,4.139,1495,4.142,1496,4.139,1497,4.139,1498,4.139,1499,4.139,1500,4.139,1501,4.139,1502,4.139,1503,4.139,1504,4.139,1505,4.139,1506,4.139]],["title/classes/OauthConfigDto.html",[63,0.177,1473,3.215]],["body/classes/OauthConfigDto.html",[3,0.099,4,0.088,5,0.088,7,0.26,8,1.484,24,0.457,27,0.008,28,0.843,29,0.386,45,1.235,57,0.137,61,0.099,63,0.291,120,0.006,129,0.006,173,1.556,192,1.099,268,4.608,557,2.574,560,3.297,563,1.927,842,1.59,1213,5.769,1450,5.882,1452,6.587,1453,6.587,1473,5.3,1507,5.316,1508,8.497,1509,5.999,1510,5.999,1511,5.999,1512,5.999]],["title/modules/OauthConfigModule.html",[210,1.52,226,3.215]],["body/modules/OauthConfigModule.html",[3,0.103,4,0.092,5,0.092,27,0.008,57,0.162,58,0.716,61,0.103,63,0.244,120,0.006,129,0.006,169,2.351,210,2.776,212,2.823,213,2.904,214,3.084,215,3.084,216,3.084,217,4.085,218,2.992,226,6.39,236,3.778,237,3.084,238,3.084,240,3.084,249,3.534,250,2.745,267,4.864,268,3.291,465,4.91,478,4.002,479,4.713,482,4.002,1450,4.201,1467,6.241,1513,6.242,1514,6.242,1515,6.242,1516,6.242,1517,6.242]],["title/injectables/OauthConfigService.html",[0,0.626,465,2.47]],["body/injectables/OauthConfigService.html",[0,0.829,2,1.477,3,0.071,4,0.063,5,0.063,7,0.186,11,0.946,12,2.294,22,1.621,24,0.448,26,1.134,27,0.008,28,0.907,29,0.356,30,0.989,35,1.254,36,2.442,45,1.167,57,0.144,58,0.493,61,0.071,63,0.168,65,2.291,72,1.483,104,1.316,120,0.005,129,0.005,187,5.024,250,1.891,267,3.524,268,4.477,397,1.622,465,3.269,478,2.756,479,3.246,484,4.806,556,1.891,811,4.571,831,2.756,1105,2.434,1213,5.294,1438,2.893,1450,5.715,1452,3.487,1453,3.487,1454,3.809,1457,3.809,1464,5.306,1465,3.809,1466,3.809,1469,5.306,1470,5.306,1471,6.604,1472,5.306,1473,5.566,1480,5.306,1490,3.809,1518,3.809,1519,6.891,1520,5.989,1521,5.294,1522,4.299,1523,4.299,1524,5.989,1525,4.299,1526,4.299,1527,4.299,1528,4.299,1529,5.989,1530,4.299,1531,4.299,1532,4.299,1533,4.299,1534,5.989,1535,4.299,1536,4.299,1537,4.299,1538,4.299,1539,3.246,1540,3.246,1541,4.299,1542,4.299]],["title/entities/Option.html",[533,2.106,1105,2.562]],["body/entities/Option.html",[3,0.048,4,0.043,5,0.043,7,0.127,8,0.897,24,0.469,27,0.008,28,0.951,29,0.396,38,2.478,45,1.179,48,3.403,57,0.101,61,0.048,63,0.176,110,3.049,120,0.004,123,2.227,129,0.004,139,2.173,173,1.596,182,3.582,192,0.535,533,2.099,535,1.874,544,2.862,554,5.345,555,3.035,556,1.286,557,2.583,570,1.792,574,2.68,903,4.466,904,4.466,905,4.466,906,4.466,907,4.879,908,4.879,909,4.879,910,4.879,911,4.879,912,4.879,913,4.879,914,4.879,915,4.879,916,4.879,917,4.879,918,4.879,919,4.879,929,5.927,934,5.927,938,4.751,943,5.927,946,7.065,951,5.485,954,2.371,955,2.766,956,2.207,1105,2.553,1543,2.59,1544,2.923,1545,4.51,1546,2.923,1547,2.923,1548,4.51,1549,2.923,1550,4.51,1551,4.51,1552,2.923,1553,4.51,1554,2.923,1555,6.19,1556,4.51,1557,2.923,1558,2.923,1559,4.51,1560,2.923,1561,4.51,1562,2.923,1563,5.506,1564,4.51,1565,2.923,1566,2.923,1567,4.51,1568,2.923,1569,4.51,1570,2.923,1571,2.923,1572,4.51,1573,2.923,1574,4.51,1575,2.923,1576,2.923,1577,4.51,1578,2.923,1579,4.51,1580,4.51,1581,2.923,1582,4.51,1583,2.923,1584,4.51,1585,2.923,1586,2.923,1587,2.923,1588,2.923,1589,4.51,1590,2.923,1591,3.996,1592,2.59]],["title/controllers/OptionsController.html",[167,1.175,1593,3.417]],["body/controllers/OptionsController.html",[3,0.08,4,0.071,5,0.071,7,0.209,11,1.023,12,2.094,22,1.305,24,0.348,26,0.698,27,0.008,28,0.5,29,0.37,30,0.609,35,1.001,36,2.353,57,0.157,58,0.553,61,0.08,63,0.188,65,1.829,72,1.289,104,1.237,120,0.005,123,1.734,129,0.005,131,1.819,167,1.252,169,1.482,173,1.186,180,3.348,186,2.01,189,2.064,192,0.883,206,2.277,252,3.857,253,2.542,325,4.182,345,4.269,347,4.123,358,2.383,377,4.454,378,2.064,397,2.443,398,4.269,400,3.536,745,2.73,753,3.812,778,2.18,809,5.014,880,2.773,1006,6.161,1009,4.272,1010,4.272,1011,4.272,1012,4.272,1013,4.272,1014,4.272,1022,4.891,1047,6.343,1257,3.64,1268,3.667,1354,7.169,1593,4.891,1594,4.272,1595,4.822,1596,4.822,1597,4.822,1598,5.795,1599,4.822,1600,4.822,1601,4.822,1602,6.478,1603,3.972,1604,4.272,1605,3.911,1606,3.911,1607,4.822,1608,4.822,1609,4.272,1610,4.822,1611,4.822,1612,4.822,1613,4.822,1614,4.822,1615,4.272,1616,4.272,1617,4.822,1618,4.822]],["title/modules/OptionsModule.html",[210,1.52,227,3.215]],["body/modules/OptionsModule.html",[3,0.103,4,0.092,5,0.092,27,0.008,57,0.165,58,0.715,61,0.103,63,0.243,120,0.006,129,0.006,169,2.348,210,2.773,212,2.816,213,2.898,214,3.077,215,3.077,216,3.077,217,4.081,218,2.985,227,6.386,236,3.773,237,3.077,238,3.077,240,3.077,249,3.526,250,2.739,252,4.026,253,3.283,1105,3.526,1593,6.235,1603,5.514,1604,5.518,1619,5.518,1620,5.518,1621,6.228,1622,6.228,1623,5.518,1624,5.518]],["title/injectables/OptionsService.html",[0,0.626,1603,2.776]],["body/injectables/OptionsService.html",[0,0.964,2,1.849,3,0.089,4,0.079,5,0.079,7,0.233,11,1.1,12,2.25,22,1.885,24,0.439,26,1.008,27,0.008,28,0.723,29,0.316,30,0.879,35,1.193,36,2.457,57,0.155,58,0.618,61,0.089,63,0.21,65,2.18,72,1.071,104,1.027,120,0.006,123,1.936,129,0.006,187,4.215,250,2.367,397,2.03,556,2.367,809,4.466,811,5.008,831,3.451,903,4.366,904,4.366,905,4.366,906,4.366,954,4.366,955,4.271,956,4.064,1022,4.064,1047,6.623,1105,4.623,1438,3.623,1521,5.8,1539,4.064,1540,4.064,1592,4.769,1598,5.8,1603,4.271,1605,4.366,1623,4.769,1625,4.769,1626,5.382,1627,5.382,1628,6.965,1629,5.382,1630,5.382,1631,6.965,1632,5.382,1633,4.769,1634,5.382,1635,5.382,1636,5.382,1637,5.382]],["title/interfaces/OrGuardOptions.html",[1201,3.046,1638,3.417]],["body/interfaces/OrGuardOptions.html",[3,0.079,4,0.07,5,0.07,7,0.206,8,1.277,27,0.008,29,0.33,30,0.81,36,1.931,57,0.143,58,0.546,61,0.079,63,0.186,72,1.445,84,1.21,104,1.729,110,2.107,120,0.005,129,0.005,130,3.919,132,2.823,134,3.329,135,2.036,136,3.029,138,2.676,139,2.497,141,2.036,199,2.596,257,3.378,296,3.378,397,3.156,645,5.205,880,2.036,1200,3.378,1201,3.201,1355,4.214,1441,7.415,1444,4.214,1638,5.872,1639,3.857,1640,3.857,1641,7.777,1642,6.418,1643,4.755,1644,6.418,1645,6.418,1646,6.418,1647,6.418,1648,6.418,1649,4.755,1650,4.755,1651,4.755,1652,4.214,1653,4.755,1654,4.755,1655,4.755,1656,4.755,1657,4.755,1658,4.755,1659,4.755,1660,4.755,1661,4.755,1662,4.755,1663,4.755,1664,4.755,1665,4.755,1666,4.755,1667,4.755,1668,6.418,1669,4.755,1670,4.755,1671,4.755,1672,4.755,1673,4.755,1674,4.755,1675,4.755,1676,4.755,1677,4.755,1678,4.755,1679,4.755,1680,4.755,1681,4.755,1682,4.755,1683,4.755]],["title/controllers/OrthancAdminController.html",[167,1.175,1684,3.417]],["body/controllers/OrthancAdminController.html",[3,0.044,4,0.039,5,0.039,7,0.115,11,0.662,18,2.372,24,0.445,26,1.196,27,0.008,28,0.867,29,0.375,30,1.044,35,1.278,57,0.125,58,0.305,59,2.569,61,0.044,63,0.104,84,0.677,110,1.376,120,0.004,123,2.116,129,0.004,131,1.003,142,2.793,167,1.088,169,0.818,173,1.514,180,3.851,181,2.157,182,1.66,186,1.109,189,1.139,191,2.569,192,0.487,206,2.905,246,3.962,325,2.008,369,1.203,378,1.139,513,1.203,615,2.219,641,2.569,664,1.314,665,1.275,694,4.359,778,1.203,783,1.081,1090,4.85,1091,1.506,1094,5.462,1268,4.68,1684,3.164,1685,5.125,1686,2.357,1687,5.184,1688,5.184,1689,5.184,1690,5.184,1691,5.184,1692,5.184,1693,5.184,1694,5.184,1695,5.184,1696,5.184,1697,5.184,1698,5.184,1699,5.184,1700,2.66,1701,5.692,1702,2.66,1703,2.66,1704,2.66,1705,2.66,1706,2.66,1707,2.66,1708,2.66,1709,2.66,1710,2.66,1711,2.66,1712,2.66,1713,2.66,1714,2.66,1715,2.66,1716,2.66,1717,2.66,1718,2.66,1719,2.66,1720,4.19,1721,4.19,1722,2.66,1723,2.66,1724,2.66,1725,2.66,1726,4.19,1727,2.66,1728,2.66,1729,2.66,1730,2.66,1731,2.66,1732,2.66,1733,2.66,1734,2.66,1735,2.66,1736,2.66,1737,2.66,1738,2.66,1739,2.66,1740,2.66,1741,2.66,1742,2.66,1743,2.66,1744,2.66,1745,2.66,1746,1.889,1747,1.506,1748,1.631,1749,1.631,1750,2.66,1751,5.069,1752,2.66,1753,2.66,1754,2.66,1755,2.66,1756,2.66,1757,2.66,1758,2.66,1759,2.66,1760,2.66,1761,2.66,1762,2.66,1763,2.66,1764,2.66,1765,2.66]],["title/controllers/OrthancController.html",[167,1.175,1766,3.417]],["body/controllers/OrthancController.html",[3,0.061,4,0.054,5,0.054,7,0.159,11,0.845,24,0.427,26,1.15,27,0.008,28,0.846,29,0.361,30,1.003,35,1.228,45,0.854,46,3.684,57,0.149,58,0.421,61,0.061,63,0.143,104,0.7,120,0.004,129,0.004,130,1.613,131,1.384,142,2.726,144,1.104,149,2.563,151,2.489,153,2.643,164,1.707,167,1.389,169,1.128,173,1.456,180,3.703,186,3.21,189,1.57,192,0.672,193,2.25,199,2.002,200,2.25,206,2.706,246,3.69,369,1.659,378,1.57,513,1.659,517,1.758,615,2.702,664,1.813,665,1.758,694,4.059,754,1.934,775,2.002,783,1.491,938,2.606,1026,2.469,1027,1.758,1090,4.78,1091,2.077,1094,5.332,1262,4.766,1701,5.556,1746,2.606,1747,2.077,1748,2.25,1749,2.25,1751,4.721,1766,4.038,1767,3.251,1768,6.312,1769,6.312,1770,6.312,1771,6.312,1772,6.312,1773,5.348,1774,5.348,1775,3.668,1776,3.668,1777,5.348,1778,3.668,1779,3.668,1780,3.668,1781,3.668,1782,3.668,1783,3.668,1784,3.668,1785,3.668,1786,3.668,1787,3.668,1788,3.668,1789,3.668,1790,3.668,1791,3.668,1792,5.348,1793,3.668,1794,3.668,1795,3.668,1796,3.668,1797,3.668,1798,3.668,1799,3.668,1800,3.668,1801,3.668,1802,3.668,1803,3.668,1804,3.668,1805,3.668,1806,3.668,1807,3.668,1808,3.668,1809,3.668,1810,3.668,1811,3.668,1812,3.668,1813,3.668,1814,2.77]],["title/controllers/OrthancDeleteController.html",[167,1.175,1815,3.417]],["body/controllers/OrthancDeleteController.html",[3,0.083,4,0.074,5,0.074,7,0.217,11,1.047,24,0.4,26,1.078,27,0.008,28,0.773,29,0.338,30,0.94,35,1.151,57,0.156,58,0.573,61,0.083,63,0.195,120,0.006,129,0.006,142,2.727,155,2.394,167,1.722,169,1.536,173,1.364,180,3.633,186,2.083,189,2.138,192,0.915,206,2.617,246,3.569,378,2.138,513,2.259,615,3.188,664,2.468,665,2.394,694,3.926,778,2.259,783,2.03,1090,4.76,1091,2.828,1094,5.29,1685,4.865,1701,5.513,1747,2.828,1748,3.063,1749,3.063,1751,4.566,1815,5.008,1816,4.426,1817,7.446,1818,7.446,1819,7.446,1820,4.995,1821,4.995,1822,4.995,1823,4.995,1824,4.995,1825,4.995,1826,4.995,1827,4.995,1828,4.995,1829,4.995,1830,6.598,1831,4.995,1832,4.995]],["title/classes/OrthancEventPayloadDto.html",[63,0.177,621,3.417]],["body/classes/OrthancEventPayloadDto.html",[3,0.083,4,0.074,5,0.074,7,0.219,8,1.329,24,0.458,27,0.008,29,0.386,38,2.01,45,1.193,57,0.137,61,0.083,63,0.261,84,2.166,120,0.006,123,2.693,129,0.006,173,1.559,182,3.621,192,0.925,320,6.072,525,5.317,543,4.591,544,2.795,557,2.557,559,2.859,560,3.125,563,1.622,569,3.237,574,2.617,596,3.587,621,5.044,660,7.043,842,1.339,867,5.044,955,4.097,976,5.362,1833,7.694,1834,4.474,1835,7.486,1836,7.486,1837,7.486,1838,5.919,1839,5.05,1840,5.05,1841,6.68,1842,5.05,1843,5.05,1844,5.05,1845,5.05,1846,5.05,1847,5.05]],["title/controllers/OrthancExportController.html",[167,1.175,1848,3.417]],["body/controllers/OrthancExportController.html",[3,0.063,4,0.056,5,0.056,7,0.164,11,0.865,24,0.432,26,1.162,27,0.008,28,0.833,29,0.365,30,1.014,35,1.241,57,0.143,58,0.435,61,0.063,63,0.148,120,0.005,129,0.005,142,2.775,149,1.818,167,1.423,169,1.166,173,1.471,180,3.79,186,1.582,189,1.624,192,0.695,206,2.822,246,3.849,369,1.716,378,1.624,615,2.754,664,1.875,665,1.818,694,4.234,778,1.716,783,1.541,1090,4.824,1091,2.148,1094,5.412,1685,5.042,1701,5.64,1747,2.148,1748,2.326,1749,2.326,1751,4.924,1848,4.138,1849,3.362,1850,6.434,1851,6.434,1852,6.434,1853,6.434,1854,6.434,1855,6.434,1856,6.434,1857,3.794,1858,5.701,1859,3.794,1860,3.794,1861,3.794,1862,3.794,1863,3.794,1864,3.794,1865,6.434,1866,3.794,1867,3.794,1868,3.794,1869,3.794,1870,3.794,1871,3.794,1872,3.794,1873,3.794,1874,3.794,1875,3.794,1876,3.794,1877,3.794,1878,3.794,1879,3.794,1880,3.794,1881,8.03,1882,5.701,1883,3.794,1884,3.794,1885,3.794,1886,3.794,1887,3.794]],["title/controllers/OrthancImportController.html",[167,1.175,1888,3.417]],["body/controllers/OrthancImportController.html",[3,0.089,4,0.079,5,0.079,7,0.233,11,1.1,24,0.375,26,1.008,27,0.008,28,0.723,29,0.316,30,0.879,35,1.076,57,0.159,58,0.618,61,0.089,63,0.21,120,0.006,129,0.006,140,2.66,142,2.689,167,1.809,169,1.655,173,1.276,180,3.496,186,2.244,189,2.304,192,0.986,206,2.448,246,3.338,369,2.434,378,2.304,615,3.306,664,2.66,665,2.58,694,3.672,778,2.434,783,2.187,1090,4.706,1091,3.047,1094,5.188,1685,4.736,1701,5.407,1747,3.047,1748,3.301,1749,3.301,1751,4.271,1858,4.769,1882,4.769,1888,5.259,1889,4.769,1890,7.722,1891,7.722,1892,5.382,1893,5.382,1894,5.382,1895,5.382,1896,5.382,1897,5.382,1898,5.382,1899,6.965,1900,5.382]],["title/controllers/OrthancModifyController.html",[167,1.175,1901,3.417]],["body/controllers/OrthancModifyController.html",[3,0.083,4,0.074,5,0.074,7,0.217,11,1.047,24,0.4,26,1.078,27,0.008,28,0.773,29,0.338,30,0.94,35,1.151,57,0.156,58,0.573,61,0.083,63,0.195,120,0.006,129,0.006,142,2.727,158,2.468,167,1.722,169,1.536,173,1.364,180,3.633,186,2.083,189,2.138,192,0.915,206,2.617,246,3.569,369,2.259,378,2.138,615,3.188,664,2.468,665,2.394,694,3.926,778,2.259,783,2.03,1090,4.76,1091,2.828,1094,5.29,1685,4.865,1701,5.513,1747,2.828,1748,3.063,1749,3.063,1751,4.566,1901,5.008,1902,4.426,1903,7.446,1904,7.446,1905,7.446,1906,4.995,1907,4.995,1908,4.995,1909,4.995,1910,4.995,1911,4.995,1912,4.995,1913,4.995,1914,4.995,1915,4.995,1916,7.446,1917,4.995,1918,4.995]],["title/modules/OrthancModule.html",[210,1.52,228,3.215]],["body/modules/OrthancModule.html",[3,0.096,4,0.085,5,0.085,27,0.008,57,0.168,58,0.665,61,0.096,63,0.227,120,0.006,129,0.006,169,2.246,210,2.685,212,2.622,213,2.698,214,2.865,215,2.865,216,2.865,217,3.951,218,2.779,228,6.275,236,3.609,237,2.865,238,2.865,240,2.865,615,3.782,664,2.865,665,2.779,1684,6.038,1766,6.038,1815,6.038,1848,6.038,1888,6.038,1901,6.038,1919,5.798,1920,5.798,1921,5.798,1922,6.038,1923,7.828,1924,5.798,1925,5.798,1926,5.798,1927,5.798,1928,5.798,1929,5.798,1930,5.138]],["title/injectables/OrthancMonitoringTask.html",[0,0.626,1931,3.215]],["body/injectables/OrthancMonitoringTask.html",[0,0.982,2,1.904,3,0.092,4,0.082,5,0.082,7,0.24,8,1.412,11,1.121,12,1.951,22,1.922,24,0.421,26,0.802,27,0.008,28,0.575,29,0.322,30,0.7,34,3.4,35,0.857,38,2.136,48,2.042,49,1.994,57,0.151,58,0.636,61,0.092,63,0.217,65,2.004,72,1.103,108,3.541,120,0.006,129,0.006,173,1.015,265,4.186,271,3.938,272,3.938,397,3.22,615,3.738,664,2.739,665,2.657,812,6.939,813,7.317,1931,5.042,1932,7.317,1933,4.912,1934,7.831,1935,8.257,1936,4.912,1937,7.099,1938,7.099,1939,5.544,1940,4.912,1941,4.912,1942,7.831,1943,5.544,1944,5.544,1945,5.544,1946,5.544,1947,5.544,1948,5.544,1949,5.544,1950,5.544]],["title/controllers/OrthancQueryController.html",[167,1.175,1922,3.417]],["body/controllers/OrthancQueryController.html",[3,0.069,4,0.062,5,0.062,7,0.181,11,0.928,12,1.692,24,0.396,26,1.066,27,0.008,28,0.764,29,0.334,30,0.93,35,1.138,45,0.919,57,0.155,58,0.48,61,0.069,63,0.163,65,1.658,72,1.465,104,1.121,120,0.005,123,2.649,129,0.005,142,2.642,151,1.946,167,1.526,169,1.286,173,1.349,179,2.565,180,3.444,186,1.744,189,1.79,192,0.766,206,2.386,246,3.254,358,2.903,369,1.891,378,1.79,615,2.907,664,2.067,665,2.004,671,2.133,693,5.205,694,3.58,775,2.283,778,1.891,783,1.699,965,2.133,1090,4.66,1091,2.368,1094,5.111,1685,4.757,1701,5.327,1747,2.368,1748,2.565,1749,2.565,1751,4.164,1922,4.436,1951,3.392,1952,6.79,1953,6.79,1954,6.79,1955,6.79,1956,4.182,1957,4.182,1958,4.182,1959,4.182,1960,4.182,1961,3.706,1962,4.182,1963,6.79,1964,4.957,1965,4.182,1966,4.182,1967,4.182,1968,4.182,1969,4.182,1970,4.182,1971,3.954,1972,3.954,1973,4.182,1974,2.971,1975,4.182,1976,2.565,1977,4.182,1978,6.526,1979,4.182,1980,4.182,1981,4.182,1982,3.706,1983,5.875,1984,2.971,1985,4.182,1986,5.875,1987,4.182,1988,4.182,1989,4.182,1990,4.182,1991,4.182,1992,4.182,1993,4.182,1994,3.706,1995,4.182,1996,5.875,1997,4.182,1998,4.182,1999,4.182,2000,4.182,2001,4.182,2002,4.182,2003,4.182,2004,4.182]],["title/controllers/OrthancReadAllController.html",[167,1.175,283,3.417]],["body/controllers/OrthancReadAllController.html",[3,0.076,4,0.068,5,0.068,7,0.2,11,0.992,24,0.413,26,1.111,27,0.008,28,0.797,29,0.348,30,0.969,35,1.186,57,0.152,58,0.528,61,0.076,63,0.18,120,0.005,129,0.005,142,2.729,164,2.143,167,1.631,169,1.416,173,1.406,180,3.696,186,1.92,189,1.972,192,0.843,206,2.697,246,3.678,283,4.742,285,6.064,369,2.083,378,1.972,513,2.083,615,3.059,664,2.276,665,2.207,694,4.047,778,2.083,783,1.871,1090,4.784,1091,2.607,1094,5.337,1685,4.925,1701,5.562,1746,3.271,1747,2.607,1748,2.824,1749,2.824,1751,4.707,2005,4.081,2006,7.146,2007,6.28,2008,7.146,2009,7.146,2010,4.606,2011,4.606,2012,4.606,2013,4.606,2014,4.606,2015,4.606,2016,4.606,2017,4.606,2018,4.606,2019,4.606,2020,4.606,2021,4.606,2022,4.606,2023,6.801,2024,4.606,2025,4.606,2026,4.606,2027,4.606]],["title/controllers/ProcessingController.html",[167,1.175,2028,3.417]],["body/controllers/ProcessingController.html",[3,0.052,4,0.046,5,0.046,7,0.136,10,2.802,11,0.752,12,2.151,13,3.872,18,3.257,21,3.205,22,0.849,24,0.371,26,0.929,27,0.008,28,0.754,29,0.369,30,0.811,32,2.51,35,1.167,36,2.444,38,1.731,40,3.213,44,1.924,45,1.022,50,4.781,57,0.143,58,0.36,59,4.234,60,2.012,61,0.052,63,0.123,65,2.052,72,1.446,73,3.872,75,2.78,84,0.798,96,2.545,100,2.545,104,1.226,110,1.03,112,3.205,120,0.006,123,1.713,124,2.545,125,2.78,126,2.78,127,2.78,129,0.004,131,1.184,142,2.636,144,1.933,157,2.282,164,1.46,167,0.815,169,0.965,173,1.265,180,3.478,182,2.736,186,1.308,189,1.343,191,2.92,192,0.575,199,1.713,200,1.924,206,2.427,325,4.369,337,3.053,345,4.247,347,4.284,351,4.323,358,2.353,369,2.153,373,1.924,377,4.67,378,1.343,397,1.184,398,4.623,400,3.769,414,2.094,415,1.713,513,2.153,614,3.528,668,2.012,713,4.344,745,1.776,753,4.063,772,1.924,775,1.713,778,1.419,808,2.599,880,1.343,883,3.595,965,1.6,1268,2.695,1475,3.872,1814,2.369,2023,2.78,2028,3.595,2029,2.78,2030,4.667,2031,4.85,2032,4.344,2033,3.138,2034,5.237,2035,3.382,2036,3.595,2037,3.138,2038,3.138,2039,2.369,2040,2.369,2041,3.138,2042,5.488,2043,2.369,2044,3.138,2045,3.138,2046,2.369,2047,2.369,2048,2.369,2049,3.138,2050,2.78,2051,2.369,2052,3.138,2053,3.138,2054,2.229,2055,3.595,2056,2.78,2057,2.545,2058,3.138,2059,3.138,2060,3.138,2061,2.369,2062,3.138,2063,4.344,2064,2.369,2065,4.344,2066,3.138,2067,3.138,2068,2.369,2069,2.369,2070,2.369,2071,3.138,2072,3.138,2073,3.595,2074,3.138,2075,3.138,2076,3.138,2077,2.369,2078,2.369,2079,2.229,2080,2.369,2081,3.138,2082,2.369,2083,3.138,2084,3.138]],["title/classes/ProcessingFile.html",[63,0.177,2085,3.417]],["body/classes/ProcessingFile.html",[3,0.097,4,0.086,5,0.086,7,0.254,8,1.463,11,1.161,22,1.586,24,0.467,26,0.848,27,0.008,28,0.608,29,0.419,30,0.74,35,1.136,45,1.273,61,0.097,63,0.229,104,1.404,120,0.006,123,3.122,129,0.006,187,4.835,397,3.341,842,1.554,2085,5.552,2086,5.192,2087,8.426,2088,8.426,2089,7.353,2090,7.353,2091,5.86,2092,5.86,2093,5.86,2094,7.353,2095,7.353]],["title/classes/ProcessingJobDto.html",[63,0.177,2034,3.046]],["body/classes/ProcessingJobDto.html",[3,0.095,4,0.085,5,0.085,7,0.249,8,1.444,24,0.39,27,0.008,29,0.329,45,0.982,48,2.113,57,0.146,61,0.12,63,0.311,84,2.194,110,2.613,120,0.006,129,0.006,139,1.764,173,1.329,182,3.491,192,1.051,557,2.635,558,3.961,559,3.249,560,3.002,563,1.843,669,6.314,670,4.884,671,2.927,715,6.455,717,5.356,718,4.333,719,4.333,720,4.654,723,4.654,842,1.521,1028,5.886,2034,4.884,2096,6.009,2097,4.654,2098,5.154,2099,5.738,2100,5.738,2101,6.009,2102,5.738,2103,5.738,2104,4.108,2105,5.085,2106,5.085]],["title/modules/ProcessingModule.html",[210,1.52,229,3.215]],["body/modules/ProcessingModule.html",[3,0.106,4,0.095,5,0.095,27,0.008,57,0.154,58,0.739,61,0.106,63,0.252,120,0.007,129,0.007,169,2.397,210,2.815,212,2.914,213,2.999,214,3.185,215,3.185,216,3.185,217,4.142,218,3.089,229,6.438,236,3.853,237,3.185,238,3.185,240,3.185,614,5.559,668,4.132,2028,6.329,2030,5.227,2107,6.445,2108,6.445,2109,6.445,2110,6.445]],["title/injectables/ProcessingQueueService.html",[0,0.626,614,2.776]],["body/injectables/ProcessingQueueService.html",[0,0.741,2,1.262,3,0.061,4,0.054,5,0.054,7,0.159,8,1.065,10,3.717,11,0.845,12,2.248,13,4.251,16,4.93,17,4.93,18,3.576,21,3.603,22,0.994,24,0.438,26,1.068,27,0.008,28,0.766,29,0.35,30,0.932,34,3.283,35,1.19,36,2.603,38,2.5,40,3.867,45,1.042,46,3.483,48,1.353,49,1.321,50,2.161,57,0.135,58,0.421,59,4.525,60,2.355,61,0.061,63,0.143,65,2.174,72,1.68,73,4.966,78,4.744,84,0.934,85,4.744,86,3.255,87,3.255,88,3.255,89,3.255,90,3.255,91,3.255,92,3.255,93,3.255,94,3.255,95,3.255,96,4.342,97,3.255,99,3.255,100,2.979,101,3.255,102,3.255,103,3.255,104,1.47,105,4.744,106,3.255,112,4.672,113,3.255,118,3.255,120,0.004,121,3.255,124,5.123,129,0.004,252,4.061,253,1.937,301,2.472,303,2.609,304,2.609,397,2.383,415,1.321,510,2.355,614,3.283,713,6.274,783,1.492,880,1.572,1231,2.609,1615,3.255,1616,3.255,2030,2.979,2034,5.485,2050,4.744,2056,3.255,2096,6.274,2111,3.255,2112,6.317,2113,5.353,2114,5.353,2115,3.673,2116,3.673,2117,3.673,2118,3.673,2119,3.673,2120,3.673,2121,5.353,2122,3.673,2123,3.673,2124,3.603,2125,3.673,2126,3.673,2127,2.773,2128,2.773,2129,3.673,2130,3.673,2131,3.673,2132,3.673,2133,3.673,2134,5.353,2135,3.673]],["title/classes/QueryAnswer.html",[63,0.177,2136,3.215]],["body/classes/QueryAnswer.html",[3,0.052,4,0.047,5,0.047,7,0.137,8,0.954,22,1.298,24,0.482,26,0.458,27,0.008,28,0.329,29,0.376,30,0.4,38,2.195,45,1.279,48,3.047,49,2.929,57,0.058,61,0.052,62,2.806,63,0.124,108,4.158,120,0.004,129,0.004,246,3.903,641,4.785,671,1.615,842,0.839,1976,4.646,2136,3.405,2137,6.796,2138,2.806,2139,6.032,2140,6.479,2141,6.479,2142,6.479,2143,4.522,2144,4.522,2145,6.032,2146,4.693,2147,4.693,2148,4.693,2149,4.693,2150,4.693,2151,4.693,2152,4.693,2153,4.693,2154,4.693,2155,4.693,2156,4.522,2157,4.522,2158,3.166,2159,4.794,2160,3.166,2161,3.166,2162,3.166,2163,3.166,2164,3.166,2165,3.166,2166,3.166,2167,3.166,2168,3.166,2169,3.166,2170,3.166,2171,3.166,2172,3.166,2173,3.166,2174,3.166,2175,3.166,2176,3.166,2177,3.166,2178,3.166,2179,4.794,2180,4.794,2181,4.794,2182,4.794,2183,4.794,2184,4.794,2185,4.794,2186,4.794,2187,4.794,2188,4.794]],["title/guards/QueryGuard.html",[130,1.991,151,2.106]],["body/guards/QueryGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,2.691,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,1.903,165,2.232,2189,4.09]],["title/classes/QueryParsedAnswerDto.html",[63,0.177,1964,3.046]],["body/classes/QueryParsedAnswerDto.html",[3,0.083,4,0.074,5,0.074,7,0.219,8,1.327,24,0.359,27,0.008,29,0.303,45,1.243,46,2.279,57,0.137,61,0.124,63,0.311,120,0.006,129,0.006,173,1.222,192,0.923,544,1.655,557,2.742,559,2.853,560,3.483,563,1.619,574,2.839,641,4.587,671,2.571,842,1.336,965,3.815,1964,4.491,1971,5.034,1972,5.034,1974,5.313,1976,4.882,1984,3.58,2098,4.739,2104,3.777,2143,2.853,2144,2.853,2156,2.853,2157,2.853,2190,5.647,2191,3.806,2192,5.04,2193,5.04,2194,5.04,2195,5.04,2196,3.392,2197,3.232,2198,4.882,2199,3.232,2200,3.232,2201,3.232,2202,3.091,2203,3.232,2204,3.091,2205,3.232,2206,3.091,2207,3.232,2208,3.232,2209,3.232,2210,3.232,2211,3.392,2212,3.392,2213,3.232,2214,2.966,2215,4.088]],["title/injectables/QueryQueueTask.html",[0,0.626,2216,3.215]],["body/injectables/QueryQueueTask.html",[0,0.961,2,1.842,3,0.089,4,0.079,5,0.079,7,0.232,11,1.097,12,1.921,22,1.881,24,0.374,26,0.776,27,0.008,28,0.557,29,0.243,30,0.677,35,0.829,57,0.162,58,0.615,61,0.089,63,0.209,65,2.302,72,1.68,120,0.006,129,0.006,173,0.982,250,2.358,265,4.048,397,2.621,415,2.499,556,2.358,811,5,831,3.438,1105,3.933,1354,4.349,1633,4.751,1940,4.751,1941,4.751,2216,4.935,2217,6.83,2218,4.751,2219,8.154,2220,5.362,2221,7.708,2222,5,2223,5.362,2224,6.948,2225,6.948,2226,5.362,2227,4.751,2228,4.048,2229,4.349,2230,5.635,2231,5.362,2232,4.349,2233,5.362,2234,5.362,2235,6.156,2236,5.362,2237,6.156,2238,5.362,2239,7.708,2240,5.362,2241,5.362,2242,5.362,2243,5.362,2244,7.708,2245,5.362,2246,5.362,2247,5.362]],["title/classes/QuerySeriesAnswer.html",[63,0.177,2248,3.671]],["body/classes/QuerySeriesAnswer.html",[3,0.043,4,0.038,5,0.038,7,0.112,8,0.813,22,1.107,24,0.489,26,0.373,27,0.008,28,0.268,29,0.384,30,0.325,38,2.523,45,1.27,48,3.203,49,3.11,57,0.075,61,0.043,63,0.101,108,4.258,120,0.003,129,0.003,246,3.214,641,2.507,671,1.315,842,0.684,897,1.798,1163,1.653,1976,2.507,1984,1.831,2136,6.241,2137,6.198,2139,5.064,2140,5.112,2141,5.44,2142,5.44,2143,3.797,2144,3.797,2145,5.064,2146,3.316,2147,3.316,2148,3.316,2149,3.316,2150,3.316,2151,3.316,2152,3.316,2153,3.316,2154,3.316,2155,3.316,2156,3.797,2157,3.797,2197,3.706,2198,4.604,2202,4.604,2204,4.604,2206,3.865,2214,3.709,2248,3.316,2249,6.658,2250,2.285,2251,7.508,2252,5.08,2253,5.08,2254,5.08,2255,5.08,2256,5.08,2257,4.501,2258,2.285,2259,5.781,2260,4.088,2261,2.578,2262,2.578,2263,2.578,2264,2.578,2265,2.578,2266,2.578,2267,2.578,2268,2.578,2269,2.578,2270,2.578,2271,2.578,2272,6.14,2273,2.285,2274,2.285,2275,2.285,2276,2.285,2277,2.285,2278,2.285,2279,2.285,2280,2.285,2281,2.285,2282,2.285,2283,2.285,2284,2.285,2285,2.285,2286,2.285,2287,2.285,2288,2.285,2289,2.285,2290,2.285,2291,2.285,2292,2.285,2293,2.285,2294,2.578,2295,3.622,2296,4.088,2297,4.088,2298,4.088,2299,4.088,2300,4.088]],["title/classes/QuerySeriesDto.html",[63,0.177,1971,3.046]],["body/classes/QuerySeriesDto.html",[3,0.076,4,0.068,5,0.068,7,0.201,8,1.253,24,0.446,27,0.008,29,0.377,45,1.26,57,0.131,61,0.118,63,0.3,120,0.005,129,0.005,173,1.52,192,0.848,544,2.726,557,2.714,559,2.62,560,3.443,563,1.487,574,2.807,641,2.838,671,2.361,842,1.227,965,2.361,1964,3.115,1971,4.822,1972,4.241,1974,6.033,1976,4.393,1984,3.288,2098,3.288,2104,3.567,2143,2.62,2144,2.62,2156,2.62,2157,2.62,2190,6.413,2191,3.495,2196,3.115,2197,4.593,2198,5.09,2199,2.968,2200,4.593,2201,2.968,2202,4.393,2203,2.968,2204,4.393,2205,2.968,2206,4.393,2207,2.968,2208,2.968,2209,2.968,2210,2.968,2211,3.115,2212,3.115,2213,2.968,2214,2.724,2215,3.754,2301,3.495,2302,4.629,2303,4.101,2304,4.629,2305,4.101,2306,4.629,2307,4.101,2308,4.629,2309,4.101,2310,4.629,2311,4.101,2312,4.629]],["title/classes/QueryStudyAnswer.html",[63,0.177,2313,3.671]],["body/classes/QueryStudyAnswer.html",[3,0.047,4,0.042,5,0.042,7,0.123,8,0.879,22,1.197,24,0.489,26,0.412,27,0.008,28,0.296,29,0.385,30,0.36,38,2.572,45,1.264,48,3.196,49,3.1,57,0.081,61,0.047,63,0.111,108,4.256,120,0.004,129,0.004,246,2.926,641,2.711,671,1.453,842,0.755,897,1.944,1163,1.826,1976,2.711,1994,2.524,2136,6.33,2137,5.977,2139,5.281,2140,5.36,2141,5.673,2142,5.673,2143,3.959,2144,3.959,2145,5.281,2146,3.585,2147,3.585,2148,3.585,2149,3.585,2150,3.585,2151,3.585,2152,3.585,2153,3.585,2154,3.585,2155,3.585,2156,3.959,2157,3.959,2214,4.558,2249,6.42,2257,4.8,2258,2.524,2272,6.239,2273,2.524,2274,2.524,2275,2.524,2276,2.524,2277,2.524,2278,2.524,2279,2.524,2280,2.524,2281,2.524,2282,2.524,2283,2.524,2284,2.524,2285,2.524,2286,2.524,2287,2.524,2288,2.524,2289,2.524,2290,2.524,2291,2.524,2292,2.524,2293,2.524,2295,3.917,2313,3.585,2314,2.524,2315,7.746,2316,7.746,2317,7.746,2318,5.417,2319,5.417,2320,5.417,2321,4.42,2322,2.848,2323,2.848,2324,2.848,2325,2.848,2326,2.848,2327,2.848,2328,2.848,2329,4.42,2330,4.42,2331,4.42]],["title/classes/QueryStudyDto.html",[63,0.177,1972,3.046]],["body/classes/QueryStudyDto.html",[3,0.075,4,0.067,5,0.067,7,0.196,8,1.235,24,0.454,27,0.008,29,0.383,45,1.261,57,0.13,61,0.117,63,0.298,120,0.005,129,0.005,173,1.547,192,0.83,544,2.773,557,2.707,559,2.565,560,3.433,563,1.455,574,2.798,641,2.778,671,2.311,842,1.201,965,2.311,1964,3.049,1971,4.179,1972,4.769,1974,6.109,1976,4.345,1984,3.218,2098,3.218,2104,3.515,2143,4.011,2144,4.011,2156,4.011,2157,4.011,2190,6.494,2191,3.421,2196,3.049,2197,2.905,2198,5.058,2199,2.905,2200,2.905,2201,2.905,2202,2.778,2203,2.905,2204,2.778,2205,2.905,2206,2.778,2207,2.905,2208,2.905,2209,2.905,2210,2.905,2211,3.049,2212,4.769,2213,2.905,2214,4.169,2215,3.675,2301,3.421,2332,4.014,2333,4.53,2334,4.53,2335,4.014,2336,4.53,2337,4.014,2338,4.53,2339,4.014,2340,4.53,2341,4.014,2342,4.53,2343,4.014,2344,4.53]],["title/modules/QueueModule.html",[210,1.52,230,3.215]],["body/modules/QueueModule.html",[3,0.096,4,0.086,5,0.086,27,0.008,57,0.165,58,0.667,61,0.096,63,0.227,120,0.006,129,0.006,169,2.249,210,2.688,212,2.628,213,2.704,214,2.871,215,2.871,216,2.871,217,3.955,218,2.785,230,6.551,236,3.614,237,2.871,238,2.871,240,2.871,1930,5.149,2222,5.42,2228,4.387,2345,5.149,2346,5.149,2347,5.949,2348,5.949,2349,5.811,2350,6.044,2351,6.044,2352,6.044,2353,7.314,2354,5.811,2355,7.314,2356,5.811,2357,7.314,2358,5.149,2359,5.149]],["title/controllers/QueuesAnonController.html",[167,1.175,2350,3.417]],["body/controllers/QueuesAnonController.html",[3,0.05,4,0.045,5,0.045,7,0.132,10,3.721,11,0.735,12,2.139,18,3.198,24,0.366,26,0.915,27,0.008,28,0.746,29,0.366,30,0.798,32,2.454,35,1.053,36,2.425,38,1.699,40,3.587,44,1.867,45,1.011,50,5.221,57,0.137,58,0.349,59,3.464,61,0.05,63,0.119,65,2.028,72,1.487,73,4.257,84,0.775,104,1.207,108,1.377,110,1,112,3.132,120,0.005,129,0.004,131,2.13,142,2.64,144,2.05,147,1.505,157,2.707,167,0.791,169,0.936,173,1.248,180,3.451,182,2.699,186,1.269,189,1.303,191,2.854,192,0.558,199,1.662,200,1.867,206,2.395,325,4.354,345,4.4,347,4.25,351,4.257,358,2.3,369,2.104,373,1.867,377,4.643,378,1.303,398,4.594,400,3.719,414,2.782,415,2.275,432,3.324,510,1.952,513,2.104,745,1.724,753,4.009,772,1.867,775,1.662,778,1.377,783,1.237,808,2.54,880,1.303,961,3.514,965,1.553,1268,1.724,1475,3.802,2031,4.775,2032,4.265,2035,3.305,2036,3.514,2039,2.299,2040,2.299,2042,5.424,2043,2.299,2046,2.299,2047,2.299,2048,2.299,2051,2.299,2054,2.163,2055,3.514,2061,2.299,2063,4.775,2064,2.299,2065,4.265,2068,2.299,2069,2.299,2070,2.299,2073,3.514,2077,3.514,2078,3.514,2079,3.305,2080,3.514,2082,2.299,2124,3.132,2347,3.802,2350,3.514,2358,2.698,2360,5.103,2361,2.698,2362,3.045,2363,5.648,2364,4.653,2365,3.045,2366,5.103,2367,3.045,2368,3.045,2369,3.045,2370,2.47,2371,3.045,2372,3.045,2373,3.045,2374,3.045,2375,3.045,2376,3.045,2377,3.045,2378,3.045,2379,3.045,2380,4.653,2381,3.045,2382,3.045,2383,3.774,2384,3.045,2385,3.045,2386,4.653,2387,3.045,2388,2.47,2389,2.47,2390,3.045,2391,3.045,2392,3.045,2393,3.045,2394,3.045]],["title/classes/QueuesAnonDto.html",[63,0.177,2395,3.417]],["body/classes/QueuesAnonDto.html",[3,0.087,4,0.077,5,0.077,7,0.228,8,1.363,24,0.463,27,0.008,29,0.391,45,1.244,57,0.126,61,0.087,63,0.298,84,1.336,120,0.006,129,0.006,173,1.576,192,0.961,544,2.826,557,2.618,560,3.306,563,1.686,574,2.695,592,3.089,842,1.392,1487,4.394,2104,3.88,2360,6.226,2366,3.729,2389,4.258,2395,6.107,2396,4.258,2397,6.761,2398,6.761,2399,6.761,2400,6.761,2401,6.761,2402,7.167,2403,5.25,2404,5.25,2405,5.25,2406,5.25,2407,5.25,2408,5.25,2409,5.25,2410,5.25,2411,5.25,2412,5.25,2413,5.25,2414,5.25,2415,4.652,2416,4.652,2417,4.652,2418,4.652,2419,4.652]],["title/injectables/QueuesAnonService.html",[0,0.626,2347,3.046]],["body/injectables/QueuesAnonService.html",[0,0.838,1,6.054,2,1.5,3,0.072,4,0.064,5,0.064,7,0.189,8,1.204,9,4.075,10,4.415,11,0.956,12,2.298,13,4.075,14,4.571,15,5.247,16,4.936,17,4.936,18,3.427,19,4.571,20,4.571,21,4.075,22,1.182,24,0.476,26,1.21,27,0.008,28,0.868,29,0.387,30,1.056,31,3.297,32,3.956,34,3.712,35,1.338,36,2.604,37,3.297,38,2.258,40,2.817,44,2.678,45,1.015,46,3.781,48,2.559,49,2.5,50,3.562,51,3.297,53,3.297,55,3.297,57,0.138,58,0.501,60,2.8,61,0.072,63,0.171,72,0.869,120,0.005,129,0.005,252,4.155,253,2.302,301,2.939,303,3.102,304,3.102,415,1.571,668,2.8,897,2.663,1231,4.3,2127,3.297,2128,3.297,2272,6.224,2347,4.075,2360,4.3,2420,3.869,2421,4.367,2422,3.542,2423,3.542,2424,3.542,2425,3.542,2426,3.542,2427,3.542,2428,3.542,2429,3.542,2430,3.542,2431,3.542,2432,4.367,2433,4.367,2434,3.542,2435,3.542,2436,3.542,2437,3.542,2438,4.367]],["title/classes/QueuesAnonsDto.html",[63,0.177,2366,3.215]],["body/classes/QueuesAnonsDto.html",[3,0.098,4,0.087,5,0.087,7,0.256,8,1.47,24,0.318,27,0.008,29,0.268,45,1.201,57,0.136,61,0.098,63,0.315,84,1.88,120,0.006,129,0.006,173,1.082,192,1.082,544,1.94,557,2.681,560,3.397,563,1.898,574,2.769,592,3.477,842,1.567,1487,4.739,2104,4.185,2360,5.25,2366,5.25,2389,6.542,2395,6.381,2396,4.793,2397,5.236,2398,5.236,2399,5.236,2400,5.236,2401,5.236,2402,6.55,2415,5.236,2416,5.236,2417,5.236,2418,5.236,2419,5.236,2439,5.91,2440,5.91]],["title/controllers/QueuesDeleteController.html",[167,1.175,2351,3.417]],["body/controllers/QueuesDeleteController.html",[3,0.05,4,0.045,5,0.045,7,0.132,10,3.717,11,0.734,12,2.138,18,3.193,24,0.366,26,0.914,27,0.008,28,0.745,29,0.366,30,0.798,32,2.449,35,1.052,36,2.424,38,1.697,40,3.584,44,1.863,45,1.01,50,5.219,57,0.137,58,0.349,59,3.459,61,0.05,63,0.119,65,2.026,72,1.486,73,4.252,84,0.773,104,1.206,108,1.374,110,0.998,112,3.127,120,0.005,129,0.004,131,2.128,142,2.639,144,2.048,155,1.456,157,2.703,167,0.789,169,0.934,173,1.247,180,3.449,182,2.697,186,1.267,189,1.301,191,2.849,192,0.556,199,1.658,200,1.863,206,2.392,325,4.353,345,4.397,347,4.247,351,4.252,358,2.296,369,2.101,373,1.863,377,4.641,378,1.301,398,4.592,400,3.715,414,2.778,415,2.272,432,3.319,510,1.948,513,2.101,745,1.72,753,4.005,772,1.863,775,1.658,778,1.374,783,1.234,808,2.536,880,1.301,965,1.55,1268,1.72,1475,3.796,1830,4.117,2031,4.77,2032,4.259,2035,3.3,2036,3.508,2039,2.294,2040,2.294,2042,5.42,2043,2.294,2046,2.294,2047,2.294,2048,2.294,2051,2.294,2054,2.158,2055,3.508,2061,2.294,2063,4.77,2064,2.294,2065,4.259,2068,2.294,2069,2.294,2070,2.294,2073,4.259,2077,3.508,2078,3.508,2079,3.3,2080,3.508,2082,2.294,2124,3.127,2348,3.796,2351,3.508,2359,2.692,2370,2.464,2383,3.768,2388,2.464,2441,5.42,2442,2.692,2443,3.038,2444,5.641,2445,4.646,2446,3.038,2447,5.42,2448,3.038,2449,3.038,2450,3.038,2451,3.038,2452,3.038,2453,3.038,2454,3.038,2455,3.038,2456,3.038,2457,3.038,2458,3.038,2459,3.038,2460,4.646,2461,3.038,2462,3.038,2463,3.038,2464,3.038,2465,3.038,2466,2.692,2467,3.038,2468,3.038,2469,3.038,2470,4.117,2471,3.038,2472,3.038]],["title/classes/QueuesDeleteDto.html",[63,0.177,2447,3.417]],["body/classes/QueuesDeleteDto.html",[3,0.11,4,0.098,5,0.098,7,0.288,8,1.58,24,0.357,27,0.008,29,0.302,45,1.074,57,0.146,61,0.11,63,0.31,120,0.007,129,0.007,173,1.217,192,1.217,544,2.182,557,2.339,563,2.134,574,2.043,842,1.762,1487,5.092,2441,5.996,2447,5.996,2466,7.527,2473,5.888,2474,6.645,2475,6.645,2476,6.645,2477,6.645]],["title/injectables/QueuesDeleteService.html",[0,0.626,2348,3.046]],["body/injectables/QueuesDeleteService.html",[0,0.838,1,6.054,2,1.5,3,0.072,4,0.064,5,0.064,7,0.189,8,1.204,9,4.075,10,4.415,11,0.956,12,2.298,13,4.075,14,4.571,15,5.247,16,4.936,17,4.936,18,3.427,19,4.571,20,4.571,21,4.075,22,1.182,24,0.476,26,1.21,27,0.008,28,0.868,29,0.387,30,1.056,31,3.297,32,3.956,34,3.712,35,1.338,36,2.604,37,3.297,38,2.258,40,2.817,44,2.678,45,1.015,46,3.781,48,2.559,49,2.5,50,3.562,51,3.297,53,3.297,55,3.297,57,0.138,58,0.501,60,2.8,61,0.072,63,0.171,72,0.869,120,0.005,129,0.005,252,4.155,253,2.302,301,2.939,303,3.102,304,3.102,415,1.571,668,2.8,897,2.663,1231,4.3,2127,3.297,2128,3.297,2272,6.224,2348,4.075,2422,3.542,2423,3.542,2424,3.542,2425,3.542,2426,3.542,2427,3.542,2428,3.542,2429,3.542,2430,3.542,2431,3.542,2434,3.542,2435,3.542,2436,3.542,2437,3.542,2441,4.571,2478,3.869,2479,4.367,2480,4.367,2481,4.367,2482,4.367]],["title/controllers/QueuesQueryController.html",[167,1.175,2352,3.417]],["body/controllers/QueuesQueryController.html",[3,0.048,4,0.043,5,0.043,7,0.127,10,3.649,11,0.714,12,2.124,18,3.123,24,0.36,26,0.897,27,0.008,28,0.735,29,0.362,30,0.783,32,2.384,35,1.035,36,2.401,38,1.66,40,3.636,44,1.798,45,0.998,50,5.242,57,0.135,58,0.336,59,3.383,61,0.048,63,0.115,65,1.998,72,1.515,73,4.173,84,0.746,104,1.184,108,2.044,110,0.963,112,3.043,120,0.005,129,0.004,131,2.081,142,2.624,144,2.015,151,1.364,157,2.644,167,0.761,169,0.901,173,1.227,180,3.416,182,2.654,186,1.223,189,1.255,191,2.772,192,0.537,199,1.6,200,1.798,206,2.354,325,4.335,345,4.356,347,4.207,351,4.173,358,2.234,369,2.044,373,1.798,377,4.607,378,1.255,398,4.557,400,3.656,414,2.946,415,2.409,432,3.247,510,1.88,513,2.044,692,3.537,745,1.66,753,3.942,772,1.798,775,1.6,778,1.326,783,1.191,808,2.468,880,1.255,938,3.211,955,2.772,965,1.496,1268,1.66,1475,3.713,1495,2.083,1951,2.378,1961,2.598,1978,4.006,2031,4.682,2032,4.166,2035,3.211,2036,3.413,2039,2.214,2040,2.214,2042,5.344,2043,2.214,2046,2.214,2047,2.214,2048,2.214,2051,2.214,2054,2.083,2055,3.413,2061,2.214,2063,4.682,2064,2.214,2065,4.166,2068,2.214,2069,2.214,2070,2.214,2073,4.166,2077,3.413,2078,3.413,2079,3.211,2080,3.413,2082,2.214,2124,3.043,2222,3.383,2228,2.214,2352,3.413,2370,2.378,2383,3.667,2388,2.378,2483,4.763,2484,2.932,2485,5.517,2486,4.521,2487,2.932,2488,4.763,2489,2.932,2490,2.932,2491,2.932,2492,2.932,2493,2.932,2494,2.932,2495,2.932,2496,3.043,2497,3.043,2498,2.932,2499,2.932,2500,2.932,2501,2.932,2502,4.521,2503,2.932,2504,2.932,2505,2.932,2506,2.932,2507,2.932,2508,2.932,2509,2.932,2510,2.932,2511,2.932,2512,2.932,2513,2.932,2514,2.932,2515,2.083,2516,2.932,2517,4.521,2518,2.932,2519,2.932,2520,2.932]],["title/classes/QueuesQueryDto.html",[63,0.177,2488,3.046]],["body/classes/QueuesQueryDto.html",[3,0.074,4,0.066,5,0.066,7,0.194,8,1.227,24,0.332,27,0.008,29,0.28,45,1.236,46,2.789,48,2.272,49,2.219,57,0.113,61,0.116,63,0.297,84,1.931,110,2.025,120,0.005,129,0.005,173,1.13,182,3.007,192,0.822,544,2.025,557,2.724,560,3.462,563,1.441,574,2.833,592,3.63,686,6.095,692,4.519,842,1.189,1487,4.519,2104,3.991,2143,3.492,2144,3.492,2156,3.492,2157,3.492,2196,4.152,2197,3.955,2198,5.262,2199,3.955,2200,3.955,2201,3.955,2202,3.783,2203,3.955,2204,3.783,2205,3.955,2206,3.783,2207,3.955,2208,3.955,2209,3.955,2210,3.955,2211,4.152,2212,4.152,2213,3.955,2214,3.63,2483,4.744,2488,4.152,2496,4.744,2497,4.744,2515,5.007,2521,3.387,2522,6.168,2523,4.486,2524,4.486]],["title/classes/QueuesQuerySeriesDto.html",[63,0.177,2497,3.046]],["body/classes/QueuesQuerySeriesDto.html",[3,0.069,4,0.061,5,0.061,7,0.181,8,1.167,24,0.444,27,0.008,29,0.375,45,1.257,57,0.108,61,0.112,63,0.288,84,1.493,110,1.927,120,0.005,129,0.005,173,1.512,182,2.325,192,0.765,544,2.712,557,2.701,560,3.43,563,1.341,574,2.808,592,3.453,686,6.168,692,2.677,842,1.107,1487,4.35,2104,3.841,2143,3.322,2144,3.322,2156,3.322,2157,3.322,2196,3.95,2197,4.718,2198,5.325,2199,3.762,2200,4.718,2201,3.762,2202,4.513,2203,3.762,2204,4.513,2205,3.762,2206,4.513,2207,3.762,2208,3.762,2209,3.762,2210,3.762,2211,3.95,2212,3.95,2213,3.762,2214,3.453,2301,3.153,2303,3.7,2305,3.7,2307,3.7,2309,3.7,2311,3.7,2483,5.674,2488,2.811,2496,3.95,2497,4.567,2515,2.966,2521,3.153,2525,3.7,2526,4.176,2527,4.176,2528,4.176,2529,4.176,2530,4.176,2531,4.176,2532,4.176]],["title/injectables/QueuesQueryService.html",[0,0.626,2222,2.776]],["body/injectables/QueuesQueryService.html",[0,0.79,1,5.971,2,1.378,3,0.066,4,0.059,5,0.059,7,0.174,8,1.135,9,3.84,10,4.254,11,0.901,12,2.333,13,3.84,14,4.308,15,5.013,16,4.716,17,4.716,18,3.23,19,4.308,20,4.308,21,3.84,22,1.086,24,0.48,26,1.182,27,0.008,28,0.848,29,0.379,30,1.031,31,3.03,32,3.812,34,3.499,35,1.36,36,2.706,37,3.03,38,2.175,40,2.655,44,2.461,45,0.978,46,3.692,48,2.445,49,2.388,50,3.357,51,3.03,53,3.03,55,3.03,57,0.133,58,0.46,60,2.573,61,0.066,63,0.157,65,1.874,72,0.798,104,0.766,120,0.005,129,0.005,252,4.027,253,2.116,301,2.701,303,2.85,304,2.85,415,1.443,668,2.573,897,2.509,1231,4.053,2127,3.03,2128,3.03,2222,3.499,2272,6.116,2422,3.255,2423,3.255,2424,3.255,2425,3.255,2426,3.255,2427,3.255,2428,3.255,2429,3.255,2430,3.255,2431,3.255,2434,3.255,2435,3.255,2436,3.255,2437,3.255,2483,5.141,2533,3.556,2534,7.23,2535,7.23,2536,7.23,2537,4.013,2538,4.013,2539,4.013,2540,4.013,2541,4.013,2542,4.013,2543,4.013,2544,4.013,2545,4.013,2546,4.013,2547,4.013]],["title/classes/QueuesQueryStudyDto.html",[63,0.177,2496,3.046]],["body/classes/QueuesQueryStudyDto.html",[3,0.068,4,0.06,5,0.06,7,0.178,8,1.153,24,0.451,27,0.008,29,0.381,45,1.258,57,0.106,61,0.111,63,0.285,84,1.474,110,1.903,120,0.005,129,0.005,173,1.537,182,2.296,192,0.751,544,2.756,557,2.695,560,3.421,563,1.317,574,2.802,592,3.41,686,6.145,692,2.63,842,1.088,1487,4.308,2104,3.804,2143,4.133,2144,4.133,2156,4.133,2157,4.133,2196,3.9,2197,3.715,2198,5.305,2199,3.715,2200,3.715,2201,3.715,2202,3.554,2203,3.715,2204,3.554,2205,3.715,2206,3.554,2207,3.715,2208,3.715,2209,3.715,2210,3.715,2211,3.9,2212,4.914,2213,3.715,2214,4.296,2301,3.097,2332,3.635,2335,3.635,2337,3.635,2339,3.635,2341,3.635,2343,3.635,2483,5.744,2488,2.761,2496,4.522,2497,3.9,2515,2.914,2521,3.097,2525,3.635,2548,4.102,2549,4.102,2550,4.102,2551,4.102,2552,4.102,2553,4.102,2554,4.102,2555,4.102]],["title/guards/ReadAllGuard.html",[130,1.991,164,2.106]],["body/guards/ReadAllGuard.html",[0,1.222,3,0.068,4,0.06,5,0.06,7,0.177,11,0.913,24,0.22,26,0.592,27,0.008,28,0.425,29,0.186,30,0.516,35,0.632,57,0.075,58,0.469,61,0.144,63,0.342,72,1.844,104,1.669,120,0.005,129,0.005,131,1.543,132,1.799,133,2.156,134,3.837,135,3.779,136,3.737,138,1.705,139,2.714,140,2.021,141,3.743,142,2.631,143,3.954,144,2.79,145,4.773,146,2.232,147,2.021,148,2.232,149,1.96,150,2.232,151,1.903,152,2.232,153,2.021,154,2.232,155,1.96,156,2.232,157,1.96,158,2.021,159,2.232,160,2.086,161,2.232,162,2.021,163,2.232,164,2.691,165,2.232,2556,4.09]],["title/classes/RegisterDto.html",[63,0.177,364,3.417]],["body/classes/RegisterDto.html",[3,0.102,4,0.09,5,0.09,7,0.266,8,1.507,24,0.441,27,0.008,29,0.373,45,1.212,57,0.139,61,0.102,63,0.296,120,0.006,129,0.006,173,1.503,192,1.125,354,3.82,364,5.718,420,4.851,422,4.851,544,2.696,557,2.524,563,1.974,574,2.524,842,1.629,866,6.198,998,6.143,2557,5.445,2558,6.145,2559,6.145,2560,6.145,2561,6.145,2562,6.145,2563,6.145,2564,6.145]],["title/entities/Role.html",[517,2.169,533,2.106]],["body/entities/Role.html",[3,0.061,4,0.054,5,0.054,7,0.159,8,1.066,24,0.47,27,0.008,28,0.968,29,0.397,30,0.677,45,0.725,46,1.663,48,3.217,57,0.149,61,0.127,63,0.144,84,2.177,110,3.028,120,0.005,129,0.005,139,2.818,173,1.6,182,2.123,192,0.674,513,3.338,517,2.568,533,2.494,534,3.03,535,2.358,544,2.868,554,5.307,556,1.618,557,2.594,574,2.686,960,4.725,961,5.574,962,5.127,963,5.127,964,5.988,965,3.766,966,5.127,1026,4.255,1027,3.693,1030,2.476,1247,4.346,1272,2.613,2565,3.259,2566,8.558,2567,3.678,2568,3.678,2569,5.359,2570,3.678,2571,5.359,2572,3.678,2573,5.359,2574,3.678,2575,3.678,2576,3.678,2577,3.678,2578,3.678,2579,3.678,2580,5.359,2581,3.678,2582,3.678,2583,3.678,2584,3.678,2585,3.678,2586,5.359,2587,3.678,2588,5.359,2589,5.359]],["title/controllers/RolesController.html",[167,1.175,2590,3.417]],["body/controllers/RolesController.html",[3,0.043,4,0.038,5,0.038,7,0.113,11,0.651,12,2.203,22,0.705,24,0.393,26,1.059,27,0.008,28,0.887,29,0.369,30,0.924,35,1.131,36,2.528,45,1.178,46,1.178,57,0.149,58,0.299,61,0.043,63,0.102,65,2.372,72,0.82,104,1.209,110,1.353,120,0.003,129,0.003,131,0.983,144,0.784,167,0.676,169,0.801,173,1.34,180,3.597,186,1.086,189,1.115,192,0.477,199,1.422,200,1.597,206,2.571,325,4.371,337,2.642,339,3.343,345,4.491,347,4.43,358,2.527,369,1.864,373,1.597,374,1.753,375,4.148,377,4.663,378,1.115,386,2.102,387,1.67,397,1.929,398,4.627,400,3.994,414,2.786,415,2.279,424,3.964,432,1.533,433,3.652,513,2.865,517,3.944,574,0.801,745,1.475,753,4.305,754,2.173,772,1.597,775,1.422,778,1.178,779,2.113,805,2.774,808,2.25,809,4.061,880,2.189,888,4.39,957,5.844,965,1.329,1023,3.112,1026,2.774,1027,3.894,1029,3.652,1248,5.012,1257,1.967,1263,2.527,1265,2.308,1268,3.586,1272,1.85,1280,1.967,1442,1.85,1495,2.927,1606,2.113,1746,1.85,1814,3.861,2035,2.927,2054,1.85,2057,2.113,2590,3.112,2591,2.308,2592,5.114,2593,5.114,2594,4.121,2595,3.652,2596,3.652,2597,5.114,2598,2.605,2599,7.056,2600,2.605,2601,2.605,2602,2.605,2603,2.605,2604,2.605,2605,2.605,2606,2.605,2607,2.605,2608,2.605,2609,2.605,2610,2.605,2611,5.086,2612,2.605,2613,2.605,2614,2.605,2615,2.605,2616,2.605,2617,2.308,2618,2.605,2619,2.605,2620,2.605,2621,2.605,2622,2.605,2623,2.308,2624,2.605,2625,2.605,2626,2.605,2627,2.308,2628,2.25,2629,2.308,2630,2.113,2631,2.605,2632,2.605,2633,2.605,2634,2.605,2635,2.605,2636,2.113,2637,2.605,2638,2.308,2639,2.605,2640,2.605,2641,2.605,2642,2.605,2643,2.605,2644,2.605,2645,4.121,2646,2.605,2647,2.605,2648,2.605,2649,2.605,2650,2.605,2651,2.605,2652,2.605,2653,2.605,2654,2.605,2655,2.605,2656,2.605,2657,2.605,2658,2.308,2659,2.605,2660,2.605,2661,2.605,2662,2.605,2663,2.605,2664,2.605,2665,2.605,2666,2.605,2667,4.121,2668,4.121,2669,2.605,2670,2.605,2671,2.605,2672,2.605,2673,2.605,2674,2.605,2675,2.605,2676,2.605,2677,2.605,2678,2.605,2679,2.605]],["title/modules/RolesModule.html",[210,1.52,231,3.215]],["body/modules/RolesModule.html",[3,0.096,4,0.086,5,0.086,27,0.008,57,0.168,58,0.667,61,0.096,63,0.227,120,0.006,129,0.006,144,2.201,169,2.249,210,2.688,212,2.628,213,2.704,214,2.871,215,2.871,216,2.871,217,3.955,218,2.785,231,6.551,236,3.614,237,2.871,238,2.871,240,2.871,249,3.289,250,2.556,386,4.508,387,3.725,473,4.387,517,2.785,1027,3.505,1030,3.911,1263,5.42,2590,6.044,2627,5.149,2628,4.824,2629,5.149,2630,4.713,2680,5.149,2681,5.149,2682,5.811,2683,5.811,2684,5.811]],["title/injectables/RolesService.html",[0,0.626,2628,2.47]],["body/injectables/RolesService.html",[0,0.667,2,1.095,3,0.053,4,0.047,5,0.047,7,0.138,11,0.761,12,2.312,22,1.305,24,0.452,26,1.158,27,0.008,28,0.939,29,0.363,30,1.01,35,1.281,36,2.687,45,1.239,57,0.139,58,0.366,61,0.096,63,0.125,65,2.423,72,1.511,84,2.282,104,1.327,108,1.442,110,1.047,120,0.004,129,0.004,144,1.748,187,3.171,250,1.402,374,2.146,397,1.818,414,1.402,415,1.147,424,4.303,432,1.876,513,2.179,517,4.181,534,2.31,556,1.402,754,2.541,805,4.358,808,2.63,809,3.09,811,4.657,831,2.044,960,3.971,961,3.639,962,3.909,963,3.909,964,3.909,965,2.458,966,3.909,1026,4.922,1027,2.31,1030,2.146,1262,6.043,1272,3.423,1279,2.825,1280,2.407,1289,4.27,1293,5.148,1302,2.825,1438,2.146,1521,4.599,1539,2.407,1540,2.407,2596,4.27,2617,4.27,2623,4.27,2628,2.63,2630,2.586,2685,2.825,2686,4.819,2687,6.475,2688,4.819,2689,4.819,2690,3.188,2691,3.188,2692,4.819,2693,4.819,2694,3.188,2695,4.819,2696,3.188,2697,3.188,2698,3.188,2699,4.819,2700,3.188,2701,3.188,2702,4.819,2703,3.188,2704,4.819,2705,3.188,2706,4.819,2707,3.188,2708,3.188,2709,3.188,2710,3.188,2711,4.819,2712,4.819,2713,5.738,2714,3.188,2715,3.188,2716,5.81,2717,3.188,2718,3.188,2719,5.81,2720,3.188,2721,3.188,2722,3.188,2723,4.819,2724,3.188,2725,4.819,2726,3.188]],["title/classes/Router.html",[63,0.177,539,2.902]],["body/classes/Router.html",[3,0.069,4,0.062,5,0.062,7,0.181,8,1.169,24,0.365,27,0.008,28,0.956,29,0.406,38,2.043,45,0.919,49,2.791,57,0.148,61,0.122,63,0.314,84,1.494,120,0.005,123,2.113,129,0.005,139,1.286,173,1.244,192,0.766,533,2.734,534,2.004,536,2.971,537,4.173,538,2.971,539,5.158,543,3.602,544,2.23,545,5.127,554,5.515,555,3.954,556,1.839,557,2.664,558,3.207,559,2.368,560,2.561,561,2.565,562,5.56,563,1.343,564,5.221,565,3.954,566,5.231,567,5.414,568,4.957,569,2.681,570,2.565,571,2.681,572,3.158,573,4.722,574,2.593,575,4.436,576,3.158,577,3.158,578,4.173,579,3.158,580,3.158,581,3.158,582,4.436,583,3.158,584,5.158,585,4.436,586,3.158,587,3.158,588,3.158,589,3.158,590,5.858,591,5.127,592,3.457,593,5.858,594,2.971,595,3.158,596,2.971,842,1.109,2727,5.875,2728,5.875,2729,4.182,2730,4.182,2731,4.182,2732,4.182]],["title/classes/Rule.html",[63,0.177,573,2.902]],["body/classes/Rule.html",[3,0.068,4,0.061,5,0.061,7,0.179,8,1.16,24,0.394,27,0.008,28,0.955,29,0.402,38,2.206,45,0.992,49,2.963,57,0.147,61,0.121,63,0.313,84,1.483,120,0.005,123,2.098,129,0.005,139,1.272,173,1.342,192,0.758,533,2.714,534,1.984,536,2.94,537,4.142,538,2.94,539,4.955,540,3.357,543,3.576,544,2.217,545,5.098,554,5.506,555,3.925,556,1.82,557,2.66,558,3.183,559,2.343,560,2.547,561,2.538,562,5.535,563,1.329,564,5.661,565,3.925,566,5.851,567,4.544,568,5.545,569,2.653,570,2.538,571,2.653,572,3.125,573,4.7,574,2.586,575,4.403,576,3.125,577,3.125,578,4.142,579,3.125,580,3.125,581,3.125,582,4.403,583,3.125,584,4.955,585,4.403,586,3.125,587,3.125,588,3.125,589,3.125,590,4.403,591,5.098,592,3.431,593,4.403,594,2.94,595,3.125,596,2.94,842,1.097,2733,4.139,2734,4.139,2735,4.139,2736,4.139,2737,4.139,2738,4.139,2739,4.139,2740,4.139]],["title/modules/SeederModule.html",[210,1.52,232,3.215]],["body/modules/SeederModule.html",[3,0.087,4,0.078,5,0.078,27,0.008,57,0.17,58,0.607,61,0.087,63,0.207,120,0.006,129,0.006,144,2.072,169,1.626,210,2.572,212,2.392,213,2.462,214,2.614,215,2.614,216,2.614,217,3.784,218,2.535,232,6.6,236,3.403,237,2.614,238,2.614,240,2.614,249,2.995,250,2.327,267,4.053,268,3.631,386,4.399,387,3.392,465,4.707,473,3.994,478,4.416,479,3.994,482,3.392,517,3.301,534,3.301,1027,3.301,1030,3.561,1041,3.994,1105,3.899,1603,5.288,2229,4.291,2628,4.707,2741,4.688,2742,4.688,2743,6.125,2744,5.29,2745,5.29,2746,3.994,2747,4.688,2748,5.29,2749,5.29]],["title/injectables/SeederService.html",[0,0.626,2743,3.215]],["body/injectables/SeederService.html",[0,1.006,2,1.975,3,0.095,4,0.085,5,0.085,7,0.249,11,1.148,12,1.985,22,1.967,24,0.391,26,0.832,27,0.008,28,0.597,29,0.261,30,0.726,35,0.889,57,0.158,58,0.66,61,0.095,63,0.225,65,2.362,120,0.006,129,0.006,187,4.711,267,3.384,268,3.032,386,4.566,387,3.687,397,3.157,465,4.886,482,3.687,880,3.583,1521,5.944,1603,5.132,1609,7.059,2628,4.812,2743,5.161,2746,4.342,2747,5.095,2750,5.095,2751,5.75,2752,5.75,2753,5.75,2754,5.75,2755,5.75,2756,5.75,2757,5.75]],["title/injectables/SeriesGuard.html",[0,0.626,195,3.215]],["body/injectables/SeriesGuard.html",[0,1.045,2,2.101,3,0.101,4,0.09,5,0.09,7,0.265,11,1.193,12,2.042,24,0.329,26,0.885,27,0.008,28,0.635,29,0.278,30,0.772,35,0.946,36,2.272,57,0.138,58,0.702,61,0.101,63,0.239,65,1.727,72,1.702,104,1.442,108,2.767,110,2.009,120,0.006,129,0.006,134,3.233,135,3.233,136,3.567,138,2.551,142,1.841,143,2.767,193,5.024,195,5.365,643,5.703,694,3.226,698,4.346,881,4.619,893,4.619,894,4.619,897,3.322,1135,5.421,1136,6.692,1138,4.962,1139,5.421,2758,5.421,2759,6.118,2760,6.118]],["title/guards/StudyGuard.html",[130,1.991,193,2.776]],["body/guards/StudyGuard.html",[0,0.912,3,0.082,4,0.073,5,0.073,7,0.215,9,5.907,11,1.041,12,2.214,22,1.785,24,0.425,26,1.144,27,0.008,28,0.82,29,0.359,30,0.998,35,1.146,36,2.378,45,1.202,57,0.136,58,0.568,61,0.082,63,0.193,65,1.861,72,1.637,104,1.509,120,0.006,129,0.006,132,2.177,134,3.384,135,2.822,136,3.296,138,2.064,141,2.119,142,1.489,143,2.239,179,3.036,193,4.043,296,3.516,615,3.699,643,6.392,665,2.373,881,3.738,893,5.597,894,3.738,955,3.036,1027,2.373,1138,4.015,1272,3.516,2628,4.314,2636,5.347,2761,4.387,2762,6.593,2763,7.413,2764,4.951,2765,4.951,2766,4.951,2767,6.593,2768,4.951,2769,4.951,2770,4.951,2771,4.951,2772,4.387,2773,4.951,2774,4.951,2775,4.951,2776,4.951,2777,4.951,2778,4.951,2779,4.951,2780,4.951]],["title/classes/TagAnon.html",[63,0.177,2781,3.671]],["body/classes/TagAnon.html",[3,0.095,4,0.084,5,0.084,7,0.248,8,1.442,22,1.962,24,0.449,26,0.829,27,0.008,28,0.594,29,0.379,30,0.723,38,2.594,45,1.245,46,3.982,48,2.109,57,0.105,61,0.095,63,0.224,120,0.006,129,0.006,671,2.921,842,1.518,2781,5.878,2782,7.638,2783,5.074,2784,8.943,2785,8.806,2786,8.943,2787,5.727,2788,7.803,2789,7.247,2790,5.727,2791,5.727,2792,5.727,2793,5.727,2794,5.727]],["title/modules/TasksModule.html",[210,1.52,233,3.215]],["body/modules/TasksModule.html",[3,0.093,4,0.083,5,0.083,27,0.008,57,0.163,58,0.646,61,0.093,63,0.22,120,0.006,129,0.006,210,2.65,212,2.548,213,2.622,214,2.784,215,2.784,216,2.784,217,3.899,218,3.782,233,6.651,236,3.544,237,2.784,238,2.784,240,2.784,249,3.189,250,2.478,615,3.754,664,2.784,665,2.7,965,2.874,1105,3.189,1624,4.992,1923,4.992,1931,6.595,2216,6.595,2222,5.377,2227,4.992,2228,4.254,2229,4.569,2795,4.992,2796,4.992,2797,4.992,2798,5.634,2799,5.634,2800,5.634]],["title/classes/TmtvJobDto.html",[63,0.177,2101,3.417]],["body/classes/TmtvJobDto.html",[3,0.09,4,0.081,5,0.081,7,0.237,8,1.4,24,0.442,27,0.008,29,0.373,45,1.111,48,2.591,57,0.143,61,0.116,63,0.304,84,2.09,110,2.697,120,0.006,129,0.006,139,2.163,173,1.504,182,3.447,192,1.001,557,2.606,558,3.84,559,3.095,560,2.935,563,1.756,669,5.874,670,5.236,671,2.789,715,4.434,717,3.68,718,5.874,719,5.874,720,6.31,723,6.31,842,1.449,927,4.845,976,4.735,1028,6.662,2034,3.68,2096,6.417,2097,4.434,2098,3.883,2101,5.874,2104,3.983,2105,4.845,2106,4.845,2801,5.467,2802,5.467,2803,5.467,2804,5.467,2805,5.467]],["title/classes/TmtvService.html",[63,0.177,2806,3.671]],["body/classes/TmtvService.html",[3,0.056,4,0.05,5,0.05,7,0.146,8,0.998,11,0.792,12,2.22,22,1.358,24,0.476,26,0.962,27,0.008,28,0.69,29,0.381,30,0.84,35,1.255,36,2.001,45,1.173,48,1.847,49,1.804,57,0.13,61,0.056,63,0.131,65,2.398,72,1.58,84,1.526,104,1.145,107,4.444,110,2.184,120,0.004,129,0.004,139,1.844,235,5.203,246,3.187,261,2.727,397,3.433,415,1.804,615,3.194,664,1.661,665,1.611,670,2.263,671,1.715,692,3.215,694,2.644,708,5.893,711,5.893,718,4.529,719,4.529,842,0.891,880,2.147,1373,5.371,1376,4.444,1410,2.979,1419,6.611,1421,2.979,1423,6.304,1425,2.979,1936,2.979,2085,5.371,2470,5.893,2806,4.067,2807,2.979,2808,5.998,2809,6.65,2810,6.65,2811,6.65,2812,5.015,2813,6.65,2814,6.65,2815,6.65,2816,5.015,2817,5.015,2818,5.015,2819,3.362,2820,3.362,2821,3.362,2822,3.362,2823,3.362,2824,3.362,2825,3.362,2826,3.362,2827,3.362,2828,5.015,2829,3.362,2830,5.015,2831,3.362,2832,3.362,2833,3.362,2834,5.015,2835,3.362,2836,5.015,2837,3.362,2838,3.362,2839,3.362,2840,5.998,2841,3.362,2842,5.015,2843,3.362,2844,5.015,2845,3.362,2846,5.015,2847,7.461,2848,3.362,2849,5.015,2850,3.362,2851,3.362,2852,3.362,2853,5.015,2854,3.362,2855,3.362,2856,5.015,2857,3.362,2858,3.362,2859,3.362,2860,5.998,2861,3.362,2862,3.362,2863,3.362,2864,3.362,2865,3.362,2866,5.015,2867,3.362,2868,3.362,2869,3.362,2870,3.362,2871,5.015,2872,3.362,2873,3.362,2874,3.362,2875,3.362,2876,3.362,2877,3.362,2878,3.362,2879,3.362,2880,3.362,2881,3.362,2882,3.362,2883,3.362]],["title/classes/UpdateOptionDto.html",[63,0.177,1598,3.215]],["body/classes/UpdateOptionDto.html",[3,0.115,4,0.103,5,0.103,27,0.008,57,0.15,61,0.115,63,0.273,120,0.007,129,0.007,192,1.278,754,3.68,842,1.85,897,3.596,900,4.957,902,5.27,1008,7.244,1021,5.661,1022,5.27,1598,5.807,2884,6.184]],["title/classes/UpdateUserDto.html",[63,0.177,2885,3.417]],["body/classes/UpdateUserDto.html",[3,0.094,4,0.083,5,0.083,7,0.246,8,1.432,24,0.448,27,0.008,29,0.378,45,1.222,57,0.132,61,0.094,63,0.281,84,2.118,120,0.006,129,0.006,173,1.525,182,3.578,192,1.038,354,3.682,420,4.48,422,4.48,424,4.656,544,2.734,557,2.531,560,3.241,563,1.82,574,2.559,842,1.503,960,4.415,976,5.603,982,4.28,985,5.023,986,5.436,987,5.023,988,5.436,989,5.023,997,5.023,2885,5.436,2886,7.615,2887,7.2]],["title/entities/User.html",[144,1.362,533,2.106]],["body/entities/User.html",[3,0.074,4,0.066,5,0.066,7,0.193,8,1.222,24,0.468,27,0.008,28,0.902,29,0.395,30,1.082,38,1.848,45,1.212,57,0.139,61,0.074,63,0.24,84,2.238,110,2.016,120,0.005,123,2.856,129,0.005,144,1.848,173,1.592,192,0.816,206,2.469,309,3.991,354,3.695,420,4.495,422,4.495,424,4.134,517,4.167,525,4.362,533,2.858,535,2.858,544,2.486,548,3.95,554,5.254,555,4.133,556,1.961,557,2.561,570,2.734,574,2.327,960,2.734,983,3.616,986,3.366,988,3.366,1041,3.366,1591,5.441,2888,3.95,2889,7.025,2890,4.458,2891,4.458,2892,4.458,2893,4.458,2894,4.458,2895,4.458,2896,4.458,2897,4.458,2898,4.458,2899,4.458,2900,4.458,2901,4.458,2902,7.57,2903,4.458,2904,4.458,2905,7.025,2906,7.94,2907,4.458,2908,6.141,2909,4.458,2910,4.458,2911,6.141,2912,6.141,2913,4.458]],["title/interfaces/UserInfoResponse.html",[1201,3.046,1202,3.417]],["body/interfaces/UserInfoResponse.html",[0,0.821,3,0.07,4,0.062,5,0.062,7,0.184,8,1.18,12,1.943,22,1.148,27,0.008,28,0.769,29,0.377,32,3.127,36,2.346,45,1.256,57,0.152,58,0.486,61,0.07,63,0.166,65,2.389,72,1.683,104,1.488,120,0.005,129,0.005,139,2.103,204,3.012,206,2.604,267,2.495,268,2.235,354,3.628,372,3.201,397,2.58,411,5.548,413,3.439,414,3.259,415,2.665,416,5.548,420,2.4,422,2.4,462,2.854,465,3.734,469,3.012,471,3.201,482,2.718,484,3.637,496,5.548,515,6.009,698,4.213,880,2.928,897,1.865,1090,2.163,1092,3.439,1108,4.478,1160,2.6,1163,2.718,1172,3.439,1173,3.439,1174,3.201,1180,6.061,1182,3.757,1184,5.255,1185,3.757,1188,3.757,1190,3.757,1192,3.757,1194,3.201,1195,3.201,1196,3.012,1197,3.201,1198,4.478,1199,6.061,1200,3.012,1201,2.854,1202,4.478,1203,6.565,1204,6.565,1205,6.565,1206,6.565,1207,5.255,1208,3.757,1209,3.757,1210,3.757,1211,3.757,1212,3.757,1213,3.012,1214,3.757,1215,3.757,1216,3.757,1217,3.757,1218,3.757,1219,3.757,1220,3.757,1221,3.757,1222,3.757,1223,3.757,1224,3.757,1225,3.757,1226,3.757,1227,3.757,1228,3.757,1229,3.757,1639,3.439]],["title/controllers/UsersController.html",[167,1.175,2914,3.417]],["body/controllers/UsersController.html",[3,0.05,4,0.044,5,0.044,7,0.131,11,0.73,12,2.136,22,0.817,24,0.365,26,0.911,27,0.008,28,0.653,29,0.349,30,0.795,35,1.049,36,2.42,38,2.371,57,0.152,58,0.346,61,0.05,63,0.118,65,2.342,72,1.482,104,1.296,120,0.004,123,2.985,129,0.004,131,1.138,142,1.391,144,2.555,167,0.784,169,0.928,173,1.243,180,3.443,186,1.258,189,1.292,192,0.553,199,1.647,200,1.851,206,2.385,309,1.591,325,4.349,337,2.964,339,5.106,340,5.578,345,4.196,347,4.24,354,2.151,358,2.284,365,3.749,369,2.09,373,1.851,374,2.031,377,4.634,378,1.292,386,2.358,397,1.744,398,4.585,400,3.704,414,2.985,415,2.575,420,2.617,422,2.617,424,2.72,426,2.674,432,2.72,457,3.749,510,1.935,513,3.069,516,4.978,517,3.017,518,4.978,745,1.709,753,3.994,754,2.437,772,1.851,775,1.647,778,1.365,779,2.448,788,2.674,809,4.351,829,2.448,873,4.753,880,1.979,980,4.753,1031,4.242,1257,2.279,1268,2.617,1442,2.144,1475,2.031,1495,3.99,1605,2.448,1606,2.448,1746,2.144,1814,4.242,1982,2.674,2057,2.448,2628,2.523,2636,2.448,2638,2.674,2658,4.096,2746,2.279,2885,4.753,2914,3.49,2915,2.674,2916,5.618,2917,4.622,2918,6.296,2919,4.622,2920,3.018,2921,5.618,2922,4.622,2923,3.018,2924,3.018,2925,7.159,2926,3.018,2927,3.018,2928,3.018,2929,3.018,2930,3.018,2931,3.018,2932,3.018,2933,3.018,2934,3.018,2935,3.018,2936,2.674,2937,2.448,2938,5.618,2939,3.018,2940,2.279,2941,3.018,2942,3.018,2943,3.018,2944,3.018,2945,3.018,2946,5.618,2947,5.618,2948,4.622,2949,3.018,2950,3.018,2951,4.622,2952,3.018,2953,4.096,2954,3.018,2955,3.018,2956,3.018,2957,7.159,2958,4.622,2959,3.018,2960,4.622,2961,3.018,2962,3.018,2963,3.018,2964,3.018,2965,3.018,2966,3.018,2967,3.018,2968,3.018,2969,3.018,2970,3.018]],["title/modules/UsersModule.html",[210,1.52,234,3.046]],["body/modules/UsersModule.html",[3,0.099,4,0.088,5,0.088,27,0.008,57,0.167,58,0.685,61,0.099,63,0.233,120,0.006,129,0.006,144,1.797,169,2.288,210,2.722,212,2.701,213,2.78,214,2.952,215,2.952,216,2.952,217,4.005,218,2.863,234,6.14,236,3.677,237,2.952,238,2.952,240,2.952,249,3.381,250,2.627,386,4.54,490,5.293,517,3.566,1027,3.566,1030,4.02,1041,4.51,2628,4.858,2746,4.51,2914,6.12,2936,5.293,2937,4.845,2971,5.973,2972,5.973,2973,5.973,2974,5.973]],["title/injectables/UsersService.html",[0,0.626,386,2.309]],["body/injectables/UsersService.html",[0,0.676,2,1.116,3,0.054,4,0.048,5,0.048,7,0.141,11,0.772,12,2.302,22,1.323,24,0.448,26,1.164,27,0.008,28,0.835,29,0.365,30,1.016,35,1.267,36,2.667,38,2.614,45,1.088,46,2.956,48,1.8,49,1.758,57,0.129,58,0.373,61,0.054,63,0.127,65,2.431,72,1.656,84,1.873,104,1.459,110,1.066,120,0.004,123,2.894,129,0.004,139,2.264,144,2.736,187,3.207,250,1.428,309,3.098,354,3.556,386,2.493,397,1.225,414,1.428,415,1.168,420,2.767,422,2.767,424,4.125,444,4.765,510,2.082,517,2.816,556,1.428,754,2.577,805,4.399,808,2.667,809,3.133,811,4.008,827,4.33,829,3.964,831,2.082,840,2.878,955,1.992,960,4.008,1438,2.186,1442,2.307,1495,2.307,1521,4.643,1539,2.452,1540,2.452,2595,4.33,2713,5.206,2937,2.634,2940,2.452,2953,2.878,2975,2.878,2976,5.875,2977,4.887,2978,4.887,2979,4.887,2980,3.248,2981,3.248,2982,4.887,2983,4.887,2984,3.248,2985,3.248,2986,4.887,2987,7.864,2988,3.248,2989,3.248,2990,3.248,2991,4.887,2992,3.248,2993,4.887,2994,3.248,2995,3.248,2996,3.248,2997,3.248,2998,4.887,2999,3.248,3000,3.248,3001,3.248,3002,3.248,3003,3.248,3004,3.248,3005,5.875,3006,3.248,3007,4.887,3008,3.248,3009,4.887,3010,3.248,3011,4.887,3012,3.248,3013,3.248,3014,4.887,3015,3.248,3016,4.887,3017,3.248,3018,4.887,3019,3.248,3020,3.248,3021,3.248]],["title/classes/WithLabels.html",[63,0.177,2611,3.417]],["body/classes/WithLabels.html",[3,0.101,4,0.09,5,0.09,7,0.265,8,1.5,24,0.328,27,0.008,29,0.277,48,2.248,49,3.075,57,0.15,61,0.101,63,0.32,84,2.082,104,1.165,110,2.477,120,0.006,129,0.006,139,2.319,173,1.118,192,1.118,557,2.221,558,4.117,563,1.96,570,3.743,574,1.877,786,6.683,842,1.618,941,4.951,2611,6.632,3022,6.683,3023,5.409,3024,6.104,3025,6.104,3026,7.542,3027,6.104,3028,7.542]],["title/coverage.html",[3029,5.033]],["body/coverage.html",[0,1.218,1,1.475,5,0.032,6,1.942,27,0.008,29,0.099,63,0.354,120,0.003,123,1.29,129,0.003,130,3.518,131,0.827,133,3.946,140,1.083,144,1.583,147,1.083,149,1.05,151,1.02,153,1.083,155,1.05,158,1.083,160,1.118,162,1.083,164,1.02,167,2.18,168,1.655,170,1.942,187,1.196,193,1.344,195,1.557,197,1.557,199,1.196,235,1.475,254,1.777,258,1.655,268,2.774,283,1.655,285,1.655,323,1.655,324,1.942,335,1.655,353,1.655,364,1.655,379,1.655,381,1.655,384,1.405,386,1.118,388,1.655,392,1.475,415,0.788,462,1.475,463,1.557,464,1.557,465,1.196,476,1.655,478,1.405,491,1.942,507,1.777,508,1.777,509,1.777,517,1.05,533,2.899,534,1.05,536,3.737,539,1.405,571,1.405,573,1.405,584,1.405,597,1.557,598,1.942,613,1.405,614,1.344,615,0.938,621,1.655,660,1.777,717,1.475,743,1.655,744,1.942,752,1.655,804,1.942,843,1.942,844,2.909,873,1.655,874,3.437,875,1.942,883,1.655,884,1.942,888,1.655,889,1.942,895,1.942,896,1.942,900,1.557,901,1.942,902,3.437,955,5.897,957,1.557,958,1.942,959,2.909,980,1.655,981,1.942,982,3.437,1006,1.655,1007,1.942,1023,1.655,1024,1.942,1027,1.05,1031,1.655,1032,1.942,1043,1.777,1044,1.942,1105,1.241,1133,1.942,1140,1.942,1141,1.942,1153,1.942,1161,1.777,1169,1.942,1170,1.942,1172,2.909,1173,2.909,1201,2.414,1202,1.655,1230,1.942,1244,1.942,1248,1.557,1249,1.942,1251,1.655,1252,1.942,1263,1.344,1288,1.942,1309,1.942,1311,1.942,1320,1.942,1327,1.942,1356,1.942,1373,1.655,1374,1.942,1375,1.942,1434,1.942,1435,1.942,1450,3.541,1451,1.942,1467,1.655,1468,1.942,1473,1.557,1507,1.942,1518,1.942,1543,1.942,1593,1.655,1594,1.942,1598,1.557,1603,1.344,1625,1.942,1638,1.655,1640,2.909,1652,6.993,1684,1.655,1685,4.033,1686,1.942,1747,1.241,1766,1.655,1767,1.942,1815,1.655,1816,1.942,1833,1.942,1834,1.942,1848,1.655,1849,1.942,1888,1.655,1889,1.942,1901,1.655,1902,1.942,1922,1.655,1931,1.557,1932,1.942,1933,1.942,1951,2.909,1964,1.475,1971,1.475,1972,1.475,1974,3.233,2005,1.942,2028,1.655,2029,1.942,2034,1.475,2085,1.655,2086,1.942,2096,3.437,2097,2.909,2101,1.655,2111,1.942,2124,1.475,2136,1.557,2137,3.437,2138,1.942,2190,3.437,2191,3.437,2216,1.557,2217,1.942,2218,1.942,2222,1.344,2230,1.777,2232,1.777,2248,1.777,2249,2.909,2250,1.942,2313,1.777,2314,1.942,2347,1.475,2348,1.475,2350,1.655,2351,1.655,2352,1.655,2360,3.737,2361,1.942,2366,1.557,2395,1.655,2396,2.909,2420,1.942,2441,3.437,2442,1.942,2447,1.655,2473,1.942,2478,1.942,2483,3.905,2488,1.475,2496,1.475,2497,1.475,2521,3.437,2533,1.942,2557,1.942,2565,1.942,2590,1.655,2591,1.942,2611,1.655,2628,1.196,2685,1.942,2743,1.557,2750,1.942,2758,1.942,2761,1.942,2772,1.942,2781,1.777,2782,1.942,2783,1.942,2806,1.777,2807,1.942,2884,1.942,2885,1.655,2886,1.942,2888,1.942,2914,1.655,2915,1.942,2940,1.655,2975,1.942,3022,1.942,3023,1.942,3029,1.777,3030,2.191,3031,2.191,3032,2.191,3033,8.26,3034,2.191,3035,2.191,3036,7.103,3037,7.307,3038,8.456,3039,6.576,3040,6.576,3041,6.23,3042,8.945,3043,4.552,3044,2.191,3045,1.942,3046,7.307,3047,1.942,3048,1.942,3049,1.942,3050,4.034,3051,1.942,3052,1.942,3053,1.942,3054,3.586,3055,2.191,3056,2.191,3057,2.191,3058,1.942,3059,5.802,3060,4.552,3061,3.178,3062,1.942,3063,3.178,3064,1.942,3065,1.942,3066,1.942,3067,1.942,3068,4.034,3069,1.942,3070,1.942,3071,1.942,3072,3.586,3073,1.942,3074,1.942,3075,2.191,3076,1.942,3077,1.942,3078,1.942,3079,2.191,3080,2.191,3081,5.141,3082,2.191,3083,2.191,3084,2.191,3085,2.191]],["title/dependencies.html",[213,2.537,3086,3.337]],["body/dependencies.html",[27,0.008,58,0.645,60,3.605,63,0.28,120,0.006,129,0.006,192,1.03,213,2.616,250,2.473,253,2.964,257,3.993,265,4.245,271,3.993,272,3.993,300,4.982,407,4.982,469,3.993,471,4.245,480,4.245,556,2.473,563,1.806,570,3.448,666,4.982,1089,4.982,1091,3.183,1160,3.448,1196,6.089,1197,4.245,1198,4.245,1200,3.993,1316,4.982,1334,4.56,1335,4.56,3087,5.622,3088,5.622,3089,5.622,3090,5.622,3091,7.883,3092,5.622,3093,5.622,3094,5.622,3095,5.622,3096,5.622,3097,5.622,3098,5.622,3099,5.622,3100,5.622,3101,5.622,3102,5.622,3103,5.622,3104,5.622,3105,5.622,3106,5.622,3107,5.622,3108,5.622,3109,5.622,3110,5.622,3111,5.622,3112,5.622,3113,5.622,3114,5.622,3115,5.622,3116,5.622,3117,5.622,3118,5.622,3119,5.622,3120,5.622,3121,5.622,3122,5.622,3123,5.622,3124,5.622,3125,5.622,3126,5.622,3127,5.622,3128,5.622,3129,5.622,3130,5.622,3131,5.622,3132,5.622,3133,5.622,3134,5.622,3135,5.622]],["title/miscellaneous/enumerations.html",[3136,2.535,3137,4.83]],["body/miscellaneous/enumerations.html",[7,0.165,27,0.008,38,1.655,45,0.744,49,3.481,120,0.005,129,0.005,525,3.908,543,3.374,564,3.703,565,3.703,566,3.908,567,3.703,568,3.703,642,4.875,669,4.154,670,3.703,686,3.908,692,4.138,717,3.703,727,4.875,808,3.003,938,2.709,1415,4.875,1838,3.38,1976,3.374,2139,2.88,2143,2.159,2144,2.159,2145,2.88,2156,2.159,2157,2.159,2198,3.374,2199,2.446,2200,2.446,2201,2.446,2202,2.339,2203,2.446,2204,2.339,2205,2.446,2206,2.339,2207,2.446,2208,2.446,2209,2.446,2210,2.446,2213,2.446,2214,2.245,2515,3.908,2788,4.875,3136,2.567,3137,3.38,3138,8.044,3139,7.065,3140,3.815,3141,3.815,3142,3.815,3143,3.815,3144,3.815,3145,3.815,3146,3.815,3147,3.815,3148,3.815,3149,3.815,3150,3.815,3151,3.815,3152,3.815,3153,3.815,3154,5.502,3155,5.502,3156,5.502,3157,5.502,3158,5.502,3159,3.815,3160,3.815,3161,3.815,3162,3.815,3163,3.815,3164,3.815,3165,3.815,3166,3.815,3167,3.815,3168,3.815,3169,3.815,3170,3.815,3171,3.815,3172,3.815,3173,3.815,3174,3.815,3175,3.815,3176,3.815,3177,3.815,3178,3.815,3179,3.815,3180,3.815,3181,5.502,3182,3.815,3183,3.815,3184,3.815,3185,3.815,3186,3.815,3187,3.815,3188,3.815,3189,3.815,3190,3.815,3191,3.815,3192,3.815,3193,3.815,3194,3.815,3195,3.815,3196,3.815,3197,3.815,3198,3.815,3199,3.815,3200,3.815,3201,3.815,3202,3.815,3203,3.815,3204,3.815,3205,3.815,3206,3.815,3207,3.815,3208,3.815,3209,3.815,3210,3.815,3211,3.815,3212,3.815,3213,3.815,3214,3.815,3215,3.815,3216,3.815,3217,3.815,3218,3.815,3219,3.815,3220,3.815,3221,3.815,3222,3.815,3223,3.815,3224,3.815,3225,3.815,3226,3.815,3227,3.815,3228,3.815,3229,3.815,3230,5.502,3231,5.502,3232,3.815,3233,5.502,3234,5.502,3235,5.502,3236,3.815,3237,3.815,3238,5.502,3239,5.502]],["title/miscellaneous/functions.html",[3136,2.535,3240,4.83]],["body/miscellaneous/functions.html",[7,0.194,26,1.307,27,0.008,28,0.938,29,0.41,30,1.14,35,0.693,38,2.699,45,0.835,59,5.456,120,0.005,129,0.005,132,1.973,139,1.379,142,1.856,199,3.367,235,5.775,252,4.839,254,5.003,351,3.02,615,4.006,645,5.003,717,4.152,1090,3.146,1111,5.466,1438,4.152,1638,5.731,1640,3.639,2230,5.003,2232,5.003,2235,5.466,2237,5.466,3050,3.975,3051,5.466,3052,6.246,3053,5.466,3061,3.975,3062,5.466,3063,3.975,3064,5.466,3065,5.466,3066,3.975,3067,5.466,3068,3.975,3069,5.466,3070,5.466,3071,5.466,3076,3.975,3077,5.466,3078,3.975,3136,3.02,3240,3.975,3241,7.049,3242,6.168,3243,4.486,3244,4.486,3245,4.486,3246,7.049,3247,4.486,3248,6.168,3249,4.486,3250,7.591,3251,5.003,3252,4.486,3253,4.486,3254,4.486,3255,4.486,3256,4.486,3257,6.168,3258,6.168,3259,6.168,3260,4.486,3261,4.486,3262,6.168,3263,4.486,3264,4.486,3265,4.486,3266,4.486,3267,4.486,3268,4.486,3269,4.486,3270,4.486]],["title/index.html",[7,0.163,3271,3.766,3272,3.766]],["body/index.html",[4,0.088,27,0.008,120,0.006,129,0.006,172,6.576,285,4.491,325,2.851,574,2.487,811,3.647,1332,5.27,3029,4.824,3251,4.824,3273,5.947,3274,5.947,3275,7.421,3276,5.947,3277,5.947,3278,5.947,3279,5.947,3280,5.947,3281,5.947,3282,8.09,3283,5.947,3284,5.947,3285,5.947,3286,9.018,3287,5.947,3288,5.947,3289,8.89,3290,5.947,3291,5.947,3292,7.421,3293,5.947,3294,5.947,3295,5.947,3296,5.947,3297,7.421,3298,5.947,3299,5.947,3300,5.947,3301,7.421,3302,7.421,3303,5.947,3304,5.947,3305,5.947,3306,5.947,3307,5.947,3308,5.27,3309,5.947,3310,5.947,3311,5.947,3312,5.947,3313,5.947,3314,5.947,3315,5.947,3316,5.947,3317,5.27,3318,5.947,3319,5.947,3320,5.947,3321,5.947,3322,5.947,3323,5.947,3324,5.27]],["title/modules.html",[212,2.806]],["body/modules.html",[27,0.006,120,0.006,129,0.006,211,4.745,212,2.842,222,4.464,223,4.464,224,4.464,225,4.464,226,4.464,227,4.464,228,4.464,229,4.464,230,4.464,231,4.464,232,4.464,233,4.464,234,4.229,3308,8.376,3325,9.452,3326,9.452,3327,9.481,3328,6.284,3329,6.284]],["title/overview.html",[3330,5.499]],["body/overview.html",[2,1.365,27,0.008,120,0.005,129,0.005,132,1.747,169,1.221,210,1.334,211,7.099,212,1.797,213,1.849,214,1.963,215,1.963,216,1.963,217,1.963,218,1.904,219,3.52,220,3.52,221,3.52,222,6.524,223,6.175,224,5.405,225,4.689,226,5.405,227,5.405,228,5.405,229,5.405,230,6.017,231,6.017,232,6.29,233,6.29,234,5.602,235,4.443,236,2.799,237,1.963,238,1.963,384,5.22,386,4.035,392,4.443,458,3.52,460,3.52,461,3.52,462,4.443,463,4.689,464,4.689,465,4.153,535,2.547,597,4.689,613,4.233,614,4.414,615,3.257,703,3.52,798,3.52,799,3.52,842,1.053,956,3,1263,4.414,1282,3.52,1283,3.52,1603,4.414,1619,3.52,1620,3.52,1639,3.222,1931,5.783,2216,5.783,2222,4.414,2345,3.52,2346,3.52,2347,4.443,2348,4.443,2628,4.153,2680,3.52,2681,3.52,2741,3.52,2742,3.52,2743,4.689,2795,3.52,2796,3.52,2797,3.52,3330,3.52,3331,3.973,3332,3.973,3333,3.973,3334,3.973,3335,3.973]],["title/properties.html",[8,1.084,3086,3.337]],["body/properties.html",[8,1.435,27,0.008,120,0.007,129,0.007,325,3.458,3317,6.393,3324,6.393,3336,7.215,3337,7.215,3338,7.215,3339,7.215,3340,7.215]],["title/miscellaneous/variables.html",[3136,2.535,3341,4.83]],["body/miscellaneous/variables.html",[7,0.191,12,1.97,27,0.008,29,0.276,45,1.019,48,3.232,49,3.157,65,2.411,71,3.9,72,1.803,84,1.12,104,1.509,120,0.005,129,0.005,142,1.831,187,3.323,204,3.126,206,2.452,309,3.209,313,3.57,314,4.937,321,4.937,325,2.109,358,3.008,415,2.19,480,3.323,484,3.733,507,4.937,508,4.937,509,4.937,521,7.244,525,3.126,615,2.606,713,4.596,1090,3.559,1161,4.937,1164,3.9,1197,3.323,1198,3.323,1747,3.446,2079,3.126,2124,4.097,2940,4.596,3045,3.9,3047,5.394,3048,3.9,3049,3.9,3058,3.9,3073,3.9,3074,5.394,3081,3.9,3136,2.962,3251,4.937,3341,3.9,3342,4.401,3343,7.904,3344,4.401,3345,4.401,3346,4.401,3347,4.401,3348,4.401,3349,4.401,3350,4.401,3351,4.401,3352,6.087,3353,4.401,3354,4.401,3355,4.401,3356,4.401,3357,4.401,3358,4.401,3359,4.401,3360,4.401,3361,4.401,3362,4.401,3363,6.087,3364,4.401,3365,4.401,3366,4.401,3367,6.087,3368,4.401,3369,4.401,3370,4.401,3371,4.401,3372,6.087,3373,4.401,3374,6.087,3375,4.401,3376,6.087,3377,4.401,3378,4.401,3379,4.401,3380,4.401,3381,4.401,3382,4.401,3383,4.401,3384,4.401,3385,4.401,3386,4.401,3387,4.401,3388,4.401,3389,4.401,3390,4.401,3391,4.401]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":955,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/QueuesQueryController.html":{},"guards/StudyGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3337,"title":{},"body":{"properties.html":{}}}],["0.11.2",{"_index":3111,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3108,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3134,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3127,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":3135,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3117,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3042,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3044,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3059,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3072,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3043,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3054,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3075,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3038,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3057,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3033,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":3056,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":3055,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":3083,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3039,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":3080,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3037,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3036,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3040,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3041,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3060,"title":{},"body":{"coverage.html":{}}}],["0})@column({name",{"_index":1550,"title":{},"body":{"entities/Option.html":{}}}],["0})@isnumber",{"_index":924,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1",{"_index":1592,"title":{},"body":{"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["1.0.0",{"_index":3120,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3118,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3121,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":951,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["10.0.0",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["10.3.7",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":3375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@isnumber",{"_index":952,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["12",{"_index":994,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":3331,"title":{},"body":{"overview.html":{}}}],["15",{"_index":3335,"title":{},"body":{"overview.html":{}}}],["1})@primarygeneratedcolumn({name",{"_index":1586,"title":{},"body":{"entities/Option.html":{}}}],["2",{"_index":703,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"overview.html":{}}}],["2.0.2",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":3114,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":3035,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3332,"title":{},"body":{"overview.html":{}}}],["200",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["22",{"_index":954,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["22})@column({name",{"_index":1544,"title":{},"body":{"entities/Option.html":{}}}],["22})@isnumber",{"_index":920,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["24",{"_index":71,"title":{},"body":{"injectables/AbstractQueueService.html":{},"miscellaneous/variables.html":{}}}],["29",{"_index":3333,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["3.3.5",{"_index":3124,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["302)@apiexcludeendpoint",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":3034,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":69,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["39",{"_index":3334,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3119,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3113,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":2042,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["404",{"_index":1482,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["409",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/UsersController.html":{}}}],["41",{"_index":1429,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["5.0.1",{"_index":3130,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":3132,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":956,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"overview.html":{}}}],["6.9.7",{"_index":3116,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":2128,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["6h",{"_index":489,"title":{},"body":{"modules/AuthModule.html":{}}}],["6})@column({name",{"_index":1547,"title":{},"body":{"entities/Option.html":{}}}],["6})@isnumber",{"_index":922,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["7.3.1",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3128,"title":{},"body":{"dependencies.html":{}}}],["8.11.4",{"_index":3123,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":993,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["abstract",{"_index":62,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QueryAnswer.html":{}}}],["abstractqueueservice",{"_index":1,"title":{"injectables/AbstractQueueService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["abstractqueueservice:101",{"_index":2425,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:105",{"_index":2428,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:12",{"_index":2422,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:23",{"_index":2430,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:38",{"_index":2427,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:6",{"_index":2431,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:75",{"_index":2423,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:82",{"_index":2429,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:90",{"_index":2426,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:97",{"_index":2424,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["access",{"_index":2079,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/variables.html":{}}}],["accession_nb",{"_index":2211,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_nb'})@isstring",{"_index":2332,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_number",{"_index":3169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessionnb",{"_index":2212,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accessionnumber",{"_index":2139,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["acquisition_device_processing_description",{"_index":3206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisition_number",{"_index":3214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitiondeviceprocessingdescription",{"_index":3207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitionnumber",{"_index":3215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activated",{"_index":537,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["activated'})@isboolean",{"_index":541,"title":{},"body":{"entities/Autorouting.html":{}}}],["active",{"_index":89,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["adapter",{"_index":1353,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2035,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["addanonjob",{"_index":2363,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addanonjob(queuesanonsdto",{"_index":2365,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addbearerauth",{"_index":3355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddeletejob",{"_index":2444,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["adddeletejob(queuesdeletedto",{"_index":2446,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["added",{"_index":1501,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["added'})@apiresponse({status",{"_index":1474,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addjob",{"_index":13,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(data",{"_index":31,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(request",{"_index":2033,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["addjob(userid",{"_index":2115,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["addlabeltorole",{"_index":2593,"title":{},"body":{"controllers/RolesController.html":{}}}],["addlabeltorole(rolename",{"_index":2598,"title":{},"body":{"controllers/RolesController.html":{}}}],["addoauthconfig",{"_index":1469,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addoauthconfig(@body",{"_index":1502,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addoauthconfig(oauthconfigdto",{"_index":1472,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addqueryjob",{"_index":2485,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["addqueryjob(queuesquerydto",{"_index":2487,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["address",{"_index":1075,"title":{},"body":{"classes/HttpClient.html":{}}}],["addrolelabel",{"_index":2686,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrolelabel(rolename",{"_index":2693,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin",{"_index":960,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["admin'})@column({name",{"_index":2904,"title":{},"body":{"entities/User.html":{}}}],["admin'})@primarycolumn({name",{"_index":2583,"title":{},"body":{"entities/Role.html":{}}}],["admin.controller",{"_index":1924,"title":{},"body":{"modules/OrthancModule.html":{}}}],["admin.controller.ts",{"_index":1686,"title":{},"body":{"controllers/OrthancAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:102",{"_index":1723,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:109",{"_index":1709,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:119",{"_index":1703,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:129",{"_index":1715,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:139",{"_index":1712,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:149",{"_index":1730,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:159",{"_index":1718,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:26",{"_index":1736,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:36",{"_index":1739,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:46",{"_index":1742,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:56",{"_index":1727,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:66",{"_index":1745,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:76",{"_index":1733,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:86",{"_index":1706,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin@gaelo.com",{"_index":3019,"title":{},"body":{"injectables/UsersService.html":{}}}],["adminguard",{"_index":131,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["aet",{"_index":686,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["aet'})@isstring",{"_index":2525,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["age",{"_index":68,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["agplv3",{"_index":3338,"title":{},"body":{"properties.html":{}}}],["all.controller",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["all.controller.ts",{"_index":2005,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["all.controller.ts:26",{"_index":2021,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:36",{"_index":2012,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:46",{"_index":2015,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:53",{"_index":2018,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["alllabels",{"_index":1269,"title":{},"body":{"controllers/LabelsController.html":{}}}],["alllabels.map((label",{"_index":1271,"title":{},"body":{"controllers/LabelsController.html":{}}}],["allmodalities",{"_index":699,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('ct",{"_index":705,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('pt",{"_index":704,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.length",{"_index":702,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allowemptyvalue",{"_index":1721,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["allroles",{"_index":2712,"title":{},"body":{"injectables/RolesService.html":{}}}],["allusers",{"_index":2943,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers.map((user",{"_index":2945,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":3309,"title":{},"body":{"index.html":{}}}],["anon.ts",{"_index":2783,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["anon.ts:4",{"_index":2791,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:5",{"_index":2790,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:6",{"_index":2789,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon/queue",{"_index":2353,"title":{},"body":{"modules/QueueModule.html":{}}}],["anonqueue",{"_index":2432,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anons.controller",{"_index":2354,"title":{},"body":{"modules/QueueModule.html":{}}}],["anons.controller.ts",{"_index":2361,"title":{},"body":{"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["anons.controller.ts:103",{"_index":2368,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:130",{"_index":2375,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:39",{"_index":2369,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:50",{"_index":2372,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:77",{"_index":2371,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto",{"_index":2376,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto.ts",{"_index":2396,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["anons.dto.ts:11",{"_index":2414,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:15",{"_index":2404,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:19",{"_index":2406,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:23",{"_index":2408,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:27",{"_index":2410,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:36",{"_index":2440,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["anons.dto.ts:7",{"_index":2412,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.service",{"_index":2358,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{}}}],["anons.service.ts",{"_index":2420,"title":{},"body":{"injectables/QueuesAnonService.html":{},"coverage.html":{}}}],["anons.service.ts:8",{"_index":2421,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anonymize",{"_index":961,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/QueuesAnonController.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["anonymizeguard",{"_index":147,"title":{"guards/AnonymizeGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["anonymizes",{"_index":2389,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["anonymizes.foreach((anonymize",{"_index":2391,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["answer.dto",{"_index":1975,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["answer.dto.ts",{"_index":2191,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["answer.dto.ts:12",{"_index":2302,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:16",{"_index":2304,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:20",{"_index":2306,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:24",{"_index":2310,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:28",{"_index":2308,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:34",{"_index":2338,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:38",{"_index":2336,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:42",{"_index":2340,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:46",{"_index":2334,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:50",{"_index":2342,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:54",{"_index":2333,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:58",{"_index":2344,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:64",{"_index":2193,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:68",{"_index":2195,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:8",{"_index":2312,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer/query",{"_index":2249,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts",{"_index":2138,"title":{},"body":{"classes/QueryAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts:10",{"_index":2178,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:11",{"_index":2177,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:12",{"_index":2166,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:14",{"_index":2159,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:4",{"_index":2161,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:40",{"_index":2168,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:44",{"_index":2169,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:48",{"_index":2170,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:5",{"_index":2162,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:52",{"_index":2171,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:56",{"_index":2173,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:6",{"_index":2163,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:60",{"_index":2172,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:64",{"_index":2167,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:68",{"_index":2176,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:7",{"_index":2165,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:72",{"_index":2175,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:76",{"_index":2174,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:8",{"_index":2164,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:9",{"_index":2160,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answerid",{"_index":2140,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answernumber",{"_index":2141,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answser",{"_index":1305,"title":{},"body":{"injectables/LabelsService.html":{}}}],["api",{"_index":3352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api;proto",{"_index":1103,"title":{},"body":{"classes/HttpClient.html":{}}}],["apibearerauth",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["apiexcludeendpoint",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioauth2(['openid",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiparam",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiproperty",{"_index":557,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{}}}],["apiproperty()@column({name",{"_index":540,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Rule.html":{}}}],["apiproperty()@column({nullable",{"_index":2908,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@isinstance(role",{"_index":1037,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":1034,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":864,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@isobject",{"_index":2194,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["apiproperty()@isstring",{"_index":1508,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":862,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":2900,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@primarygeneratedcolumn({name",{"_index":548,"title":{},"body":{"entities/Autorouting.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":544,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["apiproperty({required",{"_index":1028,"title":{},"body":{"classes/GetRoleDto.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["apiquery",{"_index":2055,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiresponse",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["apis",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('autorouting",{"_index":781,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["apitags('labels",{"_index":1266,"title":{},"body":{"controllers/LabelsController.html":{}}}],["apitags('oauth",{"_index":1491,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["apitags('options",{"_index":1607,"title":{},"body":{"controllers/OptionsController.html":{}}}],["apitags('orthanc",{"_index":1749,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["apitags('processing",{"_index":2059,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["apitags('queues/anon",{"_index":2377,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["apitags('queues/delete",{"_index":2457,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["apitags('queues/query",{"_index":2499,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["apitags('roles",{"_index":2634,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":2941,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":3251,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":3363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["app.get(seederservice",{"_index":3388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":3349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_interceptor",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":168,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":3281,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":1883,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["archive')@useguards(exportguard",{"_index":1859,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["args",{"_index":1147,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["array",{"_index":645,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["array.from(new",{"_index":114,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["arraybuffer",{"_index":1109,"title":{},"body":{"classes/HttpClient.html":{}}}],["associated",{"_index":1802,"title":{},"body":{"controllers/OrthancController.html":{}}}],["async",{"_index":12,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1097,"title":{},"body":{"classes/HttpClient.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":323,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1159,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('bearer",{"_index":1171,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["authguard('jwt",{"_index":1154,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1310,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":222,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3317,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1225,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["authorizationurl",{"_index":1213,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["authservice",{"_index":384,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":943,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["auto'})@column({default",{"_index":1576,"title":{},"body":{"entities/Option.html":{}}}],["auto'})@isstring",{"_index":944,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["auto_query",{"_index":2569,"title":{},"body":{"entities/Role.html":{}}}],["auto_query_hour_start",{"_index":1545,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_hour_stop",{"_index":1548,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_start",{"_index":1551,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_stop",{"_index":1553,"title":{},"body":{"entities/Option.html":{}}}],["auto_routing",{"_index":2571,"title":{},"body":{"entities/Role.html":{}}}],["autoloadentities",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["autoquery",{"_index":962,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["autoqueryguard",{"_index":153,"title":{"guards/AutoQueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoqueryhourstart",{"_index":903,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryhourstop",{"_index":904,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestart",{"_index":905,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestop",{"_index":906,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autorouter_started",{"_index":1556,"title":{},"body":{"entities/Option.html":{}}}],["autorouterstarted",{"_index":907,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["autorouting",{"_index":534,"title":{"entities/Autorouting.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateRoleDto.html":{},"classes/Destination.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["autorouting'})@apiresponse({status",{"_index":755,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.activated",{"_index":740,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{}}}],["autorouting.dto",{"_index":780,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.dto.ts",{"_index":896,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["autorouting.entity",{"_index":663,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{}}}],["autorouting.enum",{"_index":569,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autorouting.eventtype",{"_index":738,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting.handler",{"_index":802,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autorouting.router.destinations",{"_index":734,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting/autorouting.entity",{"_index":2748,"title":{},"body":{"modules/SeederModule.html":{}}}],["autorouting/autoroutings.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["autoroutingconfigs",{"_index":599,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype",{"_index":543,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["autoroutingeventtype.new_instance",{"_index":594,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autoroutingeventtype.new_patient",{"_index":652,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_series",{"_index":648,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_study",{"_index":650,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_patient",{"_index":656,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_series",{"_index":654,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_study",{"_index":655,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingguard",{"_index":162,"title":{"guards/AutoRoutingGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoroutinghandler",{"_index":597,"title":{"injectables/AutoroutingHandler.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoroutingmatches",{"_index":736,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingmatches.foreach((autorouting",{"_index":741,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutings.controller",{"_index":801,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autoroutings.service",{"_index":662,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{}}}],["autoroutingscontroller",{"_index":743,"title":{"controllers/AutoroutingsController.html":{}},"body":{"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{}}}],["autoroutingservice",{"_index":617,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["autoroutingsmodule",{"_index":223,"title":{"modules/AutoroutingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoroutingsModule.html":{},"modules.html":{},"overview.html":{}}}],["autoroutingsrepository",{"_index":815,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["autoroutingsservice",{"_index":613,"title":{"injectables/AutoroutingsService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":3329,"title":{},"body":{"modules.html":{}}}],["await",{"_index":65,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1089,"title":{},"body":{"classes/HttpClient.html":{},"dependencies.html":{}}}],["axios.request(option).catch(function",{"_index":1107,"title":{},"body":{"classes/HttpClient.html":{}}}],["back",{"_index":1457,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["backers",{"_index":3310,"title":{},"body":{"index.html":{}}}],["bad",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception(\"missing",{"_index":2648,"title":{},"body":{"controllers/RolesController.html":{}}}],["badrequestexception('confirmation",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":2514,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["badrequestexception('role",{"_index":2968,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception('token",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('uuid",{"_index":2070,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["baseurl",{"_index":1095,"title":{},"body":{"classes/HttpClient.html":{}}}],["bcryptjs",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs.compare(password",{"_index":3368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.gensalt",{"_index":3377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.hash(password",{"_index":3378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1198,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":2233,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["between.ts",{"_index":3077,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["binary",{"_index":1131,"title":{},"body":{"classes/HttpClient.html":{}}}],["body",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["body_part_examined",{"_index":3184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bodypartexamined",{"_index":3185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"guards/ModifyGuard.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingJobDto.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["break",{"_index":688,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["browse",{"_index":3327,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3325,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1093,"title":{},"body":{"classes/HttpClient.html":{}}}],["buffer.from(response.data",{"_index":1130,"title":{},"body":{"classes/HttpClient.html":{}}}],["build",{"_index":3358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builddocs",{"_index":3047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":3276,"title":{},"body":{"index.html":{}}}],["buildswagger",{"_index":3051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswagger(app",{"_index":3249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":3365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullmq",{"_index":60,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["burner_date_format",{"_index":1559,"title":{},"body":{"entities/Option.html":{}}}],["burner_delete_study_after_sent",{"_index":1561,"title":{},"body":{"entities/Option.html":{}}}],["burner_label_path",{"_index":1564,"title":{},"body":{"entities/Option.html":{}}}],["burner_manifacturer",{"_index":1567,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitored_path",{"_index":1569,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitoring_level",{"_index":1572,"title":{},"body":{"entities/Option.html":{}}}],["burner_started",{"_index":1574,"title":{},"body":{"entities/Option.html":{}}}],["burner_support_type",{"_index":1577,"title":{},"body":{"entities/Option.html":{}}}],["burner_transcoding",{"_index":1580,"title":{},"body":{"entities/Option.html":{}}}],["burner_transfer_syntax",{"_index":1582,"title":{},"body":{"entities/Option.html":{}}}],["burner_viewer_path",{"_index":1584,"title":{},"body":{"entities/Option.html":{}}}],["burnerdateformat",{"_index":908,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerdeletestudyaftersent",{"_index":909,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerlabelpath",{"_index":910,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermanifacturer",{"_index":911,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoredpath",{"_index":912,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoringlevel",{"_index":913,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerstarted",{"_index":914,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnersupporttype",{"_index":915,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertranscoding",{"_index":916,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertransfersyntax",{"_index":917,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerviewerpath",{"_index":918,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["by=localhost;for=localhost;host",{"_index":1101,"title":{},"body":{"classes/HttpClient.html":{}}}],["callhandler",{"_index":1439,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["canactivate",{"_index":134,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate(context",{"_index":135,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivatereturns",{"_index":1659,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["cardiac_number_of_images",{"_index":3188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardiacnumberofimages",{"_index":3189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":689,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["catch",{"_index":698,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/SeriesGuard.html":{},"interfaces/UserInfoResponse.html":{}}}],["catch((e",{"_index":729,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["catch(function",{"_index":1117,"title":{},"body":{"classes/HttpClient.html":{}}}],["catcherror",{"_index":1444,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["catcherror((err",{"_index":1675,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["catcherror((error",{"_index":1447,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["cd_burner",{"_index":2573,"title":{},"body":{"entities/Role.html":{}}}],["cdburner",{"_index":963,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["cdburnerguard",{"_index":160,"title":{"guards/CdBurnerGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["change",{"_index":1368,"title":{},"body":{"injectables/MailService.html":{}}}],["changed",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["changed'})@apiresponse({status",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(changepassworddto",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":335,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto})@public()@post('change",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordurl",{"_index":1363,"title":{},"body":{"injectables/MailService.html":{}}}],["changes",{"_index":1944,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.changes.foreach((element",{"_index":1947,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.last",{"_index":1946,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changetype",{"_index":1835,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["character",{"_index":860,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["check",{"_index":1800,"title":{},"body":{"controllers/OrthancController.html":{}}}],["checkifuseridhasjobs",{"_index":14,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkifuseridhasjobs(userid",{"_index":37,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkuseridparamsguard",{"_index":873,"title":{"guards/CheckUserIdParamsGuard.html":{}},"body":{"guards/CheckUserIdParamsGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["checkuseridqueryguard",{"_index":883,"title":{"guards/CheckUserIdQueryGuard.html":{}},"body":{"guards/CheckUserIdQueryGuard.html":{},"controllers/ProcessingController.html":{},"coverage.html":{}}}],["checkuserroleguard",{"_index":888,"title":{"guards/CheckUserRoleGuard.html":{}},"body":{"guards/CheckUserRoleGuard.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["children",{"_index":92,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["class",{"_index":63,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":842,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"overview.html":{}}}],["client",{"_index":665,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["client.ts",{"_index":3079,"title":{},"body":{"coverage.html":{}}}],["clientid",{"_index":1452,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["closequeueconnection",{"_index":15,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["cluster_appmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule",{"_index":798,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule_providers",{"_index":799,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule",{"_index":1282,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule_providers",{"_index":1283,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_oauthconfigmodule",{"_index":1513,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_oauthconfigmodule_providers",{"_index":1514,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_optionsmodule",{"_index":1619,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_optionsmodule_providers",{"_index":1620,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_orthancmodule",{"_index":1919,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_providers",{"_index":1920,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_processingmodule",{"_index":2107,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_processingmodule_providers",{"_index":2108,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_queuemodule",{"_index":2345,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_providers",{"_index":2346,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2680,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2681,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":2741,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":2742,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2795,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2796,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2797,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2971,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2972,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":554,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["column({default",{"_index":1563,"title":{},"body":{"entities/Option.html":{}}}],["column({nullable",{"_index":2897,"title":{},"body":{"entities/User.html":{}}}],["comparepasswords",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(pass",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(token",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":3391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":86,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["condition",{"_index":564,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["condition'})@isenum(condition",{"_index":2733,"title":{},"body":{"classes/Rule.html":{}}}],["condition.equals",{"_index":582,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["config",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"modules/MailModule.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["config.dto",{"_index":1490,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["config.dto.ts",{"_index":1507,"title":{},"body":{"classes/OauthConfigDto.html":{},"coverage.html":{}}}],["config.dto.ts:11",{"_index":1512,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:15",{"_index":1509,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:19",{"_index":1510,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:7",{"_index":1511,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.entity",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{}}}],["config.entity.ts",{"_index":1451,"title":{},"body":{"entities/OauthConfig.html":{},"coverage.html":{}}}],["config.entity.ts:12",{"_index":1463,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:18",{"_index":1456,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:22",{"_index":1459,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:8",{"_index":1461,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.get('jwt_secret",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('mail_encryption",{"_index":1343,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":1341,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":1346,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":1345,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.controller",{"_index":1516,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.controller.ts",{"_index":1468,"title":{},"body":{"controllers/OauthConfigController.html":{},"coverage.html":{}}}],["configs.controller.ts:38",{"_index":1489,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:49",{"_index":1485,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:63",{"_index":1479,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.module.ts",{"_index":1515,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.service",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["configs.service.ts",{"_index":1518,"title":{},"body":{"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["configs.service.ts:15",{"_index":1530,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:22",{"_index":1528,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:31",{"_index":1531,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:35",{"_index":1526,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:39",{"_index":1525,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:46",{"_index":1532,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:9",{"_index":1523,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs/oauth",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["configservice",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"miscellaneous/functions.html":{}}}],["configservice.get",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('redis_address",{"_index":2434,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('redis_port",{"_index":2436,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('typeorm_database",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_host",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_password",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_port",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_username",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1211,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["configure",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationpassword",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{}}}],["confirmationtoken",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflict",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflict'})@apibody({type",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflict'})@useguards(adminguard)@post",{"_index":2923,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["conflictexception('a",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('email",{"_index":2960,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception('label",{"_index":1279,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/RolesService.html":{}}}],["conflictexception('oauth",{"_index":1505,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["conflictexception('role",{"_index":2652,"title":{},"body":{"controllers/RolesController.html":{}}}],["connect/auth",{"_index":1465,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["connect/auth'})@column",{"_index":1455,"title":{},"body":{"entities/OauthConfig.html":{}}}],["connection",{"_index":2127,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["console.error(\"can't",{"_index":684,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('invalid",{"_index":706,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('tmtvjob",{"_index":691,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error(error",{"_index":1118,"title":{},"body":{"classes/HttpClient.html":{}}}],["console.log('documentation",{"_index":3364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('seeding",{"_index":3390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('sending",{"_index":726,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.log('tmtv",{"_index":724,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":1162,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constants/enums",{"_index":671,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancQueryController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(moduleref",{"_index":1654,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["constructor(answerid",{"_index":2258,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["constructor(authservice",{"_index":1312,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(autoroutingservice",{"_index":612,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["constructor(autoroutingsrepository",{"_index":810,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["constructor(configservice",{"_index":1231,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["constructor(id",{"_index":2089,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["constructor(jwtservice",{"_index":1179,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["constructor(labelsrepository",{"_index":1291,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor(level",{"_index":2158,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["constructor(mailerservice",{"_index":1358,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(oauthconfigsrepository",{"_index":1522,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["constructor(optionrepository",{"_index":2220,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["constructor(optionsrepository",{"_index":1626,"title":{},"body":{"injectables/OptionsService.html":{}}}],["constructor(orthancclient",{"_index":1936,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"classes/TmtvService.html":{}}}],["constructor(private",{"_index":783,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["constructor(processingservice",{"_index":1386,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["constructor(queue",{"_index":23,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["constructor(reflector",{"_index":1155,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(roleservice",{"_index":2764,"title":{},"body":{"guards/StudyGuard.html":{}}}],["constructor(rolesrepository",{"_index":2690,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(rolesservice",{"_index":2751,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(tag",{"_index":2787,"title":{},"body":{"classes/TagAnon.html":{}}}],["constructor(usersrepository",{"_index":2980,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(valuepath",{"_index":876,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["consumer",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":853,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["context",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["context.getclass",{"_index":1167,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1166,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":143,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["contrast_bolus_agent",{"_index":3208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contrastbolusagent",{"_index":3209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":167,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/autorouting",{"_index":782,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["controller('/labels",{"_index":1267,"title":{},"body":{"controllers/LabelsController.html":{}}}],["controller('/options",{"_index":1608,"title":{},"body":{"controllers/OptionsController.html":{}}}],["controller('/processing",{"_index":2060,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["controller('/queues/anon",{"_index":2378,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["controller('/queues/delete",{"_index":2458,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["controller('/queues/query",{"_index":2500,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["controller('/roles",{"_index":2635,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('/users",{"_index":2942,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('oauth",{"_index":1492,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["controllers",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":3029,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":754,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateOptionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1277,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(autorouting",{"_index":816,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["create(label",{"_index":1294,"title":{},"body":{"injectables/LabelsService.html":{}}}],["create(labeldto",{"_index":1253,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(role",{"_index":2695,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(user",{"_index":2983,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarchive",{"_index":1850,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createarchive(request",{"_index":1857,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createautorouting",{"_index":746,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautorouting(createautoroutingdto",{"_index":751,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautoroutingdto",{"_index":752,"title":{"classes/CreateAutoroutingDto.html":{}},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["createconfirmationtoken",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["createconfirmationtoken(user",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdfiles",{"_index":2808,"title":{},"body":{"classes/TmtvService.html":{}}}],["createdicom",{"_index":1890,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createdicom(request",{"_index":1892,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createecho",{"_index":1687,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createecho(request",{"_index":1700,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createinstances",{"_index":1891,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createinstances(request",{"_index":1895,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createjobs",{"_index":1688,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createjobs(request",{"_index":1704,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createmedia",{"_index":1851,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmedia(request",{"_index":1861,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended",{"_index":1852,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended(request",{"_index":1864,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport",{"_index":1853,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport(request",{"_index":1868,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesmodify",{"_index":1903,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesmodify(request",{"_index":1906,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createmodalitiesquery",{"_index":1952,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createmodalitiesquery(request",{"_index":1956,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createoptiondto",{"_index":900,"title":{"classes/CreateOptionDto.html":{}},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["createpeersstore",{"_index":1854,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createpeersstore(request",{"_index":1871,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createrole",{"_index":2594,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(@body",{"_index":2646,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(createroledto",{"_index":2603,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":957,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":2647,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto})@post",{"_index":2605,"title":{},"body":{"controllers/RolesController.html":{}}}],["createseries",{"_index":2809,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ctorthancseriesid",{"_index":2854,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ptorthancseriesid",{"_index":2858,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesmodify",{"_index":1904,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createseriesmodify(request",{"_index":1909,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify",{"_index":1905,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify(request",{"_index":1912,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createtasksuserexport",{"_index":1855,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createtasksuserexport(request",{"_index":1874,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createuser",{"_index":2917,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":2966,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdto",{"_index":2920,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":980,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["credentials",{"_index":1122,"title":{},"body":{"classes/HttpClient.html":{}}}],["cron",{"_index":1940,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":1938,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["cron(cronexpression.every_minute",{"_index":2225,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["cronexpression",{"_index":1941,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":3370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":3109,"title":{},"body":{"dependencies.html":{}}}],["ct",{"_index":710,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ctorthancseriesid",{"_index":719,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ctresponse",{"_index":2851,"title":{},"body":{"classes/TmtvService.html":{}}}],["ctseriesid",{"_index":708,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["currenthour",{"_index":2235,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["currentminute",{"_index":2237,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":34,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["data.uuid",{"_index":111,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['jobid",{"_index":81,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['userid",{"_index":79,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['uuid",{"_index":77,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["database",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrthancEventPayloadDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date().gethours",{"_index":2236,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date().getminutes",{"_index":2238,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date(date.now",{"_index":3373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":1217,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["decorators",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"entities/Option.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1143,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaultmessage(args",{"_index":1144,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaults",{"_index":1347,"title":{},"body":{"modules/MailModule.html":{}}}],["defer",{"_index":1645,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["deferguard",{"_index":1667,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["delayed",{"_index":88,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["delete",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/CreateRoleDto.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["delete('/:id",{"_index":788,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:labelname",{"_index":1273,"title":{},"body":{"controllers/LabelsController.html":{}}}],["delete('/:name",{"_index":2654,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/:rolename/label/:label",{"_index":2676,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/modalities",{"_index":1760,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/patients",{"_index":1829,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/peers",{"_index":1763,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/series",{"_index":1832,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies",{"_index":1831,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies/*/labels",{"_index":2024,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["delete(':name",{"_index":1496,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["delete(':uuid",{"_index":2082,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["delete(@param('id",{"_index":2963,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('name",{"_index":2655,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete(id",{"_index":2926,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(name",{"_index":2607,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete.controller",{"_index":1926,"title":{},"body":{"modules/OrthancModule.html":{}}}],["delete.controller.ts",{"_index":1816,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"coverage.html":{}}}],["delete.controller.ts:23",{"_index":1822,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:33",{"_index":1828,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:43",{"_index":1825,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete/queue",{"_index":2355,"title":{},"body":{"modules/QueueModule.html":{}}}],["deleteallressources",{"_index":2810,"title":{},"body":{"classes/TmtvService.html":{}}}],["deleteautorouting",{"_index":747,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(@param('id",{"_index":789,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(id",{"_index":759,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleted",{"_index":1494,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleted'})@apiresponse({status",{"_index":1481,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteguard",{"_index":155,"title":{"guards/DeleteGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancDeleteController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesDeleteController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["deletelabels",{"_index":2006,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletelabels(request",{"_index":2010,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletemodality",{"_index":1689,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletemodality(request",{"_index":1707,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deleteoauthconfig",{"_index":1470,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deleteoauthconfig(@param('name",{"_index":1497,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteoauthconfig(name",{"_index":1480,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deletepatients",{"_index":1817,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepatients(request",{"_index":1820,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepeer",{"_index":1690,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletepeer(request",{"_index":1710,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletequeue",{"_index":2480,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deletes.controller",{"_index":2356,"title":{},"body":{"modules/QueueModule.html":{}}}],["deletes.controller.ts",{"_index":2442,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["deletes.controller.ts:104",{"_index":2449,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:131",{"_index":2455,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:38",{"_index":2450,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:49",{"_index":2452,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:76",{"_index":2451,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto",{"_index":2456,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto.ts",{"_index":2473,"title":{},"body":{"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["deletes.dto.ts:6",{"_index":2475,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["deletes.service",{"_index":2359,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{}}}],["deletes.service.ts",{"_index":2478,"title":{},"body":{"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["deletes.service.ts:8",{"_index":2479,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deleteseries",{"_index":1818,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleteseries(request",{"_index":1823,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies",{"_index":1819,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies(request",{"_index":1826,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["dependencies",{"_index":213,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":584,"title":{"classes/Destination.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["destinations",{"_index":593,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype",{"_index":565,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["destinationtype.aet",{"_index":585,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype.peer",{"_index":725,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["destinationtype.tmtvjob",{"_index":690,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["development",{"_index":3288,"title":{},"body":{"index.html":{}}}],["dicom",{"_index":1900,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom')@useguards(importguard",{"_index":1893,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom_tag",{"_index":576,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicom_tag'})@isenum(dicomtag",{"_index":2735,"title":{},"body":{"classes/Rule.html":{}}}],["dicoms",{"_index":2849,"title":{},"body":{"classes/TmtvService.html":{}}}],["dicomtag",{"_index":566,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["dicomtag.patient_name",{"_index":575,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["different",{"_index":3155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["digit",{"_index":858,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["dir",{"_index":1350,"title":{},"body":{"modules/MailModule.html":{}}}],["disable",{"_index":765,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["disable(id",{"_index":818,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["disableautorouting",{"_index":748,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(@param('id",{"_index":796,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(id",{"_index":764,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["docs/oauth2",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["document",{"_index":3359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":3030,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":3350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":988,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["doe'})@column({name",{"_index":2895,"title":{},"body":{"entities/User.html":{}}}],["don't",{"_index":2078,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["doreverseproxy",{"_index":1747,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doreverseproxy(request",{"_index":1751,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["dto/change",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":779,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/get",{"_index":1606,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/lost",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/orthanc",{"_index":659,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["dto/query",{"_index":1973,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["dto/register.dto",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":1605,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/UsersController.html":{}}}],["dto/with",{"_index":2632,"title":{},"body":{"controllers/RolesController.html":{}}}],["e",{"_index":687,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["e2e",{"_index":3298,"title":{},"body":{"index.html":{}}}],["each",{"_index":592,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["editmodality",{"_index":1691,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editmodality(request",{"_index":1713,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer",{"_index":1692,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer(request",{"_index":1716,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["efficient",{"_index":3277,"title":{},"body":{"index.html":{}}}],["element",{"_index":1950,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["element.changetype",{"_index":1949,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["email",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email@gaelo.com",{"_index":1325,"title":{},"body":{"classes/LoginDto.html":{}}}],["email@gaelo.com'})@isnotempty",{"_index":1321,"title":{},"body":{"classes/LoginDto.html":{}}}],["email_verified",{"_index":1203,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["emitter",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["enable",{"_index":769,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["enable(id",{"_index":820,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["enableautorouting",{"_index":749,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(@param('id",{"_index":793,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(id",{"_index":768,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["end",{"_index":1466,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["end'})@column",{"_index":1458,"title":{},"body":{"entities/OauthConfig.html":{}}}],["endhour",{"_index":3258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endminute",{"_index":3259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities",{"_index":535,"title":{},"body":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":533,"title":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitynotfounderror",{"_index":1445,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["enum",{"_index":2098,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["enumerations",{"_index":3137,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["epson",{"_index":934,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["epson'})@column({default",{"_index":1566,"title":{},"body":{"entities/Option.html":{}}}],["epson'})@isstring",{"_index":935,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["equals",{"_index":3154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1677,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["error",{"_index":1108,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{}}}],["error('invalid",{"_index":1418,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["error.response",{"_index":1119,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response.status",{"_index":1120,"title":{},"body":{"classes/HttpClient.html":{}}}],["event",{"_index":660,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["event_type",{"_index":595,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["event_type'})@isenum(autoroutingeventtype",{"_index":546,"title":{},"body":{"entities/Autorouting.html":{}}}],["eventemitter",{"_index":812,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemitter2",{"_index":813,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemittermodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["eventtype",{"_index":538,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["example",{"_index":574,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["exclude",{"_index":1591,"title":{},"body":{"entities/Option.html":{},"entities/User.html":{}}}],["executioncontext",{"_index":136,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["exist",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{}}}],["existinguser",{"_index":2957,"title":{},"body":{"controllers/UsersController.html":{}}}],["existinguser.id",{"_index":2959,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists",{"_index":1280,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["exists'})@apibearerauth('access",{"_index":1476,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["exit(0",{"_index":3367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":61,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["export.controller",{"_index":1927,"title":{},"body":{"modules/OrthancModule.html":{}}}],["export.controller.ts",{"_index":1849,"title":{},"body":{"controllers/OrthancExportController.html":{},"coverage.html":{}}}],["export.controller.ts:24",{"_index":1870,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:34",{"_index":1860,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:44",{"_index":1863,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:54",{"_index":1867,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:64",{"_index":1879,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:74",{"_index":1873,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:84",{"_index":1876,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exportguard",{"_index":149,"title":{"guards/ExportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["exports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1091,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"dependencies.html":{}}}],["extended",{"_index":1884,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extended')@useguards(exportguard",{"_index":1866,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extends",{"_index":897,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/SeriesGuard.html":{},"classes/UpdateOptionDto.html":{},"interfaces/UserInfoResponse.html":{}}}],["extractjwt",{"_index":1235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":87,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["false",{"_index":110,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["false})@column({default",{"_index":1555,"title":{},"body":{"entities/Option.html":{}}}],["false})@isarray()@isobject({each",{"_index":2522,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["false})@isboolean",{"_index":927,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/TmtvJobDto.html":{}}}],["false})@isobject",{"_index":2102,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["false})@useguards(undefined)@get",{"_index":2048,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["family_name",{"_index":1206,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["file.getid",{"_index":2883,"title":{},"body":{"classes/TmtvService.html":{}}}],["filter((job",{"_index":121,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["filteredjob",{"_index":105,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["find",{"_index":2007,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(@request",{"_index":2026,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(request",{"_index":2013,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["findall",{"_index":805,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":2639,"title":{},"body":{"controllers/RolesController.html":{}}}],["findall(withlabels",{"_index":2610,"title":{},"body":{"controllers/RolesController.html":{}}}],["findallwithlabels",{"_index":2687,"title":{},"body":{"injectables/RolesService.html":{}}}],["findone",{"_index":2595,"title":{},"body":{"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('name",{"_index":2644,"title":{},"body":{"controllers/RolesController.html":{}}}],["findone(id",{"_index":2986,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(name",{"_index":2613,"title":{},"body":{"controllers/RolesController.html":{}}}],["findonebyauthorizationurl",{"_index":1519,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyauthorizationurl(authorizationurl",{"_index":1527,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyemail",{"_index":2976,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":2989,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyeventtype",{"_index":806,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyeventtype(eventtype",{"_index":823,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyname",{"_index":1520,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyname(name",{"_index":1529,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyorfail",{"_index":1289,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["findonebyorfail(labelname",{"_index":1297,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findonebyorfail(name",{"_index":2699,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneorfail",{"_index":807,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findoneorfail(id",{"_index":825,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["finduser",{"_index":3009,"title":{},"body":{"injectables/UsersService.html":{}}}],["finishcallback",{"_index":1087,"title":{},"body":{"classes/HttpClient.html":{}}}],["firstname",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname'})@isnotempty",{"_index":2560,"title":{},"body":{"classes/RegisterDto.html":{}}}],["firstvaluefrom",{"_index":1199,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["flow",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["flush",{"_index":16,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["flushed",{"_index":2061,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushed'})@apiresponse({status",{"_index":2039,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushqueue",{"_index":2031,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["follow",{"_index":1370,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":2063,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiparam({name",{"_index":2043,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiquery({name",{"_index":2047,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@useguards(adminguard)@delete(':uuid",{"_index":2052,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["forbiddenexception",{"_index":2054,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["forbiddenexception(\"you",{"_index":2077,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbiddenexception('role",{"_index":2657,"title":{},"body":{"controllers/RolesController.html":{}}}],["forbiddenexception('user",{"_index":2388,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["force",{"_index":118,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["foreach((job",{"_index":122,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["forwarded",{"_index":1100,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedaddress",{"_index":1045,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedprotocol",{"_index":1046,"title":{},"body":{"classes/HttpClient.html":{}}}],["found",{"_index":1495,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibearerauth('access",{"_index":1483,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["found.interceptor",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["found.interceptor.ts",{"_index":1435,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["found.interceptor.ts:13",{"_index":1440,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["fragmented",{"_index":2830,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmask",{"_index":1423,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setmaskid(fragmentedmaskid",{"_index":1425,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setpetid(this.petid",{"_index":1426,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["fragmentedmask.setpetid(this.ptseriesid",{"_index":2874,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmaskid",{"_index":1421,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentmask",{"_index":1379,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["framework",{"_index":3275,"title":{},"body":{"index.html":{}}}],["from(canactivatereturns).pipe",{"_index":1662,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["from(guardval",{"_index":1671,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["function",{"_index":1652,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{}}}],["functions",{"_index":3240,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaelo",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["generaterandomuuid",{"_index":2124,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatetoken",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":2949,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:name",{"_index":2643,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/:rolename/labels",{"_index":2673,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/dicom",{"_index":1810,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/instances",{"_index":1809,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/jobs/:id",{"_index":1758,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/labels/:name/studies",{"_index":1792,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/modalities",{"_index":1813,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/patients",{"_index":2027,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["get('/peers",{"_index":1885,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["get('/peers/*/system",{"_index":1764,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/plugins",{"_index":1756,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/queries/*/answers",{"_index":1979,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["get('/series",{"_index":1808,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/studies",{"_index":1806,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/system",{"_index":1750,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/tools/log",{"_index":1754,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/wado",{"_index":1811,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get(':uuid",{"_index":2068,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["get('oauth2",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["get('test/:id",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["getalluuids",{"_index":17,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getarchivedicomasbuffer([this.ctorthancseriesid",{"_index":2850,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivedicomasbuffer([this.ptorthancseriesid",{"_index":2843,"title":{},"body":{"classes/TmtvService.html":{}}}],["getautorouting",{"_index":750,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["getcreatedfiles",{"_index":2811,"title":{},"body":{"classes/TmtvService.html":{}}}],["getdicomweb",{"_index":1768,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getdicomweb(request",{"_index":1775,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getid",{"_index":2087,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getinstances",{"_index":1769,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getinstances(request",{"_index":1779,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs",{"_index":18,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobs(@request",{"_index":1759,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(request",{"_index":1719,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getjobs(userid",{"_index":2119,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getjobs(uuid",{"_index":44,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid",{"_index":19,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid(uuid",{"_index":51,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getloglevel",{"_index":1693,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getloglevel(request",{"_index":1724,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getmaskas",{"_index":1380,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskas(type",{"_index":1390,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskid",{"_index":1381,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmodalities",{"_index":1770,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getmodalities(request",{"_index":1782,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getoauthconfig",{"_index":1471,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["getoptiondto",{"_index":1006,"title":{"classes/GetOptionDto.html":{}},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"coverage.html":{}}}],["getoptiondto})@apiresponse({status",{"_index":1595,"title":{},"body":{"controllers/OptionsController.html":{}}}],["getoptions",{"_index":1047,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{}}}],["getparentstudy('instances",{"_index":1137,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["getparentstudy('series",{"_index":2760,"title":{},"body":{"injectables/SeriesGuard.html":{}}}],["getpatients",{"_index":2008,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatients(request",{"_index":2016,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpeers",{"_index":1856,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeers(request",{"_index":1877,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeersystem",{"_index":1694,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getpeersystem(request",{"_index":1728,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins",{"_index":1695,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins(request",{"_index":1731,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getqueryanswers",{"_index":1953,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryanswers(request",{"_index":1959,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer",{"_index":1954,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer(id",{"_index":1962,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getresponseasbuffer",{"_index":1051,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasbuffer(url",{"_index":1069,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream",{"_index":1052,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream(url",{"_index":1071,"title":{},"body":{"classes/HttpClient.html":{}}}],["getroledto",{"_index":1023,"title":{"classes/GetRoleDto.html":{}},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["getrolelabels",{"_index":2596,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolelabels(@param('rolename",{"_index":2674,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolelabels(rolename",{"_index":2617,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["gets",{"_index":1720,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getseries",{"_index":1771,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries(request",{"_index":1785,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesdetailsofstudy(orthancid",{"_index":695,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["getstatofmask",{"_index":1382,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getstudies",{"_index":1772,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudies(request",{"_index":1788,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel",{"_index":1773,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(@param('name",{"_index":1804,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(labelname",{"_index":1791,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudylabels",{"_index":2762,"title":{},"body":{"guards/StudyGuard.html":{}}}],["getstudylabels(orthancid",{"_index":2767,"title":{},"body":{"guards/StudyGuard.html":{}}}],["getsystem",{"_index":1696,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getsystem(request",{"_index":1734,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getting",{"_index":3271,"title":{"index.html":{}},"body":{}}],["gettokenexpiration",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettype",{"_index":2088,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getuserdto",{"_index":1031,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserdto})@apiresponse({status",{"_index":2931,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfourl",{"_index":1175,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getuserinfourl(wellknown",{"_index":1182,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["getusers",{"_index":2918,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid",{"_index":2919,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(@param('id",{"_index":2950,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(id",{"_index":2930,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuuid",{"_index":2032,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuid(userid",{"_index":2046,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuidofuser",{"_index":20,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidofuser(userid",{"_index":53,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidsofuser",{"_index":2113,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getuuidsofuser(userid",{"_index":2121,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getwado",{"_index":1774,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwado(@request",{"_index":1812,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwado(request",{"_index":1794,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getwellknown",{"_index":1176,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getwellknown(iss",{"_index":1185,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["given_name",{"_index":1205,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["global",{"_index":1338,"title":{},"body":{"modules/MailModule.html":{}}}],["graph",{"_index":3328,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":3158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":3305,"title":{},"body":{"index.html":{}}}],["guard",{"_index":130,"title":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}},"body":{"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["guard.canactivate(context",{"_index":1669,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guardisobservable",{"_index":1681,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guardispromise",{"_index":1679,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards",{"_index":132,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["guards.map((guard",{"_index":1657,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards/check",{"_index":2057,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/instance.guard",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["guards/jwt",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/local.guard",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/or.guard",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/roles.guard",{"_index":778,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/series.guard",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["guards/study.guard",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["guardval",{"_index":1668,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleautoroutingupdated",{"_index":601,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handlebars",{"_index":3112,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1336,"title":{},"body":{"modules/MailModule.html":{}}}],["handleerror",{"_index":1674,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleevent",{"_index":602,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handleevent(payload",{"_index":620,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["hash",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["hashadmin",{"_index":3014,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":3007,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":2940,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('passwordadmin",{"_index":3015,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword('passworduser",{"_index":3017,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(newpassword",{"_index":3008,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(token",{"_index":3371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword(userdto.password",{"_index":2969,"title":{},"body":{"controllers/UsersController.html":{}}}],["hashuser",{"_index":3016,"title":{},"body":{"injectables/UsersService.html":{}}}],["headers",{"_index":1092,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["here",{"_index":3314,"title":{},"body":{"index.html":{}}}],["host",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["hours",{"_index":3372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1369,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1197,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:8080/realms/master/protocol/openid",{"_index":1454,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["httpclient",{"_index":1043,"title":{"classes/HttpClient.html":{}},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["httpcode",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":3321,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1180,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["httpstatus",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":123,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["id'})@apiresponse({status",{"_index":760,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["id'})@exclude",{"_index":1587,"title":{},"body":{"entities/Option.html":{}}}],["id_mask",{"_index":2865,"title":{},"body":{"classes/TmtvService.html":{}}}],["idct",{"_index":2863,"title":{},"body":{"classes/TmtvService.html":{}}}],["identifier",{"_index":3031,"title":{},"body":{"coverage.html":{}}}],["idpt",{"_index":2864,"title":{},"body":{"classes/TmtvService.html":{}}}],["ignore",{"_index":1540,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image_comments",{"_index":3228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_index",{"_index":3216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_orientation_patient",{"_index":3198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_position_patient",{"_index":3226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagecomments",{"_index":3229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageindex",{"_index":3217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageorientationpatient",{"_index":3199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagepositionpatient",{"_index":3227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["images_in_acquisition",{"_index":3190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagesinacquisition",{"_index":3191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":141,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}}}],["import",{"_index":57,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["import.controller",{"_index":1928,"title":{},"body":{"modules/OrthancModule.html":{}}}],["import.controller.ts",{"_index":1889,"title":{},"body":{"controllers/OrthancImportController.html":{},"coverage.html":{}}}],["import.controller.ts:17",{"_index":1897,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["import.controller.ts:27",{"_index":1894,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["importguard",{"_index":140,"title":{"guards/ImportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancImportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["imports",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":3250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["inherited",{"_index":2272,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["inject",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{},"guards/StudyGuard.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1642,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["injectrepository",{"_index":831,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(autorouting",{"_index":832,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["injectrepository(label",{"_index":1302,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["injectrepository(oauthconfig",{"_index":1533,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["injectrepository(option",{"_index":1633,"title":{},"body":{"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["injectrepository(role",{"_index":2710,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectrepository(user",{"_index":3000,"title":{},"body":{"injectables/UsersService.html":{}}}],["inline",{"_index":3110,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":3285,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3287,"title":{},"body":{"index.html":{}}}],["instance_creation_date",{"_index":3210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_creation_time",{"_index":3212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_number",{"_index":3218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationdate",{"_index":3211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationtime",{"_index":3213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceguard",{"_index":197,"title":{"injectables/InstanceGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/InstanceGuard.html":{},"coverage.html":{}}}],["instancenumber",{"_index":3219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceof",{"_index":1448,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["instances",{"_index":3230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institution_name",{"_index":3171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institutionname",{"_index":3172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":1436,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["intercept(context",{"_index":1437,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptors/not",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/public",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["interface",{"_index":1201,"title":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":1639,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"overview.html":{}}}],["is_public_key",{"_index":1161,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":1487,"title":{},"body":{"controllers/OauthConfigController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["isbetween",{"_index":2239,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["isboolean",{"_index":558,"title":{},"body":{"entities/Autorouting.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/ProcessingJobDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/WithLabels.html":{}}}],["isemail",{"_index":998,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":559,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(autoroutingeventtype",{"_index":596,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(condition",{"_index":583,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(destinationtype",{"_index":586,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(dicomtag",{"_index":577,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(processingjobtype",{"_index":2106,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(processingmask",{"_index":2105,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(queryanswertype",{"_index":2215,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["isenum(rulecondition",{"_index":589,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(valuerepresentation",{"_index":580,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isequal",{"_index":603,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isequal(value",{"_index":624,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isexistinguser",{"_index":2977,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexistinguser(id",{"_index":2991,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["isgreaterthan",{"_index":604,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isgreaterthan(value",{"_index":626,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin",{"_index":605,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin(value",{"_index":628,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isinstance",{"_index":1040,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isinstance(role",{"_index":1042,"title":{},"body":{"classes/GetUserDto.html":{}}}],["islabelexist",{"_index":1290,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islabelexist(labelname",{"_index":1299,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islessthan",{"_index":606,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["islessthan(value",{"_index":630,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ismatch",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":866,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/RegisterDto.html":{}}}],["isnotin",{"_index":607,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnotin(value",{"_index":632,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnumber",{"_index":867,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["isnumberorstring",{"_index":571,"title":{"classes/IsNumberOrString.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["isobject",{"_index":2104,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["isoptional",{"_index":3028,"title":{},"body":{"classes/WithLabels.html":{}}}],["isoptional()@apiproperty({example",{"_index":3024,"title":{},"body":{"classes/WithLabels.html":{}}}],["ispaused",{"_index":2534,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["ispublic",{"_index":1164,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isroleexist",{"_index":2688,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleexist(name",{"_index":2702,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleused",{"_index":2978,"title":{},"body":{"injectables/UsersService.html":{}}}],["isroleused(rolename",{"_index":2993,"title":{},"body":{"injectables/UsersService.html":{}}}],["iss",{"_index":1187,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["issecondarycapture",{"_index":3064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["issecondarycapture(sopclassuid",{"_index":3253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issendable",{"_index":608,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["issendable(router",{"_index":634,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isstring",{"_index":560,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/LabelDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstudylabelinrole",{"_index":2763,"title":{},"body":{"guards/StudyGuard.html":{}}}],["isstudylabelinrole(userrole",{"_index":2769,"title":{},"body":{"guards/StudyGuard.html":{}}}],["issuer",{"_index":1223,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["istanbul",{"_index":1539,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["istimebetween",{"_index":2230,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istimebetween(starthour",{"_index":3256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["job",{"_index":59,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["job'})@apiresponse({status",{"_index":2051,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["job.data.jobid",{"_index":80,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.data.results",{"_index":127,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["job.data.state",{"_index":100,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.userid",{"_index":78,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.uuid",{"_index":76,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.dto",{"_index":2056,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.dto.ts",{"_index":2097,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":2802,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:16",{"_index":2804,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:20",{"_index":2805,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:26",{"_index":2100,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:30",{"_index":2103,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:8",{"_index":2801,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.id",{"_index":124,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.progress",{"_index":126,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobid",{"_index":713,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":73,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["jobs'})@useguards(anonymizeguard)@post",{"_index":2367,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["jobs'})@useguards(deleteguard)@post",{"_index":2448,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["jobs'})@useguards(queryguard)@post",{"_index":2489,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["jobs.filter((job",{"_index":106,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.find((job",{"_index":109,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["jobs.foreach((job",{"_index":75,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobs.map((job",{"_index":113,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.map(async",{"_index":103,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.push(job",{"_index":101,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobtype",{"_index":715,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["john",{"_index":986,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["john'})@column({name",{"_index":2892,"title":{},"body":{"entities/User.html":{}}}],["john.doe@gaelo.fr",{"_index":2887,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john.doe@gmail.com",{"_index":983,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/User.html":{}}}],["john.doe@gmail.com'})@column({unique",{"_index":2890,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":1332,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1351,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":2911,"title":{},"body":{"entities/User.html":{}}}],["jointable",{"_index":2589,"title":{},"body":{"entities/Role.html":{}}}],["json.stringify(document",{"_index":3362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonb",{"_index":591,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["jsonb'})@validatenested()@type(undefined",{"_index":552,"title":{},"body":{"entities/Autorouting.html":{}}}],["jsonb'})@validatenested({each",{"_index":2727,"title":{},"body":{"classes/Router.html":{}}}],["jwt",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.strategy",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":476,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoauthguard",{"_index":381,"title":{"injectables/JwtOAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["jwtoauthstrategy",{"_index":462,"title":{"injectables/JwtOauthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["jwtstrategy",{"_index":463,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3318,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":2650,"title":{},"body":{"controllers/RolesController.html":{}}}],["keycloak",{"_index":1464,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["keycloak'})@column",{"_index":1462,"title":{},"body":{"entities/OauthConfig.html":{}}}],["keycloak'})@primarycolumn({name",{"_index":1460,"title":{},"body":{"entities/OauthConfig.html":{}}}],["known/openid",{"_index":1210,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["label",{"_index":1027,"title":{"entities/Label.html":{}},"body":{"classes/GetRoleDto.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"guards/StudyGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["label'})@apiresponse({status",{"_index":1254,"title":{},"body":{"controllers/LabelsController.html":{}}}],["label.entity",{"_index":1286,"title":{},"body":{"modules/LabelsModule.html":{},"injectables/LabelsService.html":{}}}],["label.name",{"_index":1272,"title":{},"body":{"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"guards/StudyGuard.html":{}}}],["label.name)@jointable({name",{"_index":2579,"title":{},"body":{"entities/Role.html":{}}}],["labeldto",{"_index":1248,"title":{"classes/LabelDto.html":{}},"body":{"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["labeldto.name",{"_index":2672,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelname",{"_index":1262,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"injectables/RolesService.html":{}}}],["labels",{"_index":1026,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["labels.controller",{"_index":1285,"title":{},"body":{"modules/LabelsModule.html":{}}}],["labels.dto",{"_index":1265,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/RolesController.html":{}}}],["labels.dto.ts",{"_index":3023,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["labels.dto.ts:15",{"_index":3027,"title":{},"body":{"classes/WithLabels.html":{}}}],["labels.service",{"_index":1264,"title":{},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{}}}],["labels/label.entity",{"_index":1030,"title":{},"body":{"classes/GetRoleDto.html":{},"entities/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{}}}],["labels/labels.dto",{"_index":2633,"title":{},"body":{"controllers/RolesController.html":{}}}],["labels/labels.module",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["labels/labels.service",{"_index":2627,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["labelscontroller",{"_index":1251,"title":{"controllers/LabelsController.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"coverage.html":{}}}],["labelservice",{"_index":2637,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelsmodule",{"_index":224,"title":{"modules/LabelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LabelsModule.html":{},"modules.html":{},"overview.html":{}}}],["labelsofrole",{"_index":2775,"title":{},"body":{"guards/StudyGuard.html":{}}}],["labelsofrole.filter((value",{"_index":2779,"title":{},"body":{"guards/StudyGuard.html":{}}}],["labelsofstudy",{"_index":2777,"title":{},"body":{"guards/StudyGuard.html":{}}}],["labelsofstudy.includes(value)).length",{"_index":2780,"title":{},"body":{"guards/StudyGuard.html":{}}}],["labelsrepository",{"_index":1293,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labelsservice",{"_index":1263,"title":{"injectables/LabelsService.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":1648,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["lastchanges",{"_index":1934,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["lastname",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname'})@isnotempty",{"_index":2562,"title":{},"body":{"classes/RegisterDto.html":{}}}],["legend",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["less_than",{"_index":3157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":856,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["level",{"_index":641,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancAdminController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{}}}],["level')@useguards(adminguard",{"_index":1726,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["level_series",{"_index":3236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_study",{"_index":3237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelmapping",{"_index":600,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype",{"_index":642,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["leveltype.instances",{"_index":647,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.patients",{"_index":653,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.series",{"_index":649,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.studies",{"_index":651,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["license",{"_index":3324,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3302,"title":{},"body":{"index.html":{}}}],["link",{"_index":1371,"title":{},"body":{"injectables/MailService.html":{}}}],["local",{"_index":1316,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":379,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["localstrategy",{"_index":464,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":388,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@public()@httpcode(httpstatus.ok)@useguards(localauthguard)@post('login",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(@body",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(body",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpasswordto",{"_index":353,"title":{"classes/LostPassworDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["lostpasswordto})@public()@post('lost",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":857,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mail/mail.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mail@example.com",{"_index":2564,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mail@example.com'})@isemail",{"_index":2558,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mailermodule",{"_index":1333,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1339,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1359,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":225,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":392,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":3052,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manufacturer",{"_index":3181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":2588,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":2912,"title":{},"body":{"entities/User.html":{}}}],["map((job",{"_index":2135,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["mask",{"_index":1419,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["mask.setmaskid(maskid",{"_index":2867,"title":{},"body":{"classes/TmtvService.html":{}}}],["mask.setpetid(this.ptseriesid",{"_index":2868,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskid",{"_index":1376,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["maskprocessingservice",{"_index":1373,"title":{"injectables/MaskProcessingService.html":{}},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["maskprocessingservice(this.processingclient",{"_index":2866,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskprocessingservice(this.processingservice",{"_index":1424,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["masks",{"_index":2871,"title":{},"body":{"classes/TmtvService.html":{}}}],["match",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":868,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*?[a",{"_index":1000,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":872,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["matching",{"_index":129,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1865,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["media')@useguards(exportguard",{"_index":1862,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["mergemap",{"_index":1649,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mergemap((obs",{"_index":1663,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["message",{"_index":852,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":3126,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":869,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(12",{"_index":871,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["miscellaneous",{"_index":3136,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3301,"title":{},"body":{"index.html":{}}}],["mixin",{"_index":1643,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mixin(ormixinguard",{"_index":1683,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modalities",{"_index":707,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["modalitiesinstudy",{"_index":2315,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["modality",{"_index":2198,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["modality'})@isstring",{"_index":2301,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["mode",{"_index":3292,"title":{},"body":{"index.html":{}}}],["modify",{"_index":964,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["modify.controller",{"_index":1929,"title":{},"body":{"modules/OrthancModule.html":{}}}],["modify.controller.ts",{"_index":1902,"title":{},"body":{"controllers/OrthancModifyController.html":{},"coverage.html":{}}}],["modify.controller.ts:17",{"_index":1908,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:27",{"_index":1914,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:37",{"_index":1911,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modifyguard",{"_index":158,"title":{"guards/ModifyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancModifyController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["modref",{"_index":1655,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["module",{"_index":210,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":1644,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1335,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1337,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":666,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"dependencies.html":{}}}],["moment(value.tostring()).isafter(moment(rule.value.tostring",{"_index":683,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["moment(value.tostring()).issame(moment(rule.value.tostring",{"_index":680,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["monitoring.task",{"_index":2800,"title":{},"body":{"modules/TasksModule.html":{}}}],["monitoring.task.ts",{"_index":1933,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["monitoring.task.ts:17",{"_index":1939,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["monitoring.task.ts:9",{"_index":1937,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["more",{"_index":3313,"title":{},"body":{"index.html":{}}}],["mypassw0rd",{"_index":1326,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd'})@isnotempty",{"_index":1323,"title":{},"body":{"classes/LoginDto.html":{}}}],["mypassw0rd1234",{"_index":999,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mypassw0rd1234!'})@isstring()@matches(/^(?=.*?[a",{"_index":990,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":3319,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":550,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/LabelDto.html":{}}}],["name'})@primarycolumn({name",{"_index":1245,"title":{},"body":{"entities/Label.html":{}}}],["nest",{"_index":3282,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":3348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestfactory.createapplicationcontext(appmodule",{"_index":3386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":3323,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1443,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nestjs",{"_index":1334,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":58,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/OrGuardOptions.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1160,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_accession_number",{"_index":2416,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_accession_number'})@isstring",{"_index":2403,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_instance",{"_index":3141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient",{"_index":3146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient_id",{"_index":2417,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_id'})@isstring",{"_index":2405,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_patient_name",{"_index":2418,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_name'})@isstring",{"_index":2407,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_series",{"_index":3142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study",{"_index":3144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study_description",{"_index":2419,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_study_description'})@isstring",{"_index":2409,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["newaccessionnumber",{"_index":2397,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newinstance",{"_index":1838,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"injectables/UsersService.html":{}}}],["newpatient",{"_index":3147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpatientid",{"_index":2398,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newpatientname",{"_index":2399,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newseries",{"_index":3143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudy",{"_index":3145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudydescription",{"_index":2400,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newuser",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.email",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.id",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":1438,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":1446,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nextfunction",{"_index":3262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nifti",{"_index":3235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3274,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":3115,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":946,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["none'})@column({default",{"_index":1579,"title":{},"body":{"entities/Option.html":{}}}],["none'})@isstring",{"_index":947,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["not_in",{"_index":3156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1442,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('label",{"_index":2670,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('oauth",{"_index":1499,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["notfoundexception('role",{"_index":2663,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('user",{"_index":2953,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(error.message",{"_index":1449,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["notfoundinterceptor",{"_index":258,"title":{"injectables/NotFoundInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["npm",{"_index":3286,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/LabelsService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{}}}],["nullable",{"_index":2906,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":38,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"injectables/MailService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number'})@useguards(autoroutingguard)@delete('/:id",{"_index":762,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/disable",{"_index":766,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@post('/:id/enable",{"_index":770,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number(rule.value",{"_index":677,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number(value",{"_index":682,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number.ts",{"_index":1141,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["number.ts:13",{"_index":1146,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number.ts:9",{"_index":1149,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number_of_frames",{"_index":3220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_slices",{"_index":3194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_temporal_positions",{"_index":3192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_time_slices",{"_index":3196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofframes",{"_index":3221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofseriesrelatedinstances",{"_index":2251,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["numberofslices",{"_index":3195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofstudyrelatedinstances",{"_index":2316,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberofstudyrelatedseries",{"_index":2317,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberoftemporalpositions",{"_index":3193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberoftimeslices",{"_index":3197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["oauth.guard",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth.guard.ts",{"_index":1170,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["oauth.strategy",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth.strategy.ts",{"_index":1173,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["oauth.strategy.ts:22",{"_index":1181,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:31",{"_index":1186,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:42",{"_index":1191,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:49",{"_index":1183,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:53",{"_index":1193,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:80",{"_index":1189,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth2",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["oauth2')@public()@useguards(jwtoauthguard)@httpcode(httpstatus.ok)@post('oauth2",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(@request",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(req",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2redirect",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["oauthconfig",{"_index":478,"title":{"entities/OauthConfig.html":{}},"body":{"modules/AuthModule.html":{},"entities/OauthConfig.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["oauthconfigcontroller",{"_index":1467,"title":{"controllers/OauthConfigController.html":{}},"body":{"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"coverage.html":{}}}],["oauthconfigdto",{"_index":1473,"title":{"classes/OauthConfigDto.html":{}},"body":{"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["oauthconfigdto.name",{"_index":1504,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigdto})@useguards(adminguard)@post",{"_index":1478,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigmodule",{"_index":226,"title":{"modules/OauthConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OauthConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["oauthconfigservice",{"_index":465,"title":{"injectables/OauthConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["oauthconfigsrepository",{"_index":1524,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["object",{"_index":32,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"interfaces/UserInfoResponse.html":{}}}],["object})@apiresponse({status",{"_index":2036,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["obs.pipe(this.handleerror",{"_index":1664,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["observable",{"_index":1441,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["observable).pipe",{"_index":1682,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["of(false",{"_index":1678,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["of(guardval",{"_index":1673,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["omittype",{"_index":899,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["omittype(autorouting",{"_index":898,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["one",{"_index":854,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["onevent",{"_index":658,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('autorouting.updated",{"_index":618,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('orthanc",{"_index":622,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["open",{"_index":3303,"title":{},"body":{"index.html":{}}}],["openapi.json",{"_index":3366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operatorfunction",{"_index":1646,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["operators_name",{"_index":3202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operatorsname",{"_index":3203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":1105,"title":{"entities/Option.html":{}},"body":{"classes/HttpClient.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["option.dto",{"_index":1022,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{}}}],["option.dto.ts",{"_index":902,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["option.dto.ts:11",{"_index":925,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:12",{"_index":1017,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:15",{"_index":923,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:16",{"_index":1018,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:19",{"_index":926,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:20",{"_index":1016,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:23",{"_index":953,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:24",{"_index":1019,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:27",{"_index":942,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:28",{"_index":1020,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:31",{"_index":933,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:35",{"_index":940,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:39",{"_index":936,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:43",{"_index":937,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:47",{"_index":932,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:51",{"_index":945,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:55",{"_index":950,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:59",{"_index":949,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:63",{"_index":931,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:67",{"_index":948,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:7",{"_index":921,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:71",{"_index":928,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:8",{"_index":1015,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.entity",{"_index":1623,"title":{},"body":{"modules/OptionsModule.html":{},"injectables/OptionsService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionrepository",{"_index":2224,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options",{"_index":1354,"title":{},"body":{"modules/MailModule.html":{},"controllers/OptionsController.html":{},"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstart",{"_index":2240,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstop",{"_index":2242,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestart",{"_index":2241,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestop",{"_index":2243,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.controller",{"_index":1622,"title":{},"body":{"modules/OptionsModule.html":{}}}],["options.service",{"_index":1604,"title":{},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{}}}],["options/option.entity",{"_index":2229,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{}}}],["options/options.module",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["options/options.service",{"_index":2747,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["optionscontroller",{"_index":1593,"title":{"controllers/OptionsController.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"coverage.html":{}}}],["optionservice",{"_index":1609,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/SeederService.html":{}}}],["optionsmodule",{"_index":227,"title":{"modules/OptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["optionsrepository",{"_index":1628,"title":{},"body":{"injectables/OptionsService.html":{}}}],["optionsservice",{"_index":1603,"title":{"injectables/OptionsService.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["orguard",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguard(guards",{"_index":3263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orguardoptions",{"_index":1638,"title":{"interfaces/OrGuardOptions.html":{}},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguardoptions?.throwonfirsterror",{"_index":1676,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orientation",{"_index":1391,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["originaet",{"_index":2142,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["ormixinguard",{"_index":1653,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orthanc",{"_index":1923,"title":{},"body":{"modules/OrthancModule.html":{},"modules/TasksModule.html":{}}}],["orthanc.controller",{"_index":1925,"title":{},"body":{"modules/OrthancModule.html":{}}}],["orthanc/orthanc",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc/orthanc.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc_monitoring_rate",{"_index":1589,"title":{},"body":{"entities/Option.html":{}}}],["orthanc_study_id",{"_index":2415,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthanc_study_id'})@isstring",{"_index":2411,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["orthancaddress",{"_index":1009,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancadmincontroller",{"_index":1684,"title":{"controllers/OrthancAdminController.html":{}},"body":{"controllers/OrthancAdminController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanccalledapi",{"_index":3380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthancclient",{"_index":615,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["orthancclient.streamanswertores(orthanccalledapi",{"_index":3384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthanccontroller",{"_index":1766,"title":{"controllers/OrthancController.html":{}},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancdeletecontroller",{"_index":1815,"title":{"controllers/OrthancDeleteController.html":{}},"body":{"controllers/OrthancDeleteController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanceventpayloaddto",{"_index":621,"title":{"classes/OrthancEventPayloadDto.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["orthancexportcontroller",{"_index":1848,"title":{"controllers/OrthancExportController.html":{}},"body":{"controllers/OrthancExportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancid",{"_index":643,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["orthancid).catch",{"_index":2774,"title":{},"body":{"guards/StudyGuard.html":{}}}],["orthancimportcontroller",{"_index":1888,"title":{"controllers/OrthancImportController.html":{}},"body":{"controllers/OrthancImportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodifycontroller",{"_index":1901,"title":{"controllers/OrthancModifyController.html":{}},"body":{"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodule",{"_index":228,"title":{"modules/OrthancModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules.html":{},"overview.html":{}}}],["orthancmonitoringcron",{"_index":1935,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["orthancmonitoringrate",{"_index":919,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["orthancmonitoringtask",{"_index":1931,"title":{"injectables/OrthancMonitoringTask.html":{}},"body":{"injectables/OrthancMonitoringTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["orthancpassword",{"_index":1010,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancport",{"_index":1011,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancquerycontroller",{"_index":1922,"title":{"controllers/OrthancQueryController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["orthancreadallcontroller",{"_index":283,"title":{"controllers/OrthancReadAllController.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["orthancseriesid",{"_index":2470,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/TmtvService.html":{}}}],["orthancseriesids",{"_index":2466,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{}}}],["orthancseriesids.foreach((orthancseriesid",{"_index":2468,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["orthancstudyid",{"_index":2401,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthancusername",{"_index":1012,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["other_patient_ids",{"_index":3162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otherpatientids",{"_index":3163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":3330,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":3086,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":775,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":1982,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/UsersController.html":{}}}],["param('label",{"_index":2677,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('name",{"_index":2661,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('rolename",{"_index":2667,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('uuid",{"_index":2069,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params.guard",{"_index":2939,"title":{},"body":{"controllers/UsersController.html":{}}}],["params.guard.ts",{"_index":875,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"coverage.html":{}}}],["params.guard.ts:4",{"_index":877,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["params.guard.ts:7",{"_index":879,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["parentstudy",{"_index":1136,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy.id",{"_index":1139,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parsed",{"_index":1974,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["part",{"_index":1801,"title":{},"body":{"controllers/OrthancController.html":{}}}],["partialtype",{"_index":1021,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createoptiondto",{"_index":1008,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createroledto",{"_index":1025,"title":{},"body":{"classes/GetRoleDto.html":{}}}],["pass",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1196,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1194,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["passportstrategy(strategy",{"_index":1174,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["password",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpClient.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@exclude",{"_index":2898,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":844,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["password.dto.ts:19",{"_index":861,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:24",{"_index":846,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:29",{"_index":863,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:34",{"_index":865,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1329,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["password1234!change",{"_index":870,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty",{"_index":845,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty()@minlength(12)@matches(/^(?=.*[a",{"_index":847,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password?token=${token}&userid=${userid",{"_index":1365,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":1318,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1602,"title":{},"body":{"controllers/OptionsController.html":{}}}],["path",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["patient_birthdate",{"_index":2209,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_birthdate'})@isstring",{"_index":2339,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_id",{"_index":2208,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_id'})@isstring",{"_index":2335,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_name",{"_index":2207,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_name'})@isstring",{"_index":2337,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_sex",{"_index":3160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientbirthdate",{"_index":3159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientid",{"_index":2143,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patientname",{"_index":2144,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patients",{"_index":3231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientsex",{"_index":3161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pause",{"_index":2535,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["paused",{"_index":94,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["payload",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/JwtStrategy.html":{}}}],["payload.changetype",{"_index":739,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto",{"_index":661,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto.ts",{"_index":1834,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:12",{"_index":1842,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:16",{"_index":1843,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:20",{"_index":1844,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":1845,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:28",{"_index":1847,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":1840,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.email",{"_index":1242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":732,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.role",{"_index":1243,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peer",{"_index":727,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["performed_procedure_step_description",{"_index":3204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performedprocedurestepdescription",{"_index":3205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["petid",{"_index":1377,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["petseriesorthancid",{"_index":1378,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["pg",{"_index":3122,"title":{},"body":{"dependencies.html":{}}}],["pixilib",{"_index":3339,"title":{},"body":{"properties.html":{}}}],["please",{"_index":3312,"title":{},"body":{"index.html":{}}}],["port",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["post",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post('/:id/disable",{"_index":795,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:id/enable",{"_index":792,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["post('/:rolename/label",{"_index":2666,"title":{},"body":{"controllers/RolesController.html":{}}}],["post('/instances",{"_index":1898,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["post('/jobs",{"_index":1757,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/echo",{"_index":1761,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/modify",{"_index":1915,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/modalities/*/query",{"_index":1977,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/modalities/*/store",{"_index":1880,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/modalities/:id/parsed",{"_index":1981,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/peers/*/store",{"_index":1886,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/queries/:id/answers/:index/retrieve",{"_index":1980,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/queries/:id/answers/:index/retrieve')@useguards(queryguard",{"_index":1969,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/series/*/modify",{"_index":1918,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/studies/*/modify",{"_index":1917,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/tasks/:user/export",{"_index":1887,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/tools/create",{"_index":1882,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["post('/tools/find",{"_index":2025,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["post('/tools/reset",{"_index":1752,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/tools/shutdown",{"_index":1753,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('change",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('lost",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('oauth2",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["preferred_username",{"_index":1204,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["prefix",{"_index":745,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":2649,"title":{},"body":{"controllers/RolesController.html":{}}}],["primarycolumn",{"_index":1247,"title":{},"body":{"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":555,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["prioritized",{"_index":93,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["private",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LabelsService.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["processevent",{"_index":609,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processevent(autorouting",{"_index":636,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processing",{"_index":2030,"title":{},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{}}}],["processing.controller",{"_index":2110,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["processing.file",{"_index":2838,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service",{"_index":2839,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service.ts",{"_index":1375,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:13",{"_index":1396,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1393,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1398,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1392,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:58",{"_index":1394,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:65",{"_index":1389,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:7",{"_index":1400,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:77",{"_index":1399,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:8",{"_index":1401,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:9",{"_index":1387,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing/processing",{"_index":667,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{}}}],["processing/processing.module",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["processingclient",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["processingcontroller",{"_index":2028,"title":{"controllers/ProcessingController.html":{}},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"coverage.html":{}}}],["processingfile",{"_index":2085,"title":{"classes/ProcessingFile.html":{}},"body":{"classes/ProcessingFile.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["processingfile(ctresponse",{"_index":2852,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(fragmentedmaskid",{"_index":2873,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(maskid",{"_index":2870,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(ptresponse",{"_index":2848,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ctseriesid",{"_index":2857,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ptseriesid",{"_index":2861,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingjobdto",{"_index":2034,"title":{"classes/ProcessingJobDto.html":{}},"body":{"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["processingjobtype",{"_index":669,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"miscellaneous/enumerations.html":{}}}],["processingjobtype.tmtv",{"_index":716,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processingjobtype})@isenum(processingjobtype",{"_index":2099,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["processingmask",{"_index":670,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["processingmask.nifti",{"_index":1406,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processingmask.rtss",{"_index":721,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmask.seg",{"_index":722,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmodule",{"_index":229,"title":{"modules/ProcessingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProcessingModule.html":{},"modules.html":{},"overview.html":{}}}],["processingqueue",{"_index":2112,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["processingqueueservice",{"_index":614,"title":{"injectables/ProcessingQueueService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["processingservice",{"_index":1388,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processseries",{"_index":3069,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processseries(orthancclient",{"_index":3265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processstudy",{"_index":3070,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processstudy(orthancclient",{"_index":3266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":3294,"title":{},"body":{"index.html":{}}}],["profile",{"_index":2402,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["profile'})@isstring",{"_index":2413,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["progress",{"_index":125,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["progressive",{"_index":3273,"title":{},"body":{"index.html":{}}}],["project",{"_index":3304,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise).then",{"_index":1680,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["promise.all",{"_index":102,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"classes/WithLabels.html":{},"properties.html":{}}}],["protected",{"_index":9,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/HttpClient.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/StudyGuard.html":{}}}],["protocol",{"_index":1078,"title":{},"body":{"classes/HttpClient.html":{}}}],["protocol_name",{"_index":2199,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["protocol_name'})@isstring",{"_index":2303,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["protocolname",{"_index":2200,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["provide",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["provider",{"_index":1453,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["providers",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pt",{"_index":712,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ptorthancseriesid",{"_index":718,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ptresponse",{"_index":2845,"title":{},"body":{"classes/TmtvService.html":{}}}],["ptseriesid",{"_index":711,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["public",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"classes/ProcessingFile.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('oauth2",{"_index":174,"title":{},"body":{"controllers/AppController.html":{}}}],["put",{"_index":1746,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["put('/:id",{"_index":2952,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:name",{"_index":2660,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('/modalities",{"_index":1762,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/peers",{"_index":1765,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/studies/*/labels",{"_index":2022,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["put('/tools/log",{"_index":1755,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["query",{"_index":965,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"modules/TasksModule.html":{}}}],["query')@useguards(queryguard",{"_index":1966,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query('userid",{"_index":2064,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.answer",{"_index":2293,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["query.controller",{"_index":1930,"title":{},"body":{"modules/OrthancModule.html":{},"modules/QueueModule.html":{}}}],["query.controller.ts",{"_index":1951,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["query.controller.ts:106",{"_index":2490,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:146",{"_index":2495,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:32",{"_index":1958,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:42",{"_index":1961,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:51",{"_index":1970,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:53",{"_index":2492,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:61",{"_index":1967,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:80",{"_index":2491,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto",{"_index":2498,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto.ts",{"_index":2521,"title":{},"body":{"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["query.dto.ts:104",{"_index":2523,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.dto.ts:11",{"_index":2551,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:15",{"_index":2553,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:19",{"_index":2550,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:23",{"_index":2554,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:27",{"_index":2548,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:31",{"_index":2555,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:35",{"_index":2549,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:41",{"_index":2532,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:45",{"_index":2527,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:49",{"_index":2528,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:53",{"_index":2529,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:57",{"_index":2531,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:61",{"_index":2530,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:65",{"_index":2526,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:7",{"_index":2552,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:86",{"_index":2524,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.guard",{"_index":2058,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["query.guard.ts",{"_index":884,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{},"coverage.html":{}}}],["query.guard.ts:4",{"_index":885,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.guard.ts:7",{"_index":886,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.service",{"_index":2228,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"modules/TasksModule.html":{}}}],["query.service.ts",{"_index":2533,"title":{},"body":{"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["query.service.ts:20",{"_index":2539,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:24",{"_index":2540,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:28",{"_index":2538,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:8",{"_index":2537,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query/queue",{"_index":2357,"title":{},"body":{"modules/QueueModule.html":{}}}],["queryanswer",{"_index":2136,"title":{"classes/QueryAnswer.html":{}},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["queryanswer:10",{"_index":2292,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:11",{"_index":2291,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:12",{"_index":2280,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:14",{"_index":2276,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:4",{"_index":2274,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:40",{"_index":2282,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:44",{"_index":2283,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:48",{"_index":2284,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:5",{"_index":2275,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:52",{"_index":2285,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:56",{"_index":2287,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:6",{"_index":2277,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:60",{"_index":2286,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:64",{"_index":2281,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:68",{"_index":2290,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:7",{"_index":2279,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:72",{"_index":2289,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:76",{"_index":2288,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:8",{"_index":2278,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:9",{"_index":2273,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype",{"_index":1976,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["queryanswertype.level_series",{"_index":1984,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["queryanswertype.level_study",{"_index":1994,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype})@isenum(queryanswertype",{"_index":2192,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["queryguard",{"_index":151,"title":{"guards/QueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["queryparsedanswer",{"_index":1963,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.level",{"_index":1983,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.query",{"_index":1986,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswerdto",{"_index":1964,"title":{"classes/QueryParsedAnswerDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queryqueue",{"_index":2541,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueue.pause",{"_index":2543,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueuecron",{"_index":2219,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queryqueuetask",{"_index":2216,"title":{"injectables/QueryQueueTask.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queryseriesanswer",{"_index":2248,"title":{"classes/QuerySeriesAnswer.html":{}},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["queryseriesdto",{"_index":1971,"title":{"classes/QuerySeriesDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["querystudyanswer",{"_index":2313,"title":{"classes/QueryStudyAnswer.html":{}},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["querystudydto",{"_index":1972,"title":{"classes/QueryStudyDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queue",{"_index":10,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["queue('anon",{"_index":2433,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["queue('delete",{"_index":2481,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["queue('processing",{"_index":2126,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue('query",{"_index":2542,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queue.service",{"_index":668,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["queue.service.ts",{"_index":2111,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"coverage.html":{}}}],["queue.service.ts:10",{"_index":2114,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:22",{"_index":2117,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:26",{"_index":2123,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:30",{"_index":2116,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:47",{"_index":2120,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:88",{"_index":2118,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:95",{"_index":2122,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.task",{"_index":2799,"title":{},"body":{"modules/TasksModule.html":{}}}],["queue.task.ts",{"_index":2218,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["queue.task.ts:12",{"_index":2223,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queue.task.ts:20",{"_index":2226,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queuemodule",{"_index":230,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queuequeryservice",{"_index":2221,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queues/anon",{"_index":2362,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queues/delete",{"_index":2443,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queues/query",{"_index":2484,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queues/query/queue",{"_index":2227,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{}}}],["queues/queue.module",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["queuesanoncontroller",{"_index":2350,"title":{"controllers/QueuesAnonController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["queuesanondto",{"_index":2395,"title":{"classes/QueuesAnonDto.html":{}},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto",{"_index":2366,"title":{"classes/QueuesAnonsDto.html":{}},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto.anonymizes",{"_index":2390,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queuesanonservice",{"_index":2347,"title":{"injectables/QueuesAnonService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesdeletecontroller",{"_index":2351,"title":{"controllers/QueuesDeleteController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["queuesdeletedto",{"_index":2447,"title":{"classes/QueuesDeleteDto.html":{}},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["queuesdeletedto.orthancseriesids",{"_index":2467,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queuesdeleteservice",{"_index":2348,"title":{"injectables/QueuesDeleteService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerycontroller",{"_index":2352,"title":{"controllers/QueuesQueryController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["queuesquerydto",{"_index":2488,"title":{"classes/QueuesQueryDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesquerydto.series",{"_index":2511,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerydto.studies",{"_index":2509,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries",{"_index":2510,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.foreach((series",{"_index":2518,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.length",{"_index":2512,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseriesdto",{"_index":2497,"title":{"classes/QueuesQuerySeriesDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesqueryservice",{"_index":2222,"title":{"injectables/QueuesQueryService.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerystudy",{"_index":2508,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.foreach((study",{"_index":2516,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.length",{"_index":2513,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudydto",{"_index":2496,"title":{"classes/QueuesQueryStudyDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuestate",{"_index":2244,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["randomuuid",{"_index":3369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"index.html":{}}}],["read_all",{"_index":2586,"title":{},"body":{"entities/Role.html":{}}}],["readall",{"_index":966,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["readallguard",{"_index":164,"title":{"guards/ReadAllGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["readonly",{"_index":880,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{}}}],["redirect",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/docs/oauth2",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html')@redirect('/docs/oauth2",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["redis_address",{"_index":2435,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redis_port",{"_index":2437,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redisaddress",{"_index":1013,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["redisport",{"_index":1014,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["referring_physician_name",{"_index":3175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referringphysicianname",{"_index":3176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":3125,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1156,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":364,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.firstname",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.lastname",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto})@public()@post('register",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["related",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["relations",{"_index":2713,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":808,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('labelname",{"_index":1274,"title":{},"body":{"controllers/LabelsController.html":{}}}],["remove(id",{"_index":827,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["remove(labelname",{"_index":1259,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{}}}],["remove(name",{"_index":2704,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeanonjob",{"_index":2364,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(@param('uuid",{"_index":2393,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(uuid",{"_index":2373,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removechildren",{"_index":83,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removedeletejob",{"_index":2445,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(@param('uuid",{"_index":2471,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(uuid",{"_index":2453,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removejob",{"_index":21,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(@param('uuid",{"_index":2083,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["removejob(data",{"_index":55,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(uuid",{"_index":2050,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["removelabelfromrole",{"_index":2597,"title":{},"body":{"controllers/RolesController.html":{}}}],["removelabelfromrole(rolename",{"_index":2620,"title":{},"body":{"controllers/RolesController.html":{}}}],["removeoncomplete",{"_index":67,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removeonfail",{"_index":70,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removequeryjob",{"_index":2486,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(@param('uuid",{"_index":2519,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(uuid",{"_index":2493,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removerolelabel",{"_index":2689,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerolelabel(rolename",{"_index":2706,"title":{},"body":{"injectables/RolesService.html":{}}}],["repeat",{"_index":95,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["replace",{"_index":3239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["replacevalue",{"_index":2784,"title":{},"body":{"classes/TagAnon.html":{}}}],["reply",{"_index":1348,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":811,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["req['user",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":142,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibody({type",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":2922,"title":{},"body":{"controllers/UsersController.html":{}}}],["request(config",{"_index":1125,"title":{},"body":{"classes/HttpClient.html":{}}}],["request(option",{"_index":1112,"title":{},"body":{"classes/HttpClient.html":{}}}],["request.body",{"_index":3383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.method",{"_index":3382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.params.id",{"_index":881,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.params.rolename",{"_index":892,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["request.query.userid",{"_index":887,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["request.url",{"_index":3379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":145,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["request.user.role.name",{"_index":894,"title":{},"body":{"guards/CheckUserRoleGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.user.userid",{"_index":882,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["request['user",{"_index":2065,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["requestbuffer",{"_index":1048,"title":{},"body":{"classes/HttpClient.html":{}}}],["requested_procedure_description",{"_index":3170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestedproceduredescription",{"_index":2145,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["requesting_physician",{"_index":3173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestingphysician",{"_index":3174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmethod",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["requeststream",{"_index":1049,"title":{},"body":{"classes/HttpClient.html":{}}}],["requesttype",{"_index":1701,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["required",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutoroutingsController.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"controllers/OauthConfigController.html":{},"entities/Option.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["res",{"_index":1111,"title":{},"body":{"classes/HttpClient.html":{},"miscellaneous/functions.html":{}}}],["res.data",{"_index":697,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["res.setheader('content",{"_index":1114,"title":{},"body":{"classes/HttpClient.html":{}}}],["res.status(500).send('bad",{"_index":1121,"title":{},"body":{"classes/HttpClient.html":{}}}],["reset",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetorthanc",{"_index":1697,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resetorthanc(request",{"_index":1737,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resource",{"_index":2080,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["resourcetype",{"_index":1836,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["response",{"_index":1090,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.data",{"_index":1128,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.email",{"_index":1226,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.family_name",{"_index":1228,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.given_name",{"_index":1227,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.pipe(res",{"_index":1116,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.pipe(streamwriter).on('finish",{"_index":1126,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.headers['content",{"_index":1115,"title":{},"body":{"classes/HttpClient.html":{}}}],["responsetype",{"_index":1094,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["result",{"_index":107,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/TmtvService.html":{}}}],["results",{"_index":120,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":2076,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["results[id",{"_index":128,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["resume",{"_index":2536,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["retrieve",{"_index":1955,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["retrieve(request",{"_index":1968,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["return",{"_index":104,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1486,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":517,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["role'})@apiresponse({status",{"_index":2599,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.dto",{"_index":1029,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{}}}],["role.dto.ts",{"_index":959,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":974,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":968,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":973,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:23",{"_index":978,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":969,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:31",{"_index":972,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:35",{"_index":967,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:39",{"_index":975,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:43",{"_index":971,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:47",{"_index":970,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:51",{"_index":979,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":977,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{}}}],["role.entity",{"_index":2630,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["role.guard",{"_index":2631,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.guard.ts",{"_index":889,"title":{},"body":{"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:4",{"_index":890,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.guard.ts:7",{"_index":891,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.labels",{"_index":2723,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.filter((label",{"_index":2724,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.find((label",{"_index":2721,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.push(label",{"_index":2722,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.name",{"_index":2913,"title":{},"body":{"entities/User.html":{}}}],["role.name)@joincolumn({name",{"_index":2901,"title":{},"body":{"entities/User.html":{}}}],["role_label",{"_index":2580,"title":{},"body":{"entities/Role.html":{}}}],["role_name",{"_index":2902,"title":{},"body":{"entities/User.html":{}}}],["rolecount",{"_index":3001,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolecount[1",{"_index":3003,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolename",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":2592,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles.controller",{"_index":2683,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":2629,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/role.entity",{"_index":1041,"title":{},"body":{"classes/GetUserDto.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["roles/roles.service",{"_index":2746,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["rolescontroller",{"_index":2590,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":2636,"title":{},"body":{"controllers/RolesController.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":231,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesrepository",{"_index":2692,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":2628,"title":{"injectables/RolesService.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["role})@apiresponse({status",{"_index":2614,"title":{},"body":{"controllers/RolesController.html":{}}}],["router",{"_index":539,"title":{"classes/Router.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rtss",{"_index":3234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rtssid",{"_index":1408,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rtssstream",{"_index":1410,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["rule",{"_index":573,"title":{"classes/Rule.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.value.tostring",{"_index":678,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.value.tostring().includes(value.tostring",{"_index":681,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.valuerepresentation",{"_index":675,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule_condition",{"_index":588,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rule_condition'})@isenum(rulecondition",{"_index":2730,"title":{},"body":{"classes/Router.html":{}}}],["rulecondition",{"_index":567,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["rulecondition.and",{"_index":587,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rules",{"_index":590,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["ruletoboolean",{"_index":610,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ruletoboolean(rule",{"_index":638,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["run",{"_index":3289,"title":{},"body":{"index.html":{}}}],["runinference",{"_index":2812,"title":{},"body":{"classes/TmtvService.html":{}}}],["runinference(fragmented",{"_index":2828,"title":{},"body":{"classes/TmtvService.html":{}}}],["rxjs",{"_index":1200,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1651,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["salttest",{"_index":3376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sas",{"_index":3340,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":3278,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2665,"title":{},"body":{"controllers/RolesController.html":{}}}],["scheme",{"_index":3356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1342,"title":{},"body":{"modules/MailModule.html":{}}}],["seed",{"_index":1521,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}}}],["seeder",{"_index":3074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":2745,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["seedermodule",{"_index":232,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":2743,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedservice",{"_index":3387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedservice.seed",{"_index":3389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":1415,"title":{},"body":{"injectables/MaskProcessingService.html":{},"miscellaneous/enumerations.html":{}}}],["segid",{"_index":1413,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["segstream",{"_index":2878,"title":{},"body":{"classes/TmtvService.html":{}}}],["send",{"_index":685,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["send(error.response.statusmessage",{"_index":1124,"title":{},"body":{"classes/HttpClient.html":{}}}],["sendchangepasswordemail",{"_index":1357,"title":{},"body":{"injectables/MailService.html":{}}}],["sendchangepasswordemail(email",{"_index":1361,"title":{},"body":{"injectables/MailService.html":{}}}],["senddicomtoprocessing",{"_index":2813,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskasrtsstoorthanc",{"_index":2814,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskassegtoorthanc",{"_index":2815,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmasktoorthancas",{"_index":720,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["sendtodestination",{"_index":611,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtodestination(destination",{"_index":640,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtopeer(destination.name",{"_index":728,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sent",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["sent'})@apiresponse({status",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["seq",{"_index":1837,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["sequence_name",{"_index":3186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sequencename",{"_index":3187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series",{"_index":692,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["series.answer.ts",{"_index":2250,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["series.answer.ts:10",{"_index":2260,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:49",{"_index":2270,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:5",{"_index":2271,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:53",{"_index":2268,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:57",{"_index":2265,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:6",{"_index":2263,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:61",{"_index":2267,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:65",{"_index":2269,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:69",{"_index":2266,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:7",{"_index":2261,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:8",{"_index":2262,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:9",{"_index":2264,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.maindicomtags.modality",{"_index":701,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["series_date",{"_index":3177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_description",{"_index":2201,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_description'})@isstring",{"_index":2305,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_id_1",{"_index":2476,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_id_2",{"_index":2477,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_instance_uid",{"_index":2205,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_instance_uid'})@isstring",{"_index":2307,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_number",{"_index":2203,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_number'})@isstring",{"_index":2309,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_time",{"_index":3179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_type",{"_index":3200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdate",{"_index":3178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdescription",{"_index":2202,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesdetails",{"_index":693,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancQueryController.html":{}}}],["seriesdetails.find",{"_index":709,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdetails.map",{"_index":700,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdto",{"_index":1985,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.modality",{"_index":1989,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.protocolname",{"_index":1990,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesdescription",{"_index":1991,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesinstanceuid",{"_index":1993,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesnumber",{"_index":1992,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.studyuid",{"_index":1988,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesguard",{"_index":195,"title":{"injectables/SeriesGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/SeriesGuard.html":{},"coverage.html":{}}}],["seriesinstanceuid",{"_index":2206,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesnumber",{"_index":2204,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriestime",{"_index":3180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriestype",{"_index":3201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesuid",{"_index":2259,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["server",{"_index":3279,"title":{},"body":{"index.html":{}}}],["set",{"_index":1372,"title":{},"body":{"injectables/MailService.html":{}}}],["set(uuids",{"_index":115,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["setaccessionnumber",{"_index":2146,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswerid",{"_index":2147,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswernumber",{"_index":2148,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setctorthancseriesid",{"_index":2816,"title":{},"body":{"classes/TmtvService.html":{}}}],["setctorthancseriesid(orthancseriesid",{"_index":2834,"title":{},"body":{"classes/TmtvService.html":{}}}],["setdescription('the",{"_index":3353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setforwardedadress",{"_index":1053,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedadress(address",{"_index":1073,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol",{"_index":1054,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol(protocol",{"_index":1076,"title":{},"body":{"classes/HttpClient.html":{}}}],["setlevel",{"_index":2149,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setmaskid",{"_index":1383,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmaskid(maskid",{"_index":1395,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmetadata(is_public_key",{"_index":3385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmodalitiesinstudy",{"_index":2318,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setmodality",{"_index":2252,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofseriesrelatedinstances",{"_index":2253,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofstudyrelatedinstances",{"_index":2319,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setnumberofstudyrelatedseries",{"_index":2320,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setoriginaet",{"_index":2150,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpassword",{"_index":1055,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpassword(password",{"_index":1079,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpatientid",{"_index":2151,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpatientname",{"_index":2152,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpetid",{"_index":1384,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setpetid(petid",{"_index":1397,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setptorthancseriesid",{"_index":2817,"title":{},"body":{"classes/TmtvService.html":{}}}],["setptorthancseriesid(orthancseriesid",{"_index":2836,"title":{},"body":{"classes/TmtvService.html":{}}}],["setrequestedproceduredescription",{"_index":2153,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setseriesdescription",{"_index":2254,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesinstanceuid",{"_index":2255,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesnumber",{"_index":2256,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setstudydate",{"_index":2154,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudydescription",{"_index":2155,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudyinstanceuid",{"_index":2257,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["settitle('gaelo",{"_index":3351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupanonworker",{"_index":3065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupanonworker(orthancclient",{"_index":3255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupdeleteworker",{"_index":3067,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupdeleteworker(orthancclient",{"_index":3268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupprocessingworker",{"_index":3062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupprocessingworker(orthancclient",{"_index":3269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupqueryworker",{"_index":3071,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupqueryworker(orthancclient",{"_index":3267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupworkers",{"_index":3053,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupworkers(app",{"_index":3252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seturl",{"_index":1056,"title":{},"body":{"classes/HttpClient.html":{}}}],["seturl(url",{"_index":1081,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername",{"_index":1057,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername(username",{"_index":1083,"title":{},"body":{"classes/HttpClient.html":{}}}],["setversion('2.0",{"_index":3354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdownorthanc",{"_index":1698,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["shutdownorthanc(request",{"_index":1740,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["side",{"_index":3280,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":487,"title":{},"body":{"modules/AuthModule.html":{}}}],["sop_instance_uid",{"_index":3224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sopclassuid",{"_index":3254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sopinstanceuid",{"_index":3225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["special",{"_index":859,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["sponsors",{"_index":3307,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":3129,"title":{},"body":{"dependencies.html":{}}}],["sqlite3",{"_index":3131,"title":{},"body":{"dependencies.html":{}}}],["src/.../anon.worker.ts",{"_index":3242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../autorouting.enum.ts",{"_index":3138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../build_docs.ts",{"_index":3342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":3345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete.worker.ts",{"_index":3247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":3139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":3243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":3244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../or.guard.ts",{"_index":3245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwords.ts",{"_index":3343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../processing.worker.ts",{"_index":3248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":3346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.worker.ts",{"_index":3246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":3347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":3344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:25",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:91",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:86",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/change",{"_index":843,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1320,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1324,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1322,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/lost",{"_index":1327,"title":{},"body":{"classes/LostPassworDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":2557,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":2561,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":2563,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":2559,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":1172,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1230,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":1234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":1232,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1311,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:16",{"_index":1315,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":1313,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/autorouting/autorouting.entity.ts",{"_index":536,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.entity.ts:104",{"_index":547,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:109",{"_index":542,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:115",{"_index":553,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:25",{"_index":2736,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:30",{"_index":2740,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:35",{"_index":2738,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:40",{"_index":2734,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:47",{"_index":1003,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:52",{"_index":1004,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:59",{"_index":2731,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:74",{"_index":2732,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:87",{"_index":2729,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:94",{"_index":549,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:99",{"_index":551,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.enum.ts",{"_index":3140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/autorouting/autorouting.handler.ts",{"_index":598,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.handler.ts:115",{"_index":635,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:130",{"_index":644,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:203",{"_index":637,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:21",{"_index":646,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:220",{"_index":623,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:23",{"_index":657,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:31",{"_index":616,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:42",{"_index":619,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:46",{"_index":625,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:57",{"_index":629,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:64",{"_index":633,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:71",{"_index":627,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:80",{"_index":631,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:89",{"_index":639,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autoroutings.controller.ts",{"_index":744,"title":{},"body":{"controllers/AutoroutingsController.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.controller.ts:32",{"_index":758,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:47",{"_index":774,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:60",{"_index":763,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:74",{"_index":771,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:87",{"_index":767,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.module.ts",{"_index":800,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["src/autorouting/autoroutings.service.ts",{"_index":804,"title":{},"body":{"injectables/AutoroutingsService.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.service.ts:10",{"_index":814,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:17",{"_index":822,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:21",{"_index":824,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:29",{"_index":826,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:35",{"_index":817,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:40",{"_index":830,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:45",{"_index":828,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:50",{"_index":821,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:56",{"_index":819,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/dto/create",{"_index":895,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["src/autorouting/dto/orthanc",{"_index":1833,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["src/build_docs.ts",{"_index":3045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":3048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":3232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/guards/check",{"_index":874,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts",{"_index":1133,"title":{},"body":{"injectables/InstanceGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts:6",{"_index":1134,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["src/guards/jwt",{"_index":1169,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts",{"_index":1153,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts:12",{"_index":1158,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/jwt.guard.ts:7",{"_index":1157,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/local.guard.ts",{"_index":1309,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard.ts",{"_index":1640,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/guards/roles.guard",{"_index":1797,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/guards/roles.guard.ts",{"_index":133,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:105",{"_index":2556,"title":{},"body":{"guards/ReadAllGuard.html":{}}}],["src/guards/roles.guard.ts:15",{"_index":166,"title":{},"body":{"guards/AnonymizeGuard.html":{}}}],["src/guards/roles.guard.ts:25",{"_index":1005,"title":{},"body":{"guards/ExportGuard.html":{}}}],["src/guards/roles.guard.ts:35",{"_index":2189,"title":{},"body":{"guards/QueryGuard.html":{}}}],["src/guards/roles.guard.ts:45",{"_index":531,"title":{},"body":{"guards/AutoQueryGuard.html":{}}}],["src/guards/roles.guard.ts:5",{"_index":1132,"title":{},"body":{"guards/ImportGuard.html":{}}}],["src/guards/roles.guard.ts:55",{"_index":1001,"title":{},"body":{"guards/DeleteGuard.html":{}}}],["src/guards/roles.guard.ts:65",{"_index":137,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/roles.guard.ts:75",{"_index":1433,"title":{},"body":{"guards/ModifyGuard.html":{}}}],["src/guards/roles.guard.ts:85",{"_index":841,"title":{},"body":{"guards/CdBurnerGuard.html":{}}}],["src/guards/roles.guard.ts:95",{"_index":532,"title":{},"body":{"guards/AutoRoutingGuard.html":{}}}],["src/guards/series.guard.ts",{"_index":2758,"title":{},"body":{"injectables/SeriesGuard.html":{},"coverage.html":{}}}],["src/guards/series.guard.ts:6",{"_index":2759,"title":{},"body":{"injectables/SeriesGuard.html":{}}}],["src/guards/study.guard",{"_index":1798,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/guards/study.guard.ts",{"_index":2761,"title":{},"body":{"guards/StudyGuard.html":{},"coverage.html":{}}}],["src/guards/study.guard.ts:11",{"_index":2765,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:17",{"_index":2768,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:23",{"_index":2770,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:37",{"_index":2766,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/interceptors/not",{"_index":1434,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/public.ts",{"_index":3049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/labels/label.entity.ts",{"_index":1244,"title":{},"body":{"entities/Label.html":{},"coverage.html":{}}}],["src/labels/label.entity.ts:8",{"_index":1246,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/labels.controller.ts",{"_index":1252,"title":{},"body":{"controllers/LabelsController.html":{},"coverage.html":{}}}],["src/labels/labels.controller.ts:27",{"_index":1258,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:37",{"_index":1261,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:47",{"_index":1256,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.dto.ts",{"_index":1249,"title":{},"body":{"classes/LabelDto.html":{},"coverage.html":{}}}],["src/labels/labels.dto.ts:7",{"_index":1250,"title":{},"body":{"classes/LabelDto.html":{}}}],["src/labels/labels.module.ts",{"_index":1284,"title":{},"body":{"modules/LabelsModule.html":{}}}],["src/labels/labels.service.ts",{"_index":1288,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/labels/labels.service.ts:14",{"_index":1296,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:18",{"_index":1298,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:22",{"_index":1300,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:27",{"_index":1301,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:31",{"_index":1295,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:8",{"_index":1292,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/mail/mail.module.ts",{"_index":1331,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1356,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:12",{"_index":1362,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":1360,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/oauth",{"_index":1450,"title":{},"body":{"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["src/options/dto/create",{"_index":901,"title":{},"body":{"classes/CreateOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/get",{"_index":1007,"title":{},"body":{"classes/GetOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/update",{"_index":2884,"title":{},"body":{"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["src/options/option.entity.ts",{"_index":1543,"title":{},"body":{"entities/Option.html":{},"coverage.html":{}}}],["src/options/option.entity.ts:10",{"_index":1588,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:14",{"_index":1546,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:18",{"_index":1552,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:22",{"_index":1549,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:26",{"_index":1554,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:30",{"_index":1590,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:34",{"_index":1575,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:38",{"_index":1565,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:42",{"_index":1573,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:46",{"_index":1568,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:50",{"_index":1570,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:54",{"_index":1562,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:58",{"_index":1578,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:62",{"_index":1585,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:66",{"_index":1583,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:70",{"_index":1560,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:74",{"_index":1581,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:78",{"_index":1557,"title":{},"body":{"entities/Option.html":{}}}],["src/options/options.controller.ts",{"_index":1594,"title":{},"body":{"controllers/OptionsController.html":{},"coverage.html":{}}}],["src/options/options.controller.ts:28",{"_index":1596,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.controller.ts:52",{"_index":1601,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.module.ts",{"_index":1621,"title":{},"body":{"modules/OptionsModule.html":{}}}],["src/options/options.service.ts",{"_index":1625,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/options/options.service.ts:15",{"_index":1629,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:19",{"_index":1632,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:24",{"_index":1630,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:9",{"_index":1627,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/orthanc/dto/query",{"_index":2190,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["src/orthanc/orthanc",{"_index":1685,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts",{"_index":1767,"title":{},"body":{"controllers/OrthancController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts:34",{"_index":1793,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:52",{"_index":1790,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:62",{"_index":1787,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:72",{"_index":1781,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:82",{"_index":1778,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:92",{"_index":1796,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:99",{"_index":1784,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.module.ts",{"_index":1921,"title":{},"body":{"modules/OrthancModule.html":{}}}],["src/orthanc/query",{"_index":2137,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["src/orthanc/tag",{"_index":2782,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["src/orthanc/utils.ts",{"_index":3058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/processing/mask",{"_index":1374,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["src/processing/processing",{"_index":2096,"title":{},"body":{"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts",{"_index":2029,"title":{},"body":{"controllers/ProcessingController.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts:113",{"_index":2038,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:133",{"_index":2053,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:41",{"_index":2041,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:52",{"_index":2049,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:75",{"_index":2045,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.file.ts",{"_index":2086,"title":{},"body":{"classes/ProcessingFile.html":{},"coverage.html":{}}}],["src/processing/processing.file.ts:10",{"_index":2093,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:14",{"_index":2092,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:2",{"_index":2091,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:3",{"_index":2090,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.module.ts",{"_index":2109,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["src/processing/processing.worker.ts",{"_index":3061,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/processing/tmtv.service.ts",{"_index":2807,"title":{},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["src/processing/tmtv.service.ts:10",{"_index":2824,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:102",{"_index":2833,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:107",{"_index":2826,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:11",{"_index":2820,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:13",{"_index":2822,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:14",{"_index":2821,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:16",{"_index":2818,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:23",{"_index":2837,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:27",{"_index":2835,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:31",{"_index":2827,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:35",{"_index":2831,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:51",{"_index":2825,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:68",{"_index":2829,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:8",{"_index":2823,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:9",{"_index":2819,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:97",{"_index":2832,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/queues/anon/anon.worker.ts",{"_index":3063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/anon/queue",{"_index":2360,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["src/queues/delete/delete.worker.ts",{"_index":3066,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/delete/queue",{"_index":2441,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["src/queues/query/query.worker.ts",{"_index":3068,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/query/queue",{"_index":2483,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["src/queues/queue.module.ts",{"_index":2349,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queues/queue.service.ts",{"_index":6,"title":{},"body":{"injectables/AbstractQueueService.html":{},"coverage.html":{}}}],["src/queues/queue.service.ts:101",{"_index":42,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:105",{"_index":52,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:12",{"_index":33,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:23",{"_index":56,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:38",{"_index":47,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:6",{"_index":25,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:75",{"_index":39,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:82",{"_index":54,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:90",{"_index":43,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:97",{"_index":41,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/roles/dto/create",{"_index":958,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/get",{"_index":1024,"title":{},"body":{"classes/GetRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/with",{"_index":3022,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts",{"_index":2565,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts:13",{"_index":2577,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:17",{"_index":2568,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:21",{"_index":2576,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:25",{"_index":2585,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:29",{"_index":2570,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:33",{"_index":2575,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:37",{"_index":2567,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:41",{"_index":2582,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:45",{"_index":2574,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:49",{"_index":2572,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:53",{"_index":2587,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:58",{"_index":2581,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:9",{"_index":2584,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/roles.controller.ts",{"_index":2591,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:102",{"_index":2625,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:118",{"_index":2602,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:134",{"_index":2619,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:149",{"_index":2622,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:51",{"_index":2612,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:62",{"_index":2616,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:73",{"_index":2606,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:88",{"_index":2609,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":2682,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":2771,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/roles/roles.service.ts",{"_index":2685,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:17",{"_index":2697,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:21",{"_index":2698,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:28",{"_index":2700,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:32",{"_index":2703,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:36",{"_index":2696,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":2705,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:44",{"_index":2709,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:48",{"_index":2694,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":2701,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":2707,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:82",{"_index":2708,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":2691,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/seeder/seed.ts",{"_index":3073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeder/seeder.module.ts",{"_index":2744,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/seeder/seeder.service.ts",{"_index":2750,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/seeder/seeder.service.ts:17",{"_index":2753,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/seeder/seeder.service.ts:9",{"_index":2752,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/tasks/orthanc",{"_index":1932,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["src/tasks/query",{"_index":2217,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":2798,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/dto/create",{"_index":981,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":1032,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":2886,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":2888,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:17",{"_index":2894,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":2893,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":2896,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":2899,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:43",{"_index":2891,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:51",{"_index":2907,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":2903,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":2909,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":2910,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":2915,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:109",{"_index":2928,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:123",{"_index":2924,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":2929,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:66",{"_index":2933,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:83",{"_index":2935,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":2973,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":2975,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":2994,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":2985,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":2988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":2992,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":2990,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:62",{"_index":2997,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":2999,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":2984,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":2995,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":2996,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":2981,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/http.client.ts",{"_index":1044,"title":{},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["src/utils/http.client.ts:11",{"_index":1061,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:123",{"_index":1088,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:143",{"_index":1072,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:152",{"_index":1070,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:39",{"_index":1074,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:43",{"_index":1077,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:47",{"_index":1082,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:5",{"_index":1067,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:51",{"_index":1084,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:55",{"_index":1080,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:59",{"_index":1063,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:6",{"_index":1068,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:7",{"_index":1062,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:71",{"_index":1064,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:8",{"_index":1059,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:83",{"_index":1065,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:9",{"_index":1060,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:95",{"_index":1066,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/is",{"_index":3076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.middleware.ts",{"_index":3078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/orthanc",{"_index":2772,"title":{},"body":{"guards/StudyGuard.html":{},"coverage.html":{}}}],["src/utils/passwords.ts",{"_index":3081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/processing.client.ts",{"_index":3082,"title":{},"body":{"coverage.html":{}}}],["src/validators/string",{"_index":1140,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["stable_patient",{"_index":3152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_series",{"_index":3148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_study",{"_index":3150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablepatient",{"_index":3153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stableseries",{"_index":3149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablestudy",{"_index":3151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":3290,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3293,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3295,"title":{},"body":{"index.html":{}}}],["started",{"_index":3272,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3284,"title":{},"body":{"index.html":{}}}],["starthour",{"_index":3260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startminute",{"_index":3257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":96,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs",{"_index":97,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs.foreach((job",{"_index":99,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statements",{"_index":3032,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":85,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["station_name",{"_index":3182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationname",{"_index":3183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["status(error.response.status",{"_index":1123,"title":{},"body":{"classes/HttpClient.html":{}}}],["stay",{"_index":3315,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1195,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["stream",{"_index":1110,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamanswertores",{"_index":1050,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback",{"_index":1058,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback(url",{"_index":1085,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamwriter",{"_index":1086,"title":{},"body":{"classes/HttpClient.html":{}}}],["strict",{"_index":1355,"title":{},"body":{"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string|null",{"_index":2294,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["studies",{"_index":2515,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study",{"_index":938,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/enumerations.html":{}}}],["study'})@column({default",{"_index":1571,"title":{},"body":{"entities/Option.html":{}}}],["study'})@isstring",{"_index":939,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["study.answer.ts",{"_index":2314,"title":{},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["study.answer.ts:43",{"_index":2324,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:47",{"_index":2327,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:5",{"_index":2328,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:51",{"_index":2326,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:57",{"_index":2325,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:6",{"_index":2322,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:7",{"_index":2323,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:8",{"_index":2321,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.guard",{"_index":1135,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["study_date",{"_index":3164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_description",{"_index":2210,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_description'})@isstring",{"_index":2341,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_id",{"_index":3167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_instance_uid",{"_index":2213,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_instance_uid'})@isstring",{"_index":2343,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_time",{"_index":3165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_uid",{"_index":2196,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_uid'})@isstring",{"_index":2311,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["studydate",{"_index":2156,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydescription",{"_index":2157,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydetails",{"_index":1996,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto",{"_index":1995,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.accessionnb",{"_index":2003,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.modality",{"_index":2001,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientid",{"_index":1999,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientname",{"_index":1998,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydate",{"_index":2000,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydescription",{"_index":2002,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studyinstanceuid",{"_index":2004,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studyguard",{"_index":193,"title":{"guards/StudyGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{}}}],["studyid",{"_index":3168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyinstanceuid",{"_index":2214,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studytime",{"_index":3166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["studyuid",{"_index":2197,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["sub",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["subject",{"_index":1367,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1163,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"interfaces/UserInfoResponse.html":{}}}],["super(anonqueue",{"_index":2438,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["super(deletequeue",{"_index":2482,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["super(queryqueue",{"_index":2544,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["super.canactivate(context",{"_index":1168,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3308,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3326,"title":{},"body":{"modules.html":{}}}],["swaggermodule.createdocument(app",{"_index":3360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1405,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["synchronize",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":3085,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3084,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2785,"title":{},"body":{"classes/TagAnon.html":{}}}],["taganon",{"_index":2781,"title":{"classes/TagAnon.html":{}},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["tagpolicies",{"_index":2788,"title":{},"body":{"classes/TagAnon.html":{},"miscellaneous/enumerations.html":{}}}],["tagpolicy",{"_index":2786,"title":{},"body":{"classes/TagAnon.html":{}}}],["takewhile",{"_index":1650,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["takewhile((val",{"_index":1665,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["tasks/tasks.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":233,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["te",{"_index":1803,"title":{},"body":{"controllers/OrthancController.html":{}}}],["template",{"_index":1349,"title":{},"body":{"modules/MailModule.html":{}}}],["templates",{"_index":1352,"title":{},"body":{"modules/MailModule.html":{}}}],["temporal_position_identifier",{"_index":3222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporalpositionidentifier",{"_index":3223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test:covsupport",{"_index":3300,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3299,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3297,"title":{},"body":{"index.html":{}}}],["text",{"_index":1150,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["thanks",{"_index":3306,"title":{},"body":{"index.html":{}}}],["then((ctseriesid",{"_index":2855,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((ptseriesid",{"_index":2859,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((res",{"_index":696,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["then((response",{"_index":1113,"title":{},"body":{"classes/HttpClient.html":{}}}],["then(async",{"_index":2844,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.accessionnumber",{"_index":2185,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answerid",{"_index":2179,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answernumber",{"_index":2180,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.authservice.createconfirmationtoken(newuser",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createconfirmationtoken(user",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req['user",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1319,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verifyconfirmationtoken(token",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoroutingconfigs",{"_index":673,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingconfigs.filter",{"_index":737,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingservice.create(createautoroutingdto",{"_index":787,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.disable(id",{"_index":797,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.enable(id",{"_index":794,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findall",{"_index":674,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findoneorfail(id",{"_index":790,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.remove(id",{"_index":791,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingsrepository.delete(id",{"_index":838,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.find",{"_index":833,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.findoneorfail",{"_index":834,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.save(autorouting",{"_index":835,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.update(id",{"_index":837,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.configservice.get('app_url')}:${this.configservice.get('port_client')}/change",{"_index":1364,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('orthanc_address",{"_index":1611,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_password",{"_index":1614,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_port",{"_index":1612,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_username",{"_index":1613,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('redis_address",{"_index":1615,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.configservice.get('redis_port",{"_index":1616,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.createdfiles",{"_index":2842,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.foreach((file",{"_index":2881,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.push(new",{"_index":2847,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctorthancseriesid",{"_index":2841,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctseriesid",{"_index":2856,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.deferguard(guard",{"_index":1661,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.eventemitter.emit('autorouting.updated",{"_index":836,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.eventemitter.emit('orthanc",{"_index":1948,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.findone(id",{"_index":3010,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneorfail(id",{"_index":839,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.forwardedaddress",{"_index":1102,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.forwardedprotocol",{"_index":1104,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.fragmentedmask",{"_index":2875,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.rtss",{"_index":2876,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.seg",{"_index":2879,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.getjobs",{"_index":2134,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.getjobs(uuid",{"_index":119,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.getoptions(url",{"_index":1106,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.getstudylabels(orthancid",{"_index":2778,"title":{},"body":{"guards/StudyGuard.html":{}}}],["this.getuserinfourl(wellknown",{"_index":1220,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.getwellknown(decoded.iss",{"_index":1219,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.guardisobservable(guardval",{"_index":1672,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guardispromise(guardval",{"_index":1670,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards",{"_index":1656,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards.map",{"_index":1660,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.handleautoroutingupdated",{"_index":672,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.httpservice.get(iss",{"_index":1208,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.httpservice.get(url",{"_index":1224,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.id",{"_index":2094,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.issendable(autorouting.router",{"_index":733,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.isstudylabelinrole(userrole",{"_index":1138,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["this.jwtservice.decode(token",{"_index":1218,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.jwtservice.signasync(payload",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.labelservice.findonebyorfail(label",{"_index":2678,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelservice.islabelexist(labeldto.name",{"_index":2669,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelsrepository.delete(labelname",{"_index":1307,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.find",{"_index":1303,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneby",{"_index":1306,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findonebyorfail",{"_index":1304,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneorfail",{"_index":2720,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.labelsrepository.save(label",{"_index":1308,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsservice.create(labeldto",{"_index":1281,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findall",{"_index":1270,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findonebyorfail(labelname",{"_index":1275,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.islabelexist(labeldto.name",{"_index":1278,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.remove(labelname",{"_index":1276,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.lastchanges",{"_index":1942,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.level",{"_index":2181,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.levelmapping[payload.changetype",{"_index":730,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.mailerservice.sendmail",{"_index":1366,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendchangepasswordemail",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendchangepasswordemail(user.email",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mask",{"_index":2869,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.maskid",{"_index":1402,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.modalitiesinstudy",{"_index":2329,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.modality",{"_index":2297,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.modref.get(guard",{"_index":1658,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.numberofseriesrelatedinstances",{"_index":2300,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofstudyrelatedinstances",{"_index":2331,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.numberofstudyrelatedseries",{"_index":2330,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.oauthconfigservice.addoauthconfig(oauthconfigdto",{"_index":1506,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.deleteoauthconfig(name",{"_index":1500,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyauthorizationurl(authorizationurl",{"_index":1215,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.oauthconfigservice.findonebyname",{"_index":1503,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyname(name",{"_index":1498,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.getoauthconfig",{"_index":1493,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.seed",{"_index":2757,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.oauthconfigsrepository.create",{"_index":1541,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.create(oauthconfigdto",{"_index":1537,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.delete",{"_index":1536,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.find",{"_index":1535,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.findone",{"_index":1534,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(config",{"_index":1538,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(option",{"_index":1542,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.optionrepository.find())[0",{"_index":2234,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.optionservice.getoptions",{"_index":1610,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionservice.seed",{"_index":2756,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.optionservice.update(options",{"_index":1618,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionsrepository.create",{"_index":1636,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.findonebyorfail",{"_index":1634,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.insert(option",{"_index":1637,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.update(1",{"_index":1635,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.originaet",{"_index":2182,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.orthancclient",{"_index":694,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{}}}],["this.orthancclient.findinorthanc",{"_index":1805,"title":{},"body":{"controllers/OrthancController.html":{}}}],["this.orthancclient.getchangessince(this.lastchanges.tostring",{"_index":1945,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getlastchanges()).data.last",{"_index":1943,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getorthancdetails(level",{"_index":731,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.listlabels('studies",{"_index":2773,"title":{},"body":{"guards/StudyGuard.html":{}}}],["this.orthancclient.queryseriesinaet",{"_index":1987,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.querystudiesinaet",{"_index":1997,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.sendtoorthanc(rtssstream",{"_index":2877,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.orthancclient.sendtoorthanc(segstream",{"_index":2880,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.password",{"_index":1099,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.patientid",{"_index":2184,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.patientname",{"_index":2183,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.petid",{"_index":1403,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.petseriesorthancid",{"_index":1404,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processevent(autorouting",{"_index":742,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingclient",{"_index":2853,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.createdicom(result",{"_index":2846,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.deleteressource(file.gettype",{"_index":2882,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.executeinference('pt_seg_attentionunet",{"_index":2862,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.fragmentmask",{"_index":2872,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingqueue",{"_index":2125,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.add(jobid",{"_index":2132,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.getjobs(state",{"_index":2133,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.obliterate",{"_index":2130,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.remove(uuid",{"_index":2131,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.resume",{"_index":2129,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueueservice.addjob",{"_index":2081,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.addjob(null",{"_index":714,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingqueueservice.flush",{"_index":2062,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getalluuids",{"_index":2066,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getjobs(undefined",{"_index":2075,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser",{"_index":2072,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser(userid",{"_index":2067,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.removejob(uuid",{"_index":2084,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingservice.creatertssfrommask",{"_index":1409,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.createsegfrommask",{"_index":1414,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('rtss",{"_index":1412,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('seg",{"_index":1417,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.fragmentmask",{"_index":1422,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getmaskdicomorientation",{"_index":1407,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getrtss(rtssid",{"_index":1411,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getseg(segid",{"_index":1416,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getstatsmaskseries",{"_index":1420,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.thresholdmask",{"_index":1428,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.ptorthancseriesid",{"_index":2840,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ptseriesid",{"_index":2860,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.queue",{"_index":64,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.add(data['uuid",{"_index":66,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.close",{"_index":116,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs",{"_index":74,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs(state",{"_index":98,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.ispaused",{"_index":2547,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.obliterate",{"_index":117,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.pause",{"_index":2545,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.remove(job.id",{"_index":82,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.resume",{"_index":2546,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queuequeryservice.ispaused",{"_index":2245,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.pause",{"_index":2247,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.resume",{"_index":2246,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuesanonservice.addjob",{"_index":2392,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.checkifuseridhasjobs(user.userid",{"_index":2387,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.flush",{"_index":2379,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getalluuids",{"_index":2381,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getjobsforuuid(uuid",{"_index":2385,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(user.userid",{"_index":2384,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(userid",{"_index":2382,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.removejob",{"_index":2394,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesdeleteservice.addjob",{"_index":2469,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.checkifuseridhasjobs(user.userid",{"_index":2465,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.flush",{"_index":2459,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getalluuids",{"_index":2461,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getjobsforuuid(uuid",{"_index":2464,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser",{"_index":2463,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser(userid",{"_index":2462,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.removejob",{"_index":2472,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesqueryservice.addjob",{"_index":2517,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.checkifuseridhasjobs(user.userid",{"_index":2507,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.flush",{"_index":2501,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getalluuids",{"_index":2503,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getjobsforuuid(uuid",{"_index":2506,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(user.userid",{"_index":2505,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(userid",{"_index":2504,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.removejob",{"_index":2520,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1165,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.replacevalue",{"_index":2794,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.requestbuffer(url",{"_index":1129,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.requestedproceduredescription",{"_index":2188,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.requeststream(url",{"_index":1127,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.roleservice.addrolelabel(rolename",{"_index":2671,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.create(createroledto",{"_index":2653,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findall",{"_index":2642,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findallwithlabels",{"_index":2641,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(name",{"_index":2645,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(rolename",{"_index":2668,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(userdto.rolename",{"_index":2956,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.getrolelabels(rolename)).map",{"_index":2675,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.getrolelabels(userrole)).map",{"_index":2776,"title":{},"body":{"guards/StudyGuard.html":{}}}],["this.roleservice.isroleexist(createroledto.name",{"_index":2651,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(name",{"_index":2662,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(userdto.rolename",{"_index":2967,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.remove(name",{"_index":2659,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.removerolelabel(rolename",{"_index":2679,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.update(name",{"_index":2664,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesrepository.create",{"_index":2725,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.delete(name",{"_index":2717,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.find",{"_index":2711,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneby",{"_index":2715,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findonebyorfail",{"_index":2714,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneorfail",{"_index":2719,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.insert([admin",{"_index":2726,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.save(role",{"_index":2716,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.update(name",{"_index":2718,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.seed",{"_index":2754,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.sendtodestination(destination",{"_index":735,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.seriesdescription",{"_index":2298,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesinstanceuid",{"_index":2296,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesnumber",{"_index":2299,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.studydate",{"_index":2187,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studydescription",{"_index":2186,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studyinstanceuid",{"_index":2295,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["this.tag",{"_index":2793,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.tagpolicy",{"_index":2792,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.type",{"_index":2095,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.update(id",{"_index":840,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["this.url",{"_index":1096,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.username",{"_index":1098,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.userservice.create(user)).id",{"_index":2970,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":2944,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findone(id",{"_index":2951,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyemail(userdto.email",{"_index":2958,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isexistinguser(id",{"_index":2964,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isroleused(role.name",{"_index":2656,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.userservice.remove(id",{"_index":2965,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.update(id",{"_index":2962,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":3018,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":3013,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":3004,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findandcount",{"_index":3002,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":3005,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert([admin",{"_index":3021,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":3012,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":3006,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(userid",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(userdata.email",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.seed",{"_index":2755,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.usersservice.update(user.id",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserpassword(userid",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.validateissuer(wellknown",{"_index":1221,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.verifytoken(token",{"_index":1229,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["thresholdedmask",{"_index":1430,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setmaskid(thresholdedmaskid",{"_index":1431,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setpetid(this.petid",{"_index":1432,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmaskid",{"_index":1427,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdmaskto41",{"_index":1385,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["throw",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throwerror",{"_index":1647,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["throwonfirsterror",{"_index":1641,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["time",{"_index":2232,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tls",{"_index":1344,"title":{},"body":{"modules/MailModule.html":{}}}],["tmp",{"_index":3133,"title":{},"body":{"dependencies.html":{}}}],["tmtv",{"_index":3233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tmtvjob",{"_index":717,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob(job",{"_index":3270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tmtvjobdto",{"_index":2101,"title":{"classes/TmtvJobDto.html":{}},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["tmtvservice",{"_index":2806,"title":{"classes/TmtvService.html":{}},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["toclassonly",{"_index":3026,"title":{},"body":{"classes/WithLabels.html":{}}}],["todo",{"_index":1799,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MailService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["token')@apibody({type",{"_index":1477,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["token')@apiparam({name",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{}}}],["token')@apiresponse({status",{"_index":753,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["token')@delete('/modalities/*')@useguards(adminguard",{"_index":1708,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/patients/*')@useguards(deleteguard",{"_index":1821,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/peers/*')@useguards(adminguard",{"_index":1711,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/series/*')@useguards(deleteguard",{"_index":1824,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*')@useguards(deleteguard",{"_index":1827,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*/labels/*')@useguards(readallguard",{"_index":2011,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/dicom",{"_index":1776,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/instances",{"_index":1780,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/modalities*')@useguards(undefined",{"_index":1783,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/patients/*')@useguards(readallguard",{"_index":2017,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/peers*')@useguards(exportguard",{"_index":1878,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@get('/peers/*/system')@useguards(adminguard",{"_index":1729,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/plugins')@useguards(adminguard",{"_index":1732,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/queries/*/answers*')@useguards(queryguard",{"_index":1960,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@get('/series",{"_index":1786,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/studies/*')@useguards(studyguard",{"_index":1789,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/system')@useguards(adminguard",{"_index":1735,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/tools/log",{"_index":1725,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/wado",{"_index":1795,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@post('/instances')@useguards(importguard",{"_index":1896,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["token')@post('/jobs/*')@useguards(adminguard",{"_index":1705,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/echo')@useguards(adminguard",{"_index":1702,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/modify')@useguards(modifyguard",{"_index":1907,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/modalities/*/query')@useguards(queryguard",{"_index":1957,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/modalities/*/store')@useguards(exportguard",{"_index":1869,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/modalities/:id/parsed",{"_index":1965,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/peers/*/store')@useguards(exportguard",{"_index":1872,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/series/*/modify')@useguards(modifyguard",{"_index":1910,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/studies/*/modify')@useguards(modifyguard",{"_index":1913,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/tasks/:user/export')@useguards(exportguard",{"_index":1875,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/tools/create",{"_index":1858,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["token')@post('/tools/find')@useguards(readallguard",{"_index":2014,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@post('/tools/reset')@useguards(adminguard",{"_index":1738,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/tools/shutdown')@useguards(adminguard",{"_index":1741,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/modalities/*')@useguards(adminguard",{"_index":1714,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/peers/*/')@useguards(adminguard",{"_index":1717,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/studies/*/labels/*')@useguards(readallguard",{"_index":2020,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@put('/tools/log",{"_index":1744,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["tokenexpiration",{"_index":2889,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":3316,"title":{},"body":{"index.html":{}}}],["transform",{"_index":786,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/WithLabels.html":{}}}],["transformer",{"_index":570,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["transport",{"_index":1340,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":2566,"title":{},"body":{"entities/Role.html":{}}}],["true})@get('/jobs/:id?')@useguards(adminguard",{"_index":1722,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["true})@get(':uuid",{"_index":2044,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["true})@isboolean",{"_index":941,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/WithLabels.html":{}}}],["true})@isemail",{"_index":984,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["true})@isenum(autoroutingeventtype",{"_index":1839,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isenum(processingmask",{"_index":2803,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["true})@isnumber",{"_index":1846,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isstring",{"_index":976,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["true})@public()@get",{"_index":1488,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@transform",{"_index":3025,"title":{},"body":{"classes/WithLabels.html":{}}}],["true})@type(undefined",{"_index":2728,"title":{},"body":{"classes/Router.html":{}}}],["true})@useguards(adminguard)@delete(':name",{"_index":1484,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@useguards(undefined)@get(':uuid",{"_index":2370,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["true})@useguards(undefined)@get('test/:id",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["try",{"_index":1207,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["twitter",{"_index":3322,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'})@isenum(destinationtype",{"_index":1002,"title":{},"body":{"classes/Destination.html":{}}}],["typeof",{"_index":1152,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["typeorm",{"_index":556,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"entities/Label.html":{},"injectables/LabelsService.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm_type",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":2749,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([autorouting",{"_index":803,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["typeormmodule.forfeature([label",{"_index":1287,"title":{},"body":{"modules/LabelsModule.html":{}}}],["typeormmodule.forfeature([oauthconfig",{"_index":1517,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["typeormmodule.forfeature([option",{"_index":1624,"title":{},"body":{"modules/OptionsModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":2684,"title":{},"body":{"modules/RolesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3283,"title":{},"body":{"index.html":{}}}],["uk",{"_index":929,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["uk'})@column({default",{"_index":1558,"title":{},"body":{"entities/Option.html":{}}}],["uk'})@isstring",{"_index":930,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["unauthorized",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@apibody({schema",{"_index":2600,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@apibody({type",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apioauth2(['openid",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":761,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":1475,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@apibody({type",{"_index":2604,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete",{"_index":2040,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:labelname",{"_index":1260,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:name",{"_index":2608,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get",{"_index":1257,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@get('/:name",{"_index":2615,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@patch",{"_index":1600,"title":{},"body":{"controllers/OptionsController.html":{}}}],["unauthorized'})@useguards(adminguard)@post",{"_index":1255,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@put('/:name",{"_index":2624,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(anonymizeguard)@delete(':uuid",{"_index":2374,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@get",{"_index":773,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@usepipes(new",{"_index":756,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(deleteguard)@delete(':uuid",{"_index":2454,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["unauthorized'})@useguards(queryguard)@delete(':uuid",{"_index":2494,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(readallguard)@post",{"_index":2037,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:id",{"_index":2927,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:rolename/label/:label",{"_index":2621,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:id",{"_index":2932,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:rolename/labels",{"_index":2618,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@put('/:id",{"_index":2934,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('invalid",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('unknown",{"_index":1222,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["undefined",{"_index":46,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"controllers/OrthancController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/TagAnon.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({status",{"_index":772,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["undefined})@column({name",{"_index":545,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["undefined})@isarray",{"_index":2474,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["undefined})@isarray()@isobject({each",{"_index":2439,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["undefined})@manytomany(undefined",{"_index":2578,"title":{},"body":{"entities/Role.html":{}}}],["undefined})@useguards(undefined)@post('/:rolename/label",{"_index":2601,"title":{},"body":{"controllers/RolesController.html":{}}}],["unique",{"_index":2905,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":3296,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtStrategy.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancQueryController.html":{},"guards/StudyGuard.html":{}}}],["update",{"_index":809,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":1617,"title":{},"body":{"controllers/OptionsController.html":{}}}],["update(id",{"_index":829,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(name",{"_index":2623,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(option",{"_index":1631,"title":{},"body":{"injectables/OptionsService.html":{}}}],["update(options",{"_index":1597,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updatelabels",{"_index":2009,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updatelabels(request",{"_index":2019,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updateloglevel",{"_index":1699,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateloglevel(request",{"_index":1743,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateoptiondto",{"_index":1598,"title":{"classes/UpdateOptionDto.html":{}},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["updateoptiondto})@apiresponse({status",{"_index":1599,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updateuserdto",{"_index":2885,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpassword",{"_index":2979,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassword(id",{"_index":2998,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercase",{"_index":855,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["url",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["url.replace('/api",{"_index":3381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":2658,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefactory",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1268,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(anonymizeguard",{"_index":2386,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(autoroutingguard",{"_index":784,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["useguards(deleteguard",{"_index":1830,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/QueuesDeleteController.html":{}}}],["useguards(exportguard",{"_index":1881,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["useguards(importguard",{"_index":1899,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["useguards(jwtoauthguard",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(modifyguard",{"_index":1916,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["useguards(orguard([adminguard",{"_index":1814,"title":{},"body":{"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(orguard([anonymizeguard",{"_index":2380,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(orguard([deleteguard",{"_index":2460,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["useguards(orguard([instanceguard",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(orguard([queryguard",{"_index":2502,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["useguards(queryguard",{"_index":1978,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{}}}],["useguards(readallguard",{"_index":2023,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{}}}],["useguards(studyguard",{"_index":1807,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useinterceptors",{"_index":2626,"title":{},"body":{"controllers/RolesController.html":{}}}],["usepipes",{"_index":776,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["usepipes(new",{"_index":785,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["user",{"_index":144,"title":{"entities/User.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user'})@apiresponse({status",{"_index":2921,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":2938,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":982,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":989,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":1035,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:15",{"_index":985,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":1033,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:19",{"_index":997,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:22",{"_index":1036,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:26",{"_index":996,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["user.dto.ts:30",{"_index":1039,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:34",{"_index":1038,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:7",{"_index":987,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.entity",{"_index":2937,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":2946,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.id",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.lastname",{"_index":2947,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.password",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.role.admin",{"_index":157,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.anonymize",{"_index":148,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autoquery",{"_index":154,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autorouting",{"_index":163,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.cdburner",{"_index":161,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.delete",{"_index":156,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.export",{"_index":150,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.import",{"_index":146,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.modify",{"_index":159,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.query",{"_index":152,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.readall",{"_index":165,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.rolename",{"_index":2948,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.token",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tokenexpiration",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":2073,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["user1@mail.com",{"_index":1330,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user1@mail.com'})@isnotempty",{"_index":1328,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user@gaelo.com",{"_index":3020,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.email",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.firstname",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdata.lastname",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":2925,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.email",{"_index":2961,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.firstname",{"_index":2954,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.lastname",{"_index":2955,"title":{},"body":{"controllers/UsersController.html":{}}}],["userexists",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":40,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["userinforesponse",{"_index":1202,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{}}}],["usernamefield",{"_index":1317,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":893,"title":{},"body":{"guards/CheckUserRoleGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["users",{"_index":2916,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":2974,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":2936,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{}}}],["users/users.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["userscontroller",{"_index":2914,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":2638,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":234,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":2982,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":386,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithpasswordupdated",{"_index":3011,"title":{},"body":{"injectables/UsersService.html":{}}}],["utils",{"_index":1748,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["utils/is",{"_index":2231,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["utils/logger.middleware",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/orthanc",{"_index":664,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["utils/passwords",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utils/processing.client",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["uuid",{"_index":50,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["uuidofuser",{"_index":2383,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuids",{"_index":112,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuidsofuser",{"_index":2071,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["uuidsofuser.includes(uuid",{"_index":2074,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["val",{"_index":1666,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["validate",{"_index":561,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(email",{"_index":1314,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(isnumberorstring",{"_index":581,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(payload",{"_index":1233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(text",{"_index":1148,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validate(token",{"_index":1188,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateissuer",{"_index":1177,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["validateissuer(wellknown",{"_index":1190,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validatenested",{"_index":562,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validateuser",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":1145,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validationpipe",{"_index":777,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validationpipe())@post",{"_index":757,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validator",{"_index":563,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1151,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validatorconstraintinterface",{"_index":1142,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validators/string",{"_index":572,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value",{"_index":49,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/Destination.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value'})@validate(isnumberorstring",{"_index":2737,"title":{},"body":{"classes/Rule.html":{}}}],["value_representation",{"_index":579,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value_representation'})@isenum(valuerepresentation",{"_index":2739,"title":{},"body":{"classes/Rule.html":{}}}],["valuepath",{"_index":878,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["valuerepresentation",{"_index":568,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["valuerepresentation.date",{"_index":679,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.number",{"_index":676,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.string",{"_index":578,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["variable",{"_index":3046,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3341,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyconfirmationtoken",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyconfirmationtoken(token",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":1178,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["verifytoken(token",{"_index":1192,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["version",{"_index":3336,"title":{},"body":{"properties.html":{}}}],["void",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"classes/TmtvService.html":{}}}],["wait",{"_index":90,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["waiting",{"_index":91,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["watch",{"_index":3291,"title":{},"body":{"index.html":{}}}],["weak",{"_index":995,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["web",{"_index":1777,"title":{},"body":{"controllers/OrthancController.html":{}}}],["website",{"_index":3320,"title":{},"body":{"index.html":{}}}],["well",{"_index":1209,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown",{"_index":1184,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown.data",{"_index":1212,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['authorization_endpoint",{"_index":1214,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['userinfo_endpoint",{"_index":1216,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wildcard",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["withfragmentedmask",{"_index":723,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["withlabels",{"_index":2611,"title":{"classes/WithLabels.html":{}},"body":{"controllers/RolesController.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["withlabels.withlabels",{"_index":2640,"title":{},"body":{"controllers/RolesController.html":{}}}],["withrole",{"_index":2987,"title":{},"body":{"injectables/UsersService.html":{}}}],["working",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["writefilesync('../openapi.json",{"_index":3361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":3264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":3311,"title":{},"body":{"index.html":{}}}],["yyyymmddthhmmss",{"_index":1841,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["z\\d\\w]{12",{"_index":851,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*?[0",{"_index":992,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*?[a",{"_index":991,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":848,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*\\d)(?=.*[\\w])[a",{"_index":849,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["za",{"_index":850,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["zoom",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractQueueService.html":{"url":"injectables/AbstractQueueService.html","title":"injectable - AbstractQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queues/queue.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/queues/queue.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Job, Queue } from 'bullmq';\n\n@Injectable()\nexport abstract class AbstractQueueService {\n  protected queue: Queue;\n\n  constructor(queue: Queue) {\n    this.queue = queue;\n  }\n\n  async addJob(data: object): Promise {\n    await this.queue.add(data['uuid'], data, {\n      removeOnComplete: {\n        age: 3600,\n      },\n      removeOnFail: {\n        age: 24 * 3600,\n      },\n    });\n  }\n\n  async removeJob(data: object | undefined = undefined): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n\n    jobs.forEach((job) => {\n      if (\n        data == undefined ||\n        ((job.data.uuid == data['uuid'] || data['uuid'] == undefined) &&\n          (job.data.userId == data['userId'] || data['userId'] == undefined) &&\n          (job.data.jobId == data['jobId'] || data['jobId'] == undefined))\n      ) {\n        this.queue.remove(job.id, { removeChildren: true });\n      }\n    });\n  }\n\n  async getJobs(\n    uuid: string | undefined = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.queue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return job.data.uuid == uuid || uuid == undefined;\n    });\n\n    return filteredJob;\n  }\n\n  async checkIfUserIdHasJobs(userId: number): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const result: Job | null = jobs.find((job) => job.data.userId == userId);\n\n    return result ? true : false;\n  }\n\n  async getUuidOfUser(userId: number): Promise {\n    const jobs: Job[] | null = await this.queue.getJobs();\n    const uuid: string | null = jobs.find((job) => job.data.userId == userId)\n      ?.data.uuid;\n\n    return uuid ? uuid : null;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const uuids = jobs.map((job) => job.data.uuid);\n\n    return Array.from(new Set(uuids));\n  }\n\n  async closeQueueConnection(): Promise {\n    await this.queue.close();\n  }\n\n  async flush(): Promise {\n    await this.queue.obliterate({ force: true });\n  }\n\n  async getJobsForUuid(uuid: string = undefined): Promise {\n    const jobs: Job[] | null = await this.getJobs(uuid);\n\n    const results = {};\n    jobs\n      .filter((job) => job.data.uuid == uuid || uuid == undefined)\n      .forEach((job) => {\n        const id = job.id;\n        const progress = {\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n          UserId: job.data.userId,\n        };\n        results[id] = progress;\n      });\n\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AnonymizeGuard.html":{"url":"guards/AnonymizeGuard.html","title":"guard - AnonymizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AnonymizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Redirect\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Redirect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('oauth2-redirect.html')@Redirect('/docs/oauth2-redirect.html', 302)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: true})@UseGuards(undefined)@Get('TEST/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Redirect, UseGuards } from '@nestjs/common';\nimport { Public } from './interceptors/public';\nimport { ApiBearerAuth, ApiExcludeEndpoint, ApiParam } from '@nestjs/swagger';\nimport { StudyGuard } from './guards/study.guard';\nimport { SeriesGuard } from './guards/series.guard';\nimport { InstanceGuard } from './guards/instance.guard';\nimport { OrGuard } from './guards/or.guard';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Public()\n  @Get('oauth2-redirect.html')\n  @Redirect('/docs/oauth2-redirect.html', 302)\n  @ApiExcludeEndpoint()\n  async oauth2Redirect() {\n    return { url: '/docs/oauth2-redirect.html' };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'id', required: true })\n  @UseGuards(OrGuard([InstanceGuard, SeriesGuard, StudyGuard]))\n  @Get('TEST/:id')\n  async test() {\n    return 'Working!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoroutingsModule\n                        \n                        \n                            LabelsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OauthConfigModule\n                        \n                        \n                            OptionsModule\n                        \n                        \n                            OrthancModule\n                        \n                        \n                            ProcessingModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SeederModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { logger } from './utils/logger.middleware';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { NotFoundInterceptor } from './interceptors/not-found.interceptor';\n\nimport ProcessingClient from './utils/processing.client';\n\n// MODULES\nimport { AuthModule } from './auth/auth.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { MailModule } from './mail/mail.module';\nimport { OauthConfigModule } from './oauth-configs/oauth-configs.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AutoroutingsModule } from './autorouting/autoroutings.module';\nimport { UsersModule } from './users/users.module';\nimport { RolesModule } from './roles/roles.module';\nimport { LabelsModule } from './labels/labels.module';\nimport { OptionsModule } from './options/options.module';\nimport { OrthancModule } from './orthanc/orthanc.module';\nimport { ProcessingModule } from './processing/processing.module';\nimport { QueueModule } from './queues/queue.module';\n\n// CONTROLLERS\nimport { AppController } from './app.controller';\n\nimport { SeederModule } from './seeder/seeder.module';\nimport { OrthancReadAllController } from './orthanc/orthanc-read-all.controller';\nimport { InstanceGuard } from './guards/instance.guard';\nimport { SeriesGuard } from './guards/series.guard';\nimport { StudyGuard } from './guards/study.guard';\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot({\n      wildcard: true,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: ['.env.dev', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\n          'TYPEORM_TYPE',\n          'postgres',\n        ) as 'postgres', // Default to 'postgres'\n        host: configService.get('TYPEORM_HOST', 'localhost'),\n        port: +configService.get('TYPEORM_PORT', 5432),\n        username: configService.get('TYPEORM_USERNAME', 'postgres'),\n        password: configService.get('TYPEORM_PASSWORD', 'postgres'),\n        database: configService.get('TYPEORM_DATABASE', 'gaelo-flow'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    AuthModule,\n    UsersModule,\n    RolesModule,\n    LabelsModule,\n    OptionsModule,\n    TasksModule,\n    OauthConfigModule,\n    ProcessingModule,\n    AutoroutingsModule,\n    QueueModule,\n    OrthancModule,\n    MailModule,\n    SeederModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    ProcessingClient,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: NotFoundInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for all authentication related APIs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                lostPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Password changed'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: ChangePasswordDto})@Public()@Post('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({type: LoginDto})@Public()@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n                        login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        lostPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    lostPassword(body: LostPassworDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Email sent'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: LostPassworDto})@Public()@Post('lost-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LostPassworDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiOAuth2(['openid'], 'oauth2')@Public()@UseGuards(JwtOAuthGuard)@HttpCode(HttpStatus.OK)@Post('oauth2')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Register success'})@ApiResponse({status: 409, description: 'Conflict'})@ApiBody({type: RegisterDto})@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  BadRequestException,\n  ConflictException,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBody, ApiOAuth2, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LocalAuthGuard } from '../guards/local.guard';\nimport { JwtOAuthGuard } from '../guards/jwt-oauth.guard';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { Public } from '../interceptors/public';\nimport { LoginDto } from './dto/login.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { MailService } from '../mail/mail.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LostPassworDto } from './dto/lost-password.dto';\n\n/**\n * Controller for all authentication related APIs\n */\n@ApiTags('auth')\n@Controller('')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  /**\n   * login controller\n   */\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ type: LoginDto })\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req: Request) {\n    return await this.authService.login(req['user']);\n  }\n\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiOAuth2(['openid'], 'oauth2')\n  @Public()\n  @UseGuards(JwtOAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('oauth2')\n  async oauth2Login(@Request() req: Request) {\n    const userData = req['user'];\n\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    const userExists = await this.usersService.findOneByEmail(userData.email);\n    if (!userExists) {\n      await this.usersService.create({\n        Email: userData.email,\n        Firstname: userData.firstname,\n        Lastname: userData.lastname,\n        RoleName: 'User',\n        Password: null,\n      });\n    }\n\n    const user = await this.usersService.findOneByEmail(userData.email);\n    return await this.authService.login(user);\n  }\n\n  @ApiResponse({ status: 201, description: 'Register success' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @ApiBody({ type: RegisterDto })\n  @Public()\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    const userExists = await this.usersService.findOneByEmail(\n      registerDto.Email,\n      false,\n    );\n    if (userExists) {\n      throw new ConflictException('A user already exist with this email');\n    }\n\n    const newUser = await this.usersService.create({\n      Email: registerDto.Email,\n      Firstname: registerDto.Firstname,\n      Lastname: registerDto.Lastname,\n      RoleName: 'User',\n      Password: null,\n    });\n    const confirmationToken =\n      await this.authService.createConfirmationToken(newUser);\n\n    await this.mailService.sendChangePasswordEmail(\n      newUser.Email,\n      confirmationToken,\n      newUser.Id,\n    );\n  }\n\n  @ApiResponse({ status: 201, description: 'Password changed' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: ChangePasswordDto })\n  @Public()\n  @Post('change-password')\n  async changePassword(\n    @Body() changePasswordDto: ChangePasswordDto,\n  ): Promise {\n    const { Token, NewPassword, ConfirmationPassword, UserId } =\n      changePasswordDto;\n\n    if (NewPassword !== ConfirmationPassword) {\n      throw new BadRequestException('Confirmation password does not match');\n    }\n    await this.usersService.findOne(UserId);\n    await this.authService.verifyConfirmationToken(Token, UserId);\n    await this.usersService.updateUserPassword(UserId, NewPassword);\n  }\n\n  @ApiResponse({ status: 200, description: 'Email sent' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: LostPassworDto })\n  @Public()\n  @Post('lost-password')\n  async lostPassword(@Body() body: LostPassworDto) {\n    const { Email } = body;\n    const user = await this.usersService.findOneByEmail(Email, false);\n    const token = await this.authService.createConfirmationToken(user);\n    await this.mailService.sendChangePasswordEmail(user.Email, token, user.Id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtOauthStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            OauthConfigService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { MailService } from '../mail/mail.service';\n\nimport { AuthController } from './auth.controller';\nimport { User } from '../users/user.entity';\n\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthGuard } from '../guards/jwt.guard';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { JwtOauthStrategy } from './jwt-oauth.strategy';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    HttpModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService): any => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User, OauthConfig]),\n  ],\n  providers: [\n    LocalStrategy,\n    JwtStrategy,\n    JwtOauthStrategy,\n    AuthService,\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    MailService,\n    OauthConfigService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createConfirmationToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyConfirmationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createConfirmationToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyConfirmationToken(token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  comparePasswords,\n  generateToken,\n  getTokenExpiration,\n} from '../utils/passwords';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (user && (await comparePasswords(pass, user.Password))) {\n      delete user.Password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = {\n      sub: user.Id,\n      email: user.Email,\n      role: user.Role,\n      userId: user.Id,\n    };\n    return {\n      AccessToken: await this.jwtService.signAsync(payload),\n      UserId: user.Id,\n    };\n  }\n\n  async createConfirmationToken(user: User): Promise {\n    const { hash, token: confirmationToken } = await generateToken();\n    user.Token = hash;\n    user.TokenExpiration = getTokenExpiration();\n    user.Password = null;\n    await this.usersService.update(user.Id, user);\n    return confirmationToken;\n  }\n\n  async verifyConfirmationToken(\n    token: string,\n    userId: number,\n  ): Promise {\n    const user = await this.usersService.findOne(userId);\n\n    if (new Date() > user.TokenExpiration) {\n      throw new BadRequestException('Token expired');\n    }\n    const isMatch = await comparePasswords(token, user.Token);\n    if (!isMatch) {\n      throw new BadRequestException('Invalid token');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoQueryGuard.html":{"url":"guards/AutoQueryGuard.html","title":"guard - AutoQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoRoutingGuard.html":{"url":"guards/AutoRoutingGuard.html","title":"guard - AutoRoutingGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoRoutingGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autorouting.html":{"url":"entities/Autorouting.html","title":"entity - Autorouting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autorouting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Activated\n                            \n                            \n                                    \n                                    \n                                    \n                                EventType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Activated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        EventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'event_type'})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'router', type: 'jsonb'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingHandler.html":{"url":"injectables/AutoroutingHandler.html","title":"injectable - AutoroutingHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoroutingConfigs\n                            \n                            \n                                levelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleAutoroutingUpdated\n                            \n                            \n                                    \n                                    Async\n                                handleEvent\n                            \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Private\n                                isGreaterThan\n                            \n                            \n                                    Private\n                                isIn\n                            \n                            \n                                    Private\n                                isLessThan\n                            \n                            \n                                    Private\n                                isNotIn\n                            \n                            \n                                    Private\n                                isSendable\n                            \n                            \n                                    Async\n                                processEvent\n                            \n                            \n                                    Private\n                                ruleToBoolean\n                            \n                            \n                                    Private\n                                    Async\n                                sendToDestination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingService: AutoroutingsService, processingQueueService: ProcessingQueueService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autorouting.handler.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingService\n                                                  \n                                                        \n                                                                        AutoroutingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingQueueService\n                                                  \n                                                        \n                                                                        ProcessingQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleAutoroutingUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoroutingUpdated()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('autorouting.updated')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(payload: OrthancEventPayloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('orthanc.*')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEqual\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEqual(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGreaterThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGreaterThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLessThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLessThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNotIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNotIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSendable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSendable(router: Router, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(autorouting: Autorouting, payload: OrthancEventPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ruleToBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    ruleToBoolean(rule: Rule, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendToDestination\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToDestination(destination: Destination, level: LevelType, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            Destination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            LevelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoroutingConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { Injectable } from '@nestjs/common';\nimport { OrthancEventPayloadDto } from './dto/orthanc-event-payload.dto';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { Autorouting, Destination, Router, Rule } from './autorouting.entity';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  LevelType,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport OrthancClient from '../utils/orthanc-client';\nimport * as moment from 'moment';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\n@Injectable()\nexport class AutoroutingHandler {\n  autoroutingConfigs: Array = [];\n\n  levelMapping = {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  };\n\n  constructor(\n    private autoroutingService: AutoroutingsService,\n    private processingQueueService: ProcessingQueueService,\n    private orthancClient: OrthancClient,\n  ) {\n    this.handleAutoroutingUpdated();\n  }\n\n  @OnEvent('autorouting.updated')\n  async handleAutoroutingUpdated() {\n    this.autoroutingConfigs = await this.autoroutingService.findAll();\n  }\n\n  private isEqual(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return value === Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return value === rule.Value.toString();\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isSame(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isNotIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return !rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isGreaterThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value) > Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isAfter(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isLessThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value)  {\n            console.error(\"can't send to aet: \", e);\n          });\n        break;\n      case DestinationType.TMTVJOB:\n        if (level !== LevelType.STUDIES) {\n          console.error('TMTVJob can only be sent to series');\n          return;\n        }\n\n        const seriesDetails = await this.orthancClient\n          .getSeriesDetailsOfStudy(orthancID)\n          .then((res) => {\n            return res.data;\n          })\n          .catch(() => {\n            return [];\n          });\n\n        const allModalities = seriesDetails.map(\n          (series: any) => series.MainDicomTags.Modality,\n        );\n\n        if (\n          allModalities.length !== 2 ||\n          !allModalities.includes('PT') ||\n          !allModalities.includes('CT')\n        ) {\n          console.error('Invalid series modalities: ', allModalities);\n          return;\n        }\n\n        const ctSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'CT',\n        ).ID;\n\n        const ptSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'PT',\n        ).ID;\n\n        const jobId = await this.processingQueueService.addJob(null, {\n          JobType: ProcessingJobType.TMTV,\n          TmtvJob: {\n            PtOrthancSeriesId: ptSeriesID,\n            CtOrthancSeriesId: ctSeriesID,\n            SendMaskToOrthancAs: [ProcessingMask.RTSS, ProcessingMask.SEG],\n            WithFragmentedMask: true,\n          },\n        });\n\n        console.log('TMTV jobId:', jobId);\n\n        break;\n      case DestinationType.PEER:\n        console.log('Sending to Peer', destination, orthancID);\n        this.orthancClient\n          .sendToPeer(destination.Name, [orthancID])\n          .catch((e) => {\n            console.error(\"can't send to peer: \", e);\n          });\n        break;\n    }\n  }\n\n  async processEvent(\n    autorouting: Autorouting,\n    payload: OrthancEventPayloadDto,\n  ) {\n    const level = this.levelMapping[payload.ChangeType];\n    const data = (await this.orthancClient.getOrthancDetails(level, payload.ID))\n      .data;\n    const isSendable = this.isSendable(autorouting.Router, data);\n\n    if (isSendable) {\n      for (const destination of autorouting.Router.Destinations) {\n        this.sendToDestination(destination, level, payload.ID);\n      }\n    }\n  }\n\n  @OnEvent('orthanc.*')\n  async handleEvent(payload: OrthancEventPayloadDto) {\n    const autoroutingMatches = this.autoroutingConfigs.filter(\n      (autorouting) =>\n        autorouting.EventType === payload.ChangeType && autorouting.Activated,\n    );\n\n    autoroutingMatches.forEach((autorouting: Autorouting) => {\n      this.processEvent(autorouting, payload);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoroutingsController.html":{"url":"controllers/AutoroutingsController.html","title":"controller - AutoroutingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoroutingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /autorouting\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAutorouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAutorouting(createAutoroutingDto: CreateAutoroutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'create autorouting'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@UsePipes(new ValidationPipe())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAutoroutingDto\n                                            \n                                                            CreateAutoroutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'delete autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'disable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/disable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'enable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Post('/:id/enable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAutorouting()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all autorouting', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Body,\n  Post,\n  Delete,\n  Param,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AutoRoutingGuard } from '../guards/roles.guard';\nimport { CreateAutoroutingDto } from './dto/create-autorouting.dto';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\n\n@ApiTags('autorouting')\n@Controller('/autorouting')\nexport class AutoroutingsController {\n  constructor(private autoroutingService: AutoroutingsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'create autorouting',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post()\n  async createAutorouting(\n    @Body() createAutoroutingDto: CreateAutoroutingDto,\n  ): Promise {\n    return await this.autoroutingService.create(createAutoroutingDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all autorouting',\n    type: [Autorouting],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @Get()\n  async getAutorouting(): Promise {\n    return await this.autoroutingService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'delete autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Delete('/:id')\n  async deleteAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.findOneOrFail(id);\n    return await this.autoroutingService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'enable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/enable')\n  async enableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.enable(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'disable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Post('/:id/disable')\n  async disableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoroutingsModule.html":{"url":"modules/AutoroutingsModule.html","title":"module - AutoroutingsModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoroutingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/autorouting/autoroutings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoroutingHandler\n                        \n                        \n                            AutoroutingsService\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoroutingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { AutoroutingsController } from './autoroutings.controller';\nimport { AutoroutingHandler } from './autorouting.handler';\nimport OrthancClient from '../utils/orthanc-client';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Autorouting])],\n  providers: [\n    AutoroutingsService,\n    AutoroutingHandler,\n    OrthancClient,\n    ProcessingQueueService,\n  ],\n  controllers: [AutoroutingsController],\n})\nexport class AutoroutingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingsService.html":{"url":"injectables/AutoroutingsService.html","title":"injectable - AutoroutingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEventType\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingsRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autoroutings.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEventType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEventType(eventType: AutoroutingEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventType\n                                            \n                                                            AutoroutingEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrFail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Autorouting } from './autorouting.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { AutoroutingEventType } from './autorouting.enum';\n\n@Injectable()\nexport class AutoroutingsService {\n  constructor(\n    @InjectRepository(Autorouting)\n    private autoroutingsRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.autoroutingsRepository.find();\n  }\n\n  async findOneByEventType(\n    eventType: AutoroutingEventType,\n  ): Promise {\n    return await this.autoroutingsRepository.find({\n      where: { EventType: eventType, Activated: true },\n    });\n  }\n\n  async findOneOrFail(id: number): Promise {\n    return await this.autoroutingsRepository.findOneOrFail({\n      where: { Id: id },\n    });\n  }\n\n  async create(autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.save(autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async update(id: number, autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.update(id, autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async remove(id: number): Promise {\n    await this.autoroutingsRepository.delete(id);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async enable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = true;\n    await this.update(id, autorouting);\n  }\n\n  async disable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = false;\n    await this.update(id, autorouting);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CdBurnerGuard.html":{"url":"guards/CdBurnerGuard.html","title":"guard - CdBurnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CdBurnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ConfirmationPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                Token\n                            \n                            \n                                    \n                                    \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ConfirmationPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()@MinLength(12)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {message: 'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(12)\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {\n    message:\n      'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character',\n  })\n  NewPassword: string;\n\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  ConfirmationPassword: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  Token: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  UserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdParamsGuard.html":{"url":"guards/CheckUserIdParamsGuard.html","title":"guard - CheckUserIdParamsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdParamsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-params.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(valuePath: string[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-params.guard.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        valuePath\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-params.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CheckUserIdParamsGuard implements CanActivate {\n  constructor(private readonly valuePath: string[]) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.id;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdQueryGuard.html":{"url":"guards/CheckUserIdQueryGuard.html","title":"guard - CheckUserIdQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-query.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(valuePath: string[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-query.guard.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        valuePath\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-query.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CheckUserIdQueryGuard implements CanActivate {\n  constructor(private readonly valuePath: string[]) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.query.userId;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserRoleGuard.html":{"url":"guards/CheckUserRoleGuard.html","title":"guard - CheckUserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-role.guard.ts:4\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-role.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CheckUserRoleGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.roleName;\n    const userRole = request.user.role.Name;\n\n    return value == userRole && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoroutingDto.html":{"url":"classes/CreateAutoroutingDto.html","title":"class - CreateAutoroutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoroutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/create-autorouting.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Autorouting, [\n  'Id',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Autorouting } from '../autorouting.entity';\n\nexport class CreateAutoroutingDto extends OmitType(Autorouting, [\n  'Id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOptionDto.html":{"url":"classes/CreateOptionDto.html","title":"class - CreateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/create-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: false, default: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false, default: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean, IsNumber } from 'class-validator';\n\nexport class CreateOptionDto {\n  @ApiProperty({ example: 22 })\n  @IsNumber()\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @IsNumber()\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false, default: 10 })\n  @IsNumber()\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: true, required: false, default: true })\n  @IsBoolean()\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @IsString()\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @IsString()\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @IsString()\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @IsString()\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Import: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Export: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Query: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Delete: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Admin: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Modify: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  ReadAll: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd1234!'})@IsString()@Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty({ example: 'myPassw0rd1234!' })\n  @IsString()\n  @Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {\n    message: 'Password too weak',\n  })\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DeleteGuard.html":{"url":"guards/DeleteGuard.html","title":"guard - DeleteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DeleteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Destination.html":{"url":"classes/Destination.html","title":"class - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Destination\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DestinationType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'type'})@IsEnum(DestinationType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExportGuard.html":{"url":"guards/ExportGuard.html","title":"guard - ExportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOptionDto.html":{"url":"classes/GetOptionDto.html","title":"class - GetOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/get-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancAddress\n                            \n                            \n                                    \n                                    \n                                OrthancPassword\n                            \n                            \n                                    \n                                    \n                                OrthancPort\n                            \n                            \n                                    \n                                    \n                                OrthancUsername\n                            \n                            \n                                    \n                                    \n                                RedisAddress\n                            \n                            \n                                    \n                                    \n                                RedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\nimport { IsString } from 'class-validator';\n\nexport class GetOptionDto extends PartialType(CreateOptionDto) {\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPort: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancUsername: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPassword: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisPort: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleDto.html":{"url":"classes/GetRoleDto.html","title":"class - GetRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/get-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/get-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { Label } from '../../labels/label.entity';\n\nexport class GetRoleDto extends PartialType(CreateRoleDto) {\n  @ApiProperty({ required: false, default: null })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInstance(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsInstance,\n  IsNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from '../../roles/role.entity';\n\nexport class GetUserDto {\n  @ApiProperty()\n  @IsNumber()\n  Id: number;\n\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty()\n  @IsInstance(Role)\n  Role?: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClient.html":{"url":"classes/HttpClient.html","title":"class - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/http.client.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardedAddress\n                            \n                            \n                                    Protected\n                                forwardedProtocol\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Protected\n                                password\n                            \n                            \n                                request\n                            \n                            \n                                requestBuffer\n                            \n                            \n                                requestStream\n                            \n                            \n                                streamAnswerToRes\n                            \n                            \n                                    Protected\n                                url\n                            \n                            \n                                    Protected\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getResponseAsBuffer\n                            \n                            \n                                    Async\n                                getResponseAsStream\n                            \n                            \n                                setForwardedAdress\n                            \n                            \n                                setForwardedProtocol\n                            \n                            \n                                setPassword\n                            \n                            \n                                setUrl\n                            \n                            \n                                setUsername\n                            \n                            \n                                    Async\n                                streamToWriteAnswerWithCallBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedProtocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamAnswerToRes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsBuffer(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsStream(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedAdress\n                        \n                    \n                \n            \n            \n                \nsetForwardedAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedProtocol\n                        \n                    \n                \n            \n            \n                \nsetForwardedProtocol(protocol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                protocol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUsername\n                        \n                    \n                \n            \n            \n                \nsetUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        streamToWriteAnswerWithCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToWriteAnswerWithCallBack(url: string, method: string, body: object, streamWriter: any, finishCallBack: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamWriter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finishCallBack\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { Response } from 'express';\n\nexport class HttpClient {\n  protected url: string;\n  protected username: string;\n  protected password: string;\n  protected forwardedAddress: string;\n  protected forwardedProtocol: string;\n\n  getOptions = (\n    url: string,\n    method: string,\n    headers: object,\n    data: object | string | Buffer | any,\n    responseType: string | undefined = undefined,\n  ): object => {\n    return {\n      method: method,\n      baseURL: this.url,\n      url: url,\n      auth: {\n        username: this.username,\n        password: this.password,\n      },\n      headers: {\n        Forwarded:\n          'by=localhost;for=localhost;host=' +\n          this.forwardedAddress +\n          '/api;proto=' +\n          this.forwardedProtocol,\n        ...headers,\n      },\n      data: data ?? undefined,\n      responseType: responseType,\n    };\n  };\n\n  setForwardedAdress(address: string): void {\n    this.forwardedAddress = address;\n  }\n\n  setForwardedProtocol(protocol: string): void {\n    this.forwardedProtocol = protocol;\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  request = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body);\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  requestBuffer = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'arraybuffer');\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  requestStream = (\n    url: string,\n    method: string,\n    body: object | string | null,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios.request(option).catch(function (error) {\n      throw error;\n    });\n  };\n\n  streamAnswerToRes = (\n    url: string,\n    method: string,\n    body: object,\n    res: Response,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios\n      .request(option)\n      .then((response) => {\n        res.setHeader('content-type', response.headers['content-type']);\n        response.data.pipe(res);\n      })\n      .catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            res.status(500).send('Bad credentials');\n          } else {\n            res\n              .status(error.response.status)\n              .send(error.response.statusMessage);\n          }\n        }\n      });\n  };\n\n  async streamToWriteAnswerWithCallBack(\n    url: string,\n    method: string,\n    body: object,\n    streamWriter: any,\n    finishCallBack: any,\n  ) {\n    const config = this.getOptions(url, method, {}, body, 'stream');\n    return axios\n      .request(config)\n      .then((response) => {\n        response.data.pipe(streamWriter).on('finish', () => {\n          finishCallBack();\n        });\n      })\n      .catch(function (error) {\n        throw error;\n      });\n  }\n\n  async getResponseAsStream(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestStream(url, method, body);\n    return response.data;\n  }\n\n  async getResponseAsBuffer(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestBuffer(url, method, body);\n    return Buffer.from(response.data, 'binary');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ImportGuard.html":{"url":"guards/ImportGuard.html","title":"guard - ImportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ImportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstanceGuard.html":{"url":"injectables/InstanceGuard.html","title":"injectable - InstanceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstanceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/instance.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/instance.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\n\n@Injectable()\nexport class InstanceGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('instances', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return this.isStudyLabelInRole(userRole, parentStudy.ID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNumberOrString.html":{"url":"classes/IsNumberOrString.html","title":"class - IsNumberOrString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNumberOrString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/string-or-number.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(text: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'string-or-number', async: false })\nexport class IsNumberOrString implements ValidatorConstraintInterface {\n  validate(text: any, args: ValidationArguments) {\n    return typeof text === 'number' || typeof text === 'string';\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return '($value) must be number or string';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/jwt.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/jwt.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../constants/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOAuthGuard.html":{"url":"injectables/JwtOAuthGuard.html","title":"injectable - JwtOAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt-oauth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('bearer')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtOAuthGuard extends AuthGuard('bearer') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOauthStrategy.html":{"url":"injectables/JwtOauthStrategy.html","title":"injectable - JwtOauthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOauthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserInfoUrl\n                            \n                            \n                                    Async\n                                getWellKnown\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateIssuer\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, httpService: HttpService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-oauth.strategy.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserInfoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfoUrl(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWellKnown\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWellKnown(iss: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iss\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIssuer\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIssuer(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      email: payload.email,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Label.html":{"url":"entities/Label.html","title":"entity - Label","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/label.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Label {\n  @ApiProperty({ example: 'name' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelDto.html":{"url":"classes/LabelDto.html","title":"class - LabelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/labels.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class LabelDto {\n  @ApiProperty({ example: 'name' })\n  @IsString()\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LabelsController.html":{"url":"controllers/LabelsController.html","title":"controller - LabelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LabelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /labels\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'remove label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:labelName')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  ConflictException,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LabelsService } from './labels.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { LabelDto } from './labels.dto';\n\n@ApiTags('labels')\n@Controller('/labels')\nexport class LabelsController {\n  constructor(private readonly LabelsService: LabelsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(): Promise {\n    const allLabels = await this.LabelsService.findAll();\n    return allLabels.map((label) => label.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'remove label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:labelName')\n  async remove(@Param('labelName') labelName: string): Promise {\n    await this.LabelsService.findOneByOrFail(labelName);\n    return this.LabelsService.remove(labelName);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async create(@Body() labelDto: LabelDto): Promise {\n    if (await this.LabelsService.isLabelExist(labelDto.Name))\n      throw new ConflictException('Label with this name already exists');\n    return this.LabelsService.create(labelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabelsModule.html":{"url":"modules/LabelsModule.html","title":"module - LabelsModule","body":"\n                   \n\n\n\n\n    Modules\n    LabelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nLabelsModule\n\nLabelsModule\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/labels/labels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LabelsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LabelsService } from './labels.service';\nimport { LabelsController } from './labels.controller';\nimport { Label } from './label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Label])],\n  providers: [LabelsService],\n  controllers: [LabelsController],\n})\nexport class LabelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                isLabelExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/labels/labels.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(label: Label)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            Label\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isLabelExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLabelExist(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Label } from './label.entity';\n\n@Injectable()\nexport class LabelsService {\n  constructor(\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.labelsRepository.find();\n  }\n\n  async findOneByOrFail(labelName: string): Promise {\n    return await this.labelsRepository.findOneByOrFail({ Name: labelName });\n  }\n\n  async isLabelExist(labelName: string): Promise {\n    const answser = await this.labelsRepository.findOneBy({ Name: labelName });\n    return answser !== null;\n  }\n\n  async remove(labelName: string): Promise {\n    await this.labelsRepository.delete(labelName);\n  }\n\n  async create(label: Label): Promise {\n    await this.labelsRepository.save(label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/local.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'Email',\n      passwordField: 'Password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'email@gaelo.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'email@gaelo.com' })\n  @IsNotEmpty()\n  Email: string;\n\n  @ApiProperty({ example: 'myPassw0rd' })\n  @IsNotEmpty()\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LostPassworDto.html":{"url":"classes/LostPassworDto.html","title":"class - LostPassworDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LostPassworDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/lost-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/lost-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LostPassworDto {\n  @ApiProperty({ example: 'user1@mail.com' })\n  @IsNotEmpty()\n  Email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\n\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: config.get('MAIL_ENCRYPTION', false) === 'tls',\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: join(__dirname, './templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  exports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendChangePasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendChangePasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChangePasswordEmail(email: string, token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    private configService: ConfigService,\n  ) {}\n\n  async sendChangePasswordEmail(\n    email: string,\n    token: string,\n    userId: number,\n  ): Promise {\n    const changePasswordUrl = `${this.configService.get('APP_URL')}:${this.configService.get('PORT_CLIENT')}/change-password?token=${token}&userId=${userId}`;\n    await this.mailerService.sendMail({\n      from: '\"GaelO-Flow\" ',\n      to: email,\n      subject: 'Change your password',\n      html: `Follow this link to set your password : ${changePasswordUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaskProcessingService.html":{"url":"injectables/MaskProcessingService.html","title":"injectable - MaskProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaskProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/mask-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskId\n                            \n                            \n                                    Private\n                                petId\n                            \n                            \n                                    Private\n                                petSeriesOrthancId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fragmentMask\n                            \n                            \n                                    Async\n                                getMaskAs\n                            \n                            \n                                getMaskId\n                            \n                            \n                                    Async\n                                getStatOfMask\n                            \n                            \n                                setMaskId\n                            \n                            \n                                setPetId\n                            \n                            \n                                    Async\n                                thresholdMaskTo41\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processingService: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/mask-processing.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processingService\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fragmentMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    fragmentMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaskAs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaskAs(type: ProcessingMask, orientation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ProcessingMask\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orientation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaskId\n                        \n                    \n                \n            \n            \n                \ngetMaskId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatOfMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatOfMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaskId\n                        \n                    \n                \n            \n            \n                \nsetMaskId(maskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPetId\n                        \n                    \n                \n            \n            \n                \nsetPetId(petId: string, petSeriesOrthancId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                petId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                petSeriesOrthancId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        thresholdMaskTo41\n                        \n                    \n                \n            \n            \n                \n                        \n                    thresholdMaskTo41()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petSeriesOrthancId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProcessingMask } from '../constants/enums';\nimport ProcessingClient from '../utils/processing.client';\n\n@Injectable()\nexport class MaskProcessingService {\n  private maskId: string;\n  private petId: string;\n  private petSeriesOrthancId: string;\n\n  constructor(private readonly processingService: ProcessingClient) {}\n\n  setMaskId(maskId: string): void {\n    this.maskId = maskId;\n  }\n\n  getMaskId(): string {\n    return this.maskId;\n  }\n\n  setPetId(petId: string, petSeriesOrthancId: string): void {\n    this.petId = petId;\n    this.petSeriesOrthancId = petSeriesOrthancId;\n  }\n\n  async getMaskAs(\n    type: ProcessingMask,\n    orientation: string = null,\n  ): Promise {\n    switch (type) {\n      case ProcessingMask.NIFTI:\n        return await this.processingService.getMaskDicomOrientation(\n          this.maskId,\n          orientation,\n          true,\n        );\n      case ProcessingMask.RTSS:\n        const rtssId = await this.processingService.createRtssFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const rtssStream = await this.processingService.getRtss(rtssId);\n        await this.processingService.deleteRessource('rtss', rtssId);\n        return rtssStream;\n      case ProcessingMask.SEG:\n        const segId = await this.processingService.createSegFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const seg = await this.processingService.getSeg(segId);\n        await this.processingService.deleteRessource('seg', segId);\n        return seg;\n      default:\n        throw new Error('Invalid mask type');\n    }\n  }\n\n  async getStatOfMask(): Promise {\n    return await this.processingService.getStatsMaskSeries(\n      this.maskId,\n      this.petId,\n    );\n  }\n\n  async fragmentMask(): Promise {\n    const fragmentedMaskId = await this.processingService.fragmentMask(\n      this.petId,\n      this.maskId,\n      true,\n    );\n    const fragmentedMask = new MaskProcessingService(this.processingService);\n    fragmentedMask.setMaskId(fragmentedMaskId);\n    fragmentedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return fragmentedMask;\n  }\n\n  async thresholdMaskTo41(): Promise {\n    const thresholdedMaskId = await this.processingService.thresholdMask(\n      this.maskId,\n      this.petId,\n      '41%',\n    );\n    const thresholdedMask = new MaskProcessingService(this.processingService);\n    thresholdedMask.setMaskId(thresholdedMaskId);\n    thresholdedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return thresholdedMask;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ModifyGuard.html":{"url":"guards/ModifyGuard.html","title":"guard - ModifyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ModifyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundInterceptor.html":{"url":"injectables/NotFoundInterceptor.html","title":"injectable - NotFoundInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/not-found.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/not-found.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NotFoundException,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, catchError } from 'rxjs';\nimport { EntityNotFoundError } from 'typeorm';\n\n@Injectable()\nexport class NotFoundInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof EntityNotFoundError) {\n          throw new NotFoundException(error.message);\n        } else {\n          throw error;\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OauthConfig.html":{"url":"entities/OauthConfig.html","title":"entity - OauthConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OauthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'back-end'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@PrimaryColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class OauthConfig {\n  @ApiProperty({ example: 'keycloak' })\n  @PrimaryColumn({ name: 'id' })\n  Name: string;\n\n  @ApiProperty({ example: 'keycloak' })\n  @Column()\n  Provider: string;\n\n  @ApiProperty({\n    example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n  })\n  @Column()\n  AuthorizationUrl: string;\n\n  @ApiProperty({ example: 'back-end' })\n  @Column()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OauthConfigController.html":{"url":"controllers/OauthConfigController.html","title":"controller - OauthConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OauthConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth-config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOauthConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Oauth config added'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Oauth config already exists'})@ApiBearerAuth('access-token')@ApiBody({type: OauthConfigDto})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config deleted'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 404, description: 'Oauth config not found'})@ApiBearerAuth('access-token')@ApiParam({name: 'name', required: true})@UseGuards(AdminGuard)@Delete(':name')\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config returned', type: OauthConfigDto, isArray: true})@Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Public } from '../interceptors/public';\nimport { OauthConfigService } from './oauth-configs.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@ApiTags('oauth-config')\n@Controller('oauth-config')\nexport class OauthConfigController {\n  constructor(private readonly oauthConfigService: OauthConfigService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Oauth config returned',\n    type: OauthConfigDto,\n    isArray: true,\n  })\n  @Public()\n  @Get()\n  async getOauthConfig(): Promise {\n    return await this.oauthConfigService.getOauthConfig();\n  }\n\n  @ApiResponse({ status: 200, description: 'Oauth config deleted' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 404, description: 'Oauth config not found' })\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'name', required: true })\n  @UseGuards(AdminGuard)\n  @Delete(':name')\n  async deleteOauthConfig(@Param('name') name: string) {\n    const config = await this.oauthConfigService.findOneByName(name);\n    if (!config) throw new NotFoundException('Oauth config not found');\n\n    return this.oauthConfigService.deleteOauthConfig(name);\n  }\n\n  @ApiResponse({ status: 201, description: 'Oauth config added' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Oauth config already exists' })\n  @ApiBearerAuth('access-token')\n  @ApiBody({ type: OauthConfigDto })\n  @UseGuards(AdminGuard)\n  @Post()\n  async addOauthConfig(@Body() oauthConfigDto: OauthConfigDto) {\n    const exists = await this.oauthConfigService.findOneByName(\n      oauthConfigDto.Name,\n    );\n    if (exists) throw new ConflictException('Oauth config already exists');\n\n    return this.oauthConfigService.addOauthConfig(oauthConfigDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthConfigDto.html":{"url":"classes/OauthConfigDto.html","title":"class - OauthConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class OauthConfigDto {\n  @ApiProperty()\n  @IsString()\n  Name: string;\n\n  @ApiProperty()\n  @IsString()\n  Provider: string;\n\n  @ApiProperty()\n  @IsString()\n  AuthorizationUrl: string;\n\n  @ApiProperty()\n  @IsString()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OauthConfigModule.html":{"url":"modules/OauthConfigModule.html","title":"module - OauthConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    OauthConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OauthConfigModule\n\n\n\ncluster_OauthConfigModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OauthConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OauthConfigService } from './oauth-configs.service';\nimport { OauthConfigController } from './oauth-configs.controller';\nimport { OauthConfig } from './oauth-config.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([OauthConfig])],\n  providers: [OauthConfigService],\n  controllers: [OauthConfigController],\n})\nexport class OauthConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OauthConfigService.html":{"url":"injectables/OauthConfigService.html","title":"injectable - OauthConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OauthConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByAuthorizationUrl\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByName\n                            \n                            \n                                    Public\n                                    Async\n                                getOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthConfigsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth-configs/oauth-configs.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthConfigsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByAuthorizationUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuthorizationUrl(AuthorizationUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AuthorizationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { OauthConfig } from './oauth-config.entity';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n@Injectable()\nexport class OauthConfigService {\n  constructor(\n    @InjectRepository(OauthConfig)\n    private oauthConfigsRepository: Repository,\n  ) {}\n\n  public async findOneByName(Name: string): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { Name },\n    });\n    return config;\n  }\n\n  public async findOneByAuthorizationUrl(\n    AuthorizationUrl: string,\n  ): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { AuthorizationUrl },\n    });\n    return config;\n  }\n\n  public async getOauthConfig(): Promise {\n    return await this.oauthConfigsRepository.find();\n  }\n\n  public async deleteOauthConfig(Name: string) {\n    await this.oauthConfigsRepository.delete({ Name });\n  }\n\n  public async addOauthConfig(oauthConfigDto: OauthConfigDto) {\n    const config = this.oauthConfigsRepository.create(oauthConfigDto);\n\n    await this.oauthConfigsRepository.insert(config);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.oauthConfigsRepository.create({\n      Name: 'keycloak',\n      Provider: 'keycloak',\n      AuthorizationUrl:\n        'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n      ClientId: 'back-end',\n    });\n    await this.oauthConfigsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Option.html":{"url":"entities/Option.html","title":"entity - Option","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/option.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@Column({name: 'auto_query_hour_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@Column({name: 'auto_query_hour_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'autorouter_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@Column({default: 'uk', name: 'burner_date_format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'burner_delete_study_after_sent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_label_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@Column({default: 'Epson', name: 'burner_manifacturer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_monitored_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@Column({default: 'Study', name: 'burner_monitoring_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false})@Column({default: false, name: 'burner_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@Column({default: 'Auto', name: 'burner_support_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transcoding'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transfer_syntax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_viewer_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn({name: 'id'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false})@Column({default: 10, name: 'orthanc_monitoring_rate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Option {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn({ name: 'id' })\n  @Exclude()\n  Id: number;\n\n  @ApiProperty({ example: 22 })\n  @Column({ name: 'auto_query_hour_start' })\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_start' })\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @Column({ name: 'auto_query_hour_stop' })\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_stop' })\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false })\n  @Column({ default: 10, name: 'orthanc_monitoring_rate' })\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: false, required: false })\n  @Column({ default: false, name: 'burner_started' })\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_label_path' })\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @Column({ default: 'Study', name: 'burner_monitoring_level' })\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @Column({ default: 'Epson', name: 'burner_manifacturer' })\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_monitored_path' })\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'burner_delete_study_after_sent' })\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @Column({ default: 'Auto', name: 'burner_support_type' })\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_viewer_path' })\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transfer_syntax' })\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @Column({ default: 'uk', name: 'burner_date_format' })\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transcoding' })\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'autorouter_started' })\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OptionsController.html":{"url":"controllers/OptionsController.html","title":"controller - OptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /options\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all options', type: GetOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(options: UpdateOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update options', type: UpdateOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nimport { OptionsService } from './options.service';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { GetOptionDto } from './dto/get-option.dto';\n\n@ApiTags('options')\n@Controller('/options')\nexport class OptionsController {\n  constructor(\n    private readonly optionService: OptionsService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all options',\n    type: GetOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getOptions(): Promise {\n    const { Id, ...options } = await this.optionService.getOptions();\n    const getOptionDto: GetOptionDto = {\n      ...options,\n      OrthancAddress: this.configService.get('ORTHANC_ADDRESS'),\n      OrthancPort: this.configService.get('ORTHANC_PORT'),\n      OrthancUsername: this.configService.get('ORTHANC_USERNAME'),\n      OrthancPassword: this.configService.get('ORTHANC_PASSWORD'),\n      RedisAddress: this.configService.get('REDIS_ADDRESS'),\n      RedisPort: this.configService.get('REDIS_PORT'),\n    };\n\n    return getOptionDto;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Update options',\n    type: UpdateOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Patch()\n  async update(@Body() options: UpdateOptionDto): Promise {\n    return await this.optionService.update(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsModule.html":{"url":"modules/OptionsModule.html","title":"module - OptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\n\nOptionsService\n\nOptionsService\n\n\n\nOptionsModule\n\nOptionsModule\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OptionsService } from './options.service';\nimport { OptionsController } from './options.controller';\nimport { Option } from './option.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [OptionsService, ConfigService],\n  controllers: [OptionsController],\n})\nexport class OptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOptions\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/options/options.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(option: UpdateOptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Option } from './option.entity';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\n@Injectable()\nexport class OptionsService {\n  constructor(\n    @InjectRepository(Option)\n    private optionsRepository: Repository,\n  ) {}\n\n  async getOptions(): Promise {\n    return await this.optionsRepository.findOneByOrFail({ Id: 1 });\n  }\n\n  async update(option: UpdateOptionDto): Promise {\n    await this.optionsRepository.update(1, option);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.optionsRepository.create({\n      AutoQueryHourStart: 22,\n      AutoQueryMinuteStart: 0,\n      AutoQueryHourStop: 6,\n      AutoQueryMinuteStop: 0,\n    });\n    await this.optionsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrGuardOptions.html":{"url":"interfaces/OrGuardOptions.html","title":"interface - OrGuardOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrGuardOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/or.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            throwOnFirstError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnFirstError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throwOnFirstError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  InjectionToken,\n  mixin,\n  Type,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport {\n  defer,\n  from,\n  Observable,\n  of,\n  OperatorFunction,\n  throwError,\n} from 'rxjs';\nimport { catchError, last, mergeMap, takeWhile } from 'rxjs/operators';\n\ninterface OrGuardOptions {\n  throwOnFirstError?: boolean;\n}\n\nexport function OrGuard(\n  guards: Array | InjectionToken>,\n  orGuardOptions?: OrGuardOptions,\n) {\n  class OrMixinGuard implements CanActivate {\n    private guards: CanActivate[] = [];\n    constructor(@Inject(ModuleRef) private readonly modRef: ModuleRef) {}\n    canActivate(context: ExecutionContext): Observable {\n      this.guards = guards.map((guard) =>\n        this.modRef.get(guard, { strict: false }),\n      );\n      const canActivateReturns: Array> = this.guards.map(\n        (guard) => this.deferGuard(guard, context),\n      );\n      return from(canActivateReturns).pipe(\n        mergeMap((obs) => {\n          return obs.pipe(this.handleError());\n        }),\n        takeWhile((val) => val === false, true),\n        last(),\n      );\n    }\n\n    private deferGuard(\n      guard: CanActivate,\n      context: ExecutionContext,\n    ): Observable {\n      return defer(() => {\n        const guardVal = guard.canActivate(context);\n        if (this.guardIsPromise(guardVal)) {\n          return from(guardVal);\n        }\n        if (this.guardIsObservable(guardVal)) {\n          return guardVal;\n        }\n        return of(guardVal);\n      });\n    }\n\n    private handleError(): OperatorFunction {\n      return catchError((err) => {\n        if (orGuardOptions?.throwOnFirstError) {\n          return throwError(() => err);\n        }\n        return of(false);\n      });\n    }\n\n    private guardIsPromise(\n      guard: boolean | Promise | Observable,\n    ): guard is Promise {\n      return !!(guard as Promise).then;\n    }\n\n    private guardIsObservable(\n      guard: boolean | Observable,\n    ): guard is Observable {\n      return !!(guard as Observable).pipe;\n    }\n  }\n\n  const Guard = mixin(OrMixinGuard);\n  return Guard as Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancAdminController.html":{"url":"controllers/OrthancAdminController.html","title":"controller - OrthancAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-admin.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createEcho\n                            \n                            \n                                    \n                                    \n                                    \n                                createJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteModality\n                            \n                            \n                                    \n                                    \n                                    \n                                deletePeer\n                            \n                            \n                                    \n                                    \n                                    \n                                editModality\n                            \n                            \n                                    \n                                    \n                                    \n                                editPeer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                getLogLevel\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeerSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                getPlugins\n                            \n                            \n                                    \n                                    \n                                    \n                                getSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                resetOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                shutdownOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createEcho\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEcho(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/echo')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/jobs/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/peers/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    editModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editPeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    editPeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/peers/*/')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: false, description: 'Gets the job id', allowEmptyValue: true})@Get('/jobs/:id?')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeerSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeerSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers/*/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPlugins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlugins(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/plugins')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        resetOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/reset')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        shutdownOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    shutdownOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/shutdown')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiParam } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancAdminController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/system')\n  @UseGuards(AdminGuard)\n  getSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/reset')\n  @UseGuards(AdminGuard)\n  resetOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/shutdown')\n  @UseGuards(AdminGuard)\n  shutdownOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/tools/log-level')\n  @UseGuards(AdminGuard)\n  getLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/tools/log-level')\n  @UseGuards(AdminGuard)\n  updateLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/plugins')\n  @UseGuards(AdminGuard)\n  getPlugins(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/jobs/*')\n  @UseGuards(AdminGuard)\n  createJobs(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({\n    name: 'id',\n    required: false,\n    description: 'Gets the job id',\n    allowEmptyValue: true,\n  })\n  @Get('/jobs/:id?')\n  @UseGuards(AdminGuard)\n  getJobs(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/modalities/*')\n  @UseGuards(AdminGuard)\n  deleteModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/echo')\n  @UseGuards(AdminGuard)\n  createEcho(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/modalities/*')\n  @UseGuards(AdminGuard)\n  editModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/peers/*')\n  @UseGuards(AdminGuard)\n  deletePeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers/*/system')\n  @UseGuards(AdminGuard)\n  getPeerSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/peers/*/')\n  @UseGuards(AdminGuard)\n  editPeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancController.html":{"url":"controllers/OrthancController.html","title":"controller - OrthancController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getDicomWeb\n                            \n                            \n                                    \n                                    \n                                getInstances\n                            \n                            \n                                    \n                                    \n                                    \n                                getModalities\n                            \n                            \n                                    \n                                    \n                                getSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                getStudies\n                            \n                            \n                                    \n                                getStudiesWithLabel\n                            \n                            \n                                    \n                                    \n                                getWado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getDicomWeb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDicomWeb(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/dicom-web/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/instances/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getModalities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModalities(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/modalities*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/series/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/studies/*')@UseGuards(StudyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getStudiesWithLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudiesWithLabel(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/labels/:name/studies')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getWado\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWado(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/wado/*')\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n  Param,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { OrGuard } from '../guards/or.guard';\nimport {\n  AdminGuard,\n  AutoQueryGuard,\n  ExportGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from 'src/guards/roles.guard';\nimport { StudyGuard } from 'src/guards/study.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @Get('/labels/:name/studies') // TODO check if name label is part of the labels associated to te user role -> create guard\n  // @UseGuards() ???\n  getStudiesWithLabel(@Param('name') labelName: string) {\n    return this.orthancClient.findInOrthanc(\n      'Study',\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      [labelName],\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/studies/*')\n  @UseGuards(StudyGuard)\n  getStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/series/*')\n  // @UseGuards() ???\n  getSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/instances/*')\n  // @UseGuards() ???\n  getInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/dicom-web/*')\n  // @UseGuards() ???\n  getDicomWeb(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/wado/*')\n  // @UseGuards() ???\n  getWado(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/modalities*')\n  @UseGuards(OrGuard([AdminGuard, QueryGuard, AutoQueryGuard, ExportGuard]))\n  getModalities(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancDeleteController.html":{"url":"controllers/OrthancDeleteController.html","title":"controller - OrthancDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-delete.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deletePatients\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteStudies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/patients/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/series/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  Request,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { DeleteGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancDeleteController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Delete('/patients/*')\n  @UseGuards(DeleteGuard)\n  deletePatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*')\n  @UseGuards(DeleteGuard)\n  deleteStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/series/*')\n  @UseGuards(DeleteGuard)\n  deleteSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthancEventPayloadDto.html":{"url":"classes/OrthancEventPayloadDto.html","title":"class - OrthancEventPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthancEventPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/orthanc-event-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ChangeType\n                            \n                            \n                                    \n                                    \n                                Date\n                            \n                            \n                                    \n                                    \n                                ID\n                            \n                            \n                                    \n                                    \n                                Path\n                            \n                            \n                                    \n                                    \n                                ResourceType\n                            \n                            \n                                    \n                                    \n                                Seq\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ChangeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NewInstance', required: true})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'YYYYMMDDTHHMMSS', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Seq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { AutoroutingEventType } from '../autorouting.enum';\n\nexport class OrthancEventPayloadDto {\n  @ApiProperty({ example: 'NewInstance', required: true })\n  @IsEnum(AutoroutingEventType)\n  ChangeType: AutoroutingEventType;\n\n  @ApiProperty({ example: 'YYYYMMDDTHHMMSS', required: true })\n  @IsString()\n  Date: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ID: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  Path: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ResourceType: string;\n\n  @ApiProperty({ example: 0, required: true })\n  @IsNumber()\n  Seq: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancExportController.html":{"url":"controllers/OrthancExportController.html","title":"controller - OrthancExportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancExportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-export.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                createMedia\n                            \n                            \n                                    \n                                    \n                                    \n                                createMediaExtended\n                            \n                            \n                                    \n                                    \n                                    \n                                createModalitiesExport\n                            \n                            \n                                    \n                                    \n                                    \n                                createPeersStore\n                            \n                            \n                                    \n                                    \n                                    \n                                createTasksUserExport\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-archive')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMediaExtended\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMediaExtended(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media-extended')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPeersStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPeersStore(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/peers/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createTasksUserExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTasksUserExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tasks/:user/export')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers*')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ExportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancExportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/store')\n  @UseGuards(ExportGuard)\n  createModalitiesExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-archive')\n  @UseGuards(ExportGuard)\n  createArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media')\n  @UseGuards(ExportGuard)\n  createMedia(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media-extended')\n  @UseGuards(ExportGuard)\n  createMediaExtended(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers*')\n  @UseGuards(ExportGuard)\n  getPeers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/peers/*/store')\n  @UseGuards(ExportGuard)\n  createPeersStore(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tasks/:user/export')\n  @UseGuards(ExportGuard)\n  createTasksUserExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancImportController.html":{"url":"controllers/OrthancImportController.html","title":"controller - OrthancImportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancImportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-import.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createDicom\n                            \n                            \n                                    \n                                    \n                                    \n                                createInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createDicom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDicom(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-dicom')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/instances')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ImportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancImportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/instances')\n  @UseGuards(ImportGuard)\n  createInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-dicom')\n  @UseGuards(ImportGuard)\n  createDicom(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancModifyController.html":{"url":"controllers/OrthancModifyController.html","title":"controller - OrthancModifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancModifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-modify.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createSeriesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createStudiesModify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createSeriesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeriesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createStudiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStudiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ModifyGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancModifyController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/modify')\n  @UseGuards(ModifyGuard)\n  createModalitiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/*/modify')\n  @UseGuards(ModifyGuard)\n  createStudiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/*/modify')\n  @UseGuards(ModifyGuard)\n  createSeriesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrthancModule.html":{"url":"modules/OrthancModule.html","title":"module - OrthancModule","body":"\n                   \n\n\n\n\n    Modules\n    OrthancModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\n\nOrthancClient\n\nOrthancClient\n\n\n\nOrthancModule\n\nOrthancModule\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orthanc/orthanc.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrthancController\n                        \n                        \n                            OrthancAdminController\n                        \n                        \n                            OrthancDeleteController\n                        \n                        \n                            OrthancExportController\n                        \n                        \n                            OrthancImportController\n                        \n                        \n                            OrthancModifyController\n                        \n                        \n                            OrthancQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrthancAdminController } from './orthanc-admin.controller';\nimport { OrthancController } from './orthanc.controller';\nimport { OrthancDeleteController } from './orthanc-delete.controller';\nimport { OrthancExportController } from './orthanc-export.controller';\nimport { OrthancImportController } from './orthanc-import.controller';\nimport { OrthancModifyController } from './orthanc-modify.controller';\nimport { OrthancQueryController } from './orthanc-query.controller';\nimport OrthancClient from '../utils/orthanc-client';\n\n@Module({\n  imports: [],\n  providers: [OrthancClient],\n  controllers: [\n    OrthancController,\n    OrthancAdminController,\n    OrthancDeleteController,\n    OrthancExportController,\n    OrthancImportController,\n    OrthancModifyController,\n    OrthancQueryController,\n  ],\n})\nexport class OrthancModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrthancMonitoringTask.html":{"url":"injectables/OrthancMonitoringTask.html","title":"injectable - OrthancMonitoringTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrthancMonitoringTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/orthanc-monitoring.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                orthancMonitoringCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        orthancMonitoringCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    orthancMonitoringCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/orthanc-monitoring.task.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/tasks/orthanc-monitoring.task.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport OrthancClient from '../utils/orthanc-client';\n\n@Injectable()\nexport class OrthancMonitoringTask {\n  private lastChanges: number = null;\n\n  constructor(\n    private orthancClient: OrthancClient,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  async orthancMonitoringCron() {\n    if (this.lastChanges === null) {\n      this.lastChanges = (await this.orthancClient.getLastChanges()).data.Last;\n    }\n\n    const changes = (\n      await this.orthancClient.getChangesSince(this.lastChanges.toString())\n    ).data;\n\n    this.lastChanges = changes.Last;\n    changes.Changes.forEach((element: any) => {\n      this.eventEmitter.emit('orthanc.' + element.ChangeType, element);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancQueryController.html":{"url":"controllers/OrthancQueryController.html","title":"controller - OrthancQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-query.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                getQueryAnswers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryParsedAnswer\n                            \n                            \n                                    \n                                    \n                                retrieve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesQuery(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQueryAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryAnswers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/queries/*/answers*')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryParsedAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryParsedAnswer(id: string, queryParsedAnswer: QueryParsedAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/:id/parsed-query')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParsedAnswer\n                                            \n                                                            QueryParsedAnswerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/queries/:id/answers/:index/retrieve')@UseGuards(QueryGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Param,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\nimport {\n  QueryParsedAnswerDto,\n  QuerySeriesDto,\n  QueryStudyDto,\n} from './dto/query-parsed-answer.dto';\nimport { QueryAnswerType } from '../constants/enums';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancQueryController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/query')\n  @UseGuards(QueryGuard)\n  createModalitiesQuery(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/queries/*/answers*')\n  @UseGuards(QueryGuard)\n  getQueryAnswers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @Post('/queries/:id/answers/:index/retrieve')\n  @UseGuards(QueryGuard)\n  retrieve(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/:id/parsed-query')\n  @UseGuards(QueryGuard)\n  async getQueryParsedAnswer(\n    @Param('id') id: string,\n    @Body() queryParsedAnswer: QueryParsedAnswerDto,\n  ) {\n    if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_SERIES) {\n      const seriesDto = queryParsedAnswer.Query as QuerySeriesDto;\n      const seriesDetails = await this.orthancClient.querySeriesInAet(\n        seriesDto.StudyUID,\n        seriesDto.Modality,\n        seriesDto.ProtocolName,\n        seriesDto.SeriesDescription,\n        seriesDto.SeriesNumber,\n        seriesDto.SeriesInstanceUID,\n        id,\n      );\n      return seriesDetails;\n    } else if (queryParsedAnswer.Level == QueryAnswerType.LEVEL_STUDY) {\n      const studyDto = queryParsedAnswer.Query as QueryStudyDto;\n      const studyDetails = await this.orthancClient.queryStudiesInAet(\n        studyDto.PatientName,\n        studyDto.PatientID,\n        studyDto.StudyDate,\n        studyDto.Modality,\n        studyDto.StudyDescription,\n        studyDto.AccessionNb,\n        studyDto.StudyInstanceUID,\n        id,\n      );\n      return studyDetails;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancReadAllController.html":{"url":"controllers/OrthancReadAllController.html","title":"controller - OrthancReadAllController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancReadAllController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-read-all.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deleteLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                getPatients\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/find')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/patients/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { ReadAllGuard } from '../guards/roles.guard';\n\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancReadAllController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Put('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  updateLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  deleteLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/find')\n  @UseGuards(ReadAllGuard)\n  find(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/patients/*')\n  @UseGuards(ReadAllGuard)\n  getPatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessingController.html":{"url":"controllers/ProcessingController.html","title":"controller - ProcessingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /processing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(request: Request, processingJobDto: ProcessingJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Add job and returns the JobId', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(ReadAllGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@UseGuards(AdminGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Job } from 'bullmq';\n\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { ProcessingQueueService } from './processing-queue.service';\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdQueryGuard } from '../guards/check-user-id-query.guard';\n\n@ApiTags('processing')\n@Controller('/processing')\nexport class ProcessingController {\n  constructor(\n    private readonly processingQueueService: ProcessingQueueService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.processingQueueService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdQueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.processingQueueService.getAllUuids();\n    } else {\n      return await this.processingQueueService.getUuidsOfUser(userId);\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidsOfUser = await this.processingQueueService.getUuidsOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidsOfUser.includes(uuid)) {\n      const jobs = await this.processingQueueService.getJobs(undefined, uuid);\n      const results = [];\n      jobs.forEach((job: Job) => {\n        results.push({\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n        });\n      });\n      return results;\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'Add job and returns the JobId',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(ReadAllGuard)\n  @Post()\n  async addJob(\n    @Req() request: Request,\n    @Body() processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const user = request['user'];\n\n    return {\n      JobId: await this.processingQueueService.addJob(\n        user.userId,\n        processingJobDto,\n      ),\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @UseGuards(AdminGuard)\n  @Delete(':uuid')\n  async removeJob(@Param('uuid') uuid: string): Promise {\n    this.processingQueueService.removeJob(uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingFile.html":{"url":"classes/ProcessingFile.html","title":"class - ProcessingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing.file.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessingFile {\n  private id: string;\n  private type: string;\n\n  constructor(id: string, type: string) {\n    this.id = id;\n    this.type = type;\n  }\n\n  public getType(): string {\n    return this.type;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingJobDto.html":{"url":"classes/ProcessingJobDto.html","title":"class - ProcessingJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                JobType\n                            \n                            \n                                    \n                                    \n                                TmtvJob\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JobType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingJobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: ProcessingJobType})@IsEnum(ProcessingJobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        TmtvJob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TmtvJobDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessingModule.html":{"url":"modules/ProcessingModule.html","title":"module - ProcessingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessingModule\n\n\n\ncluster_ProcessingModule_providers\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\n\n\nProcessingModule\n\nProcessingModule\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/processing/processing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProcessingController } from './processing.controller';\nimport { ProcessingQueueService } from './processing-queue.service';\n\n@Module({\n  imports: [],\n  providers: [ProcessingQueueService],\n  controllers: [ProcessingController],\n})\nexport class ProcessingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessingQueueService.html":{"url":"injectables/ProcessingQueueService.html","title":"injectable - ProcessingQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessingQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-queue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processingQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getUuidsOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing-queue.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(userId: number, processingJobDto: ProcessingJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(userId: number, jobId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidsOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidsOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processingQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-queue.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Job, Queue } from 'bullmq';\n\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { generateRandomUUID } from '../utils/passwords';\n\n@Injectable()\nexport class ProcessingQueueService {\n  private processingQueue: Queue;\n\n  constructor(private readonly configService: ConfigService) {\n    this.processingQueue = new Queue('processing', {\n      connection: {\n        host: this.configService.get('REDIS_ADDRESS', 'localhost'),\n        port: this.configService.get('REDIS_PORT', 6379),\n      },\n    });\n    this.processingQueue.resume();\n  }\n\n  async flush(): Promise {\n    await this.processingQueue.obliterate({ force: true });\n  }\n\n  async removeJob(uuid: string): Promise {\n    await this.processingQueue.remove(uuid);\n  }\n\n  async addJob(\n    userId: number,\n    processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const jobId = generateRandomUUID();\n    const data = {\n      ...processingJobDto,\n      userId,\n    };\n\n    this.processingQueue.add(jobId, data, {\n      jobId: jobId,\n    });\n\n    return jobId;\n  }\n\n  async getJobs(\n    userId: number = undefined,\n    jobId: string = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.processingQueue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return (\n        (job.data.userId == userId || userId == undefined) &&\n        (job.id == jobId || jobId == undefined)\n      );\n    });\n\n    return filteredJob;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs.map((job) => job.id);\n\n    return uuids;\n  }\n\n  async getUuidsOfUser(userId: number): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs\n      .filter((job) => job.data.userId == userId)\n      .map((job) => job.id);\n\n    return uuids;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryAnswer.html":{"url":"classes/QueryAnswer.html","title":"class - QueryAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query.answer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: QueryAnswerType, answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        QueryAnswerType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\n\nexport default abstract class QueryAnswer {\n  AnswerId: string;\n  AnswerNumber: number;\n  OriginAET: string;\n  PatientName: string | null;\n  PatientID: string;\n  AccessionNumber: string | null;\n  StudyDescription: string | null;\n  StudyDate: string | null;\n  RequestedProcedureDescription: string | null;\n\n  Level: QueryAnswerType;\n\n  constructor(\n    level: QueryAnswerType,\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    accessionNumber: string | null,\n    studyDescription: string | null,\n    studyDate: string | null,\n    requestedProcedureDescription: string | null,\n  ) {\n    this.AnswerId = answerId;\n    this.AnswerNumber = answerNumber;\n    this.Level = level;\n    this.OriginAET = originAET;\n    this.PatientName = patientName;\n    this.PatientID = patientID;\n    this.AccessionNumber = accessionNumber;\n    this.StudyDescription = studyDescription;\n    this.StudyDate = studyDate;\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  }\n\n  setAnswerId = (answerId: string): void => {\n    this.AnswerId = answerId;\n  };\n\n  setAnswerNumber = (answerNumber: number): void => {\n    this.AnswerNumber = answerNumber;\n  };\n\n  setLevel = (level: QueryAnswerType): void => {\n    this.Level = level;\n  };\n\n  setOriginAET = (originAET: string): void => {\n    this.OriginAET = originAET;\n  };\n\n  setPatientName = (patientName: string): void => {\n    this.PatientName = patientName;\n  };\n\n  setPatientID = (patientID: string): void => {\n    this.PatientID = patientID;\n  };\n\n  setAccessionNumber = (accessionNumber: string | null): void => {\n    this.AccessionNumber = accessionNumber;\n  };\n\n  setStudyDescription = (studyDescription: string | null): void => {\n    this.StudyDescription = studyDescription;\n  };\n\n  setStudyDate = (studyDate: string | null): void => {\n    this.StudyDate = studyDate;\n  };\n\n  setRequestedProcedureDescription = (\n    requestedProcedureDescription: string | null,\n  ): void => {\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryGuard.html":{"url":"guards/QueryGuard.html","title":"guard - QueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParsedAnswerDto.html":{"url":"classes/QueryParsedAnswerDto.html","title":"class - QueryParsedAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParsedAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Level\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, enum: QueryAnswerType})@IsEnum(QueryAnswerType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QuerySeriesDto | QueryStudyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryQueueTask.html":{"url":"injectables/QueryQueueTask.html","title":"injectable - QueryQueueTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryQueueTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/query-queue.task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                queryQueueCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionRepository: Repository, queueQueryService: QueuesQueryService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/query-queue.task.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueQueryService\n                                                  \n                                                        \n                                                                        QueuesQueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        queryQueueCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryQueueCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/query-queue.task.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Repository } from 'typeorm';\n\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport { Option } from '../options/option.entity';\n\nimport { isTimeBetween } from '../utils/is-time-between';\n\n@Injectable()\nexport class QueryQueueTask {\n  constructor(\n    @InjectRepository(Option)\n    private optionRepository: Repository,\n    private queueQueryService: QueuesQueryService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async queryQueueCron() {\n    const options: Option = (await this.optionRepository.find())[0];\n    const currentHour = new Date().getHours();\n    const currentMinute = new Date().getMinutes();\n    const isBetween = isTimeBetween(\n      options.AutoQueryHourStart,\n      options.AutoQueryMinuteStart,\n      options.AutoQueryHourStop,\n      options.AutoQueryMinuteStop,\n      currentHour,\n      currentMinute,\n    );\n    const queueState = await this.queueQueryService.isPaused();\n\n    if (queueState && isBetween) {\n      await this.queueQueryService.resume();\n    } else if (!queueState && !isBetween) {\n      await this.queueQueryService.pause();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesAnswer.html":{"url":"classes/QuerySeriesAnswer.html","title":"class - QuerySeriesAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-series.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Modality\n                            \n                            \n                                NumberOfSeriesRelatedInstances\n                            \n                            \n                                SeriesDescription\n                            \n                            \n                                SeriesInstanceUID\n                            \n                            \n                                SeriesNumber\n                            \n                            \n                                setModality\n                            \n                            \n                                setNumberOfSeriesRelatedInstances\n                            \n                            \n                                setSeriesDescription\n                            \n                            \n                                setSeriesInstanceUID\n                            \n                            \n                                setSeriesNumber\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyUID: string, seriesUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modality: string | null, seriesDescription: string | null, seriesNumber: number | null, numberOfSeriesRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modality\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesNumber\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfSeriesRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModality\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QuerySeriesAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  SeriesInstanceUID: string;\n  Modality: string | null = null;\n  SeriesDescription: string | null = null;\n  SeriesNumber: number | null = null;\n  NumberOfSeriesRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string|null,\n    patientID: string,\n    studyUID: string,\n    seriesUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modality: string | null = null,\n    seriesDescription: string | null = null,\n    seriesNumber: number | null = null,\n    numberOfSeriesRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_SERIES,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.StudyInstanceUID = studyUID;\n    this.SeriesInstanceUID = seriesUID;\n    this.Modality = modality;\n    this.SeriesDescription = seriesDescription;\n    this.SeriesNumber = seriesNumber;\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  }\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setSeriesInstanceUID = (seriesInstanceUID: string): void => {\n    this.SeriesInstanceUID = seriesInstanceUID;\n  };\n\n  setModality = (modality: string | null): void => {\n    this.Modality = modality;\n  };\n\n  setSeriesDescription = (seriesDescription: string | null): void => {\n    this.SeriesDescription = seriesDescription;\n  };\n\n  setSeriesNumber = (seriesNumber: number | null): void => {\n    this.SeriesNumber = seriesNumber;\n  };\n\n  setNumberOfSeriesRelatedInstances = (\n    numberOfSeriesRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesDto.html":{"url":"classes/QuerySeriesDto.html","title":"class - QuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyAnswer.html":{"url":"classes/QueryStudyAnswer.html","title":"class - QueryStudyAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-study.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ModalitiesInStudy\n                            \n                            \n                                NumberOfStudyRelatedInstances\n                            \n                            \n                                NumberOfStudyRelatedSeries\n                            \n                            \n                                setModalitiesInStudy\n                            \n                            \n                                setNumberOfStudyRelatedInstances\n                            \n                            \n                                setNumberOfStudyRelatedSeries\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modalitiesInStudy: string | null, numberOfStudyRelatedSeries: number | null, numberOfStudyRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalitiesInStudy\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedSeries\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QueryStudyAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  ModalitiesInStudy: string | null = null;\n  NumberOfStudyRelatedSeries: number | null = null;\n  NumberOfStudyRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    studyInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modalitiesInStudy: string | null = null,\n    numberOfStudyRelatedSeries: number | null = null,\n    numberOfStudyRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_STUDY,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.ModalitiesInStudy = modalitiesInStudy;\n    this.StudyInstanceUID = studyInstanceUID;\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  }\n\n  setModalitiesInStudy = (modalitiesInStudy: string | null): void => {\n    this.ModalitiesInStudy = modalitiesInStudy;\n  };\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setNumberOfStudyRelatedSeries = (\n    numberOfStudyRelatedSeries: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n  };\n\n  setNumberOfStudyRelatedInstances = (\n    numberOfStudyRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyDto.html":{"url":"classes/QueryStudyDto.html","title":"class - QueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { QueryAnswerType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: QueryAnswerType.LEVEL_SERIES, enum: QueryAnswerType })\n  @IsEnum(QueryAnswerType)\n  Level: QueryAnswerType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queues/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueuesAnonService\n                        \n                        \n                            QueuesDeleteService\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueuesAnonController\n                        \n                        \n                            QueuesDeleteController\n                        \n                        \n                            QueuesQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QueuesAnonController } from './anon/queue-anons.controller';\nimport { QueuesDeleteController } from './delete/queue-deletes.controller';\nimport { QueuesQueryController } from './query/queue-query.controller';\nimport { QueuesAnonService } from './anon/queue-anons.service';\nimport { QueuesDeleteService } from './delete/queue-deletes.service';\nimport { QueuesQueryService } from './query/queue-query.service';\n\n@Module({\n  imports: [],\n  providers: [QueuesAnonService, QueuesDeleteService, QueuesQueryService],\n  controllers: [\n    QueuesAnonController,\n    QueuesDeleteController,\n    QueuesQueryController,\n  ],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesAnonController.html":{"url":"controllers/QueuesAnonController.html","title":"controller - QueuesAnonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesAnonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/anon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addAnonJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeAnonJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAnonJob(queuesAnonsDto: QueuesAnonsDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(AnonymizeGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesAnonsDto\n                                            \n                                                            QueuesAnonsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAnonJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AnonymizeGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesAnonService } from './queue-anons.service';\nimport { QueuesAnonsDto } from './queue-anons.dto';\n\nimport { AdminGuard, AnonymizeGuard } from '../../guards/roles.guard';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/anon')\n@Controller('/queues/anon')\nexport class QueuesAnonController {\n  constructor(private readonly QueuesAnonService: QueuesAnonService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesAnonService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AnonymizeGuard, AdminGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesAnonService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesAnonService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AnonymizeGuard, AdminGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesAnonService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesAnonService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(AnonymizeGuard)\n  @Post()\n  async addAnonJob(\n    @Body() queuesAnonsDto: QueuesAnonsDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesAnonService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const anonymizes = queuesAnonsDto.Anonymizes;\n    const uuid = generateRandomUUID();\n    anonymizes.forEach((anonymize) => {\n      this.QueuesAnonService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        anonymize: anonymize,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AnonymizeGuard)\n  @Delete(':uuid')\n  async removeAnonJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesAnonService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonDto.html":{"url":"classes/QueuesAnonDto.html","title":"class - QueuesAnonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewAccessionNumber\n                            \n                            \n                                    \n                                    \n                                NewPatientID\n                            \n                            \n                                    \n                                    \n                                NewPatientName\n                            \n                            \n                                    \n                                    \n                                NewStudyDescription\n                            \n                            \n                                    \n                                    \n                                OrthancStudyID\n                            \n                            \n                                    \n                                    \n                                Profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_accession_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancStudyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'orthanc_study_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'profile'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesAnonService.html":{"url":"injectables/QueuesAnonService.html","title":"injectable - QueuesAnonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesAnonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/anon/queue-anons.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Queue } from 'bullmq';\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesAnonService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const anonQueue = new Queue('anon', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(anonQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonsDto.html":{"url":"classes/QueuesAnonsDto.html","title":"class - QueuesAnonsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Anonymizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Anonymizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueuesAnonDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesDeleteController.html":{"url":"controllers/QueuesDeleteController.html","title":"controller - QueuesDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/delete\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addDeleteJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeDeleteJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDeleteJob(queuesDeleteDto: QueuesDeleteDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(DeleteGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesDeleteDto\n                                            \n                                                            QueuesDeleteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDeleteJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(DeleteGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesDeleteService } from './queue-deletes.service';\nimport { AdminGuard, DeleteGuard } from '../../guards/roles.guard';\nimport { QueuesDeleteDto } from './queue-deletes.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/delete')\n@Controller('/queues/delete')\nexport class QueuesDeleteController {\n  constructor(private readonly QueuesDeleteService: QueuesDeleteService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesDeleteService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([DeleteGuard, AdminGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesDeleteService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesDeleteService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([DeleteGuard, AdminGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesDeleteService.getUuidOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesDeleteService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(DeleteGuard)\n  @Post()\n  async addDeleteJob(\n    @Body() queuesDeleteDto: QueuesDeleteDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesDeleteService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const orthancSeriesIds = queuesDeleteDto.OrthancSeriesIds;\n    const uuid = generateRandomUUID();\n    orthancSeriesIds.forEach((orthancSeriesId) => {\n      this.QueuesDeleteService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        orthancSeriesId: orthancSeriesId,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(DeleteGuard)\n  @Delete(':uuid')\n  async removeDeleteJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesDeleteService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesDeleteDto.html":{"url":"classes/QueuesDeleteDto.html","title":"class - QueuesDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancSeriesIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancSeriesIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/delete/queue-deletes.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nexport class QueuesDeleteDto {\n  @ApiProperty({ example: ['series_id_1', 'series_id_2'] })\n  @IsArray()\n  OrthancSeriesIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesDeleteService.html":{"url":"injectables/QueuesDeleteService.html","title":"injectable - QueuesDeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesDeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/delete/queue-deletes.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesDeleteService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const deleteQueue = new Queue('delete', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(deleteQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesQueryController.html":{"url":"controllers/QueuesQueryController.html","title":"controller - QueuesQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/query\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addQueryJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeQueryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addQueryJob(queuesQueryDto: QueuesQueryDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(QueryGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesQueryDto\n                                            \n                                                            QueuesQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeQueryJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(QueryGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesQueryService } from './queue-query.service';\nimport { AdminGuard, QueryGuard } from '../../guards/roles.guard';\nimport {\n  QueuesQueryDto,\n  QueuesQueryStudyDto,\n  QueuesQuerySeriesDto,\n} from './queue-query.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n\n@ApiTags('queues/query')\n@Controller('/queues/query')\nexport class QueuesQueryController {\n  constructor(private readonly QueuesQueryService: QueuesQueryService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesQueryService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([QueryGuard, AdminGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesQueryService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesQueryService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([QueryGuard, AdminGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesQueryService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesQueryService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(QueryGuard)\n  @Post()\n  async addQueryJob(\n    @Body() queuesQueryDto: QueuesQueryDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesQueryService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const queuesQueryStudy: QueuesQueryStudyDto[] = queuesQueryDto.Studies;\n    const queuesQuerySeries: QueuesQuerySeriesDto[] = queuesQueryDto.Series;\n\n    if (queuesQuerySeries.length === 0 && queuesQueryStudy.length === 0)\n      throw new BadRequestException('No studies or series found');\n\n    const uuid = generateRandomUUID();\n    queuesQueryStudy.forEach((study) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        study: study,\n        results: null,\n      });\n    });\n    queuesQuerySeries.forEach((series) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        series: series,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(QueryGuard)\n  @Delete(':uuid')\n  async removeQueryJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesQueryService.removeJob({ uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryDto.html":{"url":"classes/QueuesQueryDto.html","title":"class - QueuesQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Series\n                            \n                            \n                                    \n                                    \n                                    \n                                Studies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQuerySeriesDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Studies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQueryStudyDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQuerySeriesDto.html":{"url":"classes/QueuesQuerySeriesDto.html","title":"class - QueuesQuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesQueryService.html":{"url":"injectables/QueuesQueryService.html","title":"injectable - QueuesQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isPaused\n                            \n                            \n                                    Async\n                                pause\n                            \n                            \n                                    Async\n                                resume\n                            \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/query/queue-query.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isPaused\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPaused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:12\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:101\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n\n@Injectable()\nexport class QueuesQueryService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const queryQueue = new Queue('query', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    queryQueue.pause();\n    super(queryQueue);\n  }\n\n  async pause(): Promise {\n    await this.queue.pause();\n  }\n\n  async resume(): Promise {\n    await this.queue.resume();\n  }\n\n  async isPaused(): Promise {\n    return await this.queue.isPaused();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryStudyDto.html":{"url":"classes/QueuesQueryStudyDto.html","title":"class - QueuesQueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReadAllGuard.html":{"url":"guards/ReadAllGuard.html","title":"guard - ReadAllGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReadAllGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mail@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'firstname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lastname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'mail@example.com' })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'firstname' })\n  @IsNotEmpty()\n  Firstname: string;\n\n  @ApiProperty({ example: 'lastname' })\n  @IsNotEmpty()\n  Lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Labels\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'anonymize'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_routing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'cd_burner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'export'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'import'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, label => label.Name)@JoinTable({name: 'role_label'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'modify'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'read_all'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Label } from '../labels/label.entity';\nimport { Entity, Column, PrimaryColumn, ManyToMany, JoinTable } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @ApiProperty({ example: 'admin' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'import' })\n  Import: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'anonymize' })\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'export' })\n  Export: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'query' })\n  Query: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_query' })\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'delete' })\n  Delete: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'admin' })\n  Admin: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'modify' })\n  Modify: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'cd_burner' })\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_routing' })\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'read_all' })\n  ReadAll: boolean;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Label, (label) => label.Name)\n  @JoinTable({ name: 'role_label' })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addLabelToRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeLabelFromRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addLabelToRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLabelToRole(roleName: string, labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add label to role'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({schema: undefined})@UseGuards(undefined)@Post('/:roleName/label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@ApiBody({type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(withLabels: WithLabels)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all roles', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                withLabels\n                                            \n                                                            WithLabels\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get role by name', type: Role})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels from role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeLabelFromRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLabelFromRole(roleName: string, label: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove label from role'})@ApiResponse({status: 400, description: 'Label does not exist for this role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:roleName/label/:label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Put('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Delete,\n  Put,\n  ForbiddenException,\n  ConflictException,\n  BadRequestException,\n  UseGuards,\n  Query,\n  UseInterceptors,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from '../users/users.service';\nimport { LabelsService } from '../labels/labels.service';\nimport { RolesService } from './roles.service';\n\nimport { Role } from './role.entity';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserRoleGuard } from '../guards/check-user-role.guard';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { GetRoleDto } from './dto/get-role.dto';\nimport { WithLabels } from './dto/with-labels.dto';\nimport { LabelDto } from '../labels/labels.dto';\n\n@ApiTags('roles')\n@Controller('/roles')\nexport class RolesController {\n  constructor(\n    private readonly roleService: RolesService,\n    private readonly labelService: LabelsService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all roles',\n    type: [GetRoleDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(@Query() withLabels: WithLabels): Promise {\n    if (withLabels.WithLabels)\n      return await this.roleService.findAllWithLabels();\n    return await this.roleService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get role by name', type: Role })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get('/:name')\n  async findOne(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n    return role;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @ApiBody({ type: CreateRoleDto })\n  @Post()\n  async createRole(@Body() createRoleDto: CreateRoleDto): Promise {\n    if (createRoleDto.Name == undefined)\n      throw new BadRequestException(\"Missing Primary Key 'name'\");\n\n    if (await this.roleService.isRoleExist(createRoleDto.Name))\n      throw new ConflictException('Role with this name already exists');\n\n    await this.roleService.create(createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:name')\n  async delete(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n\n    if (await this.userService.isRoleUsed(role.Name))\n      throw new ForbiddenException('Role is used');\n\n    return this.roleService.remove(name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Put('/:name')\n  async update(\n    @Param('name') name: string,\n    @Body() createRoleDto: CreateRoleDto,\n  ): Promise {\n    if ((await this.roleService.isRoleExist(name)) == false)\n      throw new NotFoundException('Role not found');\n\n    await this.roleService.update(name, createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add label to role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ schema: { example: { label: 'label' } } })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Post('/:roleName/label')\n  async addLabelToRole(\n    @Param('roleName') roleName: string,\n    @Body() labelDto: LabelDto,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    if ((await this.labelService.isLabelExist(labelDto.Name)) == false)\n      throw new NotFoundException('Label not found');\n\n    await this.roleService.addRoleLabel(roleName, labelDto.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels from role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Get('/:roleName/labels')\n  async getRoleLabels(@Param('roleName') roleName: string): Promise {\n    return (await this.roleService.getRoleLabels(roleName)).map(\n      (label) => label.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove label from role' })\n  @ApiResponse({\n    status: 400,\n    description: 'Label does not exist for this role',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Delete('/:roleName/label/:label')\n  async removeLabelFromRole(\n    @Param('roleName') roleName: string,\n    @Param('label') label: string,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    await this.labelService.findOneByOrFail(label);\n\n    await this.roleService.removeRoleLabel(roleName, label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\nimport { LabelsService } from '../labels/labels.service';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role, Label, User])],\n  providers: [RolesService, LabelsService, UsersService],\n  controllers: [RolesController],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRoleLabel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithLabels\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    Async\n                                isRoleExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRoleLabel\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesRepository: Repository, labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectRepository(Role)\n    private rolesRepository: Repository,\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.rolesRepository.find();\n  }\n\n  async findAllWithLabels(): Promise {\n    const allRoles = await this.rolesRepository.find({\n      relations: ['Labels'],\n    });\n    return allRoles;\n  }\n\n  async findOneByOrFail(name: string): Promise {\n    return await this.rolesRepository.findOneByOrFail({ Name: name });\n  }\n\n  async isRoleExist(name: string): Promise {\n    return (await this.rolesRepository.findOneBy({ Name: name })) != null;\n  }\n\n  async create(role: Role): Promise {\n    await this.rolesRepository.save(role);\n  }\n\n  async remove(name: string): Promise {\n    await this.rolesRepository.delete(name);\n  }\n\n  async update(name: string, role: Role): Promise {\n    await this.rolesRepository.update(name, role);\n  }\n\n  async addRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    const label = await this.labelsRepository.findOneOrFail({\n      where: { Name: labelName },\n    });\n    if (role.Labels.find((label) => label.Name == labelName))\n      throw new ConflictException('Label already exists for role');\n\n    role.Labels.push(label);\n    await this.rolesRepository.save(role);\n  }\n\n  async getRoleLabels(roleName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    return role.Labels;\n  }\n\n  async removeRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n\n    role.Labels = role.Labels.filter((label) => label.Name != labelName);\n    await this.rolesRepository.save(role);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const admin = this.rolesRepository.create({\n      Name: 'Admin',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: true,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    const user = this.rolesRepository.create({\n      Name: 'User',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: false,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    await this.rolesRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Router.html":{"url":"classes/Router.html","title":"class - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                Destinations\n                            \n                            \n                                    \n                                    \n                                    \n                                RuleCondition\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Destination[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'destinations', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RuleCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleCondition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rule_condition'})@IsEnum(RuleCondition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rules', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Condition\n                            \n                            \n                                    \n                                    \n                                    \n                                DicomTag\n                            \n                            \n                                    \n                                    \n                                    \n                                Value\n                            \n                            \n                                    \n                                    \n                                    \n                                ValueRepresentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'condition'})@IsEnum(Condition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DicomTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DicomTag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'dicom_tag'})@IsEnum(DicomTag)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'value'})@Validate(IsNumberOrString)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ValueRepresentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValueRepresentation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'value_representation'})@IsEnum(ValueRepresentation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                        \n                            OptionsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            SeederService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './seeder.service';\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { Autorouting } from '../autorouting/autorouting.entity';\nimport { Option } from '../options/option.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User,\n      Role,\n      Option,\n      Label,\n      OauthConfig,\n      Autorouting,\n    ]),\n  ],\n  providers: [\n    SeederService,\n    RolesService,\n    UsersService,\n    OptionsService,\n    OauthConfigService,\n  ],\n  controllers: [],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(rolesService: RolesService, usersService: UsersService, optionService: OptionsService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/seeder/seeder.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionService\n                                                  \n                                                        \n                                                                        OptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Injectable()\nexport class SeederService {\n  public constructor(\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService,\n    private readonly optionService: OptionsService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {}\n\n  public async seed() {\n    await this.rolesService.seed();\n    await this.usersService.seed();\n    await this.optionService.seed();\n    await this.oauthConfigService.seed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesGuard.html":{"url":"injectables/SeriesGuard.html","title":"injectable - SeriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/series.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/series.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\n\n@Injectable()\nexport class SeriesGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('series', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return this.isStudyLabelInRole(userRole, parentStudy.ID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StudyGuard.html":{"url":"guards/StudyGuard.html","title":"guard - StudyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    StudyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/study.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Protected\n                                    Async\n                                getStudyLabels\n                            \n                            \n                                    Protected\n                                    Async\n                                isStudyLabelInRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RolesService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/guards/study.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getStudyLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudyLabels(orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        isStudyLabelInRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    isStudyLabelInRole(userRole: string, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { RolesService } from 'src/roles/roles.service';\nimport OrthancClient from 'src/utils/orthanc-client';\n\n@Injectable()\nexport class StudyGuard implements CanActivate {\n  constructor(\n    protected roleService: RolesService,\n    protected orthancClient: OrthancClient,\n  ) {}\n\n  protected async getStudyLabels(orthancID: string) {\n    return this.orthancClient.listLabels('studies', orthancID).catch(() => {\n      return [];\n    });\n  }\n\n  protected async isStudyLabelInRole(\n    userRole: string,\n    orthancID: string,\n  ): Promise {\n    const labelsOfRole = (await this.roleService.getRoleLabels(userRole)).map(\n      (label) => label.Name,\n    );\n    const labelsOfStudy = await this.getStudyLabels(orthancID);\n\n    return (\n      labelsOfRole.filter((value) => labelsOfStudy.includes(value)).length > 0\n    );\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    return this.isStudyLabelInRole(userRole, orthancID);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagAnon.html":{"url":"classes/TagAnon.html","title":"class - TagAnon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagAnon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/tag-anon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replaceValue\n                            \n                            \n                                tag\n                            \n                            \n                                tagPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: string, tagPolicy: TagPolicies, replaceValue: string | number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/tag-anon.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagPolicy\n                                                  \n                                                        \n                                                                        TagPolicies\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        replaceValue\n                                                  \n                                                        \n                                                                    string | number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        replaceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagPolicies\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagPolicies } from '../constants/enums';\n\nexport default class TagAnon {\n  tagPolicy: TagPolicies;\n  tag: string;\n  replaceValue: string | number | undefined;\n\n  constructor(\n    tag: string,\n    tagPolicy: TagPolicies,\n    replaceValue: string | number | undefined = undefined,\n  ) {\n    this.tagPolicy = tagPolicy;\n    this.tag = tag;\n    this.replaceValue = replaceValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\n\n\nTasksModule\n\nTasksModule\n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Option } from '../options/option.entity';\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryQueueTask } from './query-queue.task';\nimport { OrthancMonitoringTask } from './orthanc-monitoring.task';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [\n    QueuesQueryService,\n    OrthancClient,\n    QueryQueueTask,\n    OrthancMonitoringTask,\n  ],\n  exports: [QueryQueueTask, OrthancMonitoringTask],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvJobDto.html":{"url":"classes/TmtvJobDto.html","title":"class - TmtvJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                CtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                PtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                SendMaskToOrthancAs\n                            \n                            \n                                    \n                                    \n                                WithFragmentedMask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SendMaskToOrthancAs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingMask[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEnum(ProcessingMask)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WithFragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  TmtvJob: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvService.html":{"url":"classes/TmtvService.html","title":"class - TmtvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/tmtv.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createdFiles\n                            \n                            \n                                    Private\n                                ctOrthancSeriesId\n                            \n                            \n                                    Private\n                                ctSeriesId\n                            \n                            \n                                    Private\n                                fragmentedMask\n                            \n                            \n                                    Private\n                                mask\n                            \n                            \n                                    Private\n                                ptOrthancSeriesId\n                            \n                            \n                                    Private\n                                ptSeriesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeries\n                            \n                            \n                                    Async\n                                deleteAllRessources\n                            \n                            \n                                getCreatedFiles\n                            \n                            \n                                    Async\n                                runInference\n                            \n                            \n                                    Async\n                                sendDicomToProcessing\n                            \n                            \n                                    Async\n                                sendMaskAsRtssToOrthanc\n                            \n                            \n                                    Async\n                                sendMaskAsSegToOrthanc\n                            \n                            \n                                setCtOrthancSeriesId\n                            \n                            \n                                setPtOrthancSeriesId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, processingClient: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/tmtv.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingClient\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllRessources\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllRessources()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedFiles\n                        \n                    \n                \n            \n            \n                \ngetCreatedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProcessingFile[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInference\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInference(fragmented: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fragmented\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendDicomToProcessing\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDicomToProcessing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsRtssToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsRtssToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsSegToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsSegToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetCtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetPtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import OrthancClient from '../utils/orthanc-client';\nimport ProcessingClient from '../utils/processing.client';\nimport { ProcessingFile } from './processing.file';\nimport { MaskProcessingService } from './mask-processing.service';\nimport { ProcessingMask } from '../constants/enums';\n\nexport class TmtvService {\n  private ptOrthancSeriesId: string;\n  private ctOrthancSeriesId: string;\n  private ptSeriesId: string;\n  private ctSeriesId: string;\n\n  private mask: MaskProcessingService;\n  private fragmentedMask: MaskProcessingService;\n\n  private createdFiles: ProcessingFile[] = [];\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly processingClient: ProcessingClient,\n  ) {}\n\n  setPtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ptOrthancSeriesId = orthancSeriesId;\n  }\n\n  setCtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ctOrthancSeriesId = orthancSeriesId;\n  }\n\n  getCreatedFiles(): ProcessingFile[] {\n    return this.createdFiles;\n  }\n\n  async sendDicomToProcessing() {\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ptOrthancSeriesId])\n      .then(async (result) => {\n        const ptResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ptResponse, 'dicoms'));\n      });\n\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ctOrthancSeriesId])\n      .then(async (result) => {\n        const ctResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ctResponse, 'dicoms'));\n      });\n  }\n\n  async createSeries() {\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ctOrthancSeriesId, false, false)\n      .then((ctSeriesId) => {\n        this.ctSeriesId = ctSeriesId;\n\n        this.createdFiles.push(new ProcessingFile(this.ctSeriesId, 'series'));\n      });\n\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ptOrthancSeriesId, true, true)\n      .then((ptSeriesId) => {\n        this.ptSeriesId = ptSeriesId;\n        this.createdFiles.push(new ProcessingFile(this.ptSeriesId, 'series'));\n      });\n  }\n\n  async runInference(fragmented: boolean = false) {\n    const maskId = (\n      await this.processingClient.executeInference('pt_seg_attentionunet', {\n        idCT: this.ctSeriesId,\n        idPT: this.ptSeriesId,\n      })\n    )['id_mask'];\n    const mask = new MaskProcessingService(this.processingClient);\n\n    mask.setMaskId(maskId);\n    mask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n    this.mask = mask;\n    this.createdFiles.push(new ProcessingFile(maskId, 'masks'));\n\n    if (fragmented) {\n      const fragmentedMaskId = await this.processingClient.fragmentMask(\n        this.ptSeriesId,\n        maskId,\n        true,\n      );\n      const fragmentedMask = new MaskProcessingService(this.processingClient);\n\n      this.createdFiles.push(new ProcessingFile(fragmentedMaskId, 'masks'));\n      fragmentedMask.setMaskId(fragmentedMaskId);\n      fragmentedMask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n      this.fragmentedMask = fragmentedMask;\n    }\n  }\n\n  async sendMaskAsRtssToOrthanc(): Promise {\n    const rtssStream = await this.fragmentedMask.getMaskAs(ProcessingMask.RTSS);\n    return await this.orthancClient.sendToOrthanc(rtssStream);\n  }\n\n  async sendMaskAsSegToOrthanc(): Promise {\n    const segStream = await this.fragmentedMask.getMaskAs(ProcessingMask.SEG);\n    return await this.orthancClient.sendToOrthanc(segStream);\n  }\n\n  async deleteAllRessources() {\n    this.createdFiles.forEach((file) => {\n      this.processingClient.deleteRessource(file.getType(), file.getId());\n    });\n    this.createdFiles = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOptionDto.html":{"url":"classes/UpdateOptionDto.html","title":"class - UpdateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/update-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\n\nexport class UpdateOptionDto extends PartialType(CreateOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gaelo.fr', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gaelo.fr', required: true })\n  @IsString()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                TokenExpiration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com'})@Column({unique: true, name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@Column({name: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@Column({name: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@ManyToOne(undefined, role => role.Name)@JoinColumn({name: 'role_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@Column({name: 'role_name', unique: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        TokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { Role } from '../roles/role.entity';\n\n@Entity()\nexport class User {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty({ example: 'John' })\n  @Column({\n    name: 'firstname',\n  })\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @Column({\n    name: 'lastname',\n  })\n  Lastname: string;\n\n  @Column({\n    nullable: true,\n    name: 'password',\n  })\n  @Exclude()\n  Password: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com' })\n  @Column({\n    unique: true,\n    name: 'email',\n  })\n  Email: string;\n\n  @ApiProperty({ example: 'admin' })\n  @Column({\n    name: 'role_name',\n    unique: false,\n    nullable: true,\n  })\n  RoleName: string;\n\n  @ApiProperty()\n  @ManyToOne(() => Role, (role) => role.Name)\n  @JoinColumn({ name: 'role_name' })\n  Role?: Role;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  Token?: string;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  TokenExpiration?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoResponse.html":{"url":"interfaces/UserInfoResponse.html","title":"interface - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            preferred_username\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferred_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferred_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsersId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Conflict'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all users', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsersId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get user by id', type: GetUserDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, userDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update user'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Delete,\n  UseGuards,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { User } from './user.entity';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdParamsGuard } from '../guards/check-user-id-params.guard';\n\nimport { hashPassword } from '../utils/passwords';\n\n@ApiTags('users')\n@Controller('/users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users',\n    type: [GetUserDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getUsers(): Promise {\n    const allUsers = await this.userService.findAll();\n    return allUsers.map((user) => {\n      return {\n        Id: user.Id,\n        Firstname: user.Firstname,\n        Lastname: user.Lastname,\n        Email: user.Email,\n        RoleName: user.RoleName,\n        Role: user.Role,\n      };\n    });\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get user by id', type: GetUserDto })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Get('/:id')\n  async getUsersId(@Param('id') id: number): Promise {\n    const user = await this.userService.findOne(id);\n    return {\n      Id: user.Id,\n      Firstname: user.Firstname,\n      Lastname: user.Lastname,\n      Email: user.Email,\n      RoleName: user.RoleName,\n      Role: user.Role,\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update user' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Put('/:id')\n  async update(\n    @Param('id') id: number,\n    @Body() userDto: UpdateUserDto,\n  ): Promise {\n    const user = await this.userService.findOne(id);\n\n    if (!user) throw new NotFoundException('User not found');\n\n    user.Firstname = userDto.Firstname;\n    user.Lastname = userDto.Lastname;\n    user.Role = await this.roleService.findOneByOrFail(userDto.RoleName);\n\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    if (existingUser && existingUser.Id != id)\n      throw new ConflictException('Email already used');\n    user.Email = userDto.Email;\n\n    await this.userService.update(id, user);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Delete('/:id')\n  async delete(@Param('id') id: number): Promise {\n    const existingUser = await this.userService.isExistingUser(id);\n\n    if (!existingUser) throw new NotFoundException('User not found');\n    return await this.userService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async createUser(@Body() userDto: CreateUserDto): Promise {\n    let user = new User();\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    const role = await this.roleService.isRoleExist(userDto.RoleName);\n\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    if (existingUser) {\n      throw new ConflictException('Email already used');\n    }\n    user = { ...userDto, Password: await hashPassword(userDto.Password) };\n    return (await this.userService.create(user)).Id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { UsersController } from './users.controller';\n\nimport { User } from './user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Role, Label])],\n  providers: [UsersService, RolesService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                isExistingUser\n                            \n                            \n                                    Async\n                                isRoleUsed\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isExistingUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isExistingUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleUsed(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPassword(id: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { hashPassword } from '../utils/passwords';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async isRoleUsed(roleName: string): Promise {\n    const roleCount = await this.usersRepository.findAndCount({\n      where: {\n        RoleName: roleName,\n      },\n    });\n    return roleCount[1] > 0;\n  }\n\n  async findAll(): Promise {\n    return await this.usersRepository.find({\n      relations: { Role: true },\n    });\n  }\n\n  async findOne(id: number, withRole: boolean = true): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n      relations: {\n        Role: withRole,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  async isExistingUser(id: number): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n    });\n    return user ? true : false;\n  }\n\n  async findOneByEmail(\n    email: string,\n    withRole: boolean = true,\n  ): Promise | undefined {\n    if (email === undefined) return undefined;\n    const user = await this.usersRepository.findOne({\n      where: { Email: email },\n      relations: {\n        Role: withRole,\n      },\n    });\n    return user;\n  }\n\n  async update(id: number, user: User): Promise {\n    await this.usersRepository.update(id, user);\n  }\n\n  async updateUserPassword(id: number, newPassword: string): Promise {\n    const hashedPassword = await hashPassword(newPassword);\n    const findUser = await this.findOne(id);\n    const userWithPasswordUpdated = { ...findUser, Password: hashedPassword };\n    await this.update(id, userWithPasswordUpdated);\n  }\n\n  async create(user: User): Promise {\n    return await this.usersRepository.save(user);\n  }\n\n  async remove(id: number): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const hashAdmin = await hashPassword('passwordadmin');\n\n    const hashUser = await hashPassword('passworduser');\n\n    const admin = this.usersRepository.create({\n      Firstname: 'Admin',\n      Lastname: 'Admin',\n      Email: 'admin@gaelo.com',\n      Password: hashAdmin,\n      RoleName: 'Admin',\n    });\n\n    const user = this.usersRepository.create({\n      Firstname: 'User',\n      Lastname: 'User',\n      Email: 'user@gaelo.com',\n      Password: hashUser,\n      RoleName: 'User',\n    });\n\n    await this.usersRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithLabels.html":{"url":"classes/WithLabels.html","title":"class - WithLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/with-labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                WithLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        WithLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({example: true})@Transform( => , {toClassOnly: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/with-labels.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\n\nexport class WithLabels {\n  @IsOptional()\n  @ApiProperty({ example: true })\n  @Transform(\n    ({ value }) => {\n      return value === 'true' || value === '';\n    },\n    { toClassOnly: true },\n  )\n  @IsBoolean()\n  WithLabels: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/lost-password.dto.ts\n            \n            class\n            LostPassworDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            injectable\n            JwtOauthStrategy\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            interface\n            UserInfoResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            entity\n            Autorouting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Router\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.handler.ts\n            \n            injectable\n            AutoroutingHandler\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.controller.ts\n            \n            controller\n            AutoroutingsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.service.ts\n            \n            injectable\n            AutoroutingsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/autorouting/dto/create-autorouting.dto.ts\n            \n            class\n            CreateAutoroutingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/dto/orthanc-event-payload.dto.ts\n            \n            class\n            OrthancEventPayloadDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/build_docs.ts\n            \n            variable\n            buildDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-params.guard.ts\n            \n            guard\n            CheckUserIdParamsGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-query.guard.ts\n            \n            guard\n            CheckUserIdQueryGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-role.guard.ts\n            \n            guard\n            CheckUserRoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/instance.guard.ts\n            \n            injectable\n            InstanceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/jwt-oauth.guard.ts\n            \n            injectable\n            JwtOAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            interface\n            OrGuardOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            function\n            OrGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AnonymizeGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoQueryGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoRoutingGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            CdBurnerGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            DeleteGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ExportGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ImportGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ModifyGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            QueryGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ReadAllGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/series.guard.ts\n            \n            injectable\n            SeriesGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/study.guard.ts\n            \n            guard\n            StudyGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interceptors/not-found.interceptor.ts\n            \n            injectable\n            NotFoundInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/label.entity.ts\n            \n            entity\n            Label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/labels.controller.ts\n            \n            controller\n            LabelsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/labels/labels.dto.ts\n            \n            class\n            LabelDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/labels/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupWorkers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.dto.ts\n            \n            class\n            OauthConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.entity.ts\n            \n            entity\n            OauthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.controller.ts\n            \n            controller\n            OauthConfigController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.service.ts\n            \n            injectable\n            OauthConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/options/dto/create-option.dto.ts\n            \n            class\n            CreateOptionDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/options/dto/get-option.dto.ts\n            \n            class\n            GetOptionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/options/dto/update-option.dto.ts\n            \n            class\n            UpdateOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/option.entity.ts\n            \n            entity\n            Option\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/options.controller.ts\n            \n            controller\n            OptionsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/options.service.ts\n            \n            injectable\n            OptionsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryParsedAnswerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QuerySeriesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryStudyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-admin.controller.ts\n            \n            controller\n            OrthancAdminController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-delete.controller.ts\n            \n            controller\n            OrthancDeleteController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-export.controller.ts\n            \n            controller\n            OrthancExportController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-import.controller.ts\n            \n            controller\n            OrthancImportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-modify.controller.ts\n            \n            controller\n            OrthancModifyController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-query.controller.ts\n            \n            controller\n            OrthancQueryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-read-all.controller.ts\n            \n            controller\n            OrthancReadAllController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc.controller.ts\n            \n            controller\n            OrthancController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-series.answer.ts\n            \n            class\n            QuerySeriesAnswer\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-study.answer.ts\n            \n            class\n            QueryStudyAnswer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query.answer.ts\n            \n            class\n            QueryAnswer\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/orthanc/tag-anon.ts\n            \n            class\n            TagAnon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/utils.ts\n            \n            variable\n            doReverseProxy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/mask-processing.service.ts\n            \n            injectable\n            MaskProcessingService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            ProcessingJobDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            TmtvJobDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/processing/processing-queue.service.ts\n            \n            injectable\n            ProcessingQueueService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/processing/processing.controller.ts\n            \n            controller\n            ProcessingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.file.ts\n            \n            class\n            ProcessingFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            setupProcessingWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            tmtvJob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/tmtv.service.ts\n            \n            class\n            TmtvService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            isSecondaryCapture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            setupAnonWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.controller.ts\n            \n            controller\n            QueuesAnonController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.service.ts\n            \n            injectable\n            QueuesAnonService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/delete/delete.worker.ts\n            \n            function\n            setupDeleteWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.controller.ts\n            \n            controller\n            QueuesDeleteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.dto.ts\n            \n            class\n            QueuesDeleteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.service.ts\n            \n            injectable\n            QueuesDeleteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processSeries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            setupQueryWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.controller.ts\n            \n            controller\n            QueuesQueryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQuerySeriesDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryStudyDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.service.ts\n            \n            injectable\n            QueuesQueryService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/queues/queue.service.ts\n            \n            injectable\n            AbstractQueueService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/dto/get-role.dto.ts\n            \n            class\n            GetRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/dto/with-labels.dto.ts\n            \n            class\n            WithLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/seeder/seed.ts\n            \n            variable\n            seeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/orthanc-monitoring.task.ts\n            \n            injectable\n            OrthancMonitoringTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/query-queue.task.ts\n            \n            injectable\n            QueryQueueTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils/http.client.ts\n            \n            class\n            HttpClient\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/utils/is-time-between.ts\n            \n            function\n            isTimeBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/orthanc-client.ts\n            \n            injectable\n            OrthancClient\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateRandomUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            getTokenExpiration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/processing.client.ts\n            \n            injectable\n            ProcessingClient\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/validators/string-or-number.ts\n            \n            class\n            IsNumberOrString\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.11.0\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.3.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.7\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.7\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            axios : ^1.6.0\n        \n            bcryptjs : ^2.4.3\n        \n            bullmq : ^5.5.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            css-inline : ^0.11.2\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.30.1\n        \n            nodemailer : ^6.9.7\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            pg : ^8.11.4\n        \n            postgres : ^3.3.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sqlite : ^5.0.1\n        \n            sqlite3 : ^5.1.6\n        \n            tmp : ^0.2.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoroutingEventType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            Condition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DestinationType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DicomTag   (src/.../autorouting.enum.ts)\n                        \n                        \n                            LevelType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            ProcessingJobType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingMask   (src/.../enums.ts)\n                        \n                        \n                            QueryAnswerType   (src/.../enums.ts)\n                        \n                        \n                            RuleCondition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            TagPolicies   (src/.../enums.ts)\n                        \n                        \n                            ValueRepresentation   (src/.../autorouting.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/autorouting/autorouting.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AutoroutingEventType\n                    \n                \n                        \n                            \n                                 NEW_INSTANCE\n                            \n                        \n                        \n                            \n                                Value : NewInstance\n                            \n                        \n                        \n                            \n                                 NEW_SERIES\n                            \n                        \n                        \n                            \n                                Value : NewSeries\n                            \n                        \n                        \n                            \n                                 NEW_STUDY\n                            \n                        \n                        \n                            \n                                Value : NewStudy\n                            \n                        \n                        \n                            \n                                 NEW_PATIENT\n                            \n                        \n                        \n                            \n                                Value : NewPatient\n                            \n                        \n                        \n                            \n                                 STABLE_SERIES\n                            \n                        \n                        \n                            \n                                Value : StableSeries\n                            \n                        \n                        \n                            \n                                 STABLE_STUDY\n                            \n                        \n                        \n                            \n                                Value : StableStudy\n                            \n                        \n                        \n                            \n                                 STABLE_PATIENT\n                            \n                        \n                        \n                            \n                                Value : StablePatient\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : EQUALS\n                            \n                        \n                        \n                            \n                                 DIFFERENT\n                            \n                        \n                        \n                            \n                                Value : DIFFERENT\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : NOT_IN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DestinationType\n                    \n                \n                        \n                            \n                                 AET\n                            \n                        \n                        \n                            \n                                Value : AET\n                            \n                        \n                        \n                            \n                                 TMTVJOB\n                            \n                        \n                        \n                            \n                                Value : TMTVJob\n                            \n                        \n                        \n                            \n                                 PEER\n                            \n                        \n                        \n                            \n                                Value : Peer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DicomTag\n                    \n                \n                        \n                            \n                                 PATIENT_NAME\n                            \n                        \n                        \n                            \n                                Value : PatientName\n                            \n                        \n                        \n                            \n                                 PATIENT_ID\n                            \n                        \n                        \n                            \n                                Value : PatientID\n                            \n                        \n                        \n                            \n                                 PATIENT_BIRTHDATE\n                            \n                        \n                        \n                            \n                                Value : PatientBirthDate\n                            \n                        \n                        \n                            \n                                 PATIENT_SEX\n                            \n                        \n                        \n                            \n                                Value : PatientSex\n                            \n                        \n                        \n                            \n                                 OTHER_PATIENT_IDS\n                            \n                        \n                        \n                            \n                                Value : OtherPatientIDs\n                            \n                        \n                        \n                            \n                                 STUDY_DATE\n                            \n                        \n                        \n                            \n                                Value : StudyDate\n                            \n                        \n                        \n                            \n                                 STUDY_TIME\n                            \n                        \n                        \n                            \n                                Value : StudyTime\n                            \n                        \n                        \n                            \n                                 STUDY_ID\n                            \n                        \n                        \n                            \n                                Value : StudyID\n                            \n                        \n                        \n                            \n                                 STUDY_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : StudyDescription\n                            \n                        \n                        \n                            \n                                 ACCESSION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AccessionNumber\n                            \n                        \n                        \n                            \n                                 STUDY_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : StudyInstanceUID\n                            \n                        \n                        \n                            \n                                 REQUESTED_PROCEDURE_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : RequestedProcedureDescription\n                            \n                        \n                        \n                            \n                                 INSTITUTION_NAME\n                            \n                        \n                        \n                            \n                                Value : InstitutionName\n                            \n                        \n                        \n                            \n                                 REQUESTING_PHYSICIAN\n                            \n                        \n                        \n                            \n                                Value : RequestingPhysician\n                            \n                        \n                        \n                            \n                                 REFERRING_PHYSICIAN_NAME\n                            \n                        \n                        \n                            \n                                Value : ReferringPhysicianName\n                            \n                        \n                        \n                            \n                                 SERIES_DATE\n                            \n                        \n                        \n                            \n                                Value : SeriesDate\n                            \n                        \n                        \n                            \n                                 SERIES_TIME\n                            \n                        \n                        \n                            \n                                Value : SeriesTime\n                            \n                        \n                        \n                            \n                                 MODALITY\n                            \n                        \n                        \n                            \n                                Value : Modality\n                            \n                        \n                        \n                            \n                                 MANUFACTURER\n                            \n                        \n                        \n                            \n                                Value : Manufacturer\n                            \n                        \n                        \n                            \n                                 STATION_NAME\n                            \n                        \n                        \n                            \n                                Value : StationName\n                            \n                        \n                        \n                            \n                                 SERIES_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : SeriesDescription\n                            \n                        \n                        \n                            \n                                 BODY_PART_EXAMINED\n                            \n                        \n                        \n                            \n                                Value : BodyPartExamined\n                            \n                        \n                        \n                            \n                                 SEQUENCE_NAME\n                            \n                        \n                        \n                            \n                                Value : SequenceName\n                            \n                        \n                        \n                            \n                                 PROTOCOL_NAME\n                            \n                        \n                        \n                            \n                                Value : ProtocolName\n                            \n                        \n                        \n                            \n                                 SERIES_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SeriesNumber\n                            \n                        \n                        \n                            \n                                 CARDIAC_NUMBER_OF_IMAGES\n                            \n                        \n                        \n                            \n                                Value : CardiacNumberOfImages\n                            \n                        \n                        \n                            \n                                 IMAGES_IN_ACQUISITION\n                            \n                        \n                        \n                            \n                                Value : ImagesInAcquisition\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TEMPORAL_POSITIONS\n                            \n                        \n                        \n                            \n                                Value : NumberOfTemporalPositions\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfSlices\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TIME_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfTimeSlices\n                            \n                        \n                        \n                            \n                                 SERIES_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SeriesInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_ORIENTATION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImageOrientationPatient\n                            \n                        \n                        \n                            \n                                 SERIES_TYPE\n                            \n                        \n                        \n                            \n                                Value : SeriesType\n                            \n                        \n                        \n                            \n                                 OPERATORS_NAME\n                            \n                        \n                        \n                            \n                                Value : OperatorsName\n                            \n                        \n                        \n                            \n                                 PERFORMED_PROCEDURE_STEP_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : PerformedProcedureStepDescription\n                            \n                        \n                        \n                            \n                                 ACQUISITION_DEVICE_PROCESSING_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : AcquisitionDeviceProcessingDescription\n                            \n                        \n                        \n                            \n                                 CONTRAST_BOLUS_AGENT\n                            \n                        \n                        \n                            \n                                Value : ContrastBolusAgent\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_DATE\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationDate\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_TIME\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationTime\n                            \n                        \n                        \n                            \n                                 ACQUISITION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AcquisitionNumber\n                            \n                        \n                        \n                            \n                                 IMAGE_INDEX\n                            \n                        \n                        \n                            \n                                Value : ImageIndex\n                            \n                        \n                        \n                            \n                                 INSTANCE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : InstanceNumber\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_FRAMES\n                            \n                        \n                        \n                            \n                                Value : NumberOfFrames\n                            \n                        \n                        \n                            \n                                 TEMPORAL_POSITION_IDENTIFIER\n                            \n                        \n                        \n                            \n                                Value : TemporalPositionIdentifier\n                            \n                        \n                        \n                            \n                                 SOP_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SOPInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_POSITION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImagePositionPatient\n                            \n                        \n                        \n                            \n                                 IMAGE_COMMENTS\n                            \n                        \n                        \n                            \n                                Value : ImageComments\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LevelType\n                    \n                \n                        \n                            \n                                 INSTANCES\n                            \n                        \n                        \n                            \n                                Value : instances\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 STUDIES\n                            \n                        \n                        \n                            \n                                Value : studies\n                            \n                        \n                        \n                            \n                                 PATIENTS\n                            \n                        \n                        \n                            \n                                Value : patients\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RuleCondition\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : AND\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueRepresentation\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n            \n        \n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProcessingJobType\n                    \n                \n                        \n                            \n                                 TMTV\n                            \n                        \n                        \n                            \n                                Value : tmtv\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingMask\n                    \n                \n                        \n                            \n                                 RTSS\n                            \n                        \n                        \n                            \n                                Value : rtss\n                            \n                        \n                        \n                            \n                                 SEG\n                            \n                        \n                        \n                            \n                                Value : seg\n                            \n                        \n                        \n                            \n                                 NIFTI\n                            \n                        \n                        \n                            \n                                Value : nifti\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryAnswerType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TagPolicies\n                    \n                \n                        \n                            \n                                 KEEP\n                            \n                        \n                        \n                            \n                                Value : Keep\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : Replace\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : Remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildSwagger   (src/.../main.ts)\n                        \n                        \n                            isSecondaryCapture   (src/.../anon.worker.ts)\n                        \n                        \n                            isTimeBetween   (src/.../is-time-between.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            OrGuard   (src/.../or.guard.ts)\n                        \n                        \n                            processSeries   (src/.../query.worker.ts)\n                        \n                        \n                            processStudy   (src/.../query.worker.ts)\n                        \n                        \n                            setupAnonWorker   (src/.../anon.worker.ts)\n                        \n                        \n                            setupDeleteWorker   (src/.../delete.worker.ts)\n                        \n                        \n                            setupProcessingWorker   (src/.../processing.worker.ts)\n                        \n                        \n                            setupQueryWorker   (src/.../query.worker.ts)\n                        \n                        \n                            setupWorkers   (src/.../main.ts)\n                        \n                        \n                            tmtvJob   (src/.../processing.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildSwagger\n                        \n                    \n                \n            \n            \n                \nbuildSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupWorkers\n                        \n                    \n                \n            \n            \n                \nsetupWorkers(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/anon/anon.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSecondaryCapture\n                        \n                    \n                \n            \n            \n                \nisSecondaryCapture(sopClassUid: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sopClassUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupAnonWorker\n                        \n                    \n                \n            \n            \n                \nsetupAnonWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/is-time-between.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTimeBetween\n                        \n                    \n                \n            \n            \n                \nisTimeBetween(startHour: number, startMinute: number, endHour: number, endMinute: number, currentHour: number, currentMinute: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/guards/or.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrGuard\n                        \n                    \n                \n            \n            \n                \nOrGuard(guards: Array, orGuardOptions?: OrGuardOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                guards\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orGuardOptions\n                                            \n                                                            OrGuardOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/query/query.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSeries\n                        \n                    \n                \n            \n            \n                \nprocessSeries(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processStudy\n                        \n                    \n                \n            \n            \n                \nprocessStudy(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupQueryWorker\n                        \n                    \n                \n            \n            \n                \nsetupQueryWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/delete/delete.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDeleteWorker\n                        \n                    \n                \n            \n            \n                \nsetupDeleteWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/processing/processing.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupProcessingWorker\n                        \n                    \n                \n            \n            \n                \nsetupProcessingWorker(orthancClient: OrthancClient, configService: ConfigService, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmtvJob\n                        \n                    \n                \n            \n            \n                \ntmtvJob(job: Job, orthancClient: OrthancClient, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoroutingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OauthConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrthancModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\nLabelsService\n\nLabelsService\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : AGPLv3\n        \n            Author : Pixilib SAS\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildDocs   (src/.../build_docs.ts)\n                        \n                        \n                            comparePasswords   (src/.../passwords.ts)\n                        \n                        \n                            doReverseProxy   (src/.../utils.ts)\n                        \n                        \n                            generateRandomUUID   (src/.../passwords.ts)\n                        \n                        \n                            generateToken   (src/.../passwords.ts)\n                        \n                        \n                            getTokenExpiration   (src/.../passwords.ts)\n                        \n                        \n                            hashPassword   (src/.../passwords.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                        \n                            seeder   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/build_docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix('api');\n  const config = new DocumentBuilder()\n    .setTitle('GaelO Flow API')\n    .setDescription('The GaelO Flow API description')\n    .setVersion('2.0')\n    .addBearerAuth(\n      { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n      'access-token',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  writeFileSync('../openapi.json', JSON.stringify(document));\n  await app.close();\n  console.log('Documentation built -> openapi.json');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/passwords.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string, hash: string) => {\n  return bcryptjs.compare(password, hash);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomUUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const jobId = randomUUID();\n  return jobId;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const token = crypto.randomBytes(32).toString('hex');\n  const hash = await hashPassword(token);\n  return { token, hash };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (hours = 24): Date => {\n  return new Date(Date.now() + hours * 60 * 60 * 1000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const saltTest = await bcryptjs.genSalt();\n  const hash = await bcryptjs.hash(password, saltTest);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n\n    src/orthanc/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doReverseProxy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: Request,\n  response: Response,\n  orthancClient: OrthancClient,\n) => {\n  const url = request.url;\n  const orthancCalledApi = url.replace('/api', '');\n  const method = request.method;\n  const body = request.body;\n  orthancClient.streamAnswerToRes(orthancCalledApi, method, body, response);\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n\n    src/interceptors/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/seeder/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  const seedservice = app.get(SeederService);\n\n  await seedservice.seed();\n  await app.close();\n\n  console.log('Seeding complete');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
